{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","IconBox/IconBox.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TrancheField/TrancheField.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","Title/Title.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","handleClick","backgroundColor","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mx","margin","my","alignItems","flexDirection","justifyContent","align","image","iconBgColor","mr","isSidebar","p","borderRadius","theme","colors","transactions","actionBg","redeem","src","height","isMobile","imageProps","useIconOnly","name","icon","size","color","iconColor","iconProps","fontWeight","fontSize","textProps","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","IconBox","isVisible","mt","textAlign","dangerouslySetInnerHTML","__html","children","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","RoundIconButton","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","className","styles","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","waitText","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","bg","twitterIcon","radioBtn","button","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheUserTransactionsEvents","_ref25","_callee15","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref26","_ref27","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","_context15","CDO","getContractEvents","_x9","_x10","_ref28","_callee16","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args16","_context16","endpoints","makeEtherscanApiRequest","result","some","trancheTokenAddresses","trancheType","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","returnValues","_x11","getEtherscanTokenTransfers","_ref29","_callee17","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args17","_context17","_x12","_x13","getTrancheStakingRewardsDistributions","_ref30","_callee19","stakingDistributions","_context19","_ref31","_callee18","transfers","_context18","_x16","_x14","_x15","getTrancheHarvests","_ref32","_callee21","_ref33","_ref34","stakingRewardsDistributions","autoFarming","harvestsList","_context21","_ref35","_callee20","_context20","_x19","_x17","_x18","getTrancheLastHarvest","_ref36","_callee22","strategyConfig","harvestEnabled","idleStrategyAddress","startBlock","latestHarvestBlock","totalAmount","_context22","Strategy","genericContractCallCachedTTL","initContract","abi","_x20","_x21","getGovTokenApr","_ref37","_callee23","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref38","_ref39","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context23","getTokenConfig","_address","apr2apy","apr","apy","_x22","_x23","_x24","_x25","getTrancheRewardTokensInfo","_ref40","_callee25","tokensDistribution","_context25","_ref41","_callee24","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","firstBlockPoolSize","rewardsRateMethod","periodFinishMethod","periodFinish","_ref42","_ref43","_firstHarvest","_latestHarvest","firstBlock","_ref44","_ref45","poolSize","elapsedBlocks","elapsedSeconds","_context24","rewardsRate","now","genericContractCallCached","getBlockInfo","total","_x28","_x26","_x27","_ref46","_callee27","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args27","_context27","_ref47","_callee26","trancheTokenTransferEvent","tokenTransferEvent","_ref48","_ref49","blockInfo","tokenConversionRate","_context26","_x31","trancheTokenAmount","hashKey","trancheTokens","_x29","_x30","getTrancheUserTransactions","_ref50","_callee28","_context28","_x32","_x33","_x34","getTrancheFirstDepositTx","_ref51","_callee29","_context29","_x35","_x36","_x37","getAmountDepositedTranche","_ref52","_callee30","_context30","_x38","_x39","_x40","_ref53","_callee31","_ref54","_ref55","userAvgPrice","_context31","_x41","_x42","getAmountLent","_callee32","amountLents","_args32","_context32","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee38","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref58","_ref59","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args38","_context38","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref60","_callee33","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context33","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x43","_ref61","_callee34","_context34","_x44","match","_ref62","_callee35","_context35","_x45","_ref63","_callee36","_context36","_x46","items","to_address","_ref64","_callee37","polygonTx","erc20RootToken","_context37","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x47","getPolygonBaseTxs","_callee39","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args39","_context39","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee40","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args40","_context40","filterEthereumTxs","_callee41","_args41","_context41","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee42","resultData","allAvailableTokens","_args42","_context42","processStoredTxs","_callee43","contractInstance","_context43","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","t1","checkPolygonTransactionIncluded","_ref70","_callee44","_ref71","_ref72","_context44","getTransactionReceipt","_x48","_ref73","_callee45","_args45","_context45","_x49","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref74","_callee46","processTransactions","idleTokensAddresses","_args46","_context46","mappedTx","_x50","_x51","filterEtherscanTxs","_ref75","_callee47","processTxs","_args47","_context47","_x52","_ref76","_callee48","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args48","_context48","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x53","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref77","_callee53","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args53","_context53","baseTokenConfig","baseTokenAddress","_ref78","_callee52","minedTxs","_context52","_ref79","_callee51","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context51","getCurveTokenPrice","_ref80","_callee49","_context49","_x58","_x59","baseTokensConfig","t2","_ref81","_callee50","_context50","_x60","_x61","_x56","_x57","_x55","_x54","_ref82","_callee59","txsToProcess","_args59","_context59","_ref83","_callee58","_context58","_ref84","_callee57","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context57","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref85","_callee54","_context54","_x66","_x67","_ref86","_callee55","_context55","_x68","_x69","oldContract","events","raw","_ref87","_callee56","_context56","_x70","_x71","decodeLog","_token","_x64","_x65","_x63","_x62","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref88","_callee60","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args60","_context60","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x72","getBestTranche","_callee61","maxApy","trancheStrategyConfig","_args61","_context61","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref90","_callee62","error_callback","config","_args62","_context62","post","catch","_x73","_ref91","_callee63","_args63","_context63","_x74","_ref92","_callee64","apiKeyIndex","apiKey","_args64","_context64","_x75","_ref93","_callee65","return_data","_args65","_context65","_x76","makeCachedPostRequest","_ref94","_callee66","_args66","_context66","_x77","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee67","page","googlePageviewInfo","isOrigin","_args67","_context67","ga","_ref96","_callee69","googleEventsInfo","debugEnabled","originOk","_args69","_context69","analytics","google","addPostfixForTestnet","_ref97","_callee68","_context68","hitCallback","hitCallbackFail","_x79","_x80","_x78","createContract","_ref98","_callee70","_context70","_x81","_x82","_x83","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee73","activeOnly","whitelist","proposals","validProposals","_args73","_context73","addr","_ref100","_callee72","checkedStrategies","_context72","end","author","snapshot","strategies","_ref101","_callee71","tokenContract","_context71","_x85","_x84","getAprsFromApi","_callee74","endpointInfo","aprs","_args74","_context74","_ref103","_callee75","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args75","_context75","_x86","getTokenExchangeRate","_ref104","_callee76","exchangeRateParams","exchangeRate","_context76","_x87","_x88","getTokenDecimals","_ref105","_callee77","_context77","_x89","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee78","idleTokenConfig","feeDistributorConfig","_context78","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee79","contractPaused","_args79","_context79","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref108","_callee81","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context81","lastAllocationsPromise","_ref109","_callee80","lastAllocations","_context80","_x91","_x92","alloc","_x90","_ref110","_callee82","oldContractBalance","oldContractTokenDecimals","oldContractName","_context82","_x93","_x94","_ref111","_callee83","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args83","_context83","getBlockNumber","getContractPastEvents","callEvents","_x95","_x96","_ref112","_callee84","_args84","_context84","getPastEvents","_x97","_x98","estimateMethodGasUsage","_ref113","_callee85","methodParams","_contract$methods","functionCall","gasLimit","_ref114","_ref115","_args85","_context85","getGasPrice","estimateGas","_x99","_x100","_ref116","_callee86","userAddress","signedParameters","callback_receipt","_contract$methods2","_context86","on","once","confirmationNumber","receipt","_x101","_x102","_x103","_x104","_x105","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref117","_callee87","biconomyInfo","res","_context87","limits","apiId","headers","x-api-key","_x106","sendTxWithPermit","_ref118","_callee88","_contract$methods3","messageToSign","_this$getSignaturePar","_context88","encodeABI","personal","sign","_x107","_x108","_x109","_x110","_x111","_x112","buildBiconomyErc20ForwarderTx","_ref119","_callee89","permitType","callData","buildParams","_context89","txGas","erc20ForwarderClient","buildTx","_x113","_x114","_x115","_x116","_x117","_ref120","_callee91","_context91","_ref121","_callee90","_context90","_x119","_x120","_x118","sendBiconomyTxWithErc20Forwarder","_ref122","_callee92","req","metaInfo","txResponse","fetchReceiptIntervalId","_context92","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x121","_x122","_x123","_x124","sendBiconomyTxWithPersonalSign","_ref123","_callee93","_this$getSignaturePar2","_context93","getNonce","_x125","_x126","_x127","_x128","signPermitEIP2612","_ref124","_callee94","erc20Name","owner","spender","deadline","domain","permit","domainData","_context94","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x129","_x130","_x131","_x132","_x133","_x134","_x135","_x136","signPermit","_ref125","_callee95","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args95","_context95","net","getId","round","nonceMethod","pow","allowed","response","_x137","_x138","_x139","_ref126","_callee96","permitParams","methodAbi","useNonce","_args96","_context96","_jsonInterface","f","unshift","_x140","_x141","_x142","_x143","_x144","_x145","_x146","sendSignedTx","_ref127","_callee97","MetaTransaction","dataToSign","_context97","_x147","_x148","_x149","_x150","_x151","checkTokenApproved","_ref128","_callee98","contractAddr","_ref129","_ref130","allowance","_context98","getAllowance","gte","_x152","_x153","_x154","_ref131","_callee99","_context99","_x155","_x156","_x157","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee101","highestValue","_args101","_context101","lendRates","aprInfo","tokenAPR","_ref133","_callee100","_context100","_x158","_ref134","_callee102","_args102","_context102","_x159","_x160","calculateGaugeBoost","_ref135","_callee103","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args103","_context103","workingBalance","getTokenTotalSupply","_x161","_x162","getGaugeWeight","_ref136","_callee104","lastGaugeTimestamp","gaugeWeight","_context104","_x163","getGaugeAbsoluteWeight","_ref137","_callee105","_ref138","_ref139","totalWeight","_context105","_x164","getGaugeNextWeight","_ref140","_callee106","nextGaugeTimestamp","_context106","_x165","getGaugeRewardsTokens","_ref141","_callee108","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args108","_context108","rate","maxRewards","_ref142","_callee107","tokenIndex","rewardTokenAddress","_ref143","_ref144","rewardData","rewardTokenBalance","cdoConfig","_ref145","_ref146","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_context107","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x167","_x166","_ref147","_callee110","_args110","_context110","_ref148","_callee109","tokenGlobalConfig","stakingRewardsContract","_context109","_x170","_x168","_x169","_ref149","_callee111","field","addGovTokens","_args111","_context111","loadTrancheField","_x171","_x172","_x173","_x174","_x175","_x176","_x177","_x178","_ref150","_callee112","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref151","_ref152","totalSupply","virtualPrice","_ref153","_ref154","gaugeBalance","lastPrice1","staked1","totalStaked","_ref155","_ref156","deposited1","lastPrice","_ref157","_ref158","redeemable1","staked2","_ref159","_ref160","earningsStart","trancheApy2","deposited3","earningsEnd","_ref161","_ref162","trancheFee","earningsCounter","feesEnd","feesStart","_ref163","_ref164","deposited4","redeemable3","_ref165","_ref166","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref167","_ref168","_ref169","_ref170","earningsPerc","secondsFromFirstTx","_ref171","_ref172","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args112","_context112","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x179","_x180","_x181","_x182","_x183","_x184","_x185","loadAssetField","_ref173","_callee113","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref174","_ref175","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref176","_ref177","amountLentCurve1","redeemableBalanceCurve","_ref178","_ref179","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref180","_ref181","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref182","_ref183","tokenPriceFirstDeposit","_ref184","_ref185","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref186","_ref187","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref188","_ref189","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref190","_ref191","amountLentCurve2","redeemableBalanceCurve1","_ref192","_ref193","redeemableBalance2","_args113","_context113","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x186","_x187","_x188","_x189","getIdleTokenSupply","_ref194","_callee114","idleTokenSupply","_args114","_context114","_x190","getIdleTokenPriceWithFee","_ref195","_callee115","_ref196","_ref197","fee","priceWFee","_args115","_context115","eq","_x191","_x192","_ref198","_callee116","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args116","_context116","_x193","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref199","_callee117","_ref200","_ref201","idleTokensTotalSupply","userShare","_context117","_x194","_x195","openWindow","open","getActiveCoverages","_callee119","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args119","_context119","coverages","_ref203","_callee118","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context118","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x196","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref204","_callee121","incidentsInfo","_ref205","_ref206","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context121","directProps","contractInfo","buyer","_ref207","_callee120","cover","coverId","claimSubmittedEvent","_ref208","_ref209","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref210","_ref211","_context120","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x198","_x197","getBatchedDepositExecutions","_ref212","_callee122","_context122","_x199","getBatchedDeposits","_callee124","filter_by_status","batchDepositConfig","batchedDeposits","_args124","_context124","_ref214","_callee123","currBatchIndex","batchIndex","_ref215","_ref216","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context123","_x200","getETHBalance","_ref217","_callee125","fixDecimals","_args125","_context125","_x201","_ref218","_callee126","_ref219","_ref220","_args126","_context126","ERC20","_x202","_x203","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref221","_callee127","_args127","_context127","_x204","_ref222","_callee128","_args128","_context128","_x205","_ref223","_callee129","_args129","_context129","_x206","_x207","getProtocolBalance","_ref224","_callee130","_context130","_x208","_x209","getAprs","_ref225","_callee131","_context131","addresses","_x210","genericIdleCall","_ref226","_callee132","callParams","_args132","_context132","_x211","_ref227","_callee133","_contract$methods4","_args133","_context133","_x212","_x213","_ref228","_callee135","_args135","_context135","_ref229","_callee134","_context134","_x215","_x216","_x214","getTxDecodedLogs","_ref230","_callee137","logAddr","decodeLogs","internalTransfers","_context137","_ref231","_callee136","_context136","_x221","_x222","_x217","_x218","_x219","_x220","blocksToSeconds","blocks","blocksPerSeconds","_callee138","_context138","_callee139","blockInfoToSave","_args139","_context139","getBlock","genericContractCallCachedTTLNoMulticall","_ref234","_callee140","_args140","_context140","_x223","_x224","_ref235","_callee141","useMultiCall","_args141","_context141","_x225","_x226","_ref236","_callee142","_args142","_context142","_x227","_x228","_ref237","_callee143","_args143","_context143","_x229","_x230","cachedContractCall","_ref238","_callee144","_args144","_context144","_x231","_x232","prepareMulticallData","strip0x","_ref239","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref240","_callee145","decodedParams","_args145","_context145","decodeParameters","returnFields","_x233","testMulticall","_callee146","_context146","_ref242","_callee147","inputTypes","callHash","_args147","_context147","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x234","_x235","_ref243","_callee148","_contract$methods5","_args148","_context148","_x236","_x237","_ref244","_callee149","async","_args149","_context149","_x238","_x239","getUnlentBalance","_ref245","_callee150","unlentBalance","_context150","_x240","_ref246","_callee151","_args151","_context151","_x241","getLastAllocations","_ref247","_callee153","tokenAllocations","_context153","_ref248","_callee152","_context152","_x243","_x244","_x242","_ref249","_callee154","protocolsAprs","_ref250","_ref251","govTokensBalances","_args154","_context154","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x245","getSushiswapPoolTokenPrice","_ref252","_callee155","_ref253","_ref254","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref255","_ref256","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context155","getSushiswapConversionRate","_x246","getSushiswapConversionRate_old","_ref257","_callee156","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context156","_x247","_x248","getCustomProtocolConversionRate","_ref258","_callee157","protocolContract","useWETH","invertTokens","routerMethod","underlyingTokenConfig","unires","_args157","_context157","addressForPrice","conversionRateInvertTokens","conversionRouterMethod","_x249","_x250","getQuickswapConversionRate","_ref259","_callee158","_args158","_context158","_x251","_x252","_ref260","_callee159","_args159","_context159","_x253","_x254","_ref261","_callee160","_args160","_context160","_x255","_x256","getCurveDepositedTokens","_ref262","_callee161","idleTokensBalances","remainingCurveTokens","_args161","_context161","_x257","getCurveUnevenTokenAmounts","_ref263","_callee162","amounts","max_burn_amount","unevenAmounts","_context162","getCurveDepositContract","_x258","_x259","_callee163","curveRatesInfo","_args163","_context163","_callee164","_context164","strategyTokens","getCurveAPYContract","_callee165","blocksForPrevTokenPrice","_ref267","_ref268","prevTokenPrice","blocksMultiplier","curveAPR","_context165","getCurveTokenSupply","_callee166","_context166","getCurvePoolContract","_callee167","_args167","_context167","_callee168","_args168","_context168","_ref272","_callee169","_ref273","_ref274","_context169","_x260","_callee170","depositContractInfo","_context170","getCurveZapContract","_callee171","zapContractInfo","_context171","_callee172","poolContractInfo","_context172","getCurveSwapContract","_callee173","migrationContractInfo","_context173","getCurveIdleTokensAmounts","_callee175","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args175","_context175","_ref280","_callee174","coinIndex","curveIdleTokens","_context174","migrationParams","_x261","getCurveTokensAmounts","_callee177","useCoinIndex","_args177","_context177","_ref282","_callee176","_ref283","_ref284","idleTokenPrice","totalTokenSupply","_context176","_x262","getCurveAmounts","_ref285","_callee179","_args179","_context179","_ref286","_callee178","_context178","_x265","_x263","_x264","getCurveTokenAmount","_ref287","_callee180","_args180","_context180","_x266","getCurveSlippage","_ref288","_callee181","uneven_amounts","depositContract","_ref289","_ref290","Sv","_args181","_context181","_x267","_x268","_ref291","_callee182","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref292","_ref293","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args182","_context182","IAaveIncentivesController","emissionPerSecond","_x269","_callee184","_args184","_context184","_ref295","_callee183","_ref296","_ref297","_context183","_x270","getWMaticApr","_ref298","_callee185","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args185","_context185","_x271","_x272","getStkAaveApr","_ref299","_callee186","aaveConversionRate","stkAaveAPR","stkAaveValue","_args186","_context186","_x273","_x274","getCompAPR","_ref300","_callee187","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args187","_context187","_x275","_x276","getCompSpeed","_ref301","_callee188","cTokenAddress","compSpeed","_context188","_x277","_ref302","_callee189","cTokenInfo","compoundAllocationPerc","_ref303","_ref304","cTokenTotalSupply","compoundPoolShare","_args189","_context189","_x278","_callee191","_args191","_context191","_ref306","_callee190","_ref307","_ref308","_context190","_x279","_callee193","_args193","_context193","_ref310","_callee192","_ref311","_ref312","compApr","_context192","_x280","getTokensCsv","_callee196","csv","_context196","prototype","sum","pv","cv","avg","_ref314","_callee195","_context195","_ref315","_callee194","rates","header","rows","aprAvg","scoreAvg","lastRow","_context194","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x282","_x281","_callee198","convertToken","_args198","_context198","_ref317","_callee197","compTokenBalance","_context197","_x283","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref318","_callee200","govTokensUserDistribution","_args200","_context200","_ref319","_callee199","_context199","_x285","_x284","getGovTokensDistributionSpeed","_ref320","_callee202","govTokensDistribution","_args202","_context202","_ref321","_callee201","govSpeed","_context201","_x287","_x286","getGovTokensAprs","_ref322","_callee204","govTokensAprs","_args204","_context204","_ref323","_callee203","_ref324","_ref325","_ref326","_ref327","cTokenConfig","_context203","aprTooltipMode","_x290","_x288","_x289","_callee206","_args206","_context206","_ref329","_callee205","govTokenBalance","fromTokenConfig","_context205","_x291","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee207","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args207","_context207","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref331","_callee209","govTokensAmounts","_context209","getGovTokensUserAmounts","_ref332","_callee208","govTokenIndex","govTokenAddress","_context208","getGovTokenAddessByIndex","_x294","_x295","_x292","_x293","_ref333","_callee210","_context210","_x296","_x297","_ref334","_callee211","_context211","_x298","_x299","_callee214","govTokenConfigForced","_args214","_context214","_ref336","_callee213","_context213","_ref337","_callee212","_context212","_x301","_x302","_x300","getTokenFees","_callee215","_args215","_context215","_callee216","_ref340","_ref341","feePercentage","gain","fees","_args216","_context216","_ref342","_callee217","_args217","_context217","_x303","getTotalTVL","_callee218","tokensTVL","_context218","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee222","_context222","_ref345","_callee221","_context221","_ref346","_callee220","oldTokenTVL","idleTokenName","_ref347","_ref348","oldTokenConfig","_ref352","_ref353","oldTokenPrice","oldTotalSupply","_context220","showAUM","_ref349","_callee219","_ref350","_ref351","govTokenConversionRate","govTokenBalanceConverted","_context219","_x306","oldProtocols","oldProtocol","protocolPos","_x305","_x304","getSubstackLatestFeed","_callee223","idleSubstackFeed","latestFeed","_context223","getTrancheAggregatedStats","_callee227","totalAUM","_args227","_context227","_ref356","_callee226","_context226","_ref357","_callee225","_context225","_ref358","_callee224","_ref359","_ref360","_context224","_x309","_x308","_x307","getAggregatedStats","_callee229","allNetworks","networkIds","callsFailed","tvls","_args229","_context229","_ref362","_callee228","_context228","_x310","getAggregatedStats_chain","_callee234","avgAPR","_args234","_context234","availableStrategiesNetworks","_ref364","_callee233","_context233","_ref365","_callee232","_context232","_ref366","_callee231","tokenAUM","_context231","_ref367","_callee230","_ref368","_ref369","_context230","_x314","_x313","_x312","_x311","getTokenApy","_ref370","_callee235","_context235","_x315","getTokensToMigrate","_callee238","_args238","_context238","_ref372","_callee237","_context237","_ref373","_callee236","_ref374","_context236","_x317","_x316","getProtocolsTokensBalances","_callee240","tokenBalances","minTokenBalance","protocolsTokens","_args240","_context240","_ref376","_callee239","_context239","_x318","getTokenConversionRateField","_ref377","_callee241","_args241","_context241","_x319","_x320","_ref378","_callee242","_args242","_context242","_x321","_x322","_x323","getAvgAPYStats","_ref379","_callee243","apiResults","_args243","_context243","_x324","_x325","_ref380","_callee244","statsTokenConfig","ToTokenConfig","_args244","_context244","addressForPriceFrom","conversionRateProtocolContract","conversionRateUseWETH","_x326","_ref381","_callee245","count","_conversionRate","_args245","_context245","_x327","_x328","getTokenScore","_ref382","_callee246","_ref383","_ref384","tokenScore","_context246","protocolScore","getTokenScoreApi","_x329","_x330","_ref385","_callee247","scores","_context247","_x331","_x332","_ref386","_callee248","idleGovTokenShowAPR","idleAPR","_args248","_context248","_x333","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","trancheTokenConfig","voteUserSlope","claimableRewards","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","votingWeight","depositedAmount","withdrawnAmount","_this8","votingPowerPercentage","gaugeAddress","_this9","setSelectedAction","setStakeAction","setClaimToken","Button","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","TrancheField","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","showReferral","option","selectTranche","borderTop","ImageButton","unstakeWithBalance","unstake","contractApprovedCallback","messages","buyInstructions","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","then","param3","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","quickswap","convex","mstable","euler","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setNetwork","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","_args22","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDOPolygon","IdleStrategy","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this10","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","HeadingComponent","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.c38f9da3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? this.props.iconBgColor ? (\n              <Flex\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                backgroundColor={\n                  this.props.iconBgColor\n                    ? this.props.iconBgColor\n                    : this.props.theme.colors.transactions.actionBg.redeem\n                }\n              >\n                <Image\n                  align={\"center\"}\n                  src={this.props.image}\n                  height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  {...this.props.imageProps}\n                />\n              </Flex>\n            ) : (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          return isUnderlyingDeposit || isUnderlyingRedeem || isTrancheDeposit || isTrancheRedeem;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    if (limit && parseInt(limit)>0){\n      endpoint = endpoint+`&limit=${limit}`;\n    }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      if (parseInt(latestHarvestBlock)>0){\n        startBlock = latestHarvestBlock;\n        latestHarvestBlock++;\n      } else {\n        limit = 1;\n        latestHarvestBlock = 'latest';\n      }\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            firstBlockPoolSize = this.fixTokenDecimals(firstBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = firstBlockPoolSize.plus(lastBlockPoolSize).div(2);\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, 18);\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n              polygonTx.exited = false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.props.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim\n    };\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = parseInt(Date.now()/1000);\n    }\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,lastGaugeTimestamp]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                // console.log('gaugeTotalSupplyUnderlying',tokenConfig.token,gaugeTotalSupplyUnderlying,gaugeUnderlyingTokenConfig);\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  testMulticall = async () => {\n    const calls = [\n      {\"method\":\"tranchePrice(address)\",\"args\":[[\"0x2688fc68c4eac90d9e5e1b94776cf14eade8d877\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x34dcd573c5de4672c8248cd12a99f875ca112ad8\"},\n      {\"method\":\"claimable_tokens(address)\",\"args\":[[\"0xF1363D3D55d9e679cC6aa0a0496fD85BDfCF7464\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x675eC042325535F6e176638Dd2d4994F645502B9\"}\n    ];\n\n    const data = await this.makeMulticall(calls);\n    console.log(data);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getOnChainTokenConversionRate(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    // Set custom protocol (uniswap, sushiswap, quickswap)\n    if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n      protocolContract = statsTokenConfig.conversionRateProtocolContract;\n    }\n\n    // Override useWETH based on token config\n    if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n      useWETH = statsTokenConfig.conversionRateUseWETH;\n    } else {\n      // Don't use WETH in the path\n      useWETH = !statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Heading, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      iconColor={'redeem'}\n                      iconBgColor={'#3f5fff'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'deposit'}\n                      iconBgColor={'#ced6ff'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          iconBgColor={'#ffd979'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully broadcasted and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    gaugeConfig:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      lastHarvest,\n      gaugeStakedBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      gaugeConfig ? this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest',lastHarvest);    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      gaugeStakedBalance,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      gaugeConfig,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                >\n                                  {this.props.tokenConfig.description}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) ? (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'flashColor'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) : this.props.selectedToken === 'stETH' && this.props.selectedTranche === 'AA' && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'flashColor'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`With the <a href=\"https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">IDLE Gauges release</a>, LDO rewards are going to be distributed via a different staking contract on <strong>Thursday 14 April 2022 16:30:00 GMT</strong>. Please make sure to unstake your stETH from the current staking contract after that date and deposit in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/stETH`)}\" class=\"link\">stETH Gauge</a> contract to continue receiving the LDO rewards, alongside the IDLE distribution from Gauges`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.state.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getOnChainTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getOnChainTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                }\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Button, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={Button}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  fontWeight:3,\n                  size:'small',\n                  width:'auto',\n                  style:{\n                    fontSize:'14px',\n                  },\n                  mainColor:'blue',\n                  value:'Reduce allowance',\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport { Button, Flex, Box, Text, Icon } from \"rimble-ui\";\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={Button}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      fontWeight:3,\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      height:'45px',\n                                                      fontSize:[2,3],\n                                                      boxShadow:null,\n                                                      borderRadius:4,\n                                                      mainColor:'redeem',\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Input, Heading } from \"rimble-ui\";\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n          gaugeWorkingSupply,\n          gaugeWeight\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n          this.functionsUtil.genericContractCallCached(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCallCached('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={this.props.isActive ? 'copyColor' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.8\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 5: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 137: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 80001: 'https://polygon-mainnet.g.alchemyapi.io/v2/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/dashboard/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log('initializeContracts',this.state.web3Providers);\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            stkIDLE Gauges are now live at full throttle with $IDLE rewards!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e'}\n          >\n            Discover More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13054628,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        protocol:'idle',\n        blockNumber:13575397,\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        curveApyPath:['apy','day','frax'],\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        curveApyPath:['apy','day','mim'],\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        curveApyPath:['apy','day','steth'],\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:14785127,\n        enabledEnvs: ['beta'],\n        multiCallDisabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:6,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:6,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  multiCall={this.multiCall}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              multiCall={this.multiCall}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}