{"version":3,"sources":["TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","CustomList/CustomList.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","Title/Title.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["module","exports","trancheFlash","mobile","SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","CardIconButton","cardProps","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","backgroundColor","margin","my","align","image","src","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addEthereumChain","chainId","getCurrentWeb3","currentProvider","request","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","toHex","nativeCurrency","baseToken","symbol","blockExplorerUrls","method","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref11","_ref13$","migrationEnabled","oldContractBalanceFormatted","tokenKey","tokenBalanceConverted","checkMigration","strategy","getIdleTokenPrice","_ref15","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_ref22","_callee15","stakingRewards","tokensDistribution","_context15","_ref23","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref24","_ref25","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref26","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref27","_ref28","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref29","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref30","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref31","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref32","_callee20","_context20","_x20","_x21","_x22","_ref33","_callee21","_ref34","_ref35","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee28","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref38","_ref39","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args28","_context28","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref40","_callee23","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context23","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x25","_ref41","_callee24","_context24","_x26","match","_ref42","_callee25","_context25","_x27","_ref43","_callee26","_context26","_x28","items","to_address","_ref44","_callee27","polygonTx","_context27","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x29","sort","getPolygonBaseTxs","_callee29","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args29","_context29","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee30","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args30","_context30","filterEthereumTxs","_callee31","_args31","_context31","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee32","resultData","_resultData","allAvailableTokens","_args32","_context32","processStoredTxs","t1","_callee33","contractInstance","_context33","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref50","_callee34","_ref51","_ref52","_context34","getTransactionReceipt","_x30","_ref53","_callee35","_args35","_context35","_x31","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref54","_callee36","processTransactions","idleTokensAddresses","_args36","_context36","mappedTx","_x32","_x33","filterEtherscanTxs","_ref55","_callee37","processTxs","_args37","_context37","_x34","_ref56","_callee38","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args38","_context38","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x35","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref57","_callee43","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args43","_context43","baseTokenConfig","baseTokenAddress","_ref58","_callee42","minedTxs","_context42","_ref59","_callee41","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context41","getCurveTokenPrice","_ref60","_callee39","_context39","_x40","_x41","baseTokensConfig","t2","_ref61","_callee40","_context40","_x42","_x43","_x38","_x39","_x37","_x36","_ref62","_callee49","txsToProcess","_args49","_context49","_ref63","_callee48","_context48","_ref64","_callee47","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context47","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref65","_callee44","_context44","_x48","_x49","_ref66","_callee45","_context45","_x50","_x51","oldContract","events","raw","_ref67","_callee46","_context46","_x52","_x53","abi","decodeLog","_token","_x46","_x47","_x45","_x44","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","_ref68","_callee50","error_callback","config","_args50","_context50","catch","_x54","_ref69","_callee51","apiKeyIndex","apiKey","_args51","_context51","message","_x55","_ref70","_callee52","return_data","_args52","_context52","_x56","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee53","page","googlePageviewInfo","isOrigin","_args53","_context53","ga","_ref72","_callee55","googleEventsInfo","debugEnabled","originOk","_args55","_context55","analytics","google","addPostfixForTestnet","availableNetworks","_ref73","_callee54","_context54","hitCallback","hitCallbackFail","_x58","_x59","_x57","createContract","_ref74","_callee56","_context56","_x60","_x61","_x62","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee59","activeOnly","whitelist","proposals","currTime","validProposals","_args59","_context59","addr","msg","payload","end","_ref76","_callee58","checkedStrategies","_context58","snapshot","metadata","strategies","_ref77","_callee57","_context57","_x64","_x63","getAprsFromApi","_callee60","endpointInfo","aprs","_args60","_context60","_ref79","_callee61","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args61","_context61","_x65","getTokenExchangeRate","_ref80","_callee62","exchangeRateParams","exchangeRate","_context62","_x66","_x67","getTokenDecimals","_ref81","_callee63","_context63","_x68","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee64","idleTokenConfig","feeDistributorConfig","_context64","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee65","contractPaused","_args65","_context65","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref84","_callee67","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context67","lastAllocationsPromise","_ref85","_callee66","lastAllocations","_context66","_x70","_x71","alloc","_x69","_ref86","_callee68","oldContractBalance","oldContractTokenDecimals","oldContractName","_context68","getContractBalance","_x72","_x73","_ref87","_callee69","eventName","_args69","_context69","getContractPastEvents","_x74","_x75","estimateMethodGasUsage","_ref88","_callee70","methodParams","_contract$methods","functionCall","gasLimit","_ref89","_ref90","_args70","_context70","getGasPrice","estimateGas","_x76","_x77","_ref91","_callee71","userAddress","signedParameters","callback_receipt","_contract$methods2","_context71","on","once","confirmationNumber","receipt","_x78","_x79","_x80","_x81","_x82","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref92","_callee72","biconomyInfo","res","_context72","limits","apiId","headers","x-api-key","_x83","sendTxWithPermit","_ref93","_callee73","_contract$methods3","messageToSign","_this$getSignaturePar","_context73","encodeABI","personal","sign","_x84","_x85","_x86","_x87","_x88","_x89","buildBiconomyErc20ForwarderTx","_ref94","_callee74","permitType","callData","buildParams","_context74","txGas","erc20ForwarderClient","buildTx","_x90","_x91","_x92","_x93","_x94","_ref95","_callee76","_context76","_ref96","_callee75","_context75","_x96","_x97","_x95","sendBiconomyTxWithErc20Forwarder","_ref97","_callee77","req","metaInfo","txResponse","fetchReceiptIntervalId","_context77","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x98","_x99","_x100","_x101","sendBiconomyTxWithPersonalSign","_ref98","_callee78","_this$getSignaturePar2","_context78","getNonce","_x102","_x103","_x104","_x105","signPermitEIP2612","_ref99","_callee79","erc20Name","owner","spender","deadline","domain","permit","domainData","_context79","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x106","_x107","_x108","_x109","_x110","_x111","_x112","_x113","signPermit","_ref100","_callee80","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args80","_context80","net","getId","round","nonceMethod","pow","allowed","response","_x114","_x115","_x116","_ref101","_callee81","permitParams","methodAbi","useNonce","_args81","_context81","_jsonInterface","f","unshift","_x117","_x118","_x119","_x120","_x121","_x122","_x123","sendSignedTx","_ref102","_callee82","MetaTransaction","dataToSign","_context82","_x124","_x125","_x126","_x127","_x128","checkTokenApproved","_ref103","_callee83","contractAddr","walletAddr","_ref104","_ref105","allowance","_context83","getAllowance","gte","_x129","_x130","_x131","_ref106","_callee84","_context84","_x132","_x133","_x134","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref107","_callee85","stakedBalance","_args85","_context85","_x135","_x136","getTrancheStakingRewards","_ref108","_callee87","_context87","_ref109","_callee86","tokenGlobalConfig","_context86","_x139","_x137","_x138","_ref110","_callee88","field","addGovTokens","_args88","_context88","loadTrancheField","_x140","_x141","_x142","_x143","_x144","_x145","_x146","_x147","_ref111","_callee89","formatValue","addTokenName","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref112","_ref113","totalSupply","virtualPrice","_ref114","_ref115","staked1","lastPrice1","_ref116","_ref117","deposited1","lastPrice","_ref118","_ref119","redeemable1","staked2","_ref120","_ref121","earningsStart","trancheApy2","deposited3","earningsEnd","_ref122","_ref123","trancheFee","earningsCounter","feesStart","feesEnd","_ref124","_ref125","deposited4","redeemable3","_ref126","_ref127","deposited2","redeemable2","_ref128","_ref129","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref130","_ref131","rewardsTokens","incentiveTokens","govTokens","_args89","_context89","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","_x148","_x149","_x150","_x151","_x152","_x153","_x154","loadAssetField","_ref132","_callee90","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref133","_ref134","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref135","_ref136","amountLentCurve1","redeemableBalanceCurve","_ref137","_ref138","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref139","_ref140","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref141","_ref142","tokenPriceFirstDeposit","_ref143","_ref144","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref145","_ref146","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref147","_ref148","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref149","_ref150","amountLentCurve2","redeemableBalanceCurve1","_ref151","_ref152","redeemableBalance2","_args90","_context90","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x155","_x156","_x157","_x158","getIdleTokenSupply","_ref153","_callee91","idleTokenSupply","_args91","_context91","_x159","getIdleTokenPriceWithFee","_ref154","_callee92","_ref155","_ref156","fee","priceWFee","_args92","_context92","eq","_x160","_x161","_ref157","_callee93","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args93","_context93","_x162","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref158","_callee94","_ref159","_ref160","idleTokensTotalSupply","userShare","_context94","_x163","_x164","open","_callee96","coverProtocolConfig","nexusMutualConfig","_args96","_context96","_ref162","_callee95","coverage","coverageTokens","protocolImage","_context95","tokens","expirationTimestamp","utc","_x165","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref163","_callee98","incidentsInfo","_ref164","_ref165","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context98","directProps","startBlock","contractInfo","buyer","_ref166","_callee97","cover","coverId","claimSubmittedEvent","_ref167","_ref168","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref169","_ref170","_context97","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x167","_x166","getBatchedDepositExecutions","_ref171","_callee99","_context99","_x168","getBatchedDeposits","_callee101","filter_by_status","batchDepositConfig","batchedDeposits","_args101","_context101","_ref173","_callee100","currBatchIndex","batchIndex","_ref174","_ref175","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context100","_x169","getETHBalance","_ref176","_callee102","fixDecimals","_args102","_context102","_x170","_ref177","_callee103","_ref178","_ref179","_args103","_context103","_x171","_x172","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref180","_callee104","_args104","_context104","_x173","_ref181","_callee105","_args105","_context105","_x174","_ref182","_callee106","_args106","_context106","_x175","_x176","getProtocolBalance","_ref183","_callee107","_context107","_x177","_x178","getAprs","_ref184","_callee108","_context108","addresses","_x179","genericIdleCall","_ref185","_callee109","callParams","_args109","_context109","_x180","_ref186","_callee110","_contract$methods4","_args110","_context110","_x181","_x182","_ref187","_callee112","_args112","_context112","_ref188","_callee111","_context111","_x184","_x185","_x183","getTxDecodedLogs","_ref189","_callee114","logAddr","decodeLogs","internalTransfers","_context114","_ref190","_callee113","_context113","_x190","_x191","_x186","_x187","_x188","_x189","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee115","_context115","_ref192","_callee116","_context116","getBlock","_x192","_ref193","_callee117","_args117","_context117","getPastEvents","_x193","_x194","_ref194","_callee118","_args118","_context118","_x195","_x196","cachedContractCall","_ref195","_callee119","_args119","_context119","_x197","_x198","_ref196","_callee120","_contract$methods5","_args120","_context120","_x199","_x200","_ref197","_callee121","async","_args121","_context121","_x201","_x202","getUnlentBalance","_ref198","_callee122","unlentBalance","_context122","_x203","_ref199","_callee123","_args123","_context123","_x204","getLastAllocations","_ref200","_callee125","tokenAllocations","_context125","_ref201","_callee124","_context124","_x206","_x207","_x205","_ref202","_callee126","protocolsAprs","_ref203","_ref204","govTokensBalances","_args126","_context126","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x208","getSushiswapPoolTokenPrice","_ref205","_callee127","_ref206","_ref207","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref208","_ref209","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context127","getSushiswapConversionRate","_x209","_ref210","_callee128","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context128","_x210","_x211","_ref211","_callee129","unires","_context129","addressForPrice","_x212","_x213","getCurveDepositedTokens","_ref212","_callee130","idleTokensBalances","remainingCurveTokens","_args130","_context130","_x214","getCurveUnevenTokenAmounts","_ref213","_callee131","amounts","max_burn_amount","unevenAmounts","_context131","getCurveDepositContract","_x215","_x216","_callee132","curveRatesInfo","_context132","strategyTokens","getCurveAPYContract","_callee133","blocksForPrevTokenPrice","_ref216","_ref217","prevTokenPrice","blocksMultiplier","curveAPR","_context133","getCurveTokenSupply","_callee134","_context134","getCurvePoolContract","_callee135","_args135","_context135","_callee136","_args136","_context136","_ref221","_callee137","_ref222","_ref223","_context137","_x217","_callee138","depositContractInfo","_context138","getCurveZapContract","_callee139","zapContractInfo","_context139","_callee140","poolContractInfo","_context140","getCurveSwapContract","_callee141","migrationContractInfo","_context141","getCurveIdleTokensAmounts","_callee143","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args143","_context143","_ref229","_callee142","coinIndex","curveIdleTokens","_context142","migrationParams","_x218","getCurveTokensAmounts","_callee145","useCoinIndex","_args145","_context145","_ref231","_callee144","_ref232","_ref233","idleTokenPrice","totalTokenSupply","_context144","_x219","getCurveAmounts","_ref234","_callee147","_args147","_context147","_ref235","_callee146","_context146","_x222","_x220","_x221","getCurveTokenAmount","_ref236","_callee148","_args148","_context148","_x223","getCurveSlippage","_ref237","_callee149","uneven_amounts","depositContract","_ref238","_ref239","Sv","_args149","_context149","_x224","_x225","_ref240","_callee150","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref241","_ref242","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args150","_context150","IAaveIncentivesController","emissionPerSecond","_x226","_callee152","_args152","_context152","_ref244","_callee151","_ref245","_ref246","_context151","_x227","getWMaticApr","_ref247","_callee153","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args153","_context153","_x228","_x229","getStkAaveApr","_ref248","_callee154","aaveConversionRate","stkAaveAPR","stkAaveValue","_args154","_context154","_x230","_x231","getCompAPR","_ref249","_callee155","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args155","_context155","_x232","_x233","getCompSpeed","_ref250","_callee156","cTokenAddress","compSpeed","_context156","_x234","_ref251","_callee157","cTokenInfo","compoundAllocationPerc","_ref252","_ref253","cTokenTotalSupply","compoundPoolShare","_args157","_context157","_x235","_callee159","_args159","_context159","_ref255","_callee158","_ref256","_ref257","_context158","_x236","_callee161","_args161","_context161","_ref259","_callee160","_ref260","_ref261","compApr","_context160","_x237","getTokensCsv","_callee164","csv","_context164","prototype","sum","pv","cv","avg","_ref263","_callee163","_context163","_ref264","_callee162","rates","header","aprAvg","scoreAvg","lastRow","_context162","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x239","_x238","_callee166","govToken","convertToken","_args166","_context166","_ref266","_callee165","compTokenBalance","_context165","_x240","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref267","_callee168","govTokensUserDistribution","_args168","_context168","_ref268","_callee167","_context167","_x242","_x241","getGovTokensDistributionSpeed","_ref269","_callee170","govTokensDistribution","_args170","_context170","_ref270","_callee169","govSpeed","_context169","_x244","_x243","getGovTokensAprs","_ref271","_callee172","govTokensAprs","_args172","_context172","_ref272","_callee171","_ref273","_ref274","_ref275","_ref276","cTokenConfig","_context171","aprTooltipMode","_x247","_x245","_x246","_callee174","_args174","_context174","_ref278","_callee173","govTokenBalance","tokenConversionRate","fromTokenConfig","_context173","_x248","_callee175","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args175","_context175","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref280","_callee177","govTokensAmounts","_context177","getGovTokensUserAmounts","_ref281","_callee176","govTokenIndex","_context176","getGovTokenAddessByIndex","_x251","_x252","_x249","_x250","_ref282","_callee178","_context178","_x253","_x254","_ref283","_callee179","_context179","_x255","_x256","_callee182","govTokenConfigForced","_args182","_context182","_ref285","_callee181","_context181","_ref286","_callee180","_context180","_x258","_x259","_x257","getTokenFees","_callee183","_args183","_context183","_callee184","_ref289","_ref290","feePercentage","gain","fees","_args184","_context184","_ref291","_callee185","_args185","_context185","_x260","getTotalTVL","_callee186","tokensTVL","_context186","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee190","_context190","_ref294","_callee189","_context189","_ref295","_callee188","oldTokenTVL","idleTokenName","_ref296","_ref297","oldTokenConfig","_ref301","_ref302","oldTokenPrice","oldTotalSupply","_context188","showAUM","_ref298","_callee187","_ref299","_ref300","govTokenConversionRate","govTokenBalanceConverted","_context187","_x263","oldProtocols","oldProtocol","protocolPos","_x262","_x261","getSubstackLatestFeed","_callee191","idleSubstackFeed","latestFeed","_context191","getAggregatedStats","_callee193","allNetworks","networkIds","totalAUM","_args193","_context193","_ref305","_callee192","tvls","_context192","getAggregatedStats_chain","_x264","_callee197","avgAPR","_args197","_context197","_ref307","_callee196","_context196","_ref308","_callee195","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context195","_ref309","_callee194","_ref310","_ref311","_context194","_x267","_x266","_x265","getTokenApy","_ref312","_callee198","_context198","_x268","getTokensToMigrate","_callee201","_args201","_context201","_ref314","_callee200","_context200","_ref315","_callee199","_ref316","_context199","_x270","_x269","getProtocolsTokensBalances","_callee203","tokenBalances","minTokenBalance","protocolsTokens","_args203","_context203","_ref318","_callee202","tokenContract","_context202","_x271","_ref319","_callee204","_args204","_context204","_x272","_x273","_x274","getAvgAPYStats","_ref320","_callee205","apiResults","_args205","_context205","_x275","_x276","_ref321","_callee206","count","_conversionRate","ToTokenConfig","_args206","_context206","_x277","_x278","getTokenScore","_ref322","_callee207","_ref323","_ref324","tokenScore","_context207","protocolScore","getTokenScoreApi","_x279","_x280","_ref325","_callee208","scores","_context208","_x281","_x282","_ref326","_callee209","idleGovTokenShowAPR","idleAPR","_args209","_context209","_x283","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","cDAI","anonymous","indexed","ERC20","5","best","DAI","govTokensDisabled","minAmountForMint","wyre","destCurrency","ramp","swapAsset","defiPrime","IdleTokenV4","aToken","functions","risk","80001","137","crToken","USDC","WETH","42","cToken","1337","IdleTokenV3","yToken","IdleConverterPersonalSignV4","iToken","CHAI","USDT","SUSD","skipMintForDeposit","TUSD","WBTC","RAI","enabledEnvs","fToken","FEI","1","defiScoreDisabled","canDeposit","disabledMessageRedeemKey","disabledMessageDepositKey","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","userHasFunds","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","paginationEnabled","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","SLP","showAPR","showPrice","COMP","stkAAVE","WMATIC","ProtocolDataProvider","useInfuraProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","iconDark","iconInactive","iconInactiveDark","tools","forum","leaderboard","overview","delegate","landingStrategies","comingSoon","titlePostfix","govTokensEnabled","chartColor","descLong","descShort","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","MATIC","USD","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","idleDAIv2","IdleTokenV2","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","captionPos","envParams","accountId","prod","referrerAccountId","dest","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","rowsPerPage","processedRows","processRows","totalRows","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","availableStrategiesNetworks","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","HeadingComponent","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.ff4d25ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName,networkId=null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]){\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    // console.log('networkConfig',networkConfig);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    })\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      tokensToMigrate:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig,this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token,account)\n      ]);\n\n      if (migrationEnabled){\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy:this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig,account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section,env=null) => {\n    const envUrl = this.getGlobalConfig(['environments',env,'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests',endpoint,dataToCache);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n\n    // console.log('makeCachedRequest - CACHE',key,dataToCache);\n\n    // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find( env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId=null) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    if (!networkId || !this.getGlobalConfig(['network','enabledNetworks']).includes(networkId)){\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats','aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n    return aprs;\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find( tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase() ) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key,key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key,{});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key,cachedData,TTL,true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0)) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.tokenConfig.token==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments:{\n    live:{\n      requiredNetwork:1,\n      url:\"https://idle.finance\"\n    },\n    beta:{\n      requiredNetwork:1,\n      url:\"https://beta.idle.finance\"\n    },\n    polygon:{\n      requiredNetwork:137,\n      url:\"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        1:[\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"],\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        useInfuraProvider:false,\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        useInfuraProvider:false,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies:{\n    best: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      strategy:'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId:137,\n      enabledEnvs: [],\n      strategy:'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    tranches: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy:'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1,137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/aprs/\",\n        137:\"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\",\n              \"RAI\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#333',\n          rgb:[51, 51, 51],\n          hsl:['0, 0%, 20%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#8247E5',\n          rgb:[130, 71, 229],\n          hsl:['262, 75%, 59%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Ethereum',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        color:'#9064ff',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        color:'#ff4a8d',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        color:'#f6c343',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        version:'v1',\n        name:'Polygon',\n        color:'#8247E5',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        color:'#3099f2',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        color:'#4474f1',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    firstBlockNumber: 8119247,\n    enabledNetworks: [1, 137],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://polygon-rpc.com'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      image:'images/protocols/polygon.svg',\n      label:'Ethereum ⇔ Polygon Bridge',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:ERC20Predicate,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:EtherPredicate,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1873,\n\t\"./testnet/mumbai/index.json\": 1874\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4440;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4442,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4451,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4462,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4587,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4654,\n\t\"./mainnet/v1/index.json\": 1873,\n\t\"./networks.json\": 1872,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4655,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4664,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4675,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4800,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4867,\n\t\"./testnet/mumbai/index.json\": 1874\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        // console.log('biconomyWeb3Provider',web3Provider,web3Host,biconomyWeb3Provider===web3Provider);\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.required.id]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const useInfuraProvider = !!contractInfo.useInfuraProvider;\n          this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        // Initialize govToken contracts\n        const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[this.state.network.required.id] ? govTokenConfig.addresses[this.state.network.required.id] : govTokenConfig.address;\n        this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n        contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, 1));\n        contractsNetworks[1].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, 1));\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          contracts.push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi,1));\n          contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newState = {\n      contractsNetworks,\n      contractsInitialized:true,\n      contracts:contracts.filter( c => !!c )\n    };\n\n    // contracts.forEach( newContractInfo => {\n    //   if (newContractInfo){\n    //     let foundContract = newState.contracts.find(c => c.name === newContractInfo.name);\n    //     const contractChanged = newState.contracts.indexOf(newContractInfo)===-1;\n    //     if (!foundContract || contractChanged){\n    //       // Replace old contract\n    //       if (foundContract){\n    //         const contractIndex = newState.contracts.indexOf(foundContract);\n    //         if (contractIndex!==-1){\n    //           newState.contracts[contractIndex] = newContractInfo;\n    //         }\n    //       // Insert new contract\n    //       } else {\n    //         newState.contracts.push(newContractInfo);\n    //       }\n    //     }\n    //   }\n    // });\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - END',newState.contractsNetworks);\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            {\n              !this.props.isMobile &&\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                >\n                  {\n                    governanceEnabled && \n                      <Link\n                        mr={4}\n                        fontSize={3}\n                        color={'white'}\n                        hoverColor={'white'}\n                        fontFamily={'sansSerif'}\n                        textAlign={['center','left']}\n                        onClick={ (e) => window.location.hash='#/governance' }\n                      >\n                        Governance\n                      </Link>\n                  }\n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                  >\n                    Contact Us\n                  </Link>\n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                  >\n                    FAQs\n                  </Link>\n                </Flex>\n            }\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData).forEach(key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null) {\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData){\n      Object.keys(storedCachedData).forEach( key => {\n        const storedData = storedCachedData[key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now() / 1000);\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}