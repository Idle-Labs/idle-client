{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","IconBox/IconBox.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","configs/availableTranches.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TrancheField/TrancheField.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","Title/Title.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","handleClick","backgroundColor","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mx","margin","my","alignItems","flexDirection","justifyContent","align","image","iconBgColor","mr","isSidebar","p","borderRadius","theme","colors","transactions","actionBg","redeem","src","height","isMobile","imageProps","useIconOnly","name","icon","size","color","iconColor","iconProps","fontWeight","fontSize","textProps","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","RoundIconButton","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","IconBox","isVisible","mt","textAlign","dangerouslySetInnerHTML","__html","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","className","styles","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","waitText","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","bg","twitterIcon","radioBtn","button","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheLastHarvest","_ref31","_callee19","strategyConfig","idleStrategyAddress","latestHarvestBlock","_ref32","_ref33","blockInfo","totalAmount","_context19","Strategy","genericContractCallCachedTTL","initContract","abi","getBlockInfo","returnValues","_x14","getGovTokenApr","_ref34","_callee20","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref35","_ref36","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context20","getTokenConfig","_address","apr2apy","apr","apy","_x15","_x16","_x17","_x18","getTrancheRewardTokensInfo","_ref37","_callee22","tokensDistribution","_context22","_ref38","_callee21","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref39","_ref40","_firstHarvest","_latestHarvest","firstBlock","_ref41","_ref42","poolSize","elapsedBlocks","elapsedSeconds","_context21","rewardsRate","now","genericContractCallCached","total","_x21","_x19","_x20","_ref43","_callee24","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref44","_ref45","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_context24","sort","_ref46","_callee23","trancheTokenTransferEvent","tokenTransferEvent","_ref47","_ref48","tokenConversionRate","_context23","_x25","trancheTokenAmount","hashKey","trancheTokens","_x22","_x23","_x24","getTrancheUserTransactions","_ref49","_callee25","_context25","_x26","_x27","_x28","getTrancheFirstDepositTx","_ref50","_callee26","_context26","_x29","_x30","_x31","getAmountDepositedTranche","_ref51","_callee27","_context27","_x32","_x33","_x34","_ref52","_callee28","_ref53","_ref54","userAvgPrice","_context28","_x35","_x36","getAmountLent","_callee29","amountLents","_args29","_context29","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee35","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref57","_ref58","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args35","_context35","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref59","_callee30","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context30","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x37","_ref60","_callee31","_context31","_x38","match","_ref61","_callee32","_context32","_x39","_ref62","_callee33","_context33","_x40","items","to_address","_ref63","_callee34","polygonTx","erc20RootToken","_context34","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x41","getPolygonBaseTxs","_callee36","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args36","_context36","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee37","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args37","_context37","filterEthereumTxs","_callee38","_args38","_context38","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee39","resultData","_resultData","allAvailableTokens","_args39","_context39","processStoredTxs","t1","_callee40","contractInstance","_context40","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref69","_callee41","_ref70","_ref71","_context41","getTransactionReceipt","_x42","_ref72","_callee42","_args42","_context42","_x43","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref73","_callee43","processTransactions","idleTokensAddresses","_args43","_context43","mappedTx","_x44","_x45","filterEtherscanTxs","_ref74","_callee44","processTxs","_args44","_context44","_x46","_ref75","_callee45","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args45","_context45","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x47","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref76","_callee50","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args50","_context50","baseTokenConfig","baseTokenAddress","_ref77","_callee49","minedTxs","_context49","_ref78","_callee48","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context48","getCurveTokenPrice","_ref79","_callee46","_context46","_x52","_x53","baseTokensConfig","t2","_ref80","_callee47","_context47","_x54","_x55","_x50","_x51","_x49","_x48","_ref81","_callee56","txsToProcess","_args56","_context56","_ref82","_callee55","_context55","_ref83","_callee54","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context54","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref84","_callee51","_context51","_x60","_x61","_ref85","_callee52","_context52","_x62","_x63","oldContract","events","raw","_ref86","_callee53","_context53","_x64","_x65","decodeLog","_token","_x58","_x59","_x57","_x56","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref87","_callee57","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args57","_context57","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x66","getBestTranche","_callee58","trancheType","maxApy","trancheTypes","trancheStrategyConfig","_args58","_context58","timetamp","splice","availableTrancheInfo","tInfo","_ref89","_callee59","error_callback","config","_args59","_context59","post","catch","_x67","_ref90","_callee60","_args60","_context60","_x68","_ref91","_callee61","apiKeyIndex","apiKey","_args61","_context61","_x69","_ref92","_callee62","return_data","_args62","_context62","_x70","makeCachedPostRequest","_ref93","_callee63","_args63","_context63","_x71","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee64","page","googlePageviewInfo","isOrigin","_args64","_context64","ga","_ref95","_callee66","googleEventsInfo","debugEnabled","originOk","_args66","_context66","analytics","google","addPostfixForTestnet","availableNetworks","_ref96","_callee65","_context65","hitCallback","hitCallbackFail","_x73","_x74","_x72","createContract","_ref97","_callee67","_context67","_x75","_x76","_x77","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee70","activeOnly","whitelist","proposals","validProposals","_args70","_context70","addr","_ref99","_callee69","checkedStrategies","_context69","end","author","snapshot","strategies","_ref100","_callee68","tokenContract","_context68","_x79","_x78","getAprsFromApi","_callee71","endpointInfo","aprs","_args71","_context71","_ref102","_callee72","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args72","_context72","_x80","getTokenExchangeRate","_ref103","_callee73","exchangeRateParams","exchangeRate","_context73","_x81","_x82","getTokenDecimals","_ref104","_callee74","_context74","_x83","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee75","idleTokenConfig","feeDistributorConfig","_context75","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee76","contractPaused","_args76","_context76","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref107","_callee78","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context78","lastAllocationsPromise","_ref108","_callee77","lastAllocations","_context77","_x85","_x86","alloc","_x84","_ref109","_callee79","oldContractBalance","oldContractTokenDecimals","oldContractName","_context79","_x87","_x88","_ref110","_callee80","eventName","startBlock","endBlock","blocksPerCall","lastBlockNumber","calls","toBlock","all_past_events","_args80","_context80","getBlockNumber","getContractPastEvents","fromBlock","_x89","_x90","estimateMethodGasUsage","_ref111","_callee81","methodParams","_contract$methods","functionCall","gasLimit","_ref112","_ref113","_args81","_context81","getGasPrice","estimateGas","_x91","_x92","_ref114","_callee82","userAddress","signedParameters","callback_receipt","_contract$methods2","_context82","on","once","confirmationNumber","receipt","_x93","_x94","_x95","_x96","_x97","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref115","_callee83","biconomyInfo","res","_context83","limits","apiId","headers","x-api-key","_x98","sendTxWithPermit","_ref116","_callee84","_contract$methods3","messageToSign","_this$getSignaturePar","_context84","encodeABI","personal","sign","_x99","_x100","_x101","_x102","_x103","_x104","buildBiconomyErc20ForwarderTx","_ref117","_callee85","permitType","callData","buildParams","_context85","txGas","erc20ForwarderClient","buildTx","_x105","_x106","_x107","_x108","_x109","_ref118","_callee87","_context87","_ref119","_callee86","_context86","_x111","_x112","_x110","sendBiconomyTxWithErc20Forwarder","_ref120","_callee88","req","metaInfo","txResponse","fetchReceiptIntervalId","_context88","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x113","_x114","_x115","_x116","sendBiconomyTxWithPersonalSign","_ref121","_callee89","_this$getSignaturePar2","_context89","getNonce","_x117","_x118","_x119","_x120","signPermitEIP2612","_ref122","_callee90","erc20Name","owner","spender","deadline","domain","permit","domainData","_context90","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x121","_x122","_x123","_x124","_x125","_x126","_x127","_x128","signPermit","_ref123","_callee91","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args91","_context91","net","getId","round","nonceMethod","pow","allowed","response","_x129","_x130","_x131","_ref124","_callee92","permitParams","methodAbi","useNonce","_args92","_context92","_jsonInterface","f","unshift","_x132","_x133","_x134","_x135","_x136","_x137","_x138","sendSignedTx","_ref125","_callee93","MetaTransaction","dataToSign","_context93","_x139","_x140","_x141","_x142","_x143","checkTokenApproved","_ref126","_callee94","contractAddr","walletAddr","_ref127","_ref128","allowance","_context94","getAllowance","gte","_x144","_x145","_x146","_ref129","_callee95","_context95","_x147","_x148","_x149","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee97","highestValue","_args97","_context97","lendRates","aprInfo","tokenAPR","_ref131","_callee96","_context96","_x150","_ref132","_callee98","_args98","_context98","_x151","_x152","calculateGaugeBoost","_ref133","_callee99","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args99","_context99","workingBalance","getTokenTotalSupply","_x153","_x154","getGaugeNextWeight","_ref134","_callee100","nextGaugeTimestamp","_ref135","_ref136","gaugeWeight","_context100","_x155","getGaugeRewardsTokens","_ref137","_callee102","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args102","_context102","rate","maxRewards","_ref138","_callee101","tokenIndex","rewardTokenAddress","_ref139","_ref140","rewardData","rewardTokenBalance","cdoConfig","_ref141","_ref142","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_context101","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x157","_x156","_ref143","_callee104","_args104","_context104","_ref144","_callee103","tokenGlobalConfig","stakingRewardsContract","_context103","_x160","_x158","_x159","_ref145","_callee105","field","addGovTokens","_args105","_context105","loadTrancheField","_x161","_x162","_x163","_x164","_x165","_x166","_x167","_x168","_ref146","_callee106","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref147","_ref148","totalSupply","virtualPrice","_ref149","_ref150","gaugeBalance","lastPrice1","staked1","totalStaked","_ref151","_ref152","deposited1","lastPrice","_ref153","_ref154","redeemable1","staked2","_ref155","_ref156","earningsStart","trancheApy2","deposited3","earningsEnd","_ref157","_ref158","trancheFee","earningsCounter","feesEnd","feesStart","_ref159","_ref160","deposited4","redeemable3","_ref161","_ref162","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref163","_ref164","_ref165","_ref166","earningsPerc","secondsFromFirstTx","_ref167","_ref168","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args106","_context106","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x169","_x170","_x171","_x172","_x173","_x174","_x175","loadAssetField","_ref169","_callee107","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref170","_ref171","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref172","_ref173","amountLentCurve1","redeemableBalanceCurve","_ref174","_ref175","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref176","_ref177","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref178","_ref179","tokenPriceFirstDeposit","_ref180","_ref181","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref182","_ref183","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref184","_ref185","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref186","_ref187","amountLentCurve2","redeemableBalanceCurve1","_ref188","_ref189","redeemableBalance2","_args107","_context107","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x176","_x177","_x178","_x179","getIdleTokenSupply","_ref190","_callee108","idleTokenSupply","_args108","_context108","_x180","getIdleTokenPriceWithFee","_ref191","_callee109","_ref192","_ref193","fee","priceWFee","_args109","_context109","eq","_x181","_x182","_ref194","_callee110","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args110","_context110","_x183","clearCachedData","clear_all","parent_key","useLocalStorage","requiredNetworkId","allCachedData","expirationDate","_ref195","_callee111","_ref196","_ref197","idleTokensTotalSupply","userShare","_context111","_x184","_x185","openWindow","open","getActiveCoverages","_callee113","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args113","_context113","coverages","_ref199","_callee112","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context112","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x186","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref200","_callee115","incidentsInfo","_ref201","_ref202","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context115","directProps","contractInfo","buyer","_ref203","_callee114","cover","coverId","claimSubmittedEvent","_ref204","_ref205","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref206","_ref207","_context114","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x188","_x187","getBatchedDepositExecutions","_ref208","_callee116","_context116","_x189","getBatchedDeposits","_callee118","filter_by_status","batchDepositConfig","batchedDeposits","_args118","_context118","_ref210","_callee117","currBatchIndex","batchIndex","_ref211","_ref212","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context117","_x190","getETHBalance","_ref213","_callee119","fixDecimals","_args119","_context119","_x191","_ref214","_callee120","_ref215","_ref216","_args120","_context120","ERC20","_x192","_x193","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref217","_callee121","_args121","_context121","_x194","_ref218","_callee122","_args122","_context122","_x195","_ref219","_callee123","_args123","_context123","_x196","_x197","getProtocolBalance","_ref220","_callee124","_context124","_x198","_x199","getAprs","_ref221","_callee125","_context125","addresses","_x200","genericIdleCall","_ref222","_callee126","callParams","_args126","_context126","_x201","_ref223","_callee127","_contract$methods4","_args127","_context127","_x202","_x203","_ref224","_callee129","_args129","_context129","_ref225","_callee128","_context128","_x205","_x206","_x204","getTxDecodedLogs","_ref226","_callee131","logAddr","decodeLogs","internalTransfers","_context131","_ref227","_callee130","_context130","_x211","_x212","_x207","_x208","_x209","_x210","blocksToSeconds","blocks","blocksPerSeconds","_callee132","_context132","_callee133","blockInfoToSave","_args133","_context133","getBlock","_ref230","_callee134","_args134","_context134","getPastEvents","_x213","_x214","_ref231","_callee135","_args135","_context135","_x215","_x216","_ref232","_callee136","_args136","_context136","_x217","_x218","cachedContractCall","_ref233","_callee137","_args137","_context137","_x219","_x220","_ref234","_callee138","_contract$methods5","_args138","_context138","_x221","_x222","_ref235","_callee139","async","_args139","_context139","_x223","_x224","getUnlentBalance","_ref236","_callee140","unlentBalance","_context140","_x225","_ref237","_callee141","_args141","_context141","_x226","getLastAllocations","_ref238","_callee143","tokenAllocations","_context143","_ref239","_callee142","_context142","_x228","_x229","_x227","_ref240","_callee144","protocolsAprs","_ref241","_ref242","govTokensBalances","_args144","_context144","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x230","getSushiswapPoolTokenPrice","_ref243","_callee145","_ref244","_ref245","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref246","_ref247","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context145","getSushiswapConversionRate","_x231","_ref248","_callee146","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context146","_x232","_x233","_ref249","_callee147","useWETH","unires","_args147","_context147","addressForPrice","_x234","_x235","getCurveDepositedTokens","_ref250","_callee148","idleTokensBalances","remainingCurveTokens","_args148","_context148","_x236","getCurveUnevenTokenAmounts","_ref251","_callee149","amounts","max_burn_amount","unevenAmounts","_context149","getCurveDepositContract","_x237","_x238","_callee150","curveRatesInfo","_args150","_context150","_callee151","_context151","strategyTokens","getCurveAPYContract","_callee152","blocksForPrevTokenPrice","_ref255","_ref256","prevTokenPrice","blocksMultiplier","curveAPR","_context152","getCurveTokenSupply","_callee153","_context153","getCurvePoolContract","_callee154","_args154","_context154","_callee155","_args155","_context155","_ref260","_callee156","_ref261","_ref262","_context156","_x239","_callee157","depositContractInfo","_context157","getCurveZapContract","_callee158","zapContractInfo","_context158","_callee159","poolContractInfo","_context159","getCurveSwapContract","_callee160","migrationContractInfo","_context160","getCurveIdleTokensAmounts","_callee162","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args162","_context162","_ref268","_callee161","coinIndex","curveIdleTokens","_context161","migrationParams","_x240","getCurveTokensAmounts","_callee164","useCoinIndex","_args164","_context164","_ref270","_callee163","_ref271","_ref272","idleTokenPrice","totalTokenSupply","_context163","_x241","getCurveAmounts","_ref273","_callee166","_args166","_context166","_ref274","_callee165","_context165","_x244","_x242","_x243","getCurveTokenAmount","_ref275","_callee167","_args167","_context167","_x245","getCurveSlippage","_ref276","_callee168","uneven_amounts","depositContract","_ref277","_ref278","Sv","_args168","_context168","_x246","_x247","_ref279","_callee169","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref280","_ref281","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args169","_context169","IAaveIncentivesController","emissionPerSecond","_x248","_callee171","_args171","_context171","_ref283","_callee170","_ref284","_ref285","_context170","_x249","getWMaticApr","_ref286","_callee172","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args172","_context172","_x250","_x251","getStkAaveApr","_ref287","_callee173","aaveConversionRate","stkAaveAPR","stkAaveValue","_args173","_context173","_x252","_x253","getCompAPR","_ref288","_callee174","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args174","_context174","_x254","_x255","getCompSpeed","_ref289","_callee175","cTokenAddress","compSpeed","_context175","_x256","_ref290","_callee176","cTokenInfo","compoundAllocationPerc","_ref291","_ref292","cTokenTotalSupply","compoundPoolShare","_args176","_context176","_x257","_callee178","_args178","_context178","_ref294","_callee177","_ref295","_ref296","_context177","_x258","_callee180","_args180","_context180","_ref298","_callee179","_ref299","_ref300","compApr","_context179","_x259","getTokensCsv","_callee183","csv","_context183","prototype","sum","pv","cv","avg","_ref302","_callee182","_context182","_ref303","_callee181","rates","header","rows","aprAvg","scoreAvg","lastRow","_context181","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x261","_x260","_callee185","convertToken","_args185","_context185","_ref305","_callee184","compTokenBalance","_context184","_x262","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref306","_callee187","govTokensUserDistribution","_args187","_context187","_ref307","_callee186","_context186","_x264","_x263","getGovTokensDistributionSpeed","_ref308","_callee189","govTokensDistribution","_args189","_context189","_ref309","_callee188","govSpeed","_context188","_x266","_x265","getGovTokensAprs","_ref310","_callee191","govTokensAprs","_args191","_context191","_ref311","_callee190","_ref312","_ref313","_ref314","_ref315","cTokenConfig","_context190","aprTooltipMode","_x269","_x267","_x268","_callee193","_args193","_context193","_ref317","_callee192","govTokenBalance","fromTokenConfig","_context192","_x270","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee194","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args194","_context194","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref319","_callee196","govTokensAmounts","_context196","getGovTokensUserAmounts","_ref320","_callee195","govTokenIndex","govTokenAddress","_context195","getGovTokenAddessByIndex","_x273","_x274","_x271","_x272","_ref321","_callee197","_context197","_x275","_x276","_ref322","_callee198","_context198","_x277","_x278","_callee201","govTokenConfigForced","_args201","_context201","_ref324","_callee200","_context200","_ref325","_callee199","_context199","_x280","_x281","_x279","getTokenFees","_callee202","_args202","_context202","_callee203","_ref328","_ref329","feePercentage","gain","fees","_args203","_context203","_ref330","_callee204","_args204","_context204","_x282","getTotalTVL","_callee205","tokensTVL","_context205","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee209","_context209","_ref333","_callee208","_context208","_ref334","_callee207","oldTokenTVL","idleTokenName","_ref335","_ref336","oldTokenConfig","_ref340","_ref341","oldTokenPrice","oldTotalSupply","_context207","showAUM","_ref337","_callee206","_ref338","_ref339","govTokenConversionRate","govTokenBalanceConverted","_context206","_x285","oldProtocols","oldProtocol","protocolPos","_x284","_x283","getSubstackLatestFeed","_callee210","idleSubstackFeed","latestFeed","_context210","getTrancheAggregatedStats","_callee214","totalAUM","_args214","_context214","_ref344","_callee213","_context213","_ref345","_callee212","_context212","_ref346","_callee211","_ref347","_ref348","_context211","_x288","_x287","_x286","getAggregatedStats","_callee216","allNetworks","networkIds","tvls","_args216","_context216","_ref350","_callee215","_context215","_x289","getAggregatedStats_chain","_callee221","avgAPR","_args221","_context221","availableStrategiesNetworks","_ref352","_callee220","_context220","_ref353","_callee219","_context219","_ref354","_callee218","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context218","_ref355","_callee217","_ref356","_ref357","_context217","_x293","_x292","_x291","_x290","getTokenApy","_ref358","_callee222","_context222","_x294","getTokensToMigrate","_callee225","_args225","_context225","_ref360","_callee224","_context224","_ref361","_callee223","_ref362","_context223","_x296","_x295","getProtocolsTokensBalances","_callee227","tokenBalances","minTokenBalance","protocolsTokens","_args227","_context227","_ref364","_callee226","_context226","_x297","getTokenConversionRateField","_ref365","_callee228","_args228","_context228","_x298","_x299","_ref366","_callee229","_args229","_context229","_x300","_x301","_x302","getAvgAPYStats","_ref367","_callee230","apiResults","_args230","_context230","_x303","_x304","_ref368","_callee231","statsTokenConfig","ToTokenConfig","_args231","_context231","addressForPriceFrom","_x305","_ref369","_callee232","count","_conversionRate","_args232","_context232","_x306","_x307","getTokenScore","_ref370","_callee233","_ref371","_ref372","tokenScore","_context233","protocolScore","getTokenScoreApi","_x308","_x309","_ref373","_callee234","scores","_context234","_x310","_x311","_ref374","_callee235","idleGovTokenShowAPR","idleAPR","_args235","_context235","_x312","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","messages","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","MUSD3CRV","PBTCCRV","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","trancheTokenConfig","claimableRewards","loadGauges","veTokenBalanceUsed","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","userBoostedShare","_this7","userDistributionRate","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","votingWeight","depositedAmount","withdrawnAmount","_this8","votingPowerPercentage","gaugeAddress","_this9","setSelectedAction","setStakeAction","setClaimToken","Button","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","TrancheField","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","borderTop","ImageButton","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","param3","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","underlyingTokenConfig","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","timeout","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","LiquidityGauge","multiRewards","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args8","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","HeadingComponent","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"sghBAIMA,mLAEF,IAAMC,EAAYC,OAAOC,OACvB,CACEC,GAAI,EACJC,MAAO,OACPC,GAAI,CAAC,OAAQ,IAEfC,KAAKC,MAAMP,WAGb,OACEQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,UAAWA,EACXY,eAAe,EACfC,SAAUP,KAAKC,MAAMM,SACrBC,WAAYR,KAAKC,MAAMO,WACvBC,YAAaT,KAAKC,MAAMQ,YACxBC,gBAAiB,QAEjBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,GAAIZ,KAAKC,MAAMY,OAASb,KAAKC,MAAMY,OAAS,EAC5CC,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgBjB,KAAKC,MAAMiB,MAAQlB,KAAKC,MAAMiB,MAAQ,UAErDlB,KAAKC,MAAMkB,MAAQnB,KAAKC,MAAMmB,YAC3BlB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEU,GAAIrB,KAAKC,MAAMqB,UAAY,EAAI,EAC/BC,EAAGvB,KAAKC,MAAMqB,UAAY,EAAI,CAAC,MAAO,OACtCE,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBACEV,KAAKC,MAAMmB,YACPpB,KAAKC,MAAMmB,YACXpB,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAGpD3B,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEsB,MAAO,SACPY,IAAK9B,KAAKC,MAAMkB,MAChBY,OAAQ/B,KAAKC,MAAM+B,SAAW,QAAU,QACxClC,MAAOE,KAAKC,MAAM+B,SAAW,QAAU,SACnChC,KAAKC,MAAMgC,cAIrB/B,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEsB,MAAO,SACPY,IAAK9B,KAAKC,MAAMkB,MAChBY,OAAQ/B,KAAKC,MAAM+B,SAAW,QAAU,QACxClC,MAAOE,KAAKC,MAAM+B,SAAW,QAAU,SACnChC,KAAKC,MAAMgC,aAEfjC,KAAKC,MAAMiC,YACbhC,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEsB,MAAO,SACPiB,KAAMnC,KAAKC,MAAMmC,KACjBC,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCM,MAAOtC,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAY,UACjDvC,KAAKC,MAAMuC,YAGjBtC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEU,GAAIrB,KAAKC,MAAMqB,UAAY,EAAI,EAC/BC,EAAGvB,KAAKC,MAAMqB,UAAY,EAAI,CAAC,MAAO,OACtCE,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBACEV,KAAKC,MAAMmB,YACPpB,KAAKC,MAAMmB,YACXpB,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAGpD3B,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEsB,MAAO,SACPiB,KAAMnC,KAAKC,MAAMmC,KACjBC,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCM,MAAOtC,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAY,UACjDvC,KAAKC,MAAMuC,aAIrBtC,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CAAM6C,WAAY,EAAGC,SAAU,CAAC,EAAG,IAAQ1C,KAAKC,MAAM0C,WACnD3C,KAAKC,MAAM2C,eAvFKC,aA+FdpD,sIC/FTqD,6MAGJC,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,+IAGE,IAAAC,EAAAnD,KACHoD,EAAkB,IAChBC,EAAsC,qBAAtBrD,KAAKC,MAAMoD,QAA2BC,MAAMtD,KAAKC,MAAMoD,UAAiC,IAAtBrD,KAAKC,MAAMoD,QAA0C,OAAtBrD,KAAKC,MAAMoD,OAAsC,KAApBrD,KAAKC,MAAMoD,OAE/J,GAAIA,EACF,OAAQrD,KAAKC,MAAMsD,MACjB,IAAK,QACHH,EAAkBpD,KAAK+C,cAAcS,YAAYH,EAAOrD,KAAKC,MAAMwD,WACrE,MACA,QACEL,EAAkBpD,KAAK+C,cAAcW,iBAAiBL,EAAOrD,KAAKC,MAAM0D,SAAS3D,KAAKC,MAAM2D,aAAa5D,KAAKC,MAAM4D,mBAIxHT,EAAkB,IAGpB,IAAMU,EAAY,CAChBhE,MAAM,EACNiB,WAAW,SACXC,cAAc,MACdC,eAAe,UAIbjB,KAAKC,MAAM6D,WAAanE,OAAOoE,KAAK/D,KAAKC,MAAM6D,WAAWE,QAC5DrE,OAAOoE,KAAK/D,KAAKC,MAAM6D,WAAWG,QAAQ,SAAA1C,GACxCuC,EAAUvC,GAAK4B,EAAKlD,MAAM6D,UAAUvC,KAIxC,IAAM2C,EAAWlE,KAAKC,MAAMkE,MAA4B,MAApBf,EAC9BgB,EAAUpE,KAAKC,MAAMmE,QAAUpE,KAAKC,MAAMmE,QAAU,QAE1D,OACEC,EAAAlE,EAAAC,cAACkE,EAAA,EACKR,EAGU,SAAZM,GAAsBF,GACpBG,EAAAlE,EAAAC,cAACkE,EAAA,EAAStE,KAAKC,MAAMsE,UAAYvE,KAAKC,MAAMkE,MAEhDE,EAAAlE,EAAAC,cAACkE,EAAA,EAAStE,KAAKC,MAAQmD,GAET,UAAZgB,GAAuBF,GACrBG,EAAAlE,EAAAC,cAACkE,EAAA,EAAStE,KAAKC,MAAMsE,UAAYvE,KAAKC,MAAMkE,cA9D9BtB,aAqEXC,4BCxEf0B,EAAAC,QAAA,CAAkBC,aAAA,qCAAAC,OAAA,km3lJCAlBH,EAAAC,QAAA,CAAkBG,gBAAA,sCAAAC,eAAA,qCAAAC,YAAA,kCAAAC,KAAA,2BAAAC,cAAA,iJCGZC,mLACK,IAAAC,EAAAlF,KAEDmF,IAAmBnF,KAAKC,MAAMkF,eAEpC,OACEjF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEb,MAAO,EACPsF,GAAI,aACJrE,WAAY,UAGVf,KAAKC,MAAMQ,aACVP,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACEC,YAAa,CACXC,OAAO,EACPzF,MAAM,OACNiC,OAAO,QAETyD,SAAU,QACVC,SAAU,YACVhF,YAAaT,KAAKC,MAAMQ,cAI3BT,KAAKC,MAAM2C,MAAQ5C,KAAKC,MAAM2C,KAAKoB,OAAO,GACzC9D,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE+E,GAAI,CAAC,EAAE,GACPhD,SAAU,CAAC,EAAE,GACbD,WAAY,EACZH,MAAO,WACPqD,WAAY,YACZC,QAAS5F,KAAKC,MAAMQ,aAEpBT,KAAKC,MAAM2C,QAIZ5C,KAAKC,MAAM+B,UAAYmD,IAAmBnF,KAAKC,MAAM4F,MAAQ7F,KAAKC,MAAM4F,KAAK7B,OAAO,GACpFhE,KAAKC,MAAM4F,KAAKC,IAAI,SAACD,EAAKE,GACxB,IAAMC,EAAOd,EAAKjF,MAAMgG,UAAYf,EAAKjF,MAAMgG,SAASF,IAAkB,KACpElD,EAAYmD,EAAOE,IAAOC,IAChC,OACEjG,EAAAC,EAAAC,cAACyC,EAAD,CACEuD,GAAI,CAAC,EAAE,GACPV,GAAI,CAAC,EAAE,GACPjD,WAAY,EACZC,SAAU,CAAC,EAAE,GACbiD,WAAY,YACZU,MAASnB,EAAKjF,MAAM+B,SAMhB,KAN2B,CAC7BsE,SAAS,MACTC,SAAU,SACVC,WAAY,SACZC,aAAc,WACdC,WAAU,aAAAC,OAAezB,EAAKjF,MAAMwB,MAAMC,OAAOkF,UAEnDC,IAAG,mBAAAF,OAAqBZ,GACxBzD,MAAO0D,EAAO,WAAa,YAC3BJ,QAASI,EAAO,SAAAc,GAAC,OAAI5B,EAAKjF,MAAM8G,YAAYf,IAAQ,MAEnDH,aA5DMhD,aAsEVoC,gHCtET+B,mLAEF,IAAM1B,EAAc3F,OAAOC,OAAO,CAChC2B,EAAE,EACFgE,OAAO,EACPzF,MAAM,OACNiC,OAAO,OACPP,aAAa,MACbyF,UAAU,eACVC,SAASlH,KAAKC,MAAMiH,UACpBlH,KAAKC,MAAMqF,aAIb,OAFAA,EAAY6B,SAAW7B,EAAYxF,MAGhCsH,EAAAjH,EAAAC,cAACiH,EAAA,EAAD,CACE/B,YAAaA,EACb7E,YAAaT,KAAKC,MAAMQ,aAExB2G,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACEhF,MAAO,YACPH,KAAMnC,KAAKC,MAAMwF,SACjBpD,KAAOrC,KAAKC,MAAMuF,SAAWxF,KAAKC,MAAMuF,SAAW,kBAtBhC3C,aA6BfmE,uIC7BTO,6MAEJC,MAAQ,CACN5E,KAAK,QAIPG,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,oQAIL1H,KAAKyH,oBAAqB,uLAGHE,EAAUC,mEACjC5H,KAAKkD,YACeyE,EAAUE,OAAS7H,KAAKC,MAAM4H,MAEhD7H,KAAK0H,6LAIUI,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,iQAIDE,GAA+C,IAA9BjI,KAAKC,MAAMgI,eAC9BrF,EAAO5C,KAAK+C,cAAcmF,YAAYlI,KAAKC,MAAM4H,OACrCI,kCAAuBjI,KAAK+C,cAAcoF,WAAWnI,KAAKC,MAAM4H,oDAAQ,aAAlFO,UAEJxF,EAAOwF,GAETpI,KAAKqI,aAAa,CAChBzF,6IAKF,IAAM0F,EAAUC,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CAAQnG,KAAK,SAC7B,OAAOrC,KAAKwH,MAAM5E,KAAO2F,EAAApI,EAAAC,cAACoI,EAAA,EAAD7I,OAAAC,OAAA,CAAM6I,QAAS,UAAczI,KAAKC,OAAQD,KAAKwH,MAAM5E,MAAe0F,SAxDzEzF,aA4DT0E,+GC5DTmB,mLAGF,IAAMhJ,EAAYC,OAAOC,OAAO,CAC9B2B,EAAE,GACFvB,KAAKC,MAAMP,WACb,OACEQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,UAAWA,EACXa,SAAUP,KAAKC,MAAMM,SACrBoI,UAAW3I,KAAKC,MAAM0I,UACtBrI,cAAeN,KAAKC,MAAMK,eAE1BJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEI,WAAY,SACZC,cAAe,UAEfd,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEyC,KAAM,QACNC,MAAO,WACPH,KAAMnC,KAAKC,MAAMmC,KAAOpC,KAAKC,MAAMmC,KAAO,eACtCpC,KAAKC,MAAMuC,YAGfxC,KAAKC,MAAM2C,MACT1C,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEgJ,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,SACXC,wBAAyB,CACvBC,OAAO/I,KAAKC,MAAM2C,OAEhB5C,KAAKC,MAAM0C,YAInB3C,KAAKC,MAAM+I,kBArCDnG,aA6CP6F,0KCzCTO,6MACJzB,MAAQ,CACN0B,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,QAI3BxG,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,6JAILlD,KAAKyH,oBAAqB,sJAI1BzH,KAAK0H,gMAGkBC,EAAUC,8EACjC5H,KAAKkD,YAEgByE,EAAU6B,gBAAkBxJ,KAAKC,MAAMuJ,cAE1DxJ,KAAKqI,aAAa,CAChBa,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,MACzB,WACApG,EAAKuE,aAEEC,EAAU3F,WAAahC,KAAKC,MAAM+B,UAC3ChC,KAAK0H,6LAIUI,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,2RAQG/H,KAAK+C,cAAc0G,mBAAmBzJ,KAAKC,MAAMyJ,6BAHzDL,oBACAC,yBACAC,6BAGIJ,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChBvI,OAAO,SAAAwI,GAAC,OAAIA,EAAE5H,OACd6H,aAAa,SAACC,EAAMtD,GAClBuD,EAAKhC,aAAa,CAChBe,cAAcgB,KAGlBE,aAAa,SAACF,EAAMtD,GAClBuD,EAAKhC,aAAa,CAChBe,cAAc,QAGlBmB,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzBC,YAAa,SAAAT,GACX,OAAO,MAETzI,MAAM,CACJmJ,QAAS,CACPC,UAAW7K,KAAKC,MAAM6K,OAAS,CAC7BC,WAAY/K,KAAKC,MAAMwB,MAAMC,OAAOsJ,QAClC,CACFvC,QAAS,SAGbwC,OAAO,CACLrI,KAAK,CACHH,WAAW,IACXC,SAAS1C,KAAKC,MAAM+B,SAAW,GAAK,GACpCkJ,WAAYlL,KAAKC,MAAMwB,MAAM0J,MAAMC,YAGvCC,QAAQ,CACNzI,KAAK,CACHF,SAAS,GACTD,WAAW,IACXyI,WAAYlL,KAAKC,MAAMwB,MAAM0J,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqB/L,KAAKC,MAAM6K,OAChCkB,sBAAsB,CAAEC,KAAM,SAC9BC,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,MACtDtL,OAAQb,KAAKC,MAAM6K,OAAS,CAACsB,IAAI,EAAEC,MAAM,GAAGC,OAAO,EAAEC,KAAK,GAAMvM,KAAKC,MAAM+B,SAAW,CAAEoK,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,KAGvKrD,EAAY,GAElBlJ,KAAKC,MAAMyJ,YAAY8C,UAAUvI,QAAQ,SAACwI,EAAaC,GACrD,IAAMC,EAAeF,EAAatK,KAC5ByK,EAAeH,EAAaI,QAAQC,cAC1C,GAAIvD,EAAyBqD,GAAc,CACzC,IAAMG,EAA+BC,WAAWzD,EAAyBqD,GAAcK,MAAM,KAAKC,QAAQ,IAC1GhE,EAAUiE,KAAK,CACb/H,GAAGwH,EACHzK,KAAKwK,EACLjC,MAAMqC,EACNzK,MAAM,OAAO8K,IAAcC,MAAMb,UAAUG,GAAcrK,MAAMgL,IAAIC,KAAK,KAAK,IAC7EC,MAAOJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQnD,EAAKtH,cAAc0K,WAAWd,QAKnJ3M,KAAKqI,aAAa,CAChBa,YACAC,aACAE,kBACAC,uBACAC,iKAMF,IAAMH,IAA6C,OAA7BpJ,KAAKwH,MAAM4B,gBAA0BpJ,KAAKwH,MAAM8B,qBAAqBtJ,KAAKwH,MAAM4B,cAAchE,MAAMpF,KAAKwH,MAAM8B,qBAAqBtJ,KAAKwH,MAAM4B,cAAchE,IAC7KsI,EAA4C,OAA7B1N,KAAKwH,MAAM4B,cAA0BgE,IAAcC,MAAMb,UAAUxM,KAAKwH,MAAM4B,cAAcjH,OAASiL,IAAcC,MAAMb,UAAUxM,KAAKwH,MAAM4B,cAAcjH,MAAMC,KAAOgL,IAAcC,MAAMb,UAAUxM,KAAKwH,MAAM4B,cAAcjH,MAAMC,KAAjM,GAAAuE,OAA2M3G,KAAKwH,MAAM4B,cAAcjH,KAApO,QAAkP,KAE5S,OACEkC,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7N,MAAO,EACP8N,SAAU,YAGR5N,KAAKwH,MAAM6B,kBAAoBrJ,KAAKC,MAAM6K,QACxCzG,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACEE,OAAQ,EACRzB,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACb1D,UAAW,SACX9H,WAAY,SACZ6M,SAAU,WACV9N,MAAO,CAAC,MAAM,OACdiC,OAAQ,CAAC,MAAM,OACff,cAAe,SACfC,eAAgB,UAGdmI,EACE/E,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7N,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBoD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACEG,GAAI,EACJhO,MAAO,CAAC,QAAQ,OAChBiC,OAAQ,CAAC,QAAQ,OACjBD,IAAG,qBAAA6E,OAAuB+G,KAE5BrJ,EAAAlE,EAAAC,cAAC2N,EAAA,EAAD,CACErL,SAAU,CAAC,EAAE,GACbiB,SAAU,EACVlB,WAAY,EACZmB,aAAc,EACdP,OAAQ+F,IAEV/E,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACEjL,SAAU,CAAC,EAAE,GACbD,WAAY,EACZH,MAAO,aAHT,YAKYtC,KAAKwH,MAAM4B,cAAcoE,QAIvCnJ,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7N,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBoD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACEG,GAAI,EACJhO,MAAO,CAAC,QAAQ,OAChBiC,OAAQ,CAAC,QAAQ,OACjBD,IAAG,0BAELuC,EAAAlE,EAAAC,cAAC2N,EAAA,EAAD,CACExJ,UAAW,CACTmB,GAAG,EACHjD,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdiB,SAAU,EACVlB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbkB,aAAc,EACdP,OAAQrD,KAAKwH,MAAM6B,kBAErBhF,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACElL,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAHT,iBAYZ+B,EAAAlE,EAAAC,cAAC4N,EAAA,EAADrO,OAAAC,OAAA,CACE2D,KAAM0K,IACNC,YAAY,GACRlO,KAAKC,MACLD,KAAKwH,MAAM2B,WAJjB,CAKEiB,KAAMpK,KAAKwH,MAAM0B,qBA3PGrG,aAkQfoG,gHCtQTkF,6MACJ3G,MAAQ,CACN4G,iBAAiB,+EAENtH,GACXA,EAAEuH,iBACFrO,KAAKgI,SAAS,SAAAR,GAAK,OAAA7H,OAAA2O,EAAA,EAAA3O,CAAA,GAAS6H,EAAT,CAAgB4G,iBAAkB5G,EAAM4G,qDAG3D,OACEhH,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CACExD,GAAI,CAAC,EAAE,GACPjB,GAAI,CAAC,EAAE,GACPE,GAAI,CAAC,EAAE,GACPiB,cAAe,SACfD,WAAY,WACZE,eAAgB,SAChBP,gBAAiB,SACjBc,aAAexB,KAAKC,MAAMsO,SAAW,OAAS,OAC9CC,UAAW,GAEXpH,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CAAMtD,cAAe,MAAOD,WAAY,SAAUjB,MAAO,EAAG8F,QAAS5F,KAAKC,MAAMQ,YAAa4F,MAAO,CAACoI,OAAQ,YAC3GrH,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CAAKxE,MAAO,IACVsH,EAAAjH,EAAAC,cAACkE,EAAA,EAAQoK,GAAT,CACE5N,GAAI,EACJ2B,WAAY,EACZC,SAAU,CAAC,EAAE,GACbwI,WAAY,YACZ5I,MAAOtC,KAAKC,MAAMsO,SAAW,OAAS,aAErCvO,KAAKC,MAAM0O,WAGhBvH,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAO,GACPmB,eAAgB,YAEhBmG,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CACEjC,KAAM,QACNC,MAAOtC,KAAKC,MAAMsO,SAAW,OAAS,YACtCpM,KAAMnC,KAAKC,MAAMsO,SAAW,kBAAoB,wBAItDnH,EAAAjH,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAO,GAENE,KAAKC,MAAMsO,UACVnH,EAAAjH,EAAAC,cAACkE,EAAA,EAAK/C,EAAN,CACEsH,UAAW,UACXnG,SAAU,CAAC,EAAE,GACboG,wBAAyB,CAAEC,OAAQ/I,KAAKC,MAAM2O,mBAnDnC/L,aA6DVsL,oKCzDTU,6MACJrH,MAAQ,CACNsH,UAAU,KACV5F,UAAU,KACVC,WAAW,KACX4F,WAAW,KACXC,YAAY,QAIdjM,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,YACLlD,KAAKiP,qMAGkBtH,EAAWC,oFAClC5H,KAAKkD,YAECgM,EAA4BvH,EAAUwH,qBAAuBnP,KAAKC,MAAMkP,oBACzDC,KAAKC,UAAU1H,EAAU2H,iBAAmBF,KAAKC,UAAUrP,KAAKC,MAAMqP,gBACvEJ,IAClBlP,KAAKgI,SAAS,CACZkB,UAAU,MACV,WACA/F,EAAKoM,sBAIHC,EAAgB7H,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDyN,EAAmB9H,EAAU+H,YAAc1P,KAAKC,MAAMyP,WACxDF,GAAiBC,IACnBzP,KAAKiP,yVAMHK,EAAgBtP,KAAKC,MAAMqP,gBACRA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAK/D,KAAKC,MAAM0P,2BAGd3P,KAAK+C,cAAc6M,gBAAgB5P,KAAKC,MAAM4P,QAAQ,EAAE,SAASP,iBAAtFQ,SAIA5G,EAAY,GACd6G,EAAgB,GAChBC,EAAmB,eAEjBhQ,KAAK+C,cAAckN,aAAaX,EAAhC,eAAAY,EAAAvQ,OAAAwQ,EAAA,EAAAxQ,CAAAyQ,EAAAjQ,EAAAkQ,KAA8C,SAAAC,EAAO9G,GAAP,IAAA+G,EAAAC,EAAA,OAAAJ,EAAAjQ,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElDb,EAAcvG,GAAiB,IAEzB+G,EAAc5Q,OAAOkR,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,MACxD+G,EAAYvM,SAEzBwM,EAAanG,EAAKtH,cAAckO,MAAM,GAE1CV,EAAYtM,QAAQ,SAAC8M,EAAGhL,GAGtB,IAAKgL,EAAGlJ,OAASkJ,EAAGG,QAAWH,EAAGI,QAAwB,YAAdJ,EAAGI,OAC7C,OAAO,EAGTnB,EAAmBA,EAAmBoB,KAAKC,IAAIrB,EAAiBsB,SAASP,EAAGQ,YAAcD,SAASP,EAAGQ,WAEtG,IAAMC,EAAcnH,EAAKtH,cAAckO,MAAMF,EAAGS,aAEhD,OAAQT,EAAGG,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHV,EAAaA,EAAWiB,KAAKD,GAC/B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHhB,EAAaA,EAAWkB,MAAMF,GAO9BhB,EAAWmB,GAAG,KAChBnB,EAAanG,EAAKtH,cAAckO,MAAM,IAGxC,IAAMW,EAAUpB,EACVU,EAASH,EAAGG,OACZK,EAAYD,SAASP,EAAGQ,WACxBM,EAAaxH,EAAKtH,cAAckO,MAAMF,EAAGc,YACzCC,EAAazH,EAAKtH,cAAckO,MAAMF,EAAGe,YAI1CD,EAAWvO,SAAYuO,EAAWvO,SACrCyM,EAAcvG,GAAe2D,KAAK,CAChC+D,SACAU,UACAL,YACAM,aACAC,aACAN,mBA3D0C,wBAAAd,EAAAqB,SAAAzB,EAAAtQ,SAA9C,gBAAAgS,GAAA,OAAA9B,EAAA+B,MAAAjS,KAAAkS,YAAA,YAqEFpD,EAAY,KACVqD,EAAcnS,KAAK+C,cAAcqP,YAAY,IAAIC,WAE/CrS,KAAKC,MAAMkP,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,4CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAY,yCAIV0D,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB1B,UAAS,IAAIe,MAAOY,UAAU,KAAM,MAEpDC,EAAa,GACbC,EAAyC,SAAhCnT,KAAKC,MAAMmT,2BAEpBpT,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAKgM,GAA5C,eAAAsD,EAAA1T,OAAAwQ,EAAA,EAAAxQ,CAAAyQ,EAAAjQ,EAAAkQ,KAA2D,SAAAiD,EAAOtC,GAAP,IAAAuC,EAAA,OAAAnD,EAAAjQ,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cACzD2C,EAAelJ,EAAKtH,cAAc0Q,yBAAyBzC,EAAM3G,EAAKpK,MAAMmT,kBADnBI,EAAA5C,KAAA,EAErCvG,EAAKtH,cAAc2Q,gBAAgBH,EAAaJ,EAAOnD,EAAiB,MAAK,EAAM,MAF9C,OAE/DkD,EAAWlC,GAFoDwC,EAAAG,KAAA,wBAAAH,EAAAzB,SAAAuB,EAAAtT,SAA3D,gBAAA4T,GAAA,OAAAP,EAAApB,MAAAjS,KAAAkS,YAAA,YAON,IAFM2B,EAAmB,iBAIvB,IAAMC,EAAgB,GAChBC,EAAiB,GACvBxC,EAAYH,KAAKC,IAAI2B,EAAczB,GACnCsB,EAAoBxI,EAAKtH,cAAckO,MAAM,GAI7CtR,OAAOoE,KAAKgM,GAAe9L,QAAQ,SAAA+M,GAEjC,IAAIgD,EAAgB,KACdC,EAA0BtU,OAAOkR,OAAOqC,EAAWlC,IAAQkD,MAC3DC,EAAoBjB,EAAWlC,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAGqD,WAAW1B,GAAiB3B,EAAGqD,WAAW7C,IACnG4C,GAAqBA,EAAkBnQ,SACzCgQ,EAAgBG,EAAkBD,OAG/BL,EAAiB7C,KACpB6C,EAAiB7C,GAAS3G,EAAKtH,cAAckO,MAAM,IAGrD,IACMoD,EADchK,EAAKpK,MAAM0P,gBAAgBqB,GACbrN,SAC9B2Q,EAAmBvE,EAAciB,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAGQ,WAAWA,KAAemB,GAAiB3B,EAAGQ,UAAUmB,KAErH,GAAK4B,EAAiBtQ,OA+BpBsQ,EAAiBrQ,QAAQ,SAAA8M,GACvB,OAAQA,EAAGG,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH2C,EAAiB7C,GAAS6C,EAAiB7C,GAAOS,KAAKV,EAAGe,YAC5D,MACA,QACE+B,EAAiB7C,GAAS6C,EAAiB7C,GAAOU,MAAMX,EAAGe,YACvD+B,EAAiB7C,GAAOW,GAAG,KAC7BkC,EAAiB7C,GAAS3G,EAAKtH,cAAckO,MAAM,YA1C3D,GAAIwB,GAAgBA,EAAazB,GAAO,CACtCsD,EAAmB7B,EAAazB,GAChC,IAAMuD,EAAiB5U,OAAOC,OAAO,GAAG0U,GAAkBJ,MAI1D,GAHuBlH,WAAWuH,EAAe3C,SAG9B,GACjB,GAAIL,EAAUvB,GAAoBgE,EAAc,CAC9C,IAAMlC,EAAa+B,EAAiB7C,GAC9BwD,EAAYnK,EAAKtH,cAAc0R,iBAAiBT,EAAcQ,UAAUH,GAC1EK,EAAa5C,EAAW7E,MAAMuH,GAGlCD,EAAe3C,QAAU8C,EACzBH,EAAe1C,WAAa2C,EAC5BF,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClB1C,QAAQvH,EAAKtH,cAAckO,MAAM,GACjCY,WAAWxH,EAAKtH,cAAckO,MAAM,UAIxCqD,EAAmB,CAAC,CAClB1C,QAAQvH,EAAKtH,cAAckO,MAAM,GACjCY,WAAWxH,EAAKtH,cAAckO,MAAM,KAuB1C,IAAM0D,EAAShV,OAAOC,OAAO,GAAG0U,GAAkBJ,MAE9CU,EAAgBf,EAAiB7C,GAAO/D,MAAM0H,EAAO9C,YAEzD,GAAI+C,EAAcC,GAAG,GAAG,CAEtB,IAAIC,EAAyB,KACvBC,EAAsB1K,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,wBACrG,IAAK5K,EAAKpK,MAAMiV,YAAcH,EAAoB,CAChD,IAAMI,EAAiBnB,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KACxOI,IACFL,EAAyBzK,EAAKtH,cAAc0R,iBAAiBU,EAAe,KACjDN,GAAG,KAC5BD,EAAgBA,EAAc3H,MAAM6H,IAK1Cf,EAAe/C,GAAS4D,EACxB/B,EAAoBA,EAAkBpB,KAAKmD,QAE3Cb,EAAe/C,GAAS3G,EAAKtH,cAAckO,MAAM,GAGnD6C,EAAc9C,GAASsD,IAGzB,IAAIc,EAAa/K,EAAKtH,cAAcqP,YAAsB,IAAVb,GAEhD,GAAkB,OAAdzC,GAAuBsG,EAAWC,cAAcvG,IAAcsG,EAAWE,eAAe,IAAIjD,KAAO,OAAQ,CAO7G,IAAMkD,EAAgBH,EAAWI,OAAO,oBAGxChD,EAAK4C,EAAWI,OAAO,eAAiB,EAExC3C,EAAoB7F,WAAWA,WAAW6F,EAAkB3F,QAAQ,KAEpE6F,EAAsBwC,GAAiBxB,EACvCjB,EAAuByC,GAAiB1C,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBzB,KAAKC,IAAIsB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBzB,KAAKqE,IAAI7C,EAAcC,GAGtFH,EAAgBnB,EAChBkB,EAAeqB,OAjIRvC,EAAUvB,EAAiBuB,GAAWyB,EAAczB,GAAWvR,KAAKC,MAAMyV,iBAAiBC,EAA3FpE,GA6LT,IAzDMqE,EAAqBjW,OAAOoE,KAAK+O,GAAwBhN,IAAI,SAAA+P,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAEjD,EAAuB+C,GACzBG,SAASjD,EAAsB8C,MAG7BI,EAAY,EAChBL,EAAmB3R,QAAS,SAACiS,EAAKnQ,GAChC,IAAMoQ,EAAU/E,KAAKgF,MAAMH,EAAUL,EAAmB5R,OAAO,KAC/D4R,EAAmB7P,GAAOoQ,QAAUA,EACpCF,MA0BIf,EAAalV,KAAKC,MAAMiV,WAAalV,KAAKC,MAAMiV,WAAWD,cAAgB,MAGjF/L,EAAUiE,KAAK,CACb/H,GAAG8P,EACH5S,MAAO,OAAQtC,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAASE,EAAWD,cAAc,QAAQ,QAAQ1H,KAAK,KAAK,IACvHnD,KAAKwL,IAGHS,EAAkB,EAClBzD,EAAcD,EAAc,IAC9B0D,EAAkB,GAGhBzD,IAAkBD,IACpBA,EAAgBvB,KAAKqE,IAAI,EAAE7C,EAAc,IAGtB,EACf0D,GAAa1D,EAAcD,GADZ,EAEf4D,EAAc,GACX7J,EAAE,EAAEA,GAHQ,EAGQA,IACrB8J,EAAaxJ,WAAWA,WAAW2F,EAAejG,EAAE4J,GAAYpJ,QAAQ,IAC9EqJ,EAAYpJ,KAAKqJ,GAGfC,EAAkB,EACM,GACtBC,EAAY/W,OAAOkR,OAAO2B,GAAMxO,OAChC2S,EAAgBvF,KAAKqE,IAAI,EAAErE,KAAKwF,KAAKF,EAFf,KAItBvN,EAAa,CACjB0N,OAAO,CACLtT,KAAM,OACNiS,OAAQ,kBAEVsB,OAAO,CACLvT,KAAM,SACNwT,SAAS,EACT1F,IAAKsB,EACL8C,IAAK7C,GAEPoE,QAAQ,gBACRC,QAAQ,SAAAvM,GAAK,OAAIL,EAAKtH,cAAcS,YAAYkH,EAAM2L,IACtDa,WAAYlX,KAAKC,MAAM+B,SAAW,KAAO,CACvCmV,OAAQ,GACRC,SAAS,EACTC,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,WAAW,YACXC,eAAgB,SAChBjC,OAAQ,SAAC9K,GACP,GAAI+L,IAAoBE,IAAkB,EACxC,OAAOtM,EAAKtH,cAAcqP,YAAY1H,EAAM,oBAAoB8K,OAAO,YAI7Ee,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAU5X,KAAKC,MAAM+B,SAAW,KAAO,CACrCmV,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfC,WAAWjB,EACXkB,eAAgB,SAChBjC,OAAQ,SAAAhL,GAAC,OAAIH,EAAKtH,cAAcW,iBAAiB8G,EAAE,KAErDZ,SAAQ,EACRkO,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjB1W,OAAO,SAAAwI,GAAC,OAAIA,EAAE5H,OACd+V,mBAAmB,GACnBC,kBAAkB3F,EAClB4F,WAAW,CAAEtM,KAAM,QAASE,UAAW,IACvCqM,YAAqC,UAAzBxY,KAAKC,MAAMyP,UAAwB,GAAM,GACrDjO,MAAM,CACJgX,KAAM,CACJC,MAAO,CACL9V,KAAM,CACJF,SAAS,GACTD,WAAW,IACXkW,KAAK3Y,KAAKC,MAAMwB,MAAMC,OAAOyV,OAC7BjM,WAAWlL,KAAKC,MAAMwB,MAAM0J,MAAMC,aAIxCwN,KAAM,CACJC,KAAM,CACJC,OAAQ9Y,KAAKC,MAAMwB,MAAMC,OAAOqX,gBAAiBC,gBAAiB,SAaxEnY,OAAQb,KAAKC,MAAM+B,SAAW,CAAEoK,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrH0M,aAAa,SAACC,GAAc,IAEpBC,EADYD,EAAVE,MACYC,OAAO,GAC3B,OACEhV,EAAAlE,EAAAC,cAACkZ,EAAA,EAAD,CACEH,MAAOA,GAEP9U,EAAAlE,EAAAC,cAACmZ,EAAA,EAAD,CACEjX,MAAO6W,EAAM7W,MACbkL,MAAO2L,EAAMK,QACb9O,MAAK,KAAA/D,OAAOwS,EAAM/O,KAAKqP,cAGO,kBAAxBN,EAAM/O,KAAK4L,UAAyBrW,OAAOoE,KAAKoV,EAAM/O,KAAK4L,UAAUhS,OAAO,GAClFrE,OAAOoE,KAAKoV,EAAM/O,KAAK4L,UAAUlQ,IAAI,SAAAkL,GACnC,GAAIA,IAAUmI,EAAMK,QAClB,OAAO,KAET,IAAMlX,EAAQ+H,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,QAAQ,QACzFrD,EAAUuH,EAAM/O,KAAK4L,SAAShF,GAChC0I,EAAmBrP,EAAKtH,cAAcS,YAAYoO,EAAQ,GAC9D,OAAI5E,WAAW4E,IAAU,IAErBvN,EAAAlE,EAAAC,cAACmZ,EAAA,EAAD,CACE/L,MAAOwD,EACP1O,MAAOA,EACPuE,IAAG,OAAAF,OAASqK,GACZtG,MAAK,KAAA/D,OAAO+S,KAIX,UAQnB1Z,KAAKgI,SAAS,CACZkB,YACAC,mJAKF,OACE9E,EAAAlE,EAAAC,cAACuZ,EAAA,EAADha,OAAAC,OAAA,CACE2D,KAAMqW,IACN1L,YAAY,GACRlO,KAAKwH,MAAM2B,WAHjB,CAIEiB,KAAMpK,KAAKwH,MAAM0B,UACjB2Q,SAAU7Z,KAAKC,MAAM4Z,SACrB9X,OAAQ/B,KAAKC,MAAM+O,YACnB8K,eAAgB9Z,KAAKC,MAAM6Z,yBAxfLjX,aA8ffgM,26LC/fTkL,6MAEJvS,MAAQ,KAGRzE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,mKAK9CD,KAAKkD,qBACClD,KAAKga,sMAGYrS,EAAWC,+EAClC5H,KAAKkD,YAEC+W,EAAuBtS,EAAU6B,gBAAkBxJ,KAAKC,MAAMuJ,cAC9D0Q,EAAiB9K,KAAKC,UAAU1H,EAAUwS,WAAa/K,KAAKC,UAAUrP,KAAKC,MAAMka,SACjFC,EAAsBhL,KAAKC,UAAU1H,EAAU0S,gBAAkBjL,KAAKC,UAAUrP,KAAKC,MAAMoa,cAC3FC,EAAoB3S,EAAU4S,oBAAsBva,KAAKC,MAAMsa,mBAAqB5S,EAAU6S,uBAAyBxa,KAAKC,MAAMua,sBAEpIN,GAAkBD,GAAwBG,GAAuBE,IACnEta,KAAKga,uSAMDS,EAAmB,SAAAxa,GACvB,IAAMP,EAAYC,OAAOC,OACvBK,EAAMya,WACN,CACEnZ,EAAG,EACHzB,MAAO,EACPuG,MAAO,CAAEoI,OAAQ,YAElBtL,EAAKlD,MAAMya,WAAavX,EAAKlD,MAAMya,WAAa,IAMnD,OAHIza,EAAM0a,aACRjb,EAAU8O,UAAYrL,EAAKlD,MAAM2a,SAAW,EAAI,GAGhDvW,EAAAlE,EAAAC,cAACya,EAAA,EAAD,CACEnb,UAAWA,EACXY,eAAe6C,EAAKlD,MAAM6a,gBAE1BzW,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7N,MAAO,EACPiC,OAAQ,OACRhB,WAAY,SACZC,cAAe,OAEdf,EAAM+I,YAMT+R,EAA2B,SAAA9a,GAAK,OAAI,MAEpC+a,EAAa,SAAA/a,GACjB,IAAMP,EAAYC,OAAOC,OAAOK,EAAMya,WAAY,CAChD9R,GAAI,EACJiF,OAAQ,EACRW,UAAW,KACXZ,SAAU,WACVlN,gBAAiByC,EAAKlD,MAAMgb,WAAa9X,EAAKlD,MAAMgb,WAAa,WAEnE,OACE5W,EAAAlE,EAAAC,cAACya,EAAA,EAAD,CACEnb,UAAWA,GAEVO,EAAM+I,WAKPwR,EAAuBxa,KAAKC,MAAMua,qBAAuBxa,KAAKC,MAAMua,qBAAuB,SAAAva,GAC/F,OACEoE,EAAAlE,EAAAC,cAACuN,EAAA,EACK1N,EAAMya,WAEVrW,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7N,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfqD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACElL,WAAY,GAEXxC,EAAMib,YAAYxQ,MAAM8C,UAO7B+M,EAAoBva,KAAKC,MAAMsa,kBAAoBva,KAAKC,MAAMsa,kBAAoB,SAACta,GACvF,OACEoE,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7N,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfqD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,KACG1N,EAAMuN,SAMT2N,EAAuBnb,KAAKC,MAAMkb,qBAAuBnb,KAAKC,MAAMkb,qBAAuB,SAAClb,GAEhG,OAAKA,EAAMib,YAAYE,aAKrB/W,EAAAlE,EAAAC,cAACuN,EAAA,EAADhO,OAAAC,OAAA,GACMK,EADN,CAEEyC,SAAUS,EAAKlD,MAAMwB,MAAM4Z,UAAU,GACrC/Y,MAAOa,EAAKlD,MAAMwB,MAAMC,OAAO4Z,UAC/B7Y,WAAYU,EAAKlD,MAAMwB,MAAM8Z,YAAY,GACzCrQ,WAAY/H,EAAKlD,MAAMwB,MAAM0J,MAAMC,UACnC1K,gBAAiByC,EAAKlD,MAAMwB,MAAMC,OAAOsJ,OACzCwQ,UAAW,CAACC,IAAOC,YAAsC,SAAzBvY,EAAKlD,MAAMyP,UAAuB+L,IAAOE,KAAO,KAAO1b,EAAMib,YAAYP,WAAwC,KAA3Bc,IAAOG,sBAXxH,MAgBLC,EAAe,SAAC5b,GAEpB,IAAMka,EAAUla,EAAMib,YAAYf,QAC9B2B,EAAgB7b,EAAMib,aAAejb,EAAMib,YAAYxQ,OAASzK,EAAMib,YAAYxQ,MAAMA,MAQ5F,OALIoR,IAAuE,IAAtD3B,EAAQrU,IAAI,SAAAiW,GAAC,OAAIA,EAAErR,QAAOsR,QAAQF,IAAyB3Y,EAAKlD,MAAMoa,eACzFyB,EAAgB3Y,EAAKlD,MAAMoa,aAAa3P,OAItCoR,GAAiBA,IAAkB7b,EAAMyK,MACpC,KAMPrG,EAAAlE,EAAAC,cAACuN,EAAA,EAADhO,OAAAC,OAAA,CACEG,GAAI,EACJF,GAAI,EACJC,MAAO,GACHG,EAAMya,WAJZ,CAKE3Z,WAAY,SACZC,cAAe,MACfqF,MAAO,CAAEoI,OAAQ,WACjBxN,eAAgB,aAChBua,UAAWC,IAAOQ,gBAClBvb,gBAAiByC,EAAKlD,MAAMic,YAAc,SAAYjc,EAAMkc,UAAY,kBAAoB,aAE5F9X,EAAAlE,EAAAC,cAACma,EACKta,cAMND,KAAKgI,SAAS,CAClBgT,aACAa,eACApB,mBACAD,uBACAW,uBACAJ,gKAIK,IAAA1Q,EAAArK,KACDob,EAAkD,qBAA5Bpb,KAAKC,MAAMmb,cAA+Bpb,KAAKC,MAAMmb,aACjF,OACE/W,EAAAlE,EAAAC,cAACgc,EAAA,EAAD,CACEja,KAAMnC,KAAKC,MAAMkC,KACjBiZ,aAAcA,EACdjB,QAASna,KAAKC,MAAMka,QACpBE,aAAcra,KAAKC,MAAMoa,aACzBgC,SAAU,SAAA7R,GAAC,OAAIH,EAAKpK,MAAMoc,SAAS7R,EAAEE,QACrC4R,WAAY,CACVC,KAAMvc,KAAKwH,MAAMwT,WACjBwB,OAAQxc,KAAKwH,MAAMqU,aACnBY,QAASzc,KAAKwH,MAAMiT,iBACpBiC,MAAO1c,KAAKwH,MAAM2T,qBAClBwB,YAAa3c,KAAKwH,MAAMgT,qBACxBoC,mBAAoB5c,KAAKwH,MAAMuT,mCAxMXlY,aA+MfkX,gKChNT8C,6MAEJrV,MAAQ,CACNsV,SAAS,KACTC,WAAW,CACTC,OAAO,KACPC,SAAQ,MAKZla,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,qQAILlD,KAAKgI,SAAS,CACZ+U,WAAY,CACVC,OAAO,KACPC,SAAQ,qQAONlV,EAAW,SAACgJ,EAAGmM,GAKnB,IAAMC,EAAY,CAChBC,cAAe,cACfC,WAAYla,EAAKlD,MAAMqd,WACvBC,YAAapa,EAAKlD,MAAMud,cAGtBN,IACFC,EAAUE,WAAala,EAAKJ,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrBhO,EAAKJ,cAAc2a,yBAAyBP,GAG1BpM,GAAoB,YAAdA,EAAGI,QAEQ,oBAAxBhO,EAAKlD,MAAM8H,UACpB5E,EAAKlD,MAAM8H,SAASgJ,GAIxB5N,EAAK6E,SAAS,CACZ+U,WAAY,CACVC,OAAO,KACPC,SAAQ,GAEVH,SAAS/L,EAAKA,EAAGI,OAAS,QAIxBwM,EAAkB,SAAC5M,GACvB,IAAMiM,EAASjM,EAAG6M,gBAClBza,EAAK6E,SAAS,SAACJ,GAAD,MAAgB,CAC5BkV,SAAS,aACTC,WAAWpd,OAAA2O,EAAA,EAAA3O,CAAA,GACNiI,EAAUmV,WADL,CAERC,eAKNhd,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5BkV,SAAS,UACTC,WAAWpd,OAAA2O,EAAA,EAAA3O,CAAA,GACNiI,EAAUmV,WADL,CAERE,SAAQ,OAIRY,EAAS7d,KAAKC,MAAM4d,OACuB,oBAApC7d,KAAKC,MAAM6d,qCACpBD,EAAS7d,KAAKC,MAAM6d,iDACqC,oBAAzC9d,KAAKC,MAAM8d,4DACZ/d,KAAKC,MAAM8d,oCAA1BF,iCACiD,kBAAjC7d,KAAKC,MAAM+d,oBAC3BH,EAAS7d,KAAKC,MAAM+d,8BAKjBH,GAAW7d,KAAKC,MAAMud,qCACzBxd,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5BkV,SAAS,KACTC,WAAWpd,OAAA2O,EAAA,EAAA3O,CAAA,GACNiI,EAAUmV,WADL,CAERE,SAAQ,0BAGL,WAGLjd,KAAKC,MAAMge,mBACbje,KAAK+C,cAAcmb,0BAA0Ble,KAAKC,MAAMud,aAAaxd,KAAKC,MAAMqd,WAAWO,EAAO9V,EAAS4V,EAAgB,MAAK,EAAKE,GAErI7d,KAAK+C,cAAcmb,0BAA0Ble,KAAKC,MAAMud,aAAaxd,KAAKC,MAAMqd,WAAWO,EAAO9V,EAAS4V,uIAK7G,IAAMQ,EAAmBne,KAAKC,MAAM4C,UACpC,OACEub,EAAAje,EAAAC,cAACoI,EAAA,EACKxI,KAAKC,MAAMoe,YAGZre,KAAKC,MAAM4P,QAIe,YAAxB7P,KAAKwH,MAAMsV,UAA0B9c,KAAKC,MAAM+I,SACjDhJ,KAAKC,MAAM+I,SACXhJ,KAAKwH,MAAMuV,YAAc/c,KAAKwH,MAAMuV,WAAWE,QAC/CmB,EAAAje,EAAAC,cAACke,EAAA,EAAD3e,OAAAC,OAAA,CACE2e,KAAMve,KAAKC,MAAMse,KACjBC,QAASxe,KAAKC,MAAMue,SAChBxe,KAAKC,MAAMwe,iBAHjB,CAIE5W,KAAM7H,KAAKwH,MAAMuV,WAAWC,OAC5B0B,kBAAmB1e,KAAK0e,kBAAkBC,KAAK3e,MAC/C4e,WAAU,cAAAjY,OAAgB3G,KAAKC,MAAMiR,OAA3B,eACV2N,SAAQ,GAAAlY,OAAK3G,KAAK+C,cAAc0K,WAAWzN,KAAKC,MAAMiR,QAA9C,oBAGVkN,EAAAje,EAAAC,cAAC+d,EAADxe,OAAAC,OAAA,CACEgG,QAAS5F,KAAK8e,QAAQH,KAAK3e,OACvBA,KAAKC,MAAM8e,gBAEd/e,KAAKC,MAAM8e,eAAerU,OApB9B0T,EAAAje,EAAAC,cAAC4e,EAAA,EACKhf,KAAKC,eArIW4C,aAiKlBga,0rLCjKToC,6MAEJzX,MAAQ,CACN2S,QAAQ,KACRE,aAAa,KACbE,kBAAkB,KAClBC,qBAAqB,QAIvBzX,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,gDAIhC,IAAAkD,EAAAnD,KACRma,EAAUxa,OAAOoE,KAAK/D,KAAKC,MAAM0P,iBAAiB7J,IAAI,SAAAkL,GAE1D,MAAO,CACLtG,MAAMsG,EACNxD,MAAMwD,EACNtH,YAJkBvG,EAAKlD,MAAM0P,gBAAgBqB,MAQ3CqJ,EAAera,KAAKC,MAAMuJ,cAAgB2Q,EAAQ+E,KAAK,SAAA1U,GAAC,OAAKA,EAAEE,MAAMuK,gBAAkB9R,EAAKlD,MAAMuJ,cAAcyL,gBAAkB,KAyKxIjV,KAAKgI,SAAS,CACZmS,UACAE,eACAE,kBA1KwB,SAAAta,GACxB,IAAM+Q,EAAQ/Q,EAAMyK,MACdhB,EAAczJ,EAAMmK,KAAKV,YAE/B,OACErF,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBoD,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,UAEZsD,EAAAlE,EAAAC,cAAC+e,EAAA,EAAD,CACEnO,MAAOA,EACPtH,YAAaA,EACb0V,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHvB,MAAM,MACNiC,OAAO,UAIbsC,EAAAlE,EAAAC,cAAC+e,EAAA,EAAD,CACEnO,MAAOA,EACPoO,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,iBAMZa,EAAKqE,MAAMvH,MAAMof,gBACfhb,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,SACZE,eAAgB,YAEhBoD,EAAAlE,EAAAC,cAAC+e,EAAA,EAADxf,OAAAC,OAAA,CACEoR,MAAOA,GACH7N,EAAKqE,MAAMvH,MAFjB,CAGEmf,UAAW,CACTjd,KAAKgB,EAAKqE,MAAMvH,MAAMof,gBACtBpf,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,aAGVoH,YAAaA,EACbmG,QAAS1M,EAAKqE,MAAMvH,MAAM4P,QAC1ByP,WAAYnc,EAAKlD,MAAMqf,WACvBC,cAAepc,EAAKlD,MAAMsf,kBAG5Bpc,EAAKlD,MAAMuf,aACbnb,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,SACZE,eAAgB,YAEhBoD,EAAAlE,EAAAC,cAAC+e,EAAA,EAADxf,OAAAC,OAAA,CACEoR,MAAOA,GACH7N,EAAKqE,MAAMvH,MAFjB,CAGEmf,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,aAGVoH,YAAaA,EACbmG,QAAS1M,EAAKqE,MAAMvH,MAAM4P,QAC1ByP,WAAYnc,EAAKlD,MAAMqf,WACvBC,cAAepc,EAAKlD,MAAMsf,oBA2FtC/E,qBAnF2B,SAAAva,GAC3B,IACMib,GAA4D,IADlDjb,EAAMib,YAAYf,QACN6B,QAAQ/b,EAAMib,YAAYxQ,OAAgBzK,EAAMib,YAAYxQ,MAAQ2P,EAEhG,IAAKa,EACH,OAAO,KAGT,IAAMlK,EAAQkK,EAAYxQ,MACpBhB,EAAcwR,EAAYxR,YAChC,OACErF,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEyG,MAAO,CACLoZ,KAAK,KAEPxe,eAAgB,iBACZhB,EAAMya,YAEVrW,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMya,WAHZ,CAIE3Z,WAAY,SACZC,cAAe,MACfqF,MAAO,CAACoI,OAAO,WACfxN,eAAgB,eAEhBoD,EAAAlE,EAAAC,cAAC+e,EAAA,EAAD,CACEnO,MAAOA,EACPtH,YAAaA,EACb0V,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,UAIbsC,EAAAlE,EAAAC,cAAC+e,EAAA,EAAD,CACEnO,MAAOA,EACPoO,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,iBAOZa,EAAKlD,MAAMuf,aACTnb,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,SACZE,eAAgB,YAEhBoD,EAAAlE,EAAAC,cAAC+e,EAAA,EAADxf,OAAAC,OAAA,CACEoR,MAAOA,GACH7N,EAAKqE,MAAMvH,MAFjB,CAGEmf,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,aAGVoH,YAAaA,EACbmG,QAAS1M,EAAKqE,MAAMvH,MAAM4P,QAC1ByP,WAAYnc,EAAKlD,MAAMqf,WACvBC,cAAepc,EAAKlD,MAAMsf,2KAiBxCvf,KAAKkD,YACLlD,KAAKga,iBAELha,KAAKgI,SAAS,CACZ/H,MAAMD,KAAKC,6LAIU0H,EAAUC,yEACjC5H,KAAKkD,YAEC+W,EAAuBtS,EAAU6B,gBAAkBxJ,KAAKC,MAAMuJ,eACrC4F,KAAKC,UAAU1H,EAAUgI,mBAAqBP,KAAKC,UAAUrP,KAAKC,MAAM0P,kBACzEsK,IAC5Bja,KAAKga,uJAKP,OAAKha,KAAKwH,MAAM2S,SAAYna,KAAKwH,MAAM6S,cAAiBra,KAAKwH,MAAM+S,mBAAsBva,KAAKwH,MAAMgT,sBAAyBxa,KAAKC,MAAM0P,iBAAoBhQ,OAAOoE,KAAK/D,KAAKC,MAAM0P,iBAAiB3L,OAKlMK,EAAAlE,EAAAC,cAACsf,EAAA,EAAD/f,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,SACNgY,QAASna,KAAKwH,MAAM2S,QACpBO,WAAY1a,KAAKC,MAAMya,WACvBU,aAAcpb,KAAKC,MAAMmb,aACzBf,aAAcra,KAAKwH,MAAM6S,aACzB7Q,cAAexJ,KAAKC,MAAMuJ,cAC1B+Q,kBAAmBva,KAAKwH,MAAM+S,kBAC9BC,qBAAsBxa,KAAKwH,MAAMgT,qBACjC6B,SAAWrc,KAAKC,MAAMoc,SAAWrc,KAAKC,MAAMoc,SAAWrc,KAAKC,MAAM0f,eAd7D,YApOe9c,aAwPboc,grLCxPTW,6MACJpY,MAAQ,CACNqY,QAAQ,EACR3C,MAAM,KACN4C,OAAM,EACNC,WAAW,EACXhD,YAAW,EACXiD,YAAY,KACZC,aAAY,EACZC,cAAc,KACdC,cAAc,QAGhB1Y,oBAAqB,IAGrB1E,cAAgB,OAmChBwM,uCAAoB,SAAA6Q,IAAA,OAAAC,EAAAlgB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,OAClB1L,EAAKqb,kBADa,wBAAAD,EAAAvO,SAAAqO,EAAApgB,WAIpBwgB,oCAAiB,SAAAlQ,IAAA,IAAAmQ,EAAA3Y,EAAA,OAAAuY,EAAAlgB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY,IAAI8P,QAAJ,eAAAC,EAAAhhB,OAAAihB,EAAA,EAAAjhB,CAAA0gB,EAAAlgB,EAAAkQ,KAAa,SAAAwQ,EAAOC,EAASC,GAAhB,OAAAV,EAAAlgB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,OAEtC1L,EAAKjF,MAAMse,KAAK0C,IAAIT,eAAetb,EAAKjF,MAAM4H,KAAK,SAACqZ,EAAIT,GACtDK,EAAQL,KAH4B,wBAAAO,EAAAjP,SAAA8O,EAAA7gB,SAAb,gBAAAmhB,EAAAC,GAAA,OAAAT,EAAA1O,MAAAjS,KAAAkS,YAAA,IADZ,cACTuO,EADS/P,EAAAiD,KAUT7L,EAAW,GACb2Y,EACF3Y,EAAS2Y,YAAcA,GAEvB3Y,EAASiV,YAAa,EACtBjV,EAASoV,MAAQ,kCAGnBhY,EAAK8C,SAASF,GAlBC4I,EAAA2Q,OAAA,SAmBRZ,GAnBQ,wBAAA/P,EAAAqB,SAAAzB,EAAAtQ,WAqEjBshB,kCAAe,SAAAhO,IAAA,IAAAiO,EAAAC,EAAA,OAAAnB,EAAAlgB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA5C,KAAA,EACI6Q,IAAMC,IAAI,kDADd,YACPH,EADO/N,EAAAG,MAAA,CAAAH,EAAA5C,KAAA,eAGL4Q,EAAYD,EAAGnX,KACrBlF,EAAK8C,SAAS,CACZwZ,cALShO,EAAA6N,OAAA,SAOJG,GAPI,cAAAhO,EAAA6N,OAAA,SASN,MATM,wBAAA7N,EAAAzB,SAAAuB,EAAAtT,WAYf2hB,wCAAqB,SAAAC,IAAA,IAAAL,EAAAM,EAAA,OAAAxB,EAAAlgB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cAAAkR,EAAAlR,KAAA,EACF6Q,IAAMC,IAAI,qDADR,YACbH,EADaO,EAAAnO,MAAA,CAAAmO,EAAAlR,KAAA,eAGXiR,EAAeN,EAAGnX,KACxBlF,EAAK8C,SAAS,CACZ6Z,iBALeC,EAAAT,OAAA,SAOVQ,GAPU,cAAAC,EAAAT,OAAA,SASZ,MATY,wBAAAS,EAAA/P,SAAA6P,EAAA5hB,WAYrB+hB,mBAAqB,SAACC,GAEpB,GAAgC,YADT9c,EAAKnC,cAAckf,qBACvBC,SACjB,OAAO,GAEP,IAAIC,EAAa,KAUjB,GATIjd,EAAKsC,MAAMqa,cACb3c,EAAKsC,MAAMqa,aAAa5d,QAAQ,SAAC1C,EAAEmL,GACjC,IAAKyV,GAAcnV,WAAWzL,EAAE6gB,WAAWpV,WAAWgV,GAEpD,OADAG,EAAa5gB,GACN,IAKT2D,EAAKsC,MAAMga,WAAaW,EAAW,CACrC,IAAME,EAAWnd,EAAKod,cAAcH,EAAWjd,EAAKsC,MAAMiZ,YAAY8B,KAGlEC,EAFeH,EAAS,GACNnd,EAAKsC,MAAMga,UAAUiB,WAI3C,OAFAD,EAAalR,SAASkR,EAAWtV,QAAQ,IACzChI,EAAKnC,cAAc2f,UAAU,qBAAqBP,EAAWjd,EAAKsC,MAAMiZ,YAAY8B,IAAIF,EAASG,GAC1FA,EAIX,OAAO,QAGTG,4CAAyB,SAAAC,IAAA,IAAAzC,EAAAD,EAAA8B,EAAAhP,EAAA6P,EAAAC,EAAA/C,EAAA,OAAAM,EAAAlgB,EAAAsQ,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UACnBuP,EAAgB,EAChBD,EAAgB,EAEfhb,EAAKsC,MAAMiZ,cAAevb,EAAKuC,mBAJb,CAAAsb,EAAAnS,KAAA,eAAAmS,EAAA1B,OAAA,UAKd,GALc,OAQlBnc,EAAKsC,MAAMiZ,YAAYuC,cACpBhB,EAAWhV,WAAW9H,EAAKnC,cAAckO,MAAM/L,EAAKsC,MAAMiZ,YAAYuB,UAAUiB,IAAI,KAAKC,YAC/F/C,EAAgBjb,EAAK6c,mBAAmBC,IAG1C9B,EAAgBC,GAAgC,EAE5Cjb,EAAKsC,MAAMwY,cACPhN,GAAgB,IAAIX,MAAOY,UAC3B4P,EAAgBvR,UAAU0B,EAAc1B,SAASpM,EAAKsC,MAAMwY,cAAc,KAGhFG,GAAiB0C,EACjB1C,EAAgB/O,KAAKqE,IAAI0K,EAAc,GAEvCjb,EAAKnC,cAAc2f,UAAU,iBAAiBxC,EAAc,gBAAgB2C,EAAc,qBAAqB1C,IAG3G2C,EAAa5C,EAAcC,EAC3BJ,EAAaG,EAAc,EAAIlT,WAAW8V,EAAW5C,GAAiB,EAE5Ehb,EAAK8C,SAAS,CACZkY,gBACAC,gBACAJ,eAGFoD,WAAW,WAAKje,EAAKke,qBAAqB,KAnCnB,yBAAAL,EAAAhR,SAAA6Q,EAAA5iB,WAsCzBojB,kBAAoB,WAElB,GAAIle,EAAKuC,mBACP,OAAO,EAGT,IAAI0Y,EAAgBjb,EAAKsC,MAAM2Y,cAC/B,GAAIA,EAEF,KADAA,EAMO,CACL,IAAM2C,EAAa5d,EAAKsC,MAAM0Y,cAAcC,EACtCJ,EAAa/S,WAAW8V,EAAW5d,EAAKsC,MAAM0Y,eACpDhb,EAAK8C,SAAS,CACZ+X,aACAI,kBAEFgD,WAAW,WAAKje,EAAKke,qBAAqB,UAX1Cle,EAAK8C,SAAS,CACZ+X,WAAW,EACXD,OAAM,SAYV5a,EAAK8C,SAAS,CACZ+X,WAAW,EACXD,OAAM,OAKZuD,+BAAY,SAAAC,IAAA,IAAAC,EAAAvG,EAAAwG,EAAAxD,EAAAlY,EAAA2b,EAAAC,EAAA7B,EAAAL,EAAA,OAAAnB,EAAAlgB,EAAAsQ,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,UAGJ2S,EAHI,oBAIJvG,EAAS9X,EAAKjF,MAAM4H,KAAKiF,cAE3B0W,EAAoB,KACpBxD,EAAc,KACdlY,EAAW,GAEX8b,eACFJ,EAAoBI,aAAaC,QAAQN,MAEvCC,EAAoBpU,KAAK0U,MAAMN,IAI9BA,GAAsBA,EAAkBxG,GAjBnC,CAAA2G,EAAA/S,KAAA,gBAkBRoP,GAAc,IAAI3N,MAAOY,UAlBjB0Q,EAAA/S,KAAA,GAoB+B8P,QAAQqD,IAAI,CACjD7e,EAAKyc,qBACLzc,EAAKoc,iBAtBC,QAAAmC,EAAAE,EAAAhQ,KAAA+P,EAAA/jB,OAAAqkB,EAAA,EAAArkB,CAAA8jB,EAAA,GAoBD5B,EApBC6B,EAAA,GAoBYlC,EApBZkC,EAAA,IAyBRF,EAAoB,IACFxG,GAAU,CAC1BgD,cACAwB,YACAK,gBAIF3c,EAAKnC,cAAckhB,gBAAgBV,EAAiBnU,KAAKC,UAAUmU,IAEnE1b,EAAW0b,EAAkBxG,GAExB6E,GAAiBL,IACpB1Z,EAASoV,MAAQ,0BAtCX,QA0CVhY,EAAK8C,SAASF,GA1CJ,yBAAA6b,EAAA5R,SAAAuR,EAAAtjB,WA6CZugB,qCAAkB,SAAA2D,IAAA,IAAApc,EAAA+X,EAAA,OAAAQ,EAAAlgB,EAAAsQ,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,UAEX1L,EAAKjF,MAAM4H,MAAS3C,EAAKjF,MAAMse,KAFpB,CAAA4F,EAAAvT,KAAA,eAAAuT,EAAA9C,OAAA,UAGP,GAHO,cAMVvZ,EAAW,CACfmY,aAAY,GAEd/a,EAAK8C,SAASF,GATEqc,EAAAvT,KAAA,EAaU1L,EAAKsb,iBAbf,WAAA2D,EAAAxQ,KAAA,CAAAwQ,EAAAvT,KAAA,gBAAAuT,EAAAvT,KAAA,GAgBR1L,EAAKme,YAhBG,QAiBd,IACEne,EAAKyd,yBACL,MAAOzB,GACPpZ,EAASoV,MAAQ,yBAInBhY,EAAK8C,SAASF,GAxBAqc,EAAAvT,KAAA,kBA0BRiP,EAAU3a,EAAKsC,MAAMqY,WACf,GACV3a,EAAK8C,SAAS,CACZ6X,WACA,WACAuE,OAAOjB,WAAW,WAChBje,EAAKqb,mBACL,OAjCQ,yBAAA4D,EAAApS,SAAAmS,EAAAlkB,oFAhRZA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oKAU9C,IAJAD,KAAKyH,oBAAqB,EAEtBrC,EAAKgf,OAAOjB,WAAW,aAAe,GAEnC/d,KACHgf,OAAOC,aAAajf,GAGxBgf,OAAO7D,gBAAkBvgB,KAAKugB,+JAI9BvgB,KAAKkD,+FAGkByE,mEACvB3H,KAAKkD,aAEAlD,KAAKwH,MAAMyY,aAAejgB,KAAKC,MAAMse,MACxCve,KAAKugB,2JAiCM4B,EAAYmC,GACzB,IAAIC,EACAC,EACAC,EAAMC,EAUNJ,EAAa,KACfG,EAVc,OACN,MASYtC,EAAU,oBARrB,QACF,KAOgEA,EAAU,WACjFuC,EAPe,QACF,MAMQvC,EAAU,oBALb,KAKoDA,EAAU,WAJ9D,QAMlBsC,EAbc,OACN,MAYYtC,EAAU,qBAVvB,KAUyDA,EAAU,WAC1EuC,EAVe,OAEG,KAQGvC,EAAU,YATlB,MASsDA,EAAU,qBAG/E,IACMwC,EAAO,GAAK,EADLvT,KAAKwT,KAAM,EAAIH,IAoB5B,OAhBEF,EADEI,EAAO,IACG,YACHA,EAAO,IAAMA,GAAQ,IAClB,SAEA,OAGdH,EAAepT,KAAKwT,IAAIF,IACL,IACjBF,EAAe,GAGbF,EAAa,MACfE,GAAgB,KAGX,CAACA,EAAcrC,EAAU,oBAAyBA,EAAU,WAAgBoC,iDAmNnF,GAAIvkB,KAAKwH,MAAM2Y,cAAc,GAAG,CAC9B,IAAM0E,EAAUzT,KAAKgF,MAAMpW,KAAKwH,MAAM2Y,cAAc,IAC9C2E,EAAU9kB,KAAKwH,MAAM2Y,cAAuB,GAAR0E,EAC1C,OAAQ,IAAIA,GAASE,QAAQ,GAAG,KAAK,IAAID,GAASC,QAAQ,GAAG,OAE7D,OAAO/kB,KAAKwH,MAAM2Y,cAAc,qCAI3B,IAAAhd,EAAAnD,KACDglB,EAAiBhlB,KAAK+C,cAAckf,qBAC1C,OACEgD,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CAAMlkB,cAAe,SAAUD,WAAY,UAEV,OAA7Bf,KAAKwH,MAAM2Y,cACTngB,KAAKwH,MAAMsY,MACTmF,EAAA9kB,EAAAC,cAAC+kB,EAAA,EAAD,CACExiB,UAAW,CACT+C,GAAG,EACHpD,MAAMtC,KAAKC,MAAMmlB,UAAYplB,KAAKC,MAAMmlB,UAAY,aAEtDC,YAAW1lB,OAAA2O,EAAA,EAAA3O,CAAA,CACT0C,KAAK,QACFrC,KAAKC,MAAMolB,aAEhBvhB,UAAW,CACT+E,UAAU,SACV9H,WAAW,SACXE,eAAe,UAEjB2B,KAAM5C,KAAKC,MAAM2e,WAAa5e,KAAKC,MAAM2e,WAAa,8BAGxDqG,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACEpX,GAAI,EACJ/M,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBgkB,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CAAMpX,GAAI,EAAGxL,MAAQtC,KAAKC,MAAMmlB,UAAYplB,KAAKC,MAAMmlB,UAAY,aAAeplB,KAAKC,MAAM4e,SAAW7e,KAAKC,MAAM4e,SAAW,kBAA9H,IAAkJoG,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAKI,KAAN,CAAWhjB,MAAQtC,KAAKC,MAAMmlB,UAAYplB,KAAKC,MAAMmlB,UAAY,YAAa3iB,WAAY,GAAKzC,KAAKulB,wBACtPN,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CAAUxa,MAAQ1K,KAAKwH,MAAMuY,cAIZ,OAArB/f,KAAKwH,MAAM0V,OAAmBld,KAAKwH,MAAMuV,WAoBvCkI,EAAA9kB,EAAAC,cAAC+kB,EAAA,EAAD,CACExiB,UAAW,CACT+C,GAAG,EACHpD,MAAMtC,KAAKC,MAAMmlB,UAAYplB,KAAKC,MAAMmlB,UAAY,aAEtDC,YAAW1lB,OAAA2O,EAAA,EAAA3O,CAAA,CACT0C,KAAK,QACFrC,KAAKC,MAAMolB,aAEhBvhB,UAAW,CACT+E,UAAU,SACV9H,WAAW,SACXE,eAAe,UAEjB2B,KAAO5C,KAAKwH,MAAM0V,MAAQld,KAAKwH,MAAM0V,MAASld,KAAKC,MAAM4H,KAAQ7H,KAAKC,MAAMulB,eAAiBxlB,KAAKC,MAAMulB,eAAiB,gCAAoCxlB,KAAKC,MAAMwlB,eAAiBzlB,KAAKC,MAAMwlB,eAAiB,2BAjCvNR,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACEnkB,WAAY,SACZC,cAAe,UAEfikB,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACE7iB,KAAM,MACNF,KAAM,UACNG,MAAO,aAET2iB,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACEtc,GAAI,EACJlG,SAAU,EACVmG,UAAW,SACXvG,MAAOtC,KAAKC,MAAMmlB,UAAYplB,KAAKC,MAAMmlB,UAAY,YAEpDplB,KAAKwH,MAAM0V,QAwBpBld,KAAKC,MAAM4H,KACTod,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACEtc,GAAI,EACJ8c,OAAQ,SACR/f,WAAY,YACZggB,IAAK,+BACLrjB,MAAOtC,KAAKC,MAAMmlB,UAAYplB,KAAKC,MAAMmlB,UAAY,WACrDQ,KAAM5lB,KAAK+C,cAAc8iB,2BAA2B7lB,KAAKC,MAAM4H,OAE/Dod,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACEnkB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBgkB,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACExiB,SAAU,EACVmG,UAAW,SACXvG,MAAOtC,KAAKC,MAAMmlB,UAAYplB,KAAKC,MAAMmlB,UAAY,YAHvD,WAKWplB,KAAK+C,cAAc0K,WAAWuX,EAAec,WAExDb,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACExf,GAAI,EACJrD,KAAM,SACNF,KAAM,YACNG,MAAOtC,KAAKC,MAAMmlB,UAAYplB,KAAKC,MAAMmlB,UAAY,eAIjB,oBAAjCplB,KAAKC,MAAMye,kBAClBuG,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACEtc,GAAI,EACJgd,KAAI,qBACJhgB,QAAU,SAAAkB,GAAC,OAAI3D,EAAKlD,MAAMye,qBAC1Bpc,MAAOtC,KAAKC,MAAM8lB,gBAAkB/lB,KAAKC,MAAM8lB,gBAAkB,WACjEpgB,WAAY3F,KAAKC,MAAM+lB,qBAAuBhmB,KAAKC,MAAM+lB,qBAAuB,aAEhFf,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACEnkB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBgkB,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACExiB,SAAU,EACVmG,UAAW,SACXvG,MAAOtC,KAAKC,MAAM8lB,gBAAkB/lB,KAAKC,MAAM8lB,gBAAkB,YAHnE,sBAOAd,EAAA9kB,EAAAC,cAAC8kB,EAAA,EAAD,CACExf,GAAI,EACJrD,KAAM,SACNF,KAAM,SACNG,MAAOtC,KAAKC,MAAM8lB,gBAAkB/lB,KAAKC,MAAM8lB,gBAAkB,eAIvE,aAzdcljB,aAgeb+c,wCCtef,IAAAqG,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAIeE,EAAA,GACbC,YAAa,CAAC,OAAQ,QAEtBhL,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrC+K,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERvb,MAAO,CACLwb,MAAO,2CACPvb,UAAW,qCACXwb,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCC,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAClCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,iBAAkB,qBAC/BC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPtgB,SAAU,IAEZxF,OAAQ,CACN+lB,QAASC,IAAKC,KACdC,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAK/L,KAAK,GAC1BqM,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACX9M,UAAW,UACX+M,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,OACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIPxmB,KAAM,UACN2C,OAAQ,UACR8jB,QAAS,UACTC,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACd7Q,gBAAiB,UACjB8Q,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVtjB,QAAS,UACTujB,SAAU,UACVvD,QAAS,UACT/kB,OAAQ,UACRmE,KAAM,UACNokB,QAAS,UACTC,QAAS,UACTlT,OAAQ,UACRmT,OAAQ,OACRC,UAAW,UACXvf,OAAQ,OACRwf,WAAY,UACZC,gBAAiB,OACjBC,eAAgB,UAChBC,eAAgB,UAChBC,gBAAiB,wCACjBC,YAAa,UACbC,WAAY,OACZC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,WAAY,UACZvpB,aAAc,CACZuP,OAAQ,CACNia,KAAM,UACNC,KAAM,UACNC,MAAO,UACPxpB,OAAQ,UACRypB,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnBjqB,SAAU,CACRupB,KAAM,UACNC,KAAM,UACNC,MAAO,UACPxpB,OAAQ,UACRypB,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnB1a,OAAQ,CACN2a,UAAW,UACXC,QAAS,UACTC,OAAQ,YAGZC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZzE,KAAM,CACJrlB,MAAO+pB,YAAM,GAAK,QAClB3rB,gBAAiB4rB,YAAK,GAAK,QAC3BpgB,YAAa,QAEfqgB,QAAS,CACPjqB,MAAO+pB,YAAM,GAAKjD,IAAMzB,MACxBjnB,gBAAiB4rB,YAAK,GAAKlD,IAAMzB,MACjCzb,YAAakd,IAAMzB,MAErB6E,QAAS,CACPlqB,MAAO+pB,YAAM,GAAKI,IAAO9E,MACzBjnB,gBAAiB4rB,YAAK,GAAKG,IAAO9E,MAClCzb,YAAaugB,IAAO9E,MAEtB+E,OAAQ,CACNpqB,MAAO+pB,YAAM,GAAKM,IAAIhF,MACtBjnB,gBAAiB4rB,YAAK,GAAKK,IAAIhF,MAC/Bzb,YAAaygB,IAAIhF,MAEnBiF,KAAM,CACJtqB,MAAO+pB,YAAM,GAAK3E,IAAKC,MACvBjnB,gBAAiB,UACjBwL,YAAa,YAGjB2gB,QAAS,CACPpF,QAAS,CACPnlB,MAAOolB,IAAK9kB,KACZlC,gBAAiBgnB,IAAKC,KAEtBmF,eAAgBpF,IAAKC,KACrBoF,mBAAoBrF,IAAK9kB,MAE3BoqB,OAAQ,CACN1qB,MAAOimB,IAAWD,MAClByE,mBAAoBxE,IAAWD,OAEjCiE,QAAS,CACPO,eAAgB1D,IAAMzB,KACtBoF,mBAAoB3D,IAAMxmB,MAE5B8pB,OAAQ,CACNI,eAAgBH,IAAIhF,KACpBoF,mBAAoBJ,IAAI/pB,OAG5BqqB,YAAa,CACXC,MAAO,CACLxqB,SAAU,UACVX,OAAQ,OACRoF,SAAU,OACVgmB,QAAS,UAEXC,OAAQ,CACN1qB,SAAU,OACVX,OAAQ,OACRoF,SAAU,QAEZkmB,MAAO,CACL3qB,SAAU,SACVX,OAAQ,OACRoF,SAAU,OACV3F,aAAc,4uLC5Od8rB,6MACJ9lB,MAAQ,CACN1H,MAAM,KACNiC,OAAO,QAGT0F,oBAAqB,sFAGnB2c,OAAOmJ,iBAAiB,SAAUvtB,KAAKwtB,uBAAuB7O,KAAK3e,sDAInEA,KAAKyH,oBAAqB,EAC1B2c,OAAOqJ,oBAAoB,SAAUztB,KAAKwtB,oEAI1CxtB,KAAKwtB,oEAGY7lB,GACbA,EAAU3F,WAAahC,KAAKC,MAAM+B,UACpChC,KAAKwtB,0EAKP,GAAIxtB,KAAKyH,mBACP,OAAO,EAGT,IAAMK,EAAQnI,OAAA2O,EAAA,EAAA3O,CAAA,GAAOK,KAAKwH,OAE1B,GAAIxH,KAAKC,MAAM4Z,SAAS,CACtB,IAAM6T,EAAiBC,SAASC,eAAe5tB,KAAKC,MAAM4Z,UAC1D,GAAI6T,EAAe,CACjB,IAAMG,EAAa7gB,WAAW0gB,EAAeI,aAAa,EAAIJ,EAAeI,YAAc,EAEvFD,GAAcA,IAAe/lB,EAAShI,QACxCgI,EAAShI,MAAQ+tB,IASvB,IAJK/lB,EAAShI,OAASE,KAAKC,MAAMH,OAASE,KAAKC,MAAMH,QAAUgI,EAAShI,QACvEgI,EAAShI,MAAQE,KAAKC,MAAMH,OAG1BE,KAAKC,MAAM6Z,eAAe,CAC5B,IAAMiU,EAAkBJ,SAASC,eAAe5tB,KAAKC,MAAM6Z,gBAC3D,GAAIiU,EAAgB,CAClB,IAAM/e,EAAchC,WAAW+gB,EAAgBD,aAAa,EAAIC,EAAgBD,YAAc,EAC1F9e,GAAeA,IAAgBlH,EAAS/F,SAC1C+F,EAAS/F,OAASiN,EACblH,EAAShI,QACZgI,EAAShI,MAAQkP,MAMpBlH,EAAS/F,QAAU/B,KAAKC,MAAM8B,QAAU/B,KAAKC,MAAM8B,SAAW+F,EAAS/F,SAC1E+F,EAAS/F,OAAS/B,KAAKC,MAAM8B,QAG/B+F,EAAS/F,OAAS+F,EAAS/F,QAAU+F,EAAShI,MAE1CH,OAAOoE,KAAK+D,GAAU9D,OAAO,GAC/BhE,KAAKgI,SAASF,oCAKhB,IAAMkmB,EAAYhuB,KAAKC,MAAMsD,KAEvBxB,EAAS/B,KAAKwH,MAAMzF,SAAWuB,MAAMtD,KAAKwH,MAAMzF,QAAUuP,SAAStR,KAAKwH,MAAMzF,QAAU,IACxFjC,EAAQE,KAAKwH,MAAM1H,QAAUwD,MAAMtD,KAAKwH,MAAM1H,OAASwR,SAAStR,KAAKwH,MAAM1H,OAAS,EAEtFqJ,EAAaxJ,OAAOC,OAAO,GAAGI,KAAKC,OAOvC,QANAkJ,EAAUxJ,OAAA2O,EAAA,EAAA3O,CAAA,GACLwJ,EADK,CAERpH,SACAjC,WAGgBoO,YAAgB/E,EAAWiB,MAAStK,GAAUiC,EAc5D/B,KAAKC,MAAMmK,MACbhD,EAAAjH,EAAAC,cAAC4tB,EACK7kB,GAfN/B,EAAAjH,EAAAC,cAAC6tB,EAAA,EAAD,CACEnqB,UAAW,CACT9C,cAAc,MACdktB,UAAUnsB,GAEZsjB,YAAcrlB,KAAKC,MAAMolB,YAAcrlB,KAAKC,MAAMolB,YAAc,CAC9DhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,UAAiCurB,IAA1BnuB,KAAKC,MAAMmuB,WAA2BpuB,KAAKC,MAAMmuB,WAAa,iCAlGlDvrB,aA4GZyqB,4BCjHf9oB,EAAAC,QAAA,CAAkBmG,QAAA,wDCAlBpG,EAAAC,QAAA,CAAkB4pB,GAAA,6CCAlB7pB,EAAAC,QAAA,CAAkB6pB,YAAA,+DCAlB9pB,EAAAC,QAAA,CAAkB8pB,SAAA,6/5MCAlB/pB,EAAAC,QAAA,CAAkB+pB,OAAA,27NCAlBhqB,EAAAC,QAAA,CAAkBgqB,eAAA,+BAAAC,MAAA,sBAAAC,OAAA,uBAAAC,WAAA,2BAAAC,MAAA,uLCEZC,mLAEF,OACE5uB,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZC,cAAe,OACXhB,KAAKC,MAAM6D,WAEf5D,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACE6C,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACHtC,KAAKC,MAAM0C,WAEd3C,KAAKC,MAAM2C,MAEd1C,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEmvB,UAAW,MACXC,QAAShvB,KAAKC,MAAM+uB,SAChBhvB,KAAKC,MAAMgvB,cAEf/uB,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACE8F,GAAI,EACJW,MAAO,CACLoI,OAAO,WAETtM,KAAM,OACNG,MAAO,YACPD,KAAOrC,KAAKC,MAAM+B,SAAW,QAAU,OACnChC,KAAKC,MAAMuC,qBA9BDK,aAsCXisB,2BCxCftqB,EAAAC,QAAA,CAAkBG,gBAAA,6BAAAC,eAAA,4BAAAC,YAAA,yBAAAC,KAAA,kBAAAC,cAAA,6MCMZkqB,6MAEJ1nB,MAAQ,KAGRzE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAILlD,KAAKmvB,iMAGkBxnB,EAAWC,2EAClC5H,KAAKkD,YAECksB,EAAcznB,EAAUE,OAAS7H,KAAKC,MAAM4H,KAC5CwnB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,SACnClI,EAAUyX,UAAUjd,OAASnC,KAAKC,MAAMmf,UAAUjd,MACnDitB,GAAeC,IACjCrvB,KAAKmvB,sQAKD/P,EAAYpf,KAAKC,MAAMmf,WACzBpf,KAAKC,MAAM4H,OAAQ7H,KAAKC,MAAM4P,8BACxBuP,EAAUjd,YACX,gBAEA,gBAGA,kBAGA,gBAEA,kBAEA,mBAEA,kBAEA,+PAST,IAAIC,EAAO,KACPE,EAAQ,KACRgtB,EAAS,KACTC,EAAc,KACd7lB,EAAc,KACZ0V,EAAYpf,KAAKC,MAAMmf,UACvBqB,EAAczgB,KAAKC,MAAMwgB,YAC3B+O,EAAU/tB,IAAMC,OAAOC,aAAaC,SAAS6pB,QAE3CgE,EAAa,CACjBhtB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,WACN+D,MAAM,CACJC,SAAS,OACTC,SAAU,SACVE,aAAc,YAEhB3C,UAAU,CACR7C,eAAe,eAWnB,OANIme,EAAUnf,OAASN,OAAOoE,KAAKqb,EAAUnf,OAAO+D,QAClDrE,OAAOoE,KAAKqb,EAAUnf,OAAOgE,QAAQ,SAAA1C,GACnCkuB,EAAWluB,GAAK6d,EAAUnf,MAAMsB,KAI5B6d,EAAUjd,MAChB,IAAK,OAKH,OAJIse,EAAYvP,SACd5O,EAAQb,IAAMC,OAAOC,aAAauP,OAAOuP,EAAYvP,OAAOpE,eAAiBrL,IAAMC,OAAOC,aAAauP,OAAOuP,EAAYvP,OAAOpE,eAAiBxK,EAClJktB,EAAU/tB,IAAMC,OAAOC,aAAaC,SAAS6e,EAAYvP,OAAOpE,eAAiBrL,IAAMC,OAAOC,aAAaC,SAAS6e,EAAYvP,OAAOpE,eAAiB0iB,GAElJ/O,EAAYvP,OAAOpE,eACzB,IAAK,UACL,IAAK,WACL,IAAK,cACL,IAAK,kBACH1K,EAAO,gBACT,MACA,IAAK,QACHA,EAAO,aACT,MACA,IAAK,SACL,IAAK,UACL,IAAK,aACL,IAAK,iBACHA,EAAO,cACT,MACA,IAAK,OACHA,EAAO,OACT,MACA,IAAK,UACHA,EAAO,OACT,MACA,IAAK,UAEHA,EAAO,SACT,MACA,IAAK,OAGL,IAAK,UACHA,EAAO,YACT,MACA,IAAK,WACHA,EAAO,cACT,MACA,QACEA,EAAO,UAGXktB,EACEjrB,EAAAlE,EAAAC,cAACsvB,EAAA,EAAD/vB,OAAAC,OAAA,CACE2B,EAAG,MACHC,aAAc,OACViuB,EAHN,CAIE1uB,WAAY,SACZL,gBAAiB8uB,EACjBvuB,eAAgB,WAEhBoD,EAAAlE,EAAAC,cAACsvB,EAAA,EAAD,CACEvtB,KAAMC,EACNE,MAAOA,EACPpB,MAAO,SACPmB,KAAMrC,KAAKC,MAAM+B,SAAW,MAAQ,WAI5C,MACA,IAAK,OACCye,EAAY5Y,OACdynB,EACEjrB,EAAAlE,EAAAC,cAACsvB,EAAA,EAAD,CACEhK,OAAQ,SACRC,IAAK,+BACLC,KAAM5lB,KAAK+C,cAAc8iB,2BAA2BpF,EAAY5Y,OAEhExD,EAAAlE,EAAAC,cAACuvB,EAAA,EAADhwB,OAAAC,OAAA,CACE8C,SAAU,EACVJ,MAAO,SACHmtB,EAHN,CAIExnB,gBAAgB,EAChBJ,KAAM4Y,EAAY5Y,UAK5B,MACA,IAAK,SACH,IAAIqJ,EAASuP,EAAYvP,OACzB,OAAQuP,EAAYvP,QAClB,IAAK,OACHA,EAAS,UACX,MACA,IAAK,UACHA,EAAS,WAKboe,EACEjrB,EAAAlE,EAAAC,cAACsvB,EAAA,EAASD,EAAave,EAAO+D,eAElC,MACA,IAAK,OACH,IAAMM,EAAgBkL,EAAYrL,WAAWI,OAAO,gBACpD8Z,EACEjrB,EAAAlE,EAAAC,cAACsvB,EAAA,EAASD,EAAala,GAE3B,MACA,IAAK,aAEH,OADAjT,EAAQb,IAAMC,OAAOC,aAAawP,OAAOsP,EAAYtP,OAAOrE,eACpD2T,EAAYtP,QAClB,IAAK,YACH/O,EAAO,OACT,MACA,IAAK,UACHA,EAAO,YACT,MACA,IAAK,SACHA,EAAO,eAKXktB,EACEjrB,EAAAlE,EAAAC,cAACsvB,EAAA,EAAD/vB,OAAAC,OAAA,CACE2B,EAAG,CAAC,EAAE,OACNC,aAAc,OACViuB,EAHN,CAIE1uB,WAAY,SACZjB,MAAO,CAAC,OAAO,QACfiC,OAAQ,CAAC,OAAO,QAChBd,eAAgB,SAChBsE,OAASvF,KAAKC,MAAM+B,SAAX,aAAA2E,OAAmCrE,GAAnC,aAAAqE,OAA0DrE,KAEnE+B,EAAAlE,EAAAC,cAACsvB,EAAA,EAAD,CACEvtB,KAAMC,EACNE,MAAOA,EACPpB,MAAO,SACPmB,KAAOrC,KAAKC,MAAM+B,SAAW,MAAQ,WAI7C,MACA,IAAK,SACHstB,EACEjrB,EAAAlE,EAAAC,cAACsvB,EAAA,EAASD,EAAahP,EAAYtP,QAEvC,MACA,IAAK,SACHme,EACEjrB,EAAAlE,EAAAC,cAACwvB,EAAA,EAADjwB,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6BpsB,OAAQod,EAAYoP,UAErD,MACA,IAAK,YACLN,EAAc9O,EAAY8O,YAAYta,cAEpC,IAAM6a,GADRpmB,EAAc1J,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAASua,MAClC7lB,EAAYtH,KAAOsH,EAAYtH,KAA9C,iBAAAuE,OAAsE4oB,EAAtE,QAChBD,EACEjrB,EAAAlE,EAAAC,cAACsvB,EAAA,EAAD/vB,OAAAC,OAAA,CAAOkC,IAAKguB,GAAaL,IAE7B,MACA,IAAK,YACHF,EAAc9O,EAAY8O,YAAYta,cACtCvL,EAAc1J,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAASua,IACnED,EACEjrB,EAAAlE,EAAAC,cAACsvB,EAAA,EAASD,EAAa/lB,GAAeA,EAAY8D,MAAQ9D,EAAY8D,MAAQ+hB,GAElF,MACA,IAAK,SACH,IAAIQ,EAAkB,KAClBC,EAAchwB,KAAK+C,cAAcktB,aAAa7Q,EAAUvZ,KAAK7F,KAAKC,MAAMwgB,aAC5E,OAAQrB,EAAU7b,MAChB,IAAK,SACHysB,EAAchwB,KAAK+C,cAAckO,MAAM+e,GAAa9M,WACpD6M,EAAkBjtB,IAClB2sB,EAAWpsB,OAAS2sB,EACpBA,EAAc,KAChB,MACA,IAAK,QACHD,EAAkBG,IAClBT,EAAW3tB,IAAMkuB,EACjBA,EAAc,KAChB,MACA,IAAK,OACHD,EAAkBI,IAClBV,EAAWttB,KAAO6tB,EAClBA,EAAc,KAChB,MACA,QACED,EAAkB5pB,IAGtBmpB,EAASU,EACP3rB,EAAAlE,EAAAC,cAAC2vB,EAAoBN,EAAaO,GAChC3rB,EAAAlE,EAAAC,cAAC2vB,EAAoBN,GAK7B,OAAOH,SAhSoBzsB,aAoShBqsB,s+MC7DAkB,EApOb,SAAAA,EAAYnwB,GAAM,IAAAiF,EAAAlF,KAAAL,OAAA0wB,EAAA,EAAA1wB,CAAAK,KAAAowB,GAAApwB,KANlBC,MAAQ,GAMUD,KALlBswB,UAAY,KAKMtwB,KAJlB0J,YAAc,KAII1J,KAHlB+C,cAAgB,KAGE/C,KAKlBgD,SAAW,SAAA/C,GACTiF,EAAKjF,MAAQA,EAETiF,EAAKnC,cACPmC,EAAKnC,cAAcC,SAASkC,EAAKjF,OAEjCiF,EAAKnC,cAAgB,IAAIE,EAAciC,EAAKjF,OAG9CiF,EAAKorB,UAAYprB,EAAKnC,cAAciS,gBAAgB,CAAC,aAAa,QAAQ,cAC1E9P,EAAKwE,YAAcxE,EAAKnC,cAAciS,gBAAgB,CAAC,YAAY9P,EAAKorB,aAfxDtwB,KAkBlBuwB,WAlBkB5wB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAkBL,SAAA+P,IAAA,IAAAxO,EAAA,OAAA6e,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,cAAA0P,EAAA1P,KAAA,EACS1L,EAAKnC,cAAc2tB,gBAAgBxrB,EAAKorB,UAAUprB,EAAKjF,MAAM4P,SADtE,cACP+B,EADO0O,EAAA3M,QAEKzO,EAAKnC,cAAckO,MAAMW,GAAStO,UAChDsO,EAAU1M,EAAKnC,cAAckO,MAAM,IAH1BqP,EAAAe,OAAA,SAKJzP,GALI,wBAAA0O,EAAAvO,SAAAqO,EAAApgB,SAlBKA,KA0BlB2wB,aA1BkB,eAAAtd,EAAA1T,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0BH,SAAAwQ,EAAO9Y,EAAS4V,GAAhB,OAAA8S,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cAAAoQ,EAAAK,OAAA,SACNnc,EAAKnC,cAAcmb,0BAA0B,eAAgB,QAAS,GAAInW,EAAU4V,IAD9E,wBAAAqD,EAAAjP,SAAA8O,EAAA7gB,SA1BG,gBAAAmhB,EAAAC,GAAA,OAAA/N,EAAApB,MAAAjS,KAAAkS,YAAA,GAAAlS,KA8BlB4wB,cA9BkBjxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA8BF,SAAAC,IAAA,IAAAT,EAAAghB,EAAAC,EAAA5e,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdf,GADqBA,EAAPihB,EAAA9sB,OAAA,QAAAmqB,IAAA2C,EAAA,GAAAA,EAAA,GAAe,OACC5rB,EAAKjF,MAAM4P,QAD3Ba,EAAAE,KAAA,EAES1L,EAAKnC,cAAcguB,oBAAoB7rB,EAAKorB,UAAU,gBAAgB,CAACzgB,IAFhF,YAEVghB,EAFUngB,EAAAiD,MAAA,CAAAjD,EAAAE,KAAA,eAAAF,EAAA2Q,OAAA,SAILnc,EAAKnC,cAAckO,MAAM4f,IAJpB,cAAAngB,EAAA2Q,OAAA,SAMP,MANO,wBAAA3Q,EAAAqB,SAAAzB,EAAAtQ,SA9BEA,KAuClBgxB,iBAvCkBrxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAuCC,SAAAiD,IAAA,OAAAmd,EAAAtwB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA6N,OAAA,SACVnc,EAAKnC,cAAcguB,oBAAoB,iBAAiB,sBAD9C,wBAAAvd,EAAAzB,SAAAuB,EAAAtT,SAvCDA,KA2ClBixB,mBA3CkBtxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2CG,SAAAuR,IAAA,OAAA6O,EAAAtwB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cAAAkR,EAAAT,OAAA,SAOZnc,EAAKnC,cAAckO,MAAM,IAPb,wBAAA6Q,EAAA/P,SAAA6P,EAAA5hB,SA3CHA,KAqDlBkxB,OArDkB,eAAAC,EAAAxxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAqDT,SAAAuS,EAAO5R,EAAMtH,GAAb,IAAAyL,EAAAic,EAAAC,EAAAC,EAAAC,EAAA9N,EAAA+N,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3f,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UAAyBuE,EAAzB0c,EAAA7tB,OAAA,QAAAmqB,IAAA0D,EAAA,GAAAA,EAAA,GAAwC,MACzCT,EAAkBlsB,EAAKnC,cAAciS,gBAAgB,CAAC,YAAY9P,EAAKorB,aACxDwB,QAFd,CAAA/O,EAAAnS,KAAA,eAAAmS,EAAA1B,OAAA,UAGE,GAHF,cAMDgQ,EANC,cAAA1qB,OAM6B+C,EAAYqoB,KAAK/gB,MAN9C,KAAArK,OAMuDwO,GAQ1Dmc,EAAMpsB,EAAKnC,cAAckO,MAAM,GAd5B8R,EAAAnS,KAAA,EAmBG8P,QAAQqD,IAAI,CACpB7e,EAAK8sB,gBAAgBtoB,GACrBxE,EAAKnC,cAAc0G,mBAAmBC,GAAY,GAAM,KArBnD,UAAA6nB,EAAAxO,EAAApP,KAAA8P,EAAA9jB,OAAAsyB,EAAA,EAAAtyB,CAAA4xB,EAAA,GAiBLC,EAjBK/N,EAAA,GAkBLgO,EAlBKhO,EAAA,IAwBH+N,IAAoBC,EAxBjB,CAAA1O,EAAAnS,KAAA,YA0BC8gB,EAAiBxsB,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,SAAS,QAGvEG,EA7BA,CAAA4N,EAAAnS,KAAA,gBAAAmS,EAAApS,KAAA,GAAAoS,EAAAnS,KAAA,GA+BsB1L,EAAKnC,cAAcmvB,yBAAyBR,EAAeN,GA/BjF,QA+BDjc,EA/BC4N,EAAApP,KAAAoP,EAAAnS,KAAA,iBAAAmS,EAAApS,KAAA,GAAAoS,EAAAoP,GAAApP,EAAA,kBAmCE5N,IAAkBA,EAAe7R,UACpC6R,EAAiBjQ,EAAKnC,cAAckO,MAAM,IApCzC,WAwCAkE,IAAkBjQ,EAAKnC,cAAckO,MAAMkE,GAAgBid,IAAI,GAxC/D,CAAArP,EAAAnS,KAAA,gBAAAmS,EAAA1B,OAAA,SAyCInc,EAAKnC,cAAckO,MAAM,IAzC7B,eAAA8R,EAAAnS,KAAA,GA4CmB1L,EAAKnC,cAAcsvB,oBAAoBZ,EAAgBa,0BAA0BthB,EAAMtH,GA5C1G,eA4CCioB,EA5CD5O,EAAApP,KA8CCie,EAA4B1sB,EAAKnC,cAAckO,MAAMkE,GAAgBlI,MAAMukB,GACjFF,EAAMM,EAA0B3O,IAAI0O,GAAW1kB,MAAM,KA/ChD8V,EAAA1B,OAAA,SAmDEnc,EAAKnC,cAAcwc,cAAc8R,EAAcC,IAnDjD,eAAAvO,EAAA1B,OAAA,SAsDAiQ,GAtDA,yBAAAvO,EAAAhR,SAAA6Q,EAAA5iB,KAAA,cArDS,gBAAAgS,EAAA4B,GAAA,OAAAud,EAAAlf,MAAAjS,KAAAkS,YAAA,GAAAlS,KA+GlBuyB,SA/GkB,eAAA7O,EAAA/jB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+GP,SAAAiT,EAAOkP,GAAP,IAAAnB,EAAA/R,EAAAmT,EAAA,OAAAhC,EAAAtwB,EAAAsQ,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,UAEHygB,EAFG,gBAAA1qB,OAE6B6rB,GAGnB,QAFblT,EAAapa,EAAKnC,cAAc2vB,8BAA8BrB,KAExCnsB,EAAKnC,cAAckO,MAAMqO,GAAYhc,QALxD,CAAAqgB,EAAA/S,KAAA,eAAA+S,EAAAtC,OAAA,SAMAnc,EAAKnC,cAAckO,MAAMqO,IANzB,cAAAqE,EAAA/S,KAAA,EASc1L,EAAKnC,cAAcguB,oBAAoB,iBAAiB,aAAa,CAACyB,IATpF,YASLC,EATK9O,EAAAhQ,OAWUzO,EAAKnC,cAAckO,MAAMwhB,GAAYnvB,QAX/C,CAAAqgB,EAAA/S,KAAA,gBAYP6hB,EAAavtB,EAAKnC,cAAckO,MAAMwhB,GAZ/B9O,EAAAtC,OAAA,SAaAnc,EAAKnC,cAAc4vB,8BAA8BtB,EAAcoB,EAAW,OAb1E,eAAA9O,EAAAtC,OAAA,SAeF,MAfE,yBAAAsC,EAAA5R,SAAAuR,EAAAtjB,SA/GO,gBAAA4yB,GAAA,OAAAlP,EAAAzR,MAAAjS,KAAAkS,YAAA,GAAAlS,KAiIlBgyB,gBAjIkB,eAAAa,EAAAlzB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAiIA,SAAA6T,EAAOxa,GAAP,IAAA2nB,EAAA/R,EAAAmT,EAAAK,EAAAC,EAAA,OAAAtC,EAAAtwB,EAAAsQ,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,UAEVygB,EAFU,uBAAA1qB,OAE6B+C,EAAYqoB,KAAK/gB,OAE3C,QADbsO,EAAapa,EAAKnC,cAAc2vB,8BAA8BrB,KACxCnsB,EAAKnC,cAAckO,MAAMqO,GAAYhc,QAJjD,CAAA6gB,EAAAvT,KAAA,eAAAuT,EAAA9C,OAAA,SAKPnc,EAAKnC,cAAckO,MAAMqO,IALlB,cAAA6E,EAAAvT,KAAA,EASS1L,EAAKqtB,SAAS7oB,EAAYqoB,KAAKllB,SATxC,YASV4lB,EATUtO,EAAAxQ,MAAA,CAAAwQ,EAAAvT,KAAA,YAcRkiB,EAAgB5tB,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,kBAG9D+d,EAAe7tB,EAAKnC,cAAckO,MAAMwhB,GAAYxlB,MAAM/H,EAAKnC,cAAckO,MAAM6hB,IAAgB7P,IAAI,MAExG/d,EAAKnC,cAAckO,MAAM8hB,GAAczvB,QAnB9B,CAAA6gB,EAAAvT,KAAA,gBAAAuT,EAAA9C,OAAA,SAoBLnc,EAAKnC,cAAc4vB,8BAA8BtB,EAAc0B,IApB1D,eAAA5O,EAAA9C,OAAA,SAwBT,MAxBS,yBAAA8C,EAAApS,SAAAmS,EAAAlkB,SAjIA,gBAAAgzB,GAAA,OAAAH,EAAA5gB,MAAAjS,KAAAkS,YAAA,GAAAlS,KA4JlBizB,oBA5JkBtzB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA4JI,SAAA6iB,IAAA,IAAArjB,EAAAF,EAAAwjB,EAAAC,EAAAC,EAAAC,EAAAphB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8iB,GAAA,cAAAA,EAAA5iB,KAAA4iB,EAAA3iB,MAAA,UAAOf,EAAPyjB,EAAAtvB,OAAA,QAAAmqB,IAAAmF,EAAA,GAAAA,EAAA,GAAe,KAAK3jB,EAApB2jB,EAAAtvB,OAAA,QAAAmqB,IAAAmF,EAAA,GAAAA,EAAA,GAAoC,KAAKH,EAAzCG,EAAAtvB,OAAA,QAAAmqB,IAAAmF,EAAA,IAAAA,EAAA,GACfzjB,IACHA,EAAU3K,EAAKjF,MAAM4P,UAElBF,GAAmBzK,EAAKjF,MAAMmT,mBACjCzD,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBtuB,EAAKjF,MAAMmT,mBAGzDvD,GAAYF,EARG,CAAA4jB,EAAA3iB,KAAA,eAAA2iB,EAAAlS,OAAA,UASX,GATW,cAYd+R,EAAmBluB,EAAKnC,cAAc0wB,uBAExCJ,EAAanuB,EAAKnC,cAAckO,MAAM,GAdtBsiB,EAAA3iB,KAAA,GAed1L,EAAKnC,cAAckN,aAAatQ,OAAOoE,KAAK4L,GAA5C,eAAA+jB,EAAA/zB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA6D,SAAAsjB,EAAO3iB,GAAP,IAAAtH,EAAAkqB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvD,EAAAtwB,EAAAsQ,KAAA,SAAAwjB,GAAA,cAAAA,EAAAtjB,KAAAsjB,EAAArjB,MAAA,UAC3DlH,EAAciG,EAAgBqB,IAEb9L,EAAKnC,cAAcktB,aAAa,CAAC,iBAAiBmD,GAAkBluB,EAAKwE,aAE7EwqB,SAASxqB,EAAYqoB,KAAK/gB,OALoB,CAAAijB,EAAArjB,KAAA,eAAAqjB,EAAA5S,OAAA,wBAAA4S,EAAArjB,KAAA,EAYvD8P,QAAQqD,IAAI,CACpB7e,EAAKqtB,SAAS7oB,EAAYqoB,KAAKllB,SAC/B3H,EAAKnC,cAAcoxB,iBAAiBtkB,EAAQnG,KAdmB,OAAAkqB,EAAAK,EAAAtgB,KAAAkgB,EAAAl0B,OAAAsyB,EAAA,EAAAtyB,CAAAi0B,EAAA,GAU/DE,EAV+DD,EAAA,GAW/DE,EAX+DF,EAAA,GAiB7DC,GAAaC,IACTC,EAAaF,EAAU7mB,MAAM8mB,GACnCV,EAAaA,EAAW5hB,KAAKuiB,IAnBkC,yBAAAC,EAAAliB,SAAA4hB,EAAA3zB,SAA7D,gBAAAo0B,GAAA,OAAAV,EAAAzhB,MAAAjS,KAAAkS,YAAA,IAfc,eAsChBihB,IACFE,EAAanuB,EAAKnC,cAAc0R,iBAAiB4e,EAAWnuB,EAAKwE,YAAY/F,UAC7E0vB,EAAanuB,EAAKnC,cAAcsxB,qBAAqBhB,EAAWnuB,EAAKwE,YAAY4qB,wBAxC/Df,EAAAlS,OAAA,SA2CbgS,GA3Ca,yBAAAE,EAAAxhB,SAAAmhB,EAAAlzB,SA5JJA,KA0MlBu0B,UA1MkB50B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0MN,SAAAmkB,IAAA,IAAA7kB,EAAA2f,EAAAjmB,EAAAorB,EAAAviB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,cAAOjB,EAAP8kB,EAAAzwB,OAAA,QAAAmqB,IAAAsG,EAAA,GAAAA,EAAA,GAAuB,QAE/B9kB,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBtuB,EAAKjF,MAAMmT,mBAE1Dkc,EAASpqB,EAAKnC,cAAckO,MAAM,GAClC5H,EAAkBnE,EAAKnC,cAAckO,MAAM,GALrCyjB,EAAA9jB,KAAA,EAMJ1L,EAAKnC,cAAckN,aAAatQ,OAAOoE,KAAK4L,GAA5C,eAAAglB,EAAAh1B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA6D,SAAAukB,EAAO5jB,GAAP,IAAAtH,EAAAmrB,EAAAC,EAAAC,EAAAtD,EAAA,OAAAhB,EAAAtwB,EAAAsQ,KAAA,SAAAukB,GAAA,cAAAA,EAAArkB,KAAAqkB,EAAApkB,MAAA,cAC3DlH,EAAciG,EAAgBqB,GAD6BgkB,EAAApkB,KAAA,EAEzB8P,QAAQqD,IAAI,CAClD7e,EAAKgsB,OAAOlgB,EAAMtH,GAClBxE,EAAKnC,cAAc0G,mBAAmBC,GAAY,GAAM,KAJO,OAAAmrB,EAAAG,EAAArhB,KAAAmhB,EAAAn1B,OAAAsyB,EAAA,EAAAtyB,CAAAk1B,EAAA,GAE1DE,EAF0DD,EAAA,GAElDrD,EAFkDqD,EAAA,GAO7DC,GAAWtD,IACbnC,EAASA,EAAO7d,KAAKsjB,EAAQ9nB,MAAMwkB,EAAgBpoB,kBACnDA,EAAkBA,EAAgBoI,KAAKggB,EAAgBpoB,kBATQ,wBAAA2rB,EAAAjjB,SAAA6iB,EAAA50B,SAA7D,gBAAAi1B,GAAA,OAAAN,EAAA1iB,MAAAjS,KAAAkS,YAAA,IANI,cAmBVod,EAASA,EAAOrM,IAAI5Z,GAnBVqrB,EAAArT,OAAA,SAqBHiO,GArBG,wBAAAoF,EAAA3iB,SAAAyiB,EAAAx0B,SAzMVA,KAAKgD,SAAS/C,oECGZi1B,EAAgBC,EAAQ,KAE9B/Q,OAAOgR,SAAW,OAEZnyB,aAOJ,SAAAA,EAAYhD,GAAO,IAAAiF,EAAAlF,KAAAL,OAAA0wB,EAAA,EAAA1wB,CAAAK,KAAAiD,GAAAjD,KAJnBC,MAAQ,GAIWD,KAHnBq1B,aAAe,KAGIr1B,KAKnBgD,SAAW,SAAA/C,GACTiF,EAAKjF,MAAQA,GANID,KAQnBs1B,QAAU,SAAArU,GACR,OAAO/b,EAAK+L,MAAMgQ,GAAK/T,QAAQ,IATdlN,KAWnBu1B,KAAO,SAAAC,GAAC,OAAI,IAAItwB,EAAKjF,MAAMse,KAAKkX,MAAMC,GAAGF,IAXtBx1B,KAYnB21B,MAAQ,SAAAC,GACN,OAAK1wB,EAAKjF,MAAMse,KAGTrZ,EAAKjF,MAAMse,KAAKkX,MAAMI,SAC1BD,GAAO,GAAG1S,WACX,SAJO,MAdQljB,KAqBnB81B,MAAQ,SAAA7U,GACN,OAAK/b,EAAKjF,MAAMse,KAGTrZ,EAAKjF,MAAMse,KAAKkX,MAAMK,OAC1B7U,GAAO,GAAGiC,WACX,SAJO,MAvBQljB,KA8BnB+1B,WAAa,SAAAlH,GACX,IAAI/nB,EAAI6mB,SAASvtB,cAAc,YAE/B,OADA0G,EAAEkvB,UAAYnH,EACiB,IAAxB/nB,EAAEmvB,WAAWjyB,OAAe,GAAK8C,EAAEmvB,WAAW,GAAGC,WAjCvCl2B,KAmCnBm2B,UAAY,SAAAC,GAAC,OAAI,IAAIC,IAAUD,IAnCZp2B,KAoCnBiR,MAAQ,SAAAmlB,GAAC,OAAI,IAAIC,IAAuB,kBAAND,EAAiBA,EAAIE,OAAOF,KApC3Cp2B,KAqCnB0iB,UAAY,WAAc,QAAA6T,EAAArkB,UAAAlO,OAAV/D,EAAU,IAAAu2B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVx2B,EAAUw2B,GAAAvkB,UAAAukB,GAAMrpB,IAAcspB,KAAKC,iBAAiBzxB,EAAKwd,UAALzQ,MAAA/M,EAAI,CAAW0xB,MAASphB,OAAO,aAA3B7O,OAA2C1G,KArChGD,KAsCnB62B,eAAiB,WAAc,QAAAC,EAAAC,EAAA7kB,UAAAlO,OAAV/D,EAAU,IAAAu2B,MAAAO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAV/2B,EAAU+2B,GAAA9kB,UAAA8kB,GAAM5pB,IAAcspB,KAAKO,gBAAeH,EAAAI,SAAQha,MAARjL,MAAA6kB,EAAA,CAAcF,MAASphB,OAAO,aAA9B7O,OAA8C1G,KAtClGD,KAuCnBm3B,kBAAoB,SAAC3Z,GAAmC,IAArB4Z,EAAqBllB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAC7CklB,EAAYA,GAAalyB,EAAKjF,MAAMue,QAAQ6Y,SAASjyB,GACrD,IAAIkyB,EAAWpyB,EAAKjF,MAAMs3B,UAAUrY,KAAK,SAAAsY,GAAC,OAAIA,GAAKA,EAAEr1B,MAAQq1B,EAAEr1B,OAASqb,IAMxE,SAJE8Z,EADEpyB,EAAKjF,MAAMue,SAAWtZ,EAAKjF,MAAMue,QAAQ6Y,UAAYnyB,EAAKjF,MAAMue,QAAQiZ,WAAavyB,EAAKjF,MAAMue,QAAQkZ,kBAAoBN,IAAclyB,EAAKjF,MAAMue,QAAQiZ,QAAQryB,KAAOF,EAAKjF,MAAM03B,mBAAqBzyB,EAAKjF,MAAM03B,kBAAkBP,GAChOlyB,EAAKjF,MAAM03B,kBAAkBP,GAAWlY,KAAK,SAAAsY,GAAC,OAAIA,GAAKA,EAAEr1B,MAAQq1B,EAAEr1B,OAASqb,IAE5EtY,EAAKjF,MAAMs3B,UAAUrY,KAAK,SAAAsY,GAAC,OAAIA,GAAKA,EAAEr1B,MAAQq1B,EAAEr1B,OAASqb,MAK/D8Z,EAASA,UAlDCt3B,KAoDnB43B,8BAAgC,SAACpC,GAC/B,OAAOA,EAAEqC,QAAQ,YAAa,MAC3BA,QAAQ,OAAQ,IAChBA,QAAQ,QAAS,IACjBA,QAAQ,UAAW,KACnBA,QAAQ,SAAU,KAzDJ73B,KA2DnByN,WAAa,SAACqqB,GACZ,OAAOA,EAAMA,EAAI/S,OAAO,EAAG,GAAG9P,cAAgB6iB,EAAI/S,OAAO,GAAK,IA5D7C/kB,KA8DnBoS,YAAc,SAACyD,GAAwB,IAAlBL,EAAkBtD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAC5B,OAAO0kB,IAAO/gB,EAAML,IA/DHxV,KAiEnB+3B,kBAAoB,SAACC,EAAMC,GAOzB,OANIA,GAAQt4B,OAAOoE,KAAKk0B,GAAMj0B,QAC5BrE,OAAOoE,KAAKk0B,GAAMh0B,QAAQ,SAAA1C,GACxBy2B,EAAKz2B,GAAK02B,EAAK12B,KAIZy2B,GAxEUh4B,KA0EnBk4B,2BAA6B,SAACF,EAAMC,GAAuB,IAAjBh4B,EAAiBiS,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAYhD,OAXI+lB,GAAQt4B,OAAOoE,KAAKk0B,GAAMj0B,QAC5BrE,OAAOoE,KAAKk0B,GAAMh0B,QAAQ,SAAA1C,GACD,oBAAZ02B,EAAK12B,GACdy2B,EAAKz2B,GAAK02B,EAAK12B,GAAGtB,GACU,kBAAZg4B,EAAK12B,GACrBy2B,EAAKz2B,GAAL5B,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAeq4B,EAAKz2B,GAAO2D,EAAKgzB,2BAA2BF,EAAMC,EAAK12B,GAAItB,IAE1E+3B,EAAKz2B,GAAK02B,EAAK12B,KAIdy2B,GAtFUh4B,KAwFnBo4B,UAAY,SAACC,GACX,IAAIC,EAAM3K,SAASvtB,cAAc,OAEjC,OADAk4B,EAAItC,UAAYqC,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IA3F1Bx4B,KA8FnBy4B,SAAW,SAACC,EAAIC,GACd,IAAMC,EAAQxU,OAAOyU,QACfC,EAASJ,EAAKE,EAEhBG,EAAc,EAElB3nB,KAAK4nB,cAAgB,SAAUC,EAAGC,EAAG1B,EAAGttB,GAEtC,OADA+uB,GAAK/uB,EAAI,GACD,EAAUstB,EAAI,EAAIyB,EAAIA,EAAIC,GAE1B1B,EAAI,KADZyB,GACsBA,EAAI,GAAK,GAAKC,IAGhB,SAAhBC,IACJJ,GAXgB,GAYhB,IAAIK,EAAMhoB,KAAK4nB,cAAcD,EAAaH,EAAOE,EAAQH,GACzDvU,OAAOqU,SAAS,EAAGW,GACfL,EAAcJ,GAChBvU,OAAOjB,WAAWgW,EAfJ,IAmBlBA,IApHiBn5B,KAsHnBq5B,8BAAgC,SAACl3B,GAAqC,IAA/Bm3B,EAA+BpnB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAzBkS,OAAOmV,SAAS3T,KAE3DzjB,EAAOA,EAAK01B,QAAQ,UAAW,QAC/B,IACE2B,EADU,IAAIC,OAAO,OAASt3B,EAAO,qBACrBu3B,KAAKJ,GACvB,OAAKE,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAG3B,QAAQ,MAAO,MAD5B,GADH,MA3HJ73B,KA+HnB45B,YAAc,SAAC7oB,EAAIrH,GAEjB,IAAKA,EAAYqoB,KACf,OAAO,KAGT,IAAMS,EAAmB9oB,EAAYqoB,KAAKllB,QACpCgtB,EAA2B30B,EAAK8P,gBAAgB,CAAC,WAAY,UAAW,UAAW,kBACnF8kB,EAAwBpwB,EAAYqwB,WAAarwB,EAAYqwB,UAAUC,kBAAoBtwB,EAAYqwB,UAAUC,kBAAkBntB,QAAU,KAC7IotB,EAA4BvwB,EAAYqwB,WAAarwB,EAAYqwB,UAAUC,mBAAqBtwB,EAAYqwB,UAAUC,kBAAkBE,aAAexwB,EAAYqwB,UAAUC,kBAAkBE,aAAe,GAC9MC,EAAiBj1B,EAAK8P,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,kBAAmBtL,EAAYqoB,KAAK/gB,QAC/GopB,EAA6BD,GAAkBA,EAAeH,kBAAoBG,EAAeH,kBAAkBntB,QAAU,KAG7HwtB,EADqBD,GAA8BrpB,EAAG9E,KAAKa,gBAAkBstB,EAA2BttB,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAC5MgtB,IAA0B/oB,EAAG9E,KAAKa,gBAAkBgtB,EAAsBhtB,gBAAuH,IAAtGmtB,EAA0Bn0B,IAAI,SAAC0E,GAAQ,OAAOA,EAAEsC,gBAAkBkP,QAAQjL,EAAG9E,KAAKa,iBAA0BiE,EAAGupB,gBAAgBxtB,gBAAkB0lB,EAAiB1lB,cACpSytB,GAAoBF,GAAiBtpB,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkB0lB,EAAiB1lB,cACzJ0tB,GAAuBH,GAAiBtpB,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkB0lB,EAAiB1lB,cAC1J2tB,GAAeJ,IAAkBE,IAAqBC,IAAwBzpB,EAAG2nB,GAAG5rB,gBAAkB0lB,EAAiB1lB,eAAkB+sB,GAA4B9oB,EAAG2nB,GAAG5rB,gBAAkB+sB,EAAyBhtB,QAAQC,eAC9N4tB,GAAcL,IAAkBE,IAAqBC,GAAuBzpB,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,cACvH6tB,GAAYN,IAAkBE,IAAqBC,IAAwBC,GAAe1pB,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkB0lB,EAAiB1lB,cAE9MoE,EAAS,KAkBb,OAhBIupB,EACFvpB,EAAS,UACAwpB,EACTxpB,EAAS,SACAmpB,EACTnpB,EAAS,UACAqpB,EACTrpB,EAAS,OACAspB,EACTtpB,EAAS,UACAypB,EACTzpB,EAAS,OACAypB,IACTzpB,EAAS,WAGJA,GAtKUlR,KAwKnBkI,YAAc,SAACL,GAAmC,IAA7B+yB,EAA6B1oB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAlB,EAAG2oB,EAAe3oB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAN,EACtC4oB,EAAYjzB,EACVkzB,EAAUD,EAAU/V,OAAO,EAAG6V,GAC9BI,EAAQF,EAAU/V,OAAO+V,EAAU92B,OAAS62B,GAElD,OADAC,EAAYC,EAAU,MAAQC,GA5Kbh7B,KAgLnBi7B,oBAAsB,SAACC,GACrB,IAAM3c,EAAOrZ,EAAKi2B,kBAIlB,IAAK5c,IAASA,EAAKkX,QAAUlX,EAAK6c,iBAA2D,oBAAjC7c,EAAK6c,gBAAgBC,QAC/E,OAAO,EAMT,GAHAH,EAAU5pB,SAAS4pB,IACGh2B,EAAK8P,gBAAgB,CAAC,UAAW,oBAAqBkmB,IAG1E,OAAO,EAGT,IAAMrd,EAAS,CAAC,CACdqd,QAAS3c,EAAKkX,MAAM6F,MAAMJ,KAG5B,OAAO3c,EAAK6c,gBAAgBC,QAAQ,CAClCxd,SACA0d,OAAQ,gCAtMOv7B,KA0MnBw7B,iBAAmB,SAACN,GAClB,IAAM3c,EAAOrZ,EAAKi2B,kBAIlB,IAAK5c,IAASA,EAAKkX,QAAUlX,EAAK6c,iBAA2D,oBAAjC7c,EAAK6c,gBAAgBC,QAC/E,OAAO,EAGTH,EAAU5pB,SAAS4pB,GACnB,IAAMO,EAAgBv2B,EAAK8P,gBAAgB,CAAC,UAAW,oBAAqBkmB,IAE5E,IAAKO,EACH,OAAO,EAGT,GAAgB,IAAZP,EACF,OAAOh2B,EAAK+1B,oBAAoBC,GAGlC,IAAMQ,EAAYD,EAAcC,WAAaD,EAAct5B,KACrDw5B,EAAiBz2B,EAAK8P,gBAAgB,CAAC,UAAW,YAAaymB,EAAcvZ,WAC7E0Z,EAAmB12B,EAAK8P,gBAAgB,CAAC,UAAW,YAAaymB,EAAc3V,SAAU,UAAWoV,IAEpGrd,EAAS,CAAC,CACd6d,YACAG,QAAS,CAHKF,EAAeG,WAAaH,EAAeG,UAAUZ,IAAcS,EAAeI,IAAIb,GAAWS,EAAe90B,KAI9Hq0B,QAAS3c,EAAKkX,MAAM6F,MAAMJ,GAC1Bc,eAAgB,CACdr4B,SAAU,GACVxB,KAAMs5B,EAAcQ,UACpBC,OAAQT,EAAcQ,WAExBE,kBAAmB,CAACP,KAKtB,OAAOrd,EAAK6c,gBAAgBC,QAAQ,CAClCxd,SACA0d,OAAQ,6BAlPOv7B,KAqPnBmI,WArPmB,eAAA+H,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAqPN,SAAA+P,EAAOvT,GAAP,IAAAuqB,EAAAgF,EAAA/K,EAAA/R,EAAA+c,EAAAna,EAAAoa,EAAAl0B,EAAAm0B,EAAA,OAAA9L,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,UAELwmB,EAAYlyB,EAAKuuB,wBACjB2I,EAAYl3B,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,SAEjD8c,SAAYsK,EAAUI,kBAAkBtI,SAASkD,GALrD,CAAA9W,EAAA1P,KAAA,eAAA0P,EAAAe,OAAA,SAMF,MANE,UASNnc,EAAKu3B,aAAa5vB,IAAa3H,EAAKjF,MAAMse,KATpC,CAAA+B,EAAA1P,KAAA,eAAA0P,EAAAe,OAAA,SAUF,MAVE,UAaLgQ,EAbK,cAAA1qB,OAayBkG,KAC9ByS,EAAapa,EAAKwtB,8BAA8BrB,IAd3C,CAAA/Q,EAAA1P,KAAA,gBAAA0P,EAAAe,OAAA,SAgBF/B,GAhBE,WAmBL+c,EAAM,KACNna,EAAWhd,EAAKjF,MAAMse,KAAK6c,gBACf,IAAdhE,EArBO,CAAA9W,EAAA1P,KAAA,gBAsBH0rB,EAAM,IAAII,IAAI,CAAExa,WAAUya,WAAYC,wBAAcxF,EAAUlU,cAtB3D5C,EAAA1P,KAAA,GAuBa0rB,EAAIO,QAAQhwB,GAvBzB,aAuBHzE,EAvBGkY,EAAA3M,QAwBMvL,EAAQjG,KAxBd,CAAAme,EAAA1P,KAAA,gBAAA0P,EAAA1P,KAAA,GAyBoB0rB,EAAIn6B,KAAKiG,EAAQjG,MAAM26B,aAzB3C,aAyBDP,EAzBCjc,EAAA3M,OA0Ba9G,EAAQC,gBAAkByvB,EAAazvB,cA1BpD,CAAAwT,EAAA1P,KAAA,gBAAA0P,EAAAe,OAAA,SA2BEnc,EAAKytB,8BAA8BtB,EAAejpB,EAAQjG,KAAMk6B,IA3BlE,eAAA/b,EAAAe,OAAA,SAgCJ,MAhCI,yBAAAf,EAAAvO,SAAAqO,EAAApgB,SArPM,gBAAAmhB,GAAA,OAAAjR,EAAA+B,MAAAjS,KAAAkS,YAAA,GAAAlS,KAuRnB+8B,4BAvRmBp9B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAuRW,SAAAuS,IAAA,IAAAoa,EAAAntB,EAAAotB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1L,EAAA3f,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UAAOosB,EAAPnL,EAAA7tB,OAAA,QAAAmqB,IAAA0D,EAAA,GAAAA,EAAA,GAA2B,KAAMhiB,EAAjCgiB,EAAA7tB,OAAA,QAAAmqB,IAAA0D,EAAA,GAAAA,EAAA,GAA2C,KACjEoL,EAAY,CAChBt7B,aAAc,GACd67B,eAAgB,GAChBC,gBAAiB,GACjBN,OAAQj4B,EAAK+L,MAAM,GACnBmsB,aAAcl4B,EAAK+L,MAAM,GACzBosB,cAAen4B,EAAK+L,MAAM,GAC1BqsB,gBAAiBp4B,EAAK+L,MAAM,GAC5BssB,kBAAmBr4B,EAAK+L,MAAM,IAGhC+rB,EAAoBA,GAAwC93B,EAAKjF,MAAM+8B,mBACvEntB,EAAUA,GAAoB3K,EAAKjF,MAAM4P,UAExBmtB,EAfW,CAAAja,EAAAnS,KAAA,eAAAmS,EAAA1B,OAAA,SAgBnB4b,GAhBmB,cAmBtBC,EAAWh4B,EAAK8P,gBAAgB,CAAC,aAnBX+N,EAAAnS,KAAA,GAqBtB1L,EAAK+K,aAAatQ,OAAOoE,KAAKi5B,GAA9B,eAAArc,EAAAhhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAkD,SAAAiD,EAAOoqB,GAAP,IAAAC,EAAA,OAAAlN,EAAAtwB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAChD+sB,EAAiBX,EAAkBU,GADalqB,EAAA5C,KAAA,EAGhD1L,EAAK+K,aAAatQ,OAAOoE,KAAK45B,GAA9B,eAAAC,EAAAj+B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+C,SAAAC,EAAOU,GAAP,IAAAtH,EAAA,OAAA+mB,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC7ClH,EAAci0B,EAAe3sB,GADgBN,EAAAE,KAAA,EAG7C1L,EAAK+K,aAAatQ,OAAOoE,KAAKm5B,GAA9B,eAAAW,EAAAl+B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAyC,SAAAwQ,EAAOid,GAAP,IAAAC,EAAAC,EAAA7M,EAAAI,EAAA0M,EAAAC,EAAAC,EAAAX,EAAAY,EAAA3a,EAAAC,EAAA2a,EAAAC,EAAAC,EAAA1L,EAAA2L,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApO,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cACvCmtB,EAAgBr0B,EAAYo0B,IAE9BE,EAAc94B,EAAK8P,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,kBAAkBhE,MAChEgtB,EAAYc,cAAgBd,EAAYc,aAAa9tB,MAAMlE,gBAAkBixB,EAAc/sB,MAAMlE,gBAClHkxB,EAAc,MAL6Bhd,EAAApQ,KAAA,EAcnC8P,QAAQqD,IAAI,CACpB7e,EAAK65B,mBAAmBhB,EAAc57B,KAAK0N,GAC3C3K,EAAK85B,mBAAmBt1B,EAAaq0B,EAAeluB,GACpDmuB,EAAc94B,EAAK65B,mBAAmBf,EAAY77B,KAAM0N,GAAW3K,EAAK+L,MAAM,GAC9E/L,EAAK+5B,yBAAyBpvB,EAAQkuB,EAAcA,EAAcmB,UAAUC,SAC5Ej6B,EAAKk6B,wBAAwBrB,EAAcsB,WAAWl9B,KAAK0N,EAAQ,KAAKkuB,EAAcmB,UAAUI,iBAnBrD,UAAAnO,EAAAnQ,EAAArN,KAAA4d,EAAA5xB,OAAAsyB,EAAA,EAAAtyB,CAAAwxB,EAAA,GAS3C8M,EAT2C1M,EAAA,GAU3C2M,EAV2C3M,EAAA,GAW3C4M,EAX2C5M,EAAA,GAY3CiM,EAZ2CjM,EAAA,GAa3C6M,EAb2C7M,EAAA,GAsBzC2M,GAAmBA,EAAgBv8B,eACrCs7B,EAAUt7B,aAAVhC,OAAA4/B,EAAA,EAAA5/B,CAA6Bs9B,EAAUt7B,cAAvCgF,OAAAhH,OAAA4/B,EAAA,EAAA5/B,CAAwDu+B,EAAgBv8B,gBAI1EhC,OAAOoE,KAAKy5B,GAAgBv5B,QAAS,SAAAu7B,GAC9BvC,EAAUO,eAAegC,KAC5BvC,EAAUO,eAAegC,GAAe,CACtChuB,YAAYtM,EAAK+L,MAAM,GACvBkE,eAAejQ,EAAK+L,MAAM,GAC1BwuB,qBAAqBv6B,EAAK+L,MAAM,KAGpC,IAAMO,EAAetM,EAAK+L,MAAMusB,EAAegC,IAAcl8B,QAAoD4B,EAAK+L,MAAM,GAArD/L,EAAK+L,MAAMusB,EAAegC,IACjGvC,EAAUO,eAAegC,GAAahuB,YAAcyrB,EAAUO,eAAegC,GAAahuB,YAAYC,KAAKD,OAKxGysB,GAAuB/4B,EAAK+L,MAAMgtB,GAAqBppB,GAAG,IAAQupB,GAAwBl5B,EAAK+L,MAAMmtB,GAAsBvpB,GAAG,IAAQspB,GAAsBj5B,EAAK+L,MAAMktB,GAAoBtpB,GAAG,IAzCtJ,CAAAmM,EAAApQ,KAAA,YA0C3CutB,EAAqBj5B,EAAKuP,iBAAiB0pB,EAAmBJ,EAAcp6B,UAC5Es6B,EAAsB/4B,EAAKuP,iBAAiBwpB,EAAoBF,EAAcp6B,UAC9Ey6B,EAAuBl5B,EAAKuP,iBAAiB2pB,EAAqBL,EAAcp6B,UAAU8N,KAAK0sB,GAC/FF,EAAsBA,EAAoBxsB,KAAK2sB,IAI3Cl5B,EAAK+L,MAAMgtB,GAAqBppB,GAAG,GAjDI,CAAAmM,EAAApQ,KAAA,gBAAAoQ,EAAApQ,KAAA,GAqD/B8P,QAAQqD,IAAI,CACpB7e,EAAKw6B,oBAAoB,eAAgB,GAAIhC,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,GACnG3K,EAAKw6B,oBAAoB,uBAAwB,GAAIhC,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,KAvDpE,WAAA4T,EAAAzC,EAAArN,KAAA+P,EAAA/jB,OAAAsyB,EAAA,EAAAtyB,CAAA8jB,EAAA,GAmDvC4a,EAnDuC3a,EAAA,GAoDvC4a,EApDuC5a,EAAA,GA0DpCxe,EAAK+L,MAAMotB,GAAc/6B,SAAY4B,EAAK+L,MAAMqtB,GAAah7B,QA1DzB,CAAA0d,EAAApQ,KAAA,gBA2DjC2tB,EAAeN,EAAoBhxB,MAAMoxB,GA3DRrd,EAAApQ,KAAA,GAgE7B8P,QAAQqD,IAAI,CACpB7e,EAAKy6B,2BAA2BpB,EAAa70B,GAC7CxE,EAAKy6B,2BAA2BpB,EAAa7sB,MAAMwsB,EAAgBW,iBAAiBn1B,GACpFxE,EAAKw6B,oBAAoB,aAAc,GAAIhC,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,KAnE5D,QAAAgjB,EAAA7R,EAAArN,KAAA6qB,EAAA7+B,OAAAsyB,EAAA,EAAAtyB,CAAAkzB,EAAA,GA6DrC4L,EA7DqCD,EAAA,GA8DrCE,EA9DqCF,EAAA,GA+DrCG,EA/DqCH,EAAA,GAsEjCI,EAAYH,EAAsBxb,IAAIqb,GACtCO,EAAkBX,EAAgB0B,yBAIxC3C,EAAUQ,gBAAgBtwB,KAAK,CAC7B6D,QACA8sB,UACAJ,WACAkB,YACAD,aACAN,eACAK,kBACAG,kBACAZ,sBACAG,uBACAG,aAAaE,IAMfxB,EAAUG,aAAeH,EAAUG,aAAa3rB,KAAKgtB,GA5Fd,yBAAAzd,EAAAjP,SAAA8O,EAAA7gB,SAAzC,gBAAA4T,GAAA,OAAAiqB,EAAA5rB,MAAAjS,KAAAkS,YAAA,IAH6C,wBAAAxB,EAAAqB,SAAAzB,EAAAtQ,SAA/C,gBAAAgS,GAAA,OAAA4rB,EAAA3rB,MAAAjS,KAAAkS,YAAA,IAHgD,wBAAAsB,EAAAzB,SAAAuB,EAAAtT,SAAlD,gBAAAohB,GAAA,OAAAT,EAAA1O,MAAAjS,KAAAkS,YAAA,IArBsB,eA+HxBirB,EAASj4B,EAAK+L,MAAM,GACpBmsB,EAAel4B,EAAK+L,MAAM,GAC1BosB,EAAgBn4B,EAAK+L,MAAM,GAC3BqsB,EAAkBp4B,EAAK+L,MAAM,GAC7BssB,EAAoBr4B,EAAK+L,MAAM,GAGnCgsB,EAAUQ,gBAAgBx5B,QAAQ,SAAA47B,GAChC,IAAMlB,EAAaz5B,EAAK+L,MAAM4uB,EAAYlB,YACpCmB,EAAgBD,EAAYtB,aAAatb,IAAIga,EAAUG,cAG7DyC,EAAYC,cAAgBA,EAExBD,EAAYnB,kBACdrB,EAAgBA,EAAc5rB,KAAKouB,EAAYnB,kBAG7CC,IACFxB,EAASA,EAAO1rB,KAAKktB,EAAW1xB,MAAM6yB,KAGpCD,EAAYhB,kBACdvB,EAAkBA,EAAgB7rB,KAAKouB,EAAYhB,kBAIjDgB,EAAYtB,eACdnB,EAAeA,EAAa3rB,KAAKouB,EAAYtB,iBAI7CjB,EAAgBzoB,GAAG,KACrB0oB,EAAoBF,EAAcpa,IAAIqa,GAAiBrwB,MAAM,MAhKnC8V,EAAAnS,KAAA,GAoKtB1L,EAAK+K,aAAatQ,OAAOoE,KAAKk5B,EAAUO,gBAAxC,eAAA9J,EAAA/zB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAyD,SAAAuR,EAAO4d,GAAP,IAAAO,EAAAC,EAAA,OAAAvP,EAAAtwB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,YACvDmvB,EAAoB76B,EAAK8P,gBAAgB,CAAC,YAAYwqB,KACtChgB,cAAeyd,EAAUO,eAAegC,GAAahuB,YAAYqD,GAAG,GAF7B,CAAAiN,EAAAlR,KAAA,eAAAkR,EAAAlR,KAAA,EAGnB1L,EAAK+6B,8BAA8BF,GAHhB,OAGrDC,EAHqDle,EAAAnO,KAI3DspB,EAAUO,eAAegC,GAAarqB,eAAiB6qB,EACvD/C,EAAUO,eAAegC,GAAaC,qBAAuBxC,EAAUO,eAAegC,GAAahuB,YAAYvE,MAAM+yB,GAIrH5C,EAAeA,EAAa3rB,KAAKwrB,EAAUO,eAAegC,GAAaC,sBATZ,wBAAA3d,EAAA/P,SAAA6P,EAAA5hB,SAAzD,gBAAA4yB,GAAA,OAAAc,EAAAzhB,MAAAjS,KAAAkS,YAAA,IApKsB,eAiL5B+qB,EAAUE,OAASA,EACnBF,EAAUG,aAAeA,EACzBH,EAAUI,cAAgBA,EAC1BJ,EAAUK,gBAAkBA,EAC5BL,EAAUM,kBAAoBA,EArLFxa,EAAA1B,OAAA,SAyLrB4b,GAzLqB,yBAAAla,EAAAhR,SAAA6Q,EAAA5iB,SAvRXA,KAkdnBkgC,oBAldmBvgC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAkdG,SAAAsjB,IAAA,IAAAhkB,EAAAE,EAAAotB,EAAA9pB,EAAAgtB,EAAAC,EAAAjD,EAAAE,EAAAC,EAAAC,EAAA8C,EAAAnuB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAwjB,GAAA,cAAAA,EAAAtjB,KAAAsjB,EAAArjB,MAAA,UAAOjB,EAAP0wB,EAAAr8B,OAAA,QAAAmqB,IAAAkS,EAAA,GAAAA,EAAA,GAAyB,KAAMxwB,EAA/BwwB,EAAAr8B,OAAA,QAAAmqB,IAAAkS,EAAA,GAAAA,EAAA,GAAyC,KACvDpD,EAAY,CAChBltB,cAAe,GACfuwB,gBAAiB,GACjBnD,OAAQj4B,EAAK+L,MAAM,GACnBmsB,aAAcl4B,EAAK+L,MAAM,GACzBosB,cAAen4B,EAAK+L,MAAM,GAC1BqsB,gBAAiBp4B,EAAK+L,MAAM,GAC5BssB,kBAAmBr4B,EAAK+L,MAAM,GAC9BsvB,sBAAuBr7B,EAAK+L,MAAM,IAGpCtB,EAAkBA,GAAoCzK,EAAKjF,MAAM0P,iBACjEE,EAAUA,GAAoB3K,EAAKjF,MAAM4P,UAExBF,EAfG,CAAAskB,EAAArjB,KAAA,eAAAqjB,EAAA5S,OAAA,SAgBX4b,GAhBW,cAmBd9pB,EAAyC,SAAhCjO,EAAKjF,MAAMmT,iBAnBN6gB,EAAArjB,KAAA,GAqBd1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAAkkB,EAAAl0B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAiT,EAAOtS,GAAP,IAAAtH,EAAA82B,EAAA7L,EAAA8L,EAAAC,EAAAC,EAAA9sB,EAAA+sB,EAAA/uB,EAAA0sB,EAAAE,EAAA,OAAAhO,EAAAtwB,EAAAsQ,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgB2S,EAAA/S,KAAA,EAQ1C8P,QAAQqD,IAAI,CACpB7e,EAAK27B,eAAen3B,EAAaxE,EAAKjF,MAAM4P,SAC5C3K,EAAKwrB,gBAAgBhnB,EAAYqoB,KAAK/gB,MAAOnB,KAVK,UAAA2wB,EAAA7c,EAAAhQ,KAAAghB,EAAAh1B,OAAAsyB,EAAA,EAAAtyB,CAAA6gC,EAAA,GAAAC,EAAA9L,EAAA,GAIhD+L,EAJgDD,EAIhDC,iBACAC,EALgDF,EAKhDE,4BAEF9sB,EAPkD8gB,EAAA,GAahD+L,IACIE,EAAW17B,EAAKjF,MAAMmT,iBAAmBpC,EAAQtH,EAAYqoB,KAAK/gB,MACxEisB,EAAUqD,gBAAgBM,GAAY,CACpC5vB,QACAtH,cACAi3B,8BACAG,SAAU57B,EAAKjF,MAAMmT,oBAIrBS,EAvBgD,CAAA8P,EAAA/S,KAAA,gBAAA+S,EAAA/S,KAAA,GAwBzB1L,EAAK67B,kBAAkBr3B,GAxBE,eAwB5CmI,EAxB4C8R,EAAAhQ,KAyB5C4qB,EAAe1qB,EAAiB5G,MAAM4E,GAzBM8R,EAAA/S,KAAA,GA0Bd1L,EAAKmtB,oBAAoBkM,EAAcvtB,EAAOtH,EAAayJ,GA1B7C,QA0B5CsrB,EA1B4C9a,EAAAhQ,KA4B7C9B,EAAWvO,SAAYi7B,EAAaj7B,UACvC25B,EAAUltB,cAAciB,GAAS,CAC/Ba,aACA0sB,eACA1qB,mBACA4qB,yBAIFxB,EAAUG,aAAeH,EAAUG,aAAa3rB,KAAK8sB,GACrDtB,EAAUsD,sBAAwBtD,EAAUsD,sBAAsB9uB,KAAKgtB,IAtCvB,yBAAA9a,EAAA5R,SAAAuR,EAAAtjB,SAAhD,gBAAAgzB,GAAA,OAAAa,EAAA5hB,MAAAjS,KAAAkS,YAAA,IArBc,eAgEdiuB,EAAuB,GAC7BxgC,OAAOoE,KAAK4L,GAAiB1L,QAAQ,SAAA+M,GAC/BisB,EAAUltB,cAAciB,KAC1BmvB,EAAqBnvB,GAASisB,EAAUltB,cAAciB,MAI1DisB,EAAUltB,cAAgBowB,EAEpBC,EAAkBzgC,OAAOoE,KAAKk5B,EAAUltB,eAAee,OAAO,SAAAE,GAAK,OAAK9L,EAAK+L,MAAMgsB,EAAUltB,cAAciB,GAAO6C,kBAAkBgB,GAAG,KAEzIsoB,EAASj4B,EAAK+L,MAAM,GACpBosB,EAAgBn4B,EAAK+L,MAAM,GAC3BqsB,EAAkBp4B,EAAK+L,MAAM,GAC7BssB,EAAoBr4B,EAAK+L,MAAM,GA9EfgjB,EAAArjB,KAAA,GAiFd1L,EAAK+K,aAAamwB,EAAlB,eAAAvL,EAAAl1B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAmC,SAAA6T,EAAOlT,GAAP,IAAAtH,EAAAorB,EAAAkM,EAAAC,EAAApC,EAAAJ,EAAAyC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5Q,EAAAtwB,EAAAsQ,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,cACjClH,EAAciG,EAAgBqB,GADGmT,EAAAvT,KAAA,EAK7B8P,QAAQqD,IAAI,CACpB7e,EAAKo8B,aAAa53B,GAClBxE,EAAKq8B,mBAAmB73B,EAAamG,KAPA,cAAAilB,EAAA3Q,EAAAxQ,KAAAqtB,EAAArhC,OAAAsyB,EAAA,EAAAtyB,CAAAm1B,EAAA,GAGrCmM,EAHqCD,EAAA,GAIrCnC,EAJqCmC,EAAA,GAUjCvC,EAAwBxB,EAAUltB,cAAciB,GAAOytB,sBAEvDyC,EAAWh8B,EAAK+L,MAAMgwB,EAAUO,QAChCL,EAAc1C,EAAsBxb,IAAIga,EAAUsD,uBAbjBpc,EAAAvT,KAAA,GAcT1L,EAAKmtB,oBAAoBwM,EAAiB7tB,EAAOtH,EAAayJ,GAdrD,QAcjCiuB,EAdiCjd,EAAAxQ,MAejC0tB,EAAgB5C,EAAsB/sB,MAAM0vB,MAGhD/D,EAAgBA,EAAc5rB,KAAK4vB,IAGjCH,IACF/D,EAASA,EAAO1rB,KAAKyvB,EAASj0B,MAAMk0B,KAGlCC,IACF9D,EAAkBA,EAAgB7rB,KAAK2vB,IA1BF,yBAAAjd,EAAApS,SAAAmS,EAAAlkB,SAAnC,gBAAAo0B,GAAA,OAAAS,EAAA5iB,MAAAjS,KAAAkS,YAAA,IAjFc,eAiHhBorB,EAAgBzoB,GAAG,KACrB0oB,EAAoBF,EAAcpa,IAAIqa,GAAiBrwB,MAAM,MAG/DgwB,EAAUE,OAASA,EACnBF,EAAUI,cAAgBA,EAC1BJ,EAAUK,gBAAkBA,EAC5BL,EAAUM,kBAAoBA,EAC9BN,EAAUG,aAAeE,EAAgB7rB,KAAK4rB,GAzH1BpJ,EAAA5S,OAAA,SA6Hb4b,GA7Ha,yBAAAhJ,EAAAliB,SAAA4hB,EAAA3zB,SAldHA,KAilBnBm7B,gBAAkB,WAChB,IAAIsG,EAAc,KAOlB,OANIrd,OAAOsd,SACTD,EAAc,IAAIE,IAAKvd,OAAOsd,UACrBtd,OAAO7F,OAChBkjB,EAAc,IAAIE,IAAKvd,OAAO7F,OAGzBkjB,GAzlBUzhC,KA2lBnB4hC,eAAiB,WACf,IAAMC,EAAkB38B,EAAK+c,qBACvBwZ,EAAgBv2B,EAAK8P,gBAAgB,CAAC,UAAW,oBAAqB6sB,EAAgBz8B,KACtF8c,EAAWuZ,EAAgBA,EAAcvZ,SAAW,SACpD4f,EAAa58B,EAAK8P,gBAAgB,CAAC,UAAW,YAAakN,EAAU,QACrE6f,EAAU78B,EAAK8P,gBAAgB,CAAC,UAAW,YAAakN,EAAU,MAAO2f,EAAgBz8B,KAAO08B,EAElGL,EAAcv8B,EAAKjF,MAAMse,KAY7B,OAVKkjB,IAEDA,EADErd,OAAOsd,SACK,IAAIC,IAAKvd,OAAOsd,UACrBtd,OAAO7F,KACF,IAAIojB,IAAKvd,OAAO7F,MAEhB,IAAIojB,IAAK,IAAIA,IAAKK,UAAUC,aAAaF,KAIpDN,GA9mBUzhC,KAgnBnBkiC,oBAhnBmBviC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAgnBG,SAAA6iB,IAAA,IAAA5jB,EAAAO,EAAAF,EAAAwyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlP,EAAAphB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8iB,GAAA,cAAAA,EAAA5iB,KAAA4iB,EAAA3iB,MAAA,UAAOtB,EAAPgkB,EAAAtvB,OAAA,QAAAmqB,IAAAmF,EAAA,GAAAA,EAAA,GAAuB,GAAIzjB,EAA3ByjB,EAAAtvB,OAAA,QAAAmqB,IAAAmF,EAAA,GAAAA,EAAA,GAAqC,OAArCA,EAAAtvB,OAAA,QAAAmqB,IAAAmF,EAAA,KAAAA,EAAA,GACpBzjB,EAAUA,GAAoB3K,EAAKjF,MAAM4P,QADrB,CAAA0jB,EAAA3iB,KAAA,eAAA2iB,EAAAlS,OAAA,SAIX,IAJW,cAOd1R,EAAkBzK,EAAKu9B,0BAExBnzB,GAAkBA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAK4L,IAG1BwyB,EAAe,GACbC,EAAkB,GACpBC,EAAqBn9B,EAAK+L,MAAM,GAfhBsiB,EAAA3iB,KAAA,GAgBG1L,EAAKw9B,YAAY7yB,EAAS,EAAG,SAAUP,GAhB1C,eAgBdgzB,EAhBc/O,EAAA5f,OAkBJ2uB,EAASt+B,QAEvBs+B,EAASr+B,QAAQ,SAAC8M,EAAIhL,GAGpB,IAAKgL,EAAGlJ,OAASkJ,EAAG4xB,cAAgB5xB,EAAG6xB,gBACrC,OAAO,EAGT,IAAMpxB,EAActM,EAAK+L,MAAMF,EAAGS,aAC9BmxB,EAAcz9B,EAAK+L,MAAMF,EAAG4xB,aAC1BC,EAAkB19B,EAAK+L,MAAMF,EAAG6xB,iBAEtC,OAAQ7xB,EAAGG,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdH,EAAGG,QACDnL,EAAQ,GAAKs8B,EAAmBxtB,GAAG,GACrC,OAICstB,EAAapxB,EAAGlJ,QACnBs6B,EAAapxB,EAAGlJ,MAAQ,CACtBg7B,MAAO,KACPC,SAAU,KACVC,SAAU,KACVC,UAAW99B,EAAK+L,MAAM,KAI1BkxB,EAAapxB,EAAGlJ,MAAMm7B,UAAYb,EAAapxB,EAAGlJ,MAAMm7B,UAAUvxB,KAAKD,GAChC,OAAnC2wB,EAAapxB,EAAGlJ,MAAMi7B,WACxBX,EAAapxB,EAAGlJ,MAAMg7B,MAAQD,EAC9BT,EAAapxB,EAAGlJ,MAAMi7B,SAAWH,EAAY11B,MAAM21B,IAIrD,MACF,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAY11B,MAAM/H,EAAK+L,OAAO,IAO3CmxB,EAAgBrxB,EAAGlJ,SACtBw6B,EAAqBA,EAAmB5wB,KAAKkxB,IACtBvQ,IAAI,KACzBiQ,EAAqBn9B,EAAK+L,MAAM,IAKlCmxB,EAAgBrxB,EAAGlJ,OAAQ,KAO7B06B,EAAcr9B,EAAK+L,MAAM,GACzBuxB,EAAiBt9B,EAAK+L,MAAM,GAChCtR,OAAOkR,OAAOsxB,GAAcl+B,QAAQ,SAAA8M,GAClC,IAAMgyB,EAAWhyB,EAAG+xB,SAAS7f,IAAIlS,EAAGiyB,WAAWtxB,MAAM,GACrD6wB,EAAcA,EAAY9wB,KAAKsxB,EAAS91B,MAAM8D,EAAGiyB,YACjDR,EAAiBA,EAAe/wB,KAAKV,EAAGiyB,aAG1CT,EAAcA,EAAYtf,IAAIuf,GAAgBv1B,OAAO,GA5FjCsmB,EAAAlS,OAAA,SAiGbkhB,GAjGa,yBAAAhP,EAAAxhB,SAAAmhB,EAAAlzB,SAhnBHA,KAmtBnBijC,oBAntBmBtjC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAmtBG,SAAAukB,IAAA,IAAAtlB,EAAAO,EAAAF,EAAAwyB,EAAAe,EAAAb,EAAAC,EAAAa,EAAAjxB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAukB,GAAA,cAAAA,EAAArkB,KAAAqkB,EAAApkB,MAAA,UAAOtB,EAAP6zB,EAAAn/B,OAAA,QAAAmqB,IAAAgV,EAAA,GAAAA,EAAA,GAAuB,GAC3CtzB,GAD+CA,EAA3BszB,EAAAn/B,OAAA,QAAAmqB,IAAAgV,EAAA,GAAAA,EAAA,GAAqC,OAC3Bj+B,EAAKjF,MAAM4P,QADrB,CAAAmlB,EAAApkB,KAAA,eAAAokB,EAAA3T,OAAA,SAIX,IAJW,cAOd1R,EAAkBzK,EAAKu9B,0BAExBnzB,GAAkBA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAK4L,IAGxBwyB,EAAe,GACjBe,EAAch+B,EAAK+L,MAAM,GACzBoxB,EAAqBn9B,EAAK+L,MAAM,GAfhB+jB,EAAApkB,KAAA,GAgBG1L,EAAKw9B,YAAY7yB,EAAS,EAAG,SAAUP,GAhB1C,eAgBdgzB,EAhBctN,EAAArhB,OAoBJ2uB,EAASt+B,QAEvBs+B,EAASr+B,QAAQ,SAAC8M,EAAIhL,GAMpB,GAJKo8B,EAAapxB,EAAGlJ,QACnBs6B,EAAapxB,EAAGlJ,MAAQ,KAGtBs6B,EAAapxB,EAAGlJ,MAAMqsB,SAASnjB,EAAGG,QAAtC,CAKA,IAAKH,EAAGlJ,OAASkJ,EAAG4xB,cAAgB5xB,EAAG6xB,gBACrC,OAAO,EAGT,IAAMQ,EAAkBF,EACpBP,EAAcz9B,EAAK+L,MAAMF,EAAG4xB,aAC1BC,EAAkB19B,EAAK+L,MAAMF,EAAG6xB,iBAGtC,OAAQ7xB,EAAGG,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdH,EAAGG,QACDnL,EAAQ,GAAKs8B,EAAmBxtB,GAAG,GACrC,OAGJquB,EAAcP,EAAY11B,MAAM21B,GAAiBnxB,KAAK2xB,EAAgBn2B,MAAMo1B,IAAqBpf,IAAIof,EAAmB5wB,KAAKkxB,IAC7H,MACF,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAY11B,MAAM/H,EAAK+L,OAAO,KAOhDoxB,EAAqBA,EAAmB5wB,KAAKkxB,IACtBvQ,IAAI,KACzB8Q,EAAch+B,EAAK+L,MAAM,GACzBoxB,EAAqBn9B,EAAK+L,MAAM,IAGlCkxB,EAAapxB,EAAGlJ,MAAMsF,KAAK4D,EAAGG,WAvEd8jB,EAAA3T,OAAA,SA+Eb6hB,GA/Ea,yBAAAlO,EAAAjjB,SAAA6iB,EAAA50B,SAntBHA,KAoyBnBqjC,eApyBmB1jC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAoyBF,SAAAmkB,IAAA,IAAAllB,EAAAO,EAAAyf,EAAAxf,EAAA2kB,EAAAviB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,UAAOtB,EAAPmlB,EAAAzwB,OAAA,QAAAmqB,IAAAsG,EAAA,GAAAA,EAAA,GAAuB,IACtC5kB,GAD0CA,EAA3B4kB,EAAAzwB,OAAA,EAAAywB,EAAA,QAAAtG,IACejpB,EAAKjF,MAAM4P,UAExBP,GAAkBA,EAActL,QAAWkB,EAAKjF,MAAM0P,gBAHxD,CAAA+kB,EAAA9jB,KAAA,eAAA8jB,EAAArT,OAAA,SAIN,IAJM,cAOTiO,EAAS,GAPAoF,EAAA9jB,KAAA,EAQY1L,EAAK0K,gBAAgBC,EAAS,EAAG,SAAUP,GARvD,cAQTQ,EARS4kB,EAAA/gB,KAUfrE,EAAcrL,QAAQ,SAAAuF,GAEpB8lB,EAAO9lB,GAAiB,GACxB,IAAI05B,EAAch+B,EAAK+L,MAAM,GAEzBqyB,EAAoBp+B,EAAK+L,MAAM,GAC7BV,EAAc5Q,OAAOkR,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,IAEvE+G,GAAeA,EAAYvM,QAE7BuM,EAAYtM,QAAQ,SAAC8M,EAAIhL,GAGvB,IAAKgL,EAAGlJ,MAASkJ,EAAGI,QAAwB,YAAdJ,EAAGI,SAA0BJ,EAAGe,aAAef,EAAGc,WAC9E,OAAO,EAGT,IAAMuxB,EAAkBF,EACpBpxB,EAAa5M,EAAK+L,MAAMF,EAAGe,YACzBD,EAAa3M,EAAK+L,MAAMF,EAAGc,YAGjC,OAAQd,EAAGG,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,WACHgyB,EAAcpxB,EAAW7E,MAAM4E,GAAYJ,KAAK2xB,EAAgBn2B,MAAMq2B,IAAoBrgB,IAAIqgB,EAAkB7xB,KAAKK,IACrH,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHA,EAAaA,EAAW7E,MAAM/H,EAAK+L,OAAO,KAO9CqyB,EAAoBA,EAAkB7xB,KAAKK,IACrBsgB,IAAI,KACxB8Q,EAAch+B,EAAK+L,MAAM,GACzBqyB,EAAoBp+B,EAAK+L,MAAM,MAOrCqe,EAAO9lB,GAAiB05B,IA9DXxO,EAAArT,OAAA,SAiERiO,GAjEQ,yBAAAoF,EAAA3iB,SAAAyiB,EAAAx0B,SApyBEA,KAu2BnBujC,kBAv2BmB5jC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAu2BC,SAAAmzB,IAAA,IAAAl0B,EAAAO,EAAAC,EAAA2zB,EAAAC,EAAAxxB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAkzB,GAAA,cAAAA,EAAAhzB,KAAAgzB,EAAA/yB,MAAA,UAAOtB,EAAPo0B,EAAA1/B,OAAA,QAAAmqB,IAAAuV,EAAA,GAAAA,EAAA,GAAuB,IACzC7zB,GAD6CA,EAA3B6zB,EAAA1/B,OAAA,EAAA0/B,EAAA,QAAAvV,IACYjpB,EAAKjF,MAAM4P,UAExBP,GAAkBA,EAActL,QAAWkB,EAAKjF,MAAM0P,gBAHrD,CAAAg0B,EAAA/yB,KAAA,eAAA+yB,EAAAtiB,OAAA,SAIT,IAJS,cAAAsiB,EAAA/yB,KAAA,EAOS1L,EAAK0K,gBAAgBC,EAAS,EAAG,SAAUP,GAPpD,cAOZQ,EAPY6zB,EAAAhwB,KASZ8vB,EAAW,GAEjBn0B,EAAcrL,QAAQ,SAACuF,GACrB,IAAIgH,EAAatL,EAAK+L,MAAM,GACxB2yB,EAAiB,KACrBH,EAASj6B,GAAiBo6B,EAE1B,IAAMrzB,EAAc5Q,OAAOkR,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,IACvE+G,GAAeA,EAAYvM,QAE7BuM,EAAYtM,QAAQ,SAAC8M,EAAIhL,GAEvB,IAAKgL,EAAGlJ,MAASkJ,EAAGI,QAAwB,YAAdJ,EAAGI,SAA0BJ,EAAGS,YAC5D,OAAO,EAGT,OAAQT,EAAGG,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACHV,EAAaA,EAAWiB,KAAKV,EAAGS,aAC3BoyB,IACHA,EAAiB7yB,GAEnB,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHP,EAAaA,EAAWkB,MAAMX,EAAGS,aAOjChB,EAAWmB,GAAG,KAChBnB,EAAatL,EAAK+L,MAAM,GACxB2yB,EAAiB,QAMvBH,EAASj6B,GAAiBo6B,IAtDVD,EAAAtiB,OAAA,SAyDXoiB,GAzDW,yBAAAE,EAAA5xB,SAAAyxB,EAAAxjC,SAv2BDA,KAk6BnB6jC,uBAAyB,SAACC,GAAwB,IAAfC,EAAe7xB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACjC8xB,EAAS9+B,EAAK8P,gBAAgB,CAAC,eAAgB+uB,EAAK,QACpDE,EAAUF,GAAOC,EAASA,EAAS5f,OAAOmV,SAAS2K,OACzD,SAAAv9B,OAAUs9B,EAAV,MAAAt9B,OAAsBzB,EAAK8P,gBAAgB,CAAC,YAAa,cAAzD,KAAArO,OAA0Em9B,IAr6BzD9jC,KAu6BnBmkC,aAAe,SAACC,GACd,OAAO,IAAI1jB,QAAQ,SAAAI,GAAO,OAAIqC,WAAWrC,EAASsjB,MAx6BjCpkC,KA06BnBqkC,oBA16BmB1kC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA06BG,SAAAi0B,IAAA,IAAAh1B,EAAAO,EAAA00B,EAAAC,EAAAtyB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAg0B,GAAA,cAAAA,EAAA9zB,KAAA8zB,EAAA7zB,MAAA,cAAOtB,EAAPk1B,EAAAxgC,OAAA,QAAAmqB,IAAAqW,EAAA,GAAAA,EAAA,GAAuB,GAAI30B,EAA3B20B,EAAAxgC,OAAA,EAAAwgC,EAAA,QAAArW,EAAAsW,EAAA7zB,KAAA,EACU1L,EAAKq+B,kBAAkBj0B,EAAeO,GADhD,YACd00B,EADcE,EAAA9wB,MAAA,CAAA8wB,EAAA7zB,KAAA,eAAA6zB,EAAApjB,OAAA,SAGX1hB,OAAOoE,KAAKwgC,GAAiBG,OAAO,SAACC,EAAK3zB,GAI/C,OAHIuzB,EAAgBvzB,KAClB2zB,EAAI3zB,GAASuzB,EAAgBvzB,GAAOO,WAE/BozB,GACN,KARe,cAAAF,EAAApjB,OAAA,SAUb,MAVa,wBAAAojB,EAAA1yB,SAAAuyB,EAAAtkC,SA16BHA,KAu7BnB4kC,sCAv7BmB,eAAAC,EAAAllC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAu7BqB,SAAAy0B,EAAOp7B,EAAYq0B,GAAnB,IAAAgH,EAAAvH,EAAA,OAAA/M,EAAAtwB,EAAAsQ,KAAA,SAAAu0B,GAAA,cAAAA,EAAAr0B,KAAAq0B,EAAAp0B,MAAA,cAChCm0B,EAAuB,GADSC,EAAAp0B,KAAA,EAET1L,EAAKw6B,oBAAoB,iBAAiB,GAAGh2B,EAAYg0B,SAASh0B,EAAYsH,MAAM+sB,EAAcD,QAAQp0B,EAAYq0B,GAF7G,cAEhCP,EAFgCwH,EAAArxB,KAAAqxB,EAAAp0B,KAAA,EAGhC1L,EAAK+K,aAAatQ,OAAOoE,KAAKy5B,GAA9B,eAAAyH,EAAAtlC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA8C,SAAA60B,EAAOl0B,GAAP,IAAAm0B,EAAAC,EAAA,OAAA3U,EAAAtwB,EAAAsQ,KAAA,SAAA40B,GAAA,cAAAA,EAAA10B,KAAA00B,EAAAz0B,MAAA,cAC5Cu0B,EAAe,CACnBl5B,KAAMvC,EAAY47B,IAAIz4B,QACtB6rB,GAAIqF,EAAcsB,WAAWxyB,SAHmBw4B,EAAAz0B,KAAA,EAK1B1L,EAAKqgC,kBAAkBv0B,EAAO,WAAWtH,EAAYsZ,YAAY,SAAU,CAAClS,OAAQq0B,IAL1D,QAK5CC,EAL4CC,EAAA1xB,OAOjCyxB,EAAUphC,OAAO,IAChC+gC,EAAqB/zB,GAASo0B,GARkB,wBAAAC,EAAAtzB,SAAAmzB,EAAAllC,SAA9C,gBAAAwlC,GAAA,OAAAP,EAAAhzB,MAAAjS,KAAAkS,YAAA,IAHgC,cAAA8yB,EAAA3jB,OAAA,SAe/B0jB,GAf+B,wBAAAC,EAAAjzB,SAAA+yB,EAAA9kC,SAv7BrB,gBAAAi1B,EAAAwQ,GAAA,OAAAZ,EAAA5yB,MAAAjS,KAAAkS,YAAA,GAAAlS,KAw8BnB0lC,mBAx8BmB,eAAAC,EAAAhmC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAw8BE,SAAAu1B,EAAOl8B,EAAYq0B,GAAnB,IAAA8H,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxV,EAAAtwB,EAAAsQ,KAAA,SAAAy1B,GAAA,cAAAA,EAAAv1B,KAAAu1B,EAAAt1B,MAAA,cAAAs1B,EAAAt1B,KAAA,EAIT8P,QAAQqD,IAAI,CACpB7e,EAAK0/B,sCAAsCl7B,EAAYq0B,GACvD74B,EAAKw6B,oBAAoB,cAAc,GAAGh2B,EAAYg0B,SAASh0B,EAAYsH,MAAM+sB,EAAcD,QAAQp0B,EAAYq0B,KANlG,cAAA8H,EAAAK,EAAAvyB,KAAAmyB,EAAAnmC,OAAAsyB,EAAA,EAAAtyB,CAAAkmC,EAAA,GAEjBE,EAFiBD,EAAA,GAGjBE,EAHiBF,EAAA,GASbG,EAAeF,GAA+B,GATjCG,EAAAt1B,KAAA,EAWb1L,EAAK+K,aAAatQ,OAAOoE,KAAKiiC,GAA9B,eAAAG,EAAAxmC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA2C,SAAA+1B,EAAOp1B,GAAP,IAAAm0B,EAAAC,EAAA,OAAA3U,EAAAtwB,EAAAsQ,KAAA,SAAA41B,GAAA,cAAAA,EAAA11B,KAAA01B,EAAAz1B,MAAA,cACzCu0B,EAAe,CACnBzM,GAAIhvB,EAAY47B,IAAIz4B,SAFyBw5B,EAAAz1B,KAAA,EAIvB1L,EAAKqgC,kBAAkBv0B,EAAO,WAAWtH,EAAYsZ,YAAY,SAAU,CAAClS,OAAQq0B,IAJ7D,QAIzCC,EAJyCiB,EAAA1yB,OAM9ByxB,EAAUphC,OAAS,IAClCiiC,EAAaj1B,GAASo0B,GAPuB,wBAAAiB,EAAAt0B,SAAAq0B,EAAApmC,SAA3C,gBAAAsmC,GAAA,OAAAH,EAAAl0B,MAAAjS,KAAAkS,YAAA,IAXa,cAAAg0B,EAAA7kB,OAAA,SAsBZ4kB,GAtBY,yBAAAC,EAAAn0B,SAAA6zB,EAAA5lC,SAx8BF,gBAAAumC,EAAAC,GAAA,OAAAb,EAAA1zB,MAAAjS,KAAAkS,YAAA,GAAAlS,KAg+BnBymC,sBAh+BmB,eAAAC,EAAA/mC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAg+BK,SAAAs2B,EAAOj9B,GAAP,IAAAk9B,EAAAC,EAAAC,EAAA3B,EAAA4B,EAAAC,EAAAC,EAAA7B,EAAA8B,EAAA,OAAAzW,EAAAtwB,EAAAsQ,KAAA,SAAA02B,GAAA,cAAAA,EAAAx2B,KAAAw2B,EAAAv2B,MAAA,cAChBg2B,EAAiBl9B,EAAY09B,SADbD,EAAAv2B,KAAA,EAIY1L,EAAKmiC,6BAA6B39B,EAAY47B,IAAInjC,KAAM,WAAY,MAJhF,YAIhB0kC,EAJgBM,EAAAxzB,MAAA,CAAAwzB,EAAAv2B,KAAA,gBAAAu2B,EAAAv2B,KAAA,EAMd1L,EAAKjF,MAAMqnC,aAAaV,EAAezkC,KAAM0kC,EAAqBD,EAAeW,KANnE,cAAAJ,EAAAv2B,KAAA,EAOa1L,EAAK6rB,oBAAoB6V,EAAezkC,KAAK,sBAP1D,UAOd2kC,EAPcK,EAAAxzB,OAShBrC,SAASw1B,GAAoB,GATb,CAAAK,EAAAv2B,KAAA,gBAUZu0B,EAAe,CACnBzM,GAAImO,GAXYM,EAAAv2B,KAAA,GAgBR8P,QAAQqD,IAAI,CACpB7e,EAAKsiC,aAAaV,GAClB5hC,EAAKqgC,kBAAkB77B,EAAYsH,MAAO,WAAYM,SAASw1B,GAAqBx1B,SAASw1B,GAAoB,EAAG,CAACh2B,OAAQq0B,MAlB7G,WAAA4B,EAAAI,EAAAxzB,KAAAqzB,EAAArnC,OAAAsyB,EAAA,EAAAtyB,CAAAonC,EAAA,GAchBE,EAdgBD,EAAA,KAehB5B,EAfgB4B,EAAA,MAqBD5B,EAAUphC,OArBT,CAAAmjC,EAAAv2B,KAAA,gBAsBVs2B,EAAc9B,EAAUV,OAAQ,SAAC7U,EAAOoJ,GAE5C,OADApJ,EAASA,EAAOpe,KAAKvM,EAAK+L,MAAMgoB,EAAEwO,aAAa/8B,SAE/CxF,EAAK+L,MAAM,IAzBGk2B,EAAA9lB,OAAA,SA2BT,CACLwO,OAAOqX,EACP9yB,UAAU6yB,EAAU7yB,UACpB4O,YAAY8jB,EACZlpB,gBAAgBwnB,EAAU,GAAGxnB,kBA/Bf,eAAAupB,EAAA9lB,OAAA,SAqCf,MArCe,yBAAA8lB,EAAAp1B,SAAA40B,EAAA3mC,SAh+BL,gBAAA0nC,GAAA,OAAAhB,EAAAz0B,MAAAjS,KAAAkS,YAAA,GAAAlS,KAugCnB2nC,eAvgCmB,eAAAC,EAAAjoC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAugCF,SAAAw3B,EAAOC,EAAUC,EAAiBC,EAAYC,GAA9C,IAAAC,EAAAxW,EAAAvc,EAAAgzB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/X,EAAAtwB,EAAAsQ,KAAA,SAAAg4B,GAAA,cAAAA,EAAA93B,KAAA83B,EAAA73B,MAAA,cACTs3B,EAAiBhjC,EAAKwjC,eAAeZ,GACrCpW,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UAGrCxzB,EAAiBjQ,EAAK+L,MAAM,GANjBw3B,EAAA73B,KAAA,EAWL8P,QAAQqD,IAAI,CACpB7e,EAAKgtB,yBAAyBR,EAAgBwW,GAC9ChjC,EAAKmtB,oBAAoB2V,EAAWD,EAAgB/2B,MAAM+2B,KAb7C,cAAAI,EAAAM,EAAA90B,KAAAy0B,EAAAzoC,OAAAsyB,EAAA,EAAAtyB,CAAAwoC,EAAA,GASbhzB,EATaizB,EAAA,GAUbJ,EAVaI,EAAA,GAgBTC,EAAgBnjC,EAAK+L,MAAMg3B,GAAiBh7B,MAAM/H,EAAK8P,gBAAgB,CAAC,UAAW,oBACnFszB,EAAyBD,EAAcp7B,MAAMkI,GAC7CozB,EAAWD,EAAuBrlB,IAAI+kB,GAAY/6B,MAAM,KACxDu7B,EAAWtjC,EAAK0jC,QAAQL,EAAStlB,IAAI,MAAMhW,MAAM,KAnBxCw7B,EAAApnB,OAAA,SAqBR,CACLwnB,IAAIN,EACJO,IAAIN,IAvBS,yBAAAC,EAAA12B,SAAA81B,EAAA7nC,SAvgCE,gBAAA+oC,EAAAC,EAAAC,EAAAC,GAAA,OAAAtB,EAAA31B,MAAAjS,KAAAkS,YAAA,GAAAlS,KAiiCnBmpC,2BAjiCmB,eAAAC,EAAAzpC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAiiCU,SAAAg5B,EAAO3/B,EAAaq0B,GAApB,IAAAP,EAAA8L,EAAA,OAAA7Y,EAAAtwB,EAAAsQ,KAAA,SAAA84B,GAAA,cAAAA,EAAA54B,KAAA44B,EAAA34B,MAAA,cAAA24B,EAAA34B,KAAA,EACE1L,EAAKw6B,oBAAoB,iBAAkB,GAAIh2B,EAAYg0B,SAAUh0B,EAAYsH,MAAO+sB,EAAcD,QAASp0B,EAAaq0B,GAD9H,cACrBP,EADqB+L,EAAA51B,KAErB21B,EAAqB,GAFAC,EAAA34B,KAAA,EAGrB1L,EAAK+K,aAAatQ,OAAOoE,KAAKy5B,GAA9B,eAAAgM,EAAA7pC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+C,SAAAo5B,EAAOz4B,GAAP,IAAA04B,EAAAC,EAAAC,EAAAC,EAAAtB,EAAAC,EAAAsB,EAAAC,EAAA7C,EAAA8C,EAAAC,EAAA5B,EAAAlzB,EAAA+0B,EAAAC,EAAAlC,EAAAmC,EAAAC,EAAA/B,EAAAJ,EAAAxW,EAAA4Y,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvF,EAAAC,EAAAuF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAza,EAAAtwB,EAAAsQ,KAAA,SAAA06B,GAAA,cAAAA,EAAAx6B,KAAAw6B,EAAAv6B,MAAA,UAE/C84B,EAAe,KACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBtB,EAAWrjC,EAAK+L,MAAM,GACtBu3B,EAAWtjC,EAAK+L,MAAM,GACtB64B,EAAoB,KACpBC,EAAa7kC,EAAK+L,MAAM,GACxBi2B,EAAchiC,EAAK+L,MAAM,GACzB+4B,EAAe9kC,EAAK+L,MAAM,GAC1Bg5B,EAAwB,KACxB5B,EAAgBnjC,EAAK+L,MAAM,GAC3BkE,EAAiBjQ,EAAK+L,MAAM,GAC5Bi5B,EAAiBhlC,EAAK+L,MAAM,GAC5Bk5B,EAAkBjlC,EAAK+L,MAAM,GAC7Bg3B,EAAkB/iC,EAAK+L,MAAM,GAC7Bm5B,EAAoBllC,EAAK+L,MAAM,GAC/Bo5B,EAAoBnlC,EAAK+L,MAAM,GAC/Bq3B,EAAyBpjC,EAAK+L,MAAM,GAElCi3B,EAAiBhjC,EAAK8P,gBAAgB,CAAC,QAAS,SAAUhE,IAC1D0gB,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UAGnC2B,EAAoBvM,EAAcmB,UAAUkM,cAC5Cb,EAAqBxM,EAAcmB,UAAUsL,cA5BA,CAAAW,EAAAv6B,KAAA,gBAAAu6B,EAAAv6B,KAAA,GA+BtB1L,EAAK6rB,oBAAoBgN,EAAcsB,WAAWl9B,KAAKooC,GA/BjC,SA+B3CC,EA/B2CW,EAAAx3B,QAiC/Cm2B,EAAoBx4B,SAASk5B,IAAel5B,SAASe,KAAKg5B,MAAM,MAjCjB,YAqC/Cf,EArC+C,CAAAa,EAAAv6B,KAAA,YAuC5Ck5B,EAvC4C,CAAAqB,EAAAv6B,KAAA,gBAAAu6B,EAAAv6B,KAAA,GA6CrC8P,QAAQqD,IAAI,CACpB7e,EAAKgtB,yBAAyBR,EAAgBwW,GAC9ChjC,EAAKomC,0BAA0BvN,EAAcsB,WAAWl9B,KAAKmoC,GAC7DplC,EAAKomC,0BAA0Bt6B,EAAM,YAAY,CAAC+sB,EAAcsB,WAAWxyB,UAC3E3H,EAAKw6B,oBAAoB,cAAe,GAAIh2B,EAAYg0B,SAAUh0B,EAAYsH,MAAO+sB,EAAcD,QAASp0B,EAAaq0B,KAjD5E,eAAA0M,EAAAU,EAAAx3B,KAAA+2B,EAAA/qC,OAAAsyB,EAAA,EAAAtyB,CAAA8qC,EAAA,GAyC7Ct1B,EAzC6Cu1B,EAAA,GA0C7CzC,EA1C6CyC,EAAA,GA2C7CxD,EA3C6CwD,EAAA,GA4C7CP,EA5C6CO,EAAA,GAAAS,EAAAv6B,KAAA,GAoDvB1L,EAAKy6B,2BAA2BwK,EAAgBzgC,GApDzB,QAoD/CygC,EApD+CgB,EAAAx3B,KAqD/Cs0B,EAAkB/iC,EAAKuP,iBAAiBwzB,EAAgBlK,EAAcsB,WAAW17B,UACjFqmC,EAAe9kC,EAAK+L,MAAMg3B,GAAiBh7B,MAAM,OACjDo7B,EAAgBnjC,EAAK+L,MAAMg3B,GAAiBh7B,MAAM/H,EAAK8P,gBAAgB,CAAC,UAAW,oBACnFk1B,EAAiB7B,EAAcplB,IAAI/d,EAAK8P,gBAAgB,CAAC,UAAW,mBACpEszB,EAAyBD,EAAcp7B,MAAMkI,GAC7CozB,EAAWD,EAAuBrlB,IAAIknB,GACtC3B,EAAWtjC,EAAK0jC,QAAQL,GAAUt7B,MAAM,KACxCo9B,EAAoBL,EA5D2B,QA+DjDC,EAAwB,OAExBX,EAAmBt4B,GAAS,CAC1B+4B,aACA7C,cACA8C,eACAN,eACAb,IAAKN,EACLO,IAAKN,EACLH,gBACAwB,gBACAK,iBACAjC,kBACAoC,oBACAJ,wBACA3B,0BA9E+C6C,EAAAv6B,KAAA,wBAkF3Cu0B,EAAe,CACnBl5B,KAAMvC,EAAY47B,IAAIz4B,QACtB6rB,GAAIqF,EAAcsB,WAAWxyB,SApFkBs+B,EAAAv6B,KAAA,GAuFzB1L,EAAKqgC,kBAAkBv0B,EAAO,WAAYtH,EAAYsZ,YAAa,SAAU,CAAElS,OAAQq0B,IAvF9D,cAuF3CC,EAvF2C+F,EAAAx3B,OAyFhCyxB,EAAUphC,OAAS,GAzFa,CAAAmnC,EAAAv6B,KAAA,gBA0FzC84B,EAAetE,EAAUphC,OAASohC,EAAU,GAAK,KACjDyE,EAAgBzE,EAAUA,EAAUphC,OAAS,GAC7C6mC,EAAanB,EAAeA,EAAa1mB,YAActZ,EAAYsZ,YA5F1BmoB,EAAAv6B,KAAA,GAkGrC8P,QAAQqD,IAAI,CACpB7e,EAAKsiC,aAAaqD,GAClB3lC,EAAKsiC,aAAaqC,EAAc7mB,aAChC9d,EAAKgtB,yBAAyBR,EAAgBwW,GAC9ChjC,EAAKomC,0BAA0B5hC,EAAY47B,IAAInjC,KAAM,mBAAoB,GAAI,GAAI0nC,EAAc7mB,eAtGlD,WAAA8nB,EAAAK,EAAAx3B,KAAAo3B,EAAAprC,OAAAsyB,EAAA,EAAAtyB,CAAAmrC,EAAA,GA8F7CnB,EA9F6CoB,EAAA,GA+F7CnB,EA/F6CmB,EAAA,GAgG7C51B,EAhG6C41B,EAAA,GAiG7CX,EAjG6CW,EAAA,IAyG3CpB,IAAiBC,EAzG0B,CAAAuB,EAAAv6B,KAAA,gBA0GzCo6B,EAAW9lC,EAAKuP,iBAAiB21B,EAAmB1gC,EAAY47B,IAAI3hC,UAClEsnC,EAAgBpB,EAAc7mB,YAAc6nB,EAC5CK,EAAiBtB,EAAcx1B,UAAYu1B,EAAcv1B,UAE/D21B,EAAa7kC,EAAKuP,iBAAiBo1B,EAAcpC,aAAa/8B,MAAOw9B,EAAevkC,UACpFujC,EAAc9B,EAAUV,OAAO,SAAC6G,EAAOtS,GAErC,OADAsS,EAAQA,EAAM95B,KAAKvM,EAAKuP,iBAAiBwkB,EAAEwO,aAAa/8B,MAAOw9B,EAAevkC,YAE7EuB,EAAK+L,MAAM,IAlH+Bk6B,EAAAv6B,KAAA,GAoH5B1L,EAAKy6B,2BAA2BqL,EAASthC,GApHb,QAoH7CshC,EApH6CG,EAAAx3B,KAsH7Cu2B,EAAiBhD,EAAYjkB,IAAIgoB,GACjChD,EAAkBf,EAAYjkB,IAAIioB,GAClClB,EAAe/B,EAAgBh7B,MAAM,OACrCo7B,EAAgBJ,EAAgBh7B,MAAM/H,EAAK8P,gBAAgB,CAAC,UAAW,oBACvEszB,EAAyBD,EAAcp7B,MAAMkI,GAC7CozB,EAAWD,EAAuBrlB,IAAI+nB,GACtCxC,EAAWtjC,EAAK0jC,QAAQL,GAAUt7B,MAAM,KAExCo9B,EAAoBN,EACpBE,EAAwB,kBAExBX,EAAmBt4B,GAAS,CAC1B+4B,aACA7C,cACA8C,eACAN,eACAb,IAAKN,EACLO,IAAKN,EACLH,gBACAwB,gBACAK,iBACAjC,kBACAoC,oBACAJ,wBACA3B,0BA9I2C,yBAAA6C,EAAAp5B,SAAA03B,EAAAzpC,SAA/C,gBAAAwrC,GAAA,OAAAhC,EAAAv3B,MAAAjS,KAAAkS,YAAA,IAHqB,cAAAq3B,EAAAloB,OAAA,SA0JpBioB,GA1JoB,wBAAAC,EAAAx3B,SAAAs3B,EAAArpC,SAjiCV,gBAAAyrC,EAAAC,GAAA,OAAAtC,EAAAn3B,MAAAjS,KAAAkS,YAAA,GAAAlS,KA6rCnBg/B,mBA7rCmB,eAAA2M,EAAAhsC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6rCE,SAAAu7B,EAAOliC,EAAaq0B,EAAeluB,GAAnC,IAAAg8B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3qC,EAAAiiC,EAAAV,EAAArE,EAAA0N,EAAA3M,EAAA4M,EAAAC,EAAAC,EAAA,OAAAjc,EAAAtwB,EAAAsQ,KAAA,SAAAk8B,GAAA,cAAAA,EAAAh8B,KAAAg8B,EAAA/7B,MAAA,cACnBf,EAAUA,GAAW3K,EAAKjF,MAAM4P,QAO1Bg8B,EAAsB,CAAEnT,GAAI,KAAMzsB,KAAM,OAAQvB,MAAO,SACvDohC,EAAyB5mC,EAAK8P,gBAAgB,CAAC,SAAUtL,EAAYsH,MAAO,YAAc66B,GAE1FE,EAAmC,IACRD,EAAuBpT,IAAM,CAAChvB,EAAY47B,IAAIz4B,SAC/Ek/B,EAAiCD,EAAuB7/B,MAAQ,CAAC/G,EAAKjF,MAAM4P,UAEtEm8B,EAAkC,IACRF,EAAuBpT,IAAM,CAACxzB,EAAKjF,MAAM4P,SACzEm8B,EAAgCF,EAAuB7/B,MAAQ,CAACvC,EAAY47B,IAAIz4B,SAjB7D8/B,EAAA/7B,KAAA,GA0BT8P,QAAQqD,IAAI,CACpB7e,EAAKqgC,kBAAkB77B,EAAYsH,MAAO,WAAY+sB,EAAc/a,YAAa,SAAU,CAAElS,OAAQk7B,IACrG9mC,EAAKqgC,kBAAkB77B,EAAYsH,MAAO,WAAY+sB,EAAc/a,YAAa,SAAU,CAAElS,OAAQi7B,IACrG7mC,EAAKqgC,kBAAkBxH,EAAc57B,KAAM,WAAY47B,EAAc/a,YAAa,SAAU,CAAElS,OAAQ,CAAE7E,KAAM,CAAC/G,EAAKjF,MAAM4P,SAAU6oB,GAAI,CAAC,iDACzIxzB,EAAKqgC,kBAAkBxH,EAAc57B,KAAM,WAAY47B,EAAc/a,YAAa,SAAU,CAAElS,OAAQ,CAAE7E,KAAM,CAAC,8CAA+CysB,GAAI,CAACxzB,EAAKjF,MAAM4P,cA9B7J,eAAAo8B,EAAAU,EAAAh5B,KAAAu4B,EAAAvsC,OAAAsyB,EAAA,EAAAtyB,CAAAssC,EAAA,GAsBjBE,EAtBiBD,EAAA,GAuBjBE,EAvBiBF,EAAA,GAwBjBG,EAxBiBH,EAAA,GAyBjBI,EAzBiBJ,EAAA,GAmCbvqC,EAAe,GACjBiiC,EAAiB,KACjBV,EAAch+B,EAAK+L,MAAM,GACzB4tB,EAAkB35B,EAAK+L,MAAM,GAC7Bs7B,EAAuBrnC,EAAK+L,MAAM,GAClC2uB,EAA2B16B,EAAK+L,MAAM,GAGpCu7B,EAAuBJ,EAAoBzlC,OAAOwlC,GAAoBS,KAAK,SAACzsC,EAAG+4B,GAAJ,OAAW5nB,SAASnR,EAAE6iB,aAAe1R,SAAS4nB,EAAElW,aAAe,GAAK,IAC/IypB,EAAyBH,EAAsB3lC,OAAO0lC,GAAsBO,KAAK,SAACzsC,EAAG+4B,GAAJ,OAAW5nB,SAASnR,EAAE6iB,aAAe1R,SAAS4nB,EAAElW,aAAe,GAAK,IAErJ0pB,EAAa,GA9CAC,EAAA/7B,KAAA,GAgDb1L,EAAK+K,aAAaw8B,EAAlB,eAAAI,EAAAltC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA0C,SAAAy8B,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAjG,EAAAkG,EAAA,OAAA1c,EAAAtwB,EAAAsQ,KAAA,SAAA28B,GAAA,cAAAA,EAAAz8B,KAAAy8B,EAAAx8B,MAAA,UACxCo8B,EAAqBR,EAAqBttB,KAAK,SAAA+Z,GAAC,OAAIA,EAAErb,gBAAgB9Q,gBAAkBigC,EAA0BnvB,gBAAgB9Q,gBAD1F,CAAAsgC,EAAAx8B,KAAA,eAAAw8B,EAAA/rB,OAAA,wBAAA+rB,EAAAx8B,KAAA,EAQpC8P,QAAQqD,IAAI,CACpB7e,EAAKsiC,aAAawF,EAAmBhqB,aACrC9d,EAAKy6B,2BAA2B,EAAEj2B,EAAYsjC,EAAmBhqB,eAVrB,OAAAiqB,EAAAG,EAAAz5B,KAAAu5B,EAAAvtC,OAAAsyB,EAAA,EAAAtyB,CAAAstC,EAAA,GAM5ChG,EAN4CiG,EAAA,GAO5CC,EAP4CD,EAAA,GAa9CR,EAAWM,EAAmBhqB,aAAe,CAC3CikB,YACAkG,uBAf4C,yBAAAC,EAAAr7B,SAAA+6B,EAAA9sC,SAA1C,gBAAAqtC,GAAA,OAAAR,EAAA56B,MAAAjS,KAAAkS,YAAA,IAhDa,eAoEnBu6B,EAAuBxoC,QAAS,SAAA8oC,GAC9B,IAAMC,EAAqBR,EAAqBttB,KAAK,SAAA+Z,GAAC,OAAIA,EAAErb,gBAAgB9Q,gBAAkBigC,EAA0BnvB,gBAAgB9Q,gBAGxI,GAAKkgC,EAAL,CAIA,IAAMx7B,EAActM,EAAKuP,iBAAiBu4B,EAAmBvF,aAAaqE,EAAuBphC,OAAQhB,EAAY/F,UAC/G2pC,EAAqBpoC,EAAKuP,iBAAiBs4B,EAA0BtF,aAAa/8B,MAAOqzB,EAAcp6B,UAGvG06B,EAAe7sB,EAAYyR,IAAIqqB,GAC/BrG,EAAYyF,EAAWM,EAAmBhqB,aAAaikB,UACvDsG,EAAO,GAAA5mC,OAAMo3B,EAAc/sB,MAApB,KAAArK,OAA6BqmC,EAAmBpvB,iBACvD+f,EAAiBz4B,EAAK8P,gBAAgB,CAAC,QAAS,YAAatL,EAAYg0B,WAGzE3sB,EAAK,CACTw8B,UACAr8B,OAAQ,KACRM,cACA6sB,eACA3wB,aAPmBiwB,GAAkBA,EAAev7B,KAAjC,oBAAAuE,OAA4Dg3B,EAAev7B,MAA3E,oBAAAuE,OAAwG+C,EAAYg0B,SAApH,QAQnBhzB,MAAO8G,EACPL,OAAQ,YACRH,MAAOtH,EAAYsH,MACnB8sB,QAASC,EAAcD,QACvBJ,SAAUC,EAAenwB,MACzB+hB,YAAa7lB,EAAYsH,MACzBw8B,cAAeF,EACfzlC,KAAMmlC,EAAmBpvB,gBACzBoF,YAAagqB,EAAmBhqB,YAChCzR,UAAW01B,EAAYA,EAAU7yB,UAAY,MAGzCqrB,EAAuBv6B,EAAK+L,MAAMO,GAAavE,MAAMy/B,EAAWM,EAAmBhqB,aAAamqB,qBAMpC,+CAA9DJ,EAA0BtF,aAAax7B,KAAKa,eAEzC82B,IACHA,EAAiB7yB,GAGnBA,EAAGG,OAAS,UACZ2tB,EAAkBA,EAAgBptB,KAAKD,GACvC+6B,EAAuBA,EAAqB96B,KAAKD,GACjD0xB,EAAcA,EAAYzxB,KAAK4sB,EAAapxB,MAAMuE,IAClDouB,EAA2BA,EAAyBnuB,KAAKguB,IAIY,+CAA5DsN,EAA0BtF,aAAa/O,GAAG5rB,gBACnDiE,EAAGG,OAAS,WACZ2tB,EAAkBA,EAAgBntB,MAAMF,GACxCouB,EAA2BA,EAAyBluB,MAAM+tB,GACtDZ,EAAgBltB,GAAG,KACrBiyB,EAAiB,KACjBV,EAAch+B,EAAK+L,MAAM,GACzB4tB,EAAkB35B,EAAK+L,MAAM,GAC7Bs7B,EAAuBrnC,EAAK+L,MAAM,GAClC2uB,EAA2B16B,EAAK+L,MAAM,KAK1CtP,EAAawL,KAAK4D,MAGpBmyB,EAAcA,EAAYjgB,IAAIspB,GA7IXI,EAAAtrB,OAAA,SAiJZ,CACL6hB,cACAvhC,eACAiiC,iBACA/E,kBACAe,6BAtJiB,yBAAA+M,EAAA56B,SAAA65B,EAAA5rC,SA7rCF,gBAAAytC,EAAAC,EAAAC,GAAA,OAAAhC,EAAA15B,MAAAjS,KAAAkS,YAAA,GAAAlS,KAs1CnB4tC,2BAt1CmB,eAAAC,EAAAluC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAs1CU,SAAAy9B,EAAOpkC,EAAaq0B,EAAeluB,GAAnC,IAAAquB,EAAA,OAAAzN,EAAAtwB,EAAAsQ,KAAA,SAAAs9B,GAAA,cAAAA,EAAAp9B,KAAAo9B,EAAAn9B,MAAA,cAAAm9B,EAAAn9B,KAAA,EACG1L,EAAK85B,mBAAmBt1B,EAAaq0B,EAAeluB,GADvD,YACrBquB,EADqB6P,EAAAp6B,MAAA,CAAAo6B,EAAAn9B,KAAA,eAAAm9B,EAAA1sB,OAAA,SAGlB6c,EAAgBv8B,cAHE,cAAAosC,EAAA1sB,OAAA,SAKpB,MALoB,wBAAA0sB,EAAAh8B,SAAA+7B,EAAA9tC,SAt1CV,gBAAAguC,EAAAC,EAAAC,GAAA,OAAAL,EAAA57B,MAAAjS,KAAAkS,YAAA,GAAAlS,KA61CnBmuC,yBA71CmB,eAAAC,EAAAzuC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA61CQ,SAAAg+B,EAAO3kC,EAAaq0B,EAAeluB,GAAnC,IAAAquB,EAAA,OAAAzN,EAAAtwB,EAAAsQ,KAAA,SAAA69B,GAAA,cAAAA,EAAA39B,KAAA29B,EAAA19B,MAAA,cAAA09B,EAAA19B,KAAA,EACK1L,EAAK85B,mBAAmBt1B,EAAaq0B,EAAeluB,GADzD,YACnBquB,EADmBoQ,EAAA36B,MAAA,CAAA26B,EAAA19B,KAAA,eAAA09B,EAAAjtB,OAAA,SAGhB6c,EAAgB0F,gBAHA,cAAA0K,EAAAjtB,OAAA,SAKlB,MALkB,wBAAAitB,EAAAv8B,SAAAs8B,EAAAruC,SA71CR,gBAAAuuC,EAAAC,EAAAC,GAAA,OAAAL,EAAAn8B,MAAAjS,KAAAkS,YAAA,GAAAlS,KAo2CnB0uC,0BAp2CmB,eAAAC,EAAAhvC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAo2CS,SAAAu+B,EAAOllC,EAAaq0B,EAAeluB,GAAnC,IAAAquB,EAAA,OAAAzN,EAAAtwB,EAAAsQ,KAAA,SAAAo+B,GAAA,cAAAA,EAAAl+B,KAAAk+B,EAAAj+B,MAAA,cAAAi+B,EAAAj+B,KAAA,EACI1L,EAAK85B,mBAAmBt1B,EAAaq0B,EAAeluB,GADxD,YACpBquB,EADoB2Q,EAAAl7B,MAAA,CAAAk7B,EAAAj+B,KAAA,eAAAi+B,EAAAxtB,OAAA,SAGjB6c,EAAgBW,iBAHC,cAAAgQ,EAAAxtB,OAAA,SAKnB,MALmB,wBAAAwtB,EAAA98B,SAAA68B,EAAA5uC,SAp2CT,gBAAA8uC,EAAAC,EAAAC,GAAA,OAAAL,EAAA18B,MAAAjS,KAAAkS,YAAA,GAAAlS,KA22CnBuhC,mBA32CmB,eAAA0N,EAAAtvC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA22CE,SAAA6+B,EAAOxlC,EAAamG,GAApB,IAAAwhB,EAAA/R,EAAA6vB,EAAAC,EAAA7Q,EAAA8Q,EAAAxQ,EAAA,OAAApO,EAAAtwB,EAAAsQ,KAAA,SAAA6+B,GAAA,cAAAA,EAAA3+B,KAAA2+B,EAAA1+B,MAAA,UACbygB,EADa,mBAAA1qB,OACsB+C,EAAYqoB,KAAK/gB,MADvC,KAAArK,OACgDkJ,KAC7DyP,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAHvB,CAAAgsC,EAAA1+B,KAAA,eAAA0+B,EAAAjuB,OAAA,SAIVnc,EAAK+L,MAAMqO,IAJD,cAAAgwB,EAAA1+B,KAAA,EAOsB8P,QAAQqD,IAAI,CACnD7e,EAAKwrB,gBAAgBhnB,EAAYqoB,KAAK/gB,MAAOnB,GAC7C3K,EAAKomC,0BAA0B5hC,EAAYqoB,KAAK/gB,MAAO,gBAAiB,CAACnB,MATxD,UAAAs/B,EAAAG,EAAA37B,KAAAy7B,EAAAzvC,OAAAsyB,EAAA,EAAAtyB,CAAAwvC,EAAA,GAOd5Q,EAPc6Q,EAAA,GAOAC,EAPAD,EAAA,IAYf7Q,IAAgB8Q,EAZD,CAAAC,EAAA1+B,KAAA,gBAajBy+B,EAAenqC,EAAKuP,iBAAiB46B,EAAc3lC,EAAY/F,UACzDk7B,EAAkBN,EAAatxB,MAAMoiC,GAd1BC,EAAAjuB,OAAA,SAeVnc,EAAKytB,8BAA8BtB,EAAewN,IAfxC,eAAAyQ,EAAAjuB,OAAA,SAkBZ,MAlBY,yBAAAiuB,EAAAv9B,SAAAm9B,EAAAlvC,SA32CF,gBAAAuvC,EAAAC,GAAA,OAAAP,EAAAh9B,MAAAjS,KAAAkS,YAAA,GAAAlS,KA+3CnByvC,cA/3CmB9vC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+3CH,SAAAq/B,IAAA,IAAApgC,EAAAO,EAAAC,EAAA6/B,EAAAC,EAAA19B,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAo/B,GAAA,cAAAA,EAAAl/B,KAAAk/B,EAAAj/B,MAAA,UAAOtB,EAAPsgC,EAAA5rC,OAAA,QAAAmqB,IAAAyhB,EAAA,GAAAA,EAAA,GAAuB,IAErC//B,GAFyCA,EAA3B+/B,EAAA5rC,OAAA,EAAA4rC,EAAA,QAAAzhB,IAEOjpB,EAAKjF,MAAM4P,UAEfP,GAAkBA,EAActL,QAAWkB,EAAKjF,MAAM0P,gBAJzD,CAAAkgC,EAAAj/B,KAAA,eAAAi/B,EAAAxuB,OAAA,SAKL,IALK,cAAAwuB,EAAAj/B,KAAA,EAQa1L,EAAK0K,gBAAgBC,EAAS,EAAG,SAAUP,GAAe,GARvE,cAQRQ,EARQ+/B,EAAAl8B,KAURg8B,EAAc,GAEpBrgC,EAAcrL,QAAQ,SAACuF,GACrB,IAAIgH,EAAatL,EAAK+L,MAAM,GAC5B0+B,EAAYnmC,GAAiBgH,EAE7B,IAAMD,EAAc5Q,OAAOkR,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,IACvE+G,GAAeA,EAAYvM,QAE7BuM,EAAYtM,QAAQ,SAAC8M,EAAIhL,GAEvB,IAAKgL,EAAGlJ,MAASkJ,EAAGI,QAAwB,YAAdJ,EAAGI,SAA0BJ,EAAGS,YAC5D,OAAO,EAGT,OAAQT,EAAGG,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHV,EAAaA,EAAWiB,KAAKV,EAAGS,aAChC,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHhB,EAAaA,EAAWkB,MAAMX,EAAGS,aAOjChB,EAAWmB,GAAG,KAChBnB,EAAatL,EAAK+L,MAAM,MAM9B0+B,EAAYnmC,GAAiBgH,IApDjBq/B,EAAAxuB,OAAA,SAyDPsuB,GAzDO,yBAAAE,EAAA99B,SAAA29B,EAAA1vC,SA/3CGA,KA07CnB8vC,aAAe,WACb,IAAMrU,EAAgBv2B,EAAK6qC,oBAC3B,OAAOtU,EAAgBA,EAAcQ,UAAY/2B,EAAK8P,gBAAgB,CAAC,eA57CtDhV,KA87CnB+vC,kBAAoB,WAClB,IAAM3Y,EAAYlyB,EAAK8qC,sBACjBxxB,EAAUtZ,EAAK8P,gBAAgB,CAAC,UAAW,oBAAqBoiB,IAEtE,OADA5Y,EAAQpZ,GAAKgyB,EACN5Y,GAl8CUxe,KAo8CnBiiB,mBAAqB,WACnB,IAAMmV,EAAYlyB,EAAKuuB,uBACjBjV,EAAUtZ,EAAK8P,gBAAgB,CAAC,UAAW,oBAAqBoiB,IAEtE,OADA5Y,EAAQpZ,GAAKgyB,EACN5Y,GAx8CUxe,KA08CnByzB,qBAAuB,WACrB,IAAMwc,EAAiB/qC,EAAK8P,gBAAgB,CAAC,UAAW,oBACxD,OAAO9P,EAAKjF,MAAMue,SAAWtZ,EAAKjF,MAAMue,QAAQ6Y,UAAW/lB,SAASpM,EAAKjF,MAAMue,QAAQ6Y,SAASjyB,KAAkCkM,SAAS2+B,IA58C1HjwC,KA88CnBgwC,oBAAsB,WACpB,IAAMC,EAAiB/qC,EAAK8P,gBAAgB,CAAC,UAAW,oBACxD,OAAO9P,EAAKjF,MAAMue,SAAWtZ,EAAKjF,MAAMue,QAAQiZ,SAAUnmB,SAASpM,EAAKjF,MAAMue,QAAQiZ,QAAQryB,KAAkCkM,SAAS2+B,IAh9CxHjwC,KAk9CnBkwC,oBAl9CmBvwC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAk9CG,SAAA8/B,IAAA,IAAAtgC,EAAAP,EAAA+hB,EAAA/R,EAAA8wB,EAAAprB,EAAAoO,EAAAid,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1hC,EAAA2hC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3hC,EAAA4hC,EAAAjgC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA2hC,GAAA,cAAAA,EAAAzhC,KAAAyhC,EAAAxhC,MAAA,UAAOf,EAAPsiC,EAAAnuC,OAAA,QAAAmqB,IAAAgkB,EAAA,IAAAA,EAAA,GAAwB7iC,EAAxB6iC,EAAAnuC,OAAA,QAAAmqB,IAAAgkB,EAAA,GAAAA,EAAA,GAAwC,IAE5DtiC,EAAUA,GAAoB3K,EAAKjF,MAAM4P,UAExB3K,EAAKjF,MAAMse,KAJR,CAAA6zB,EAAAxhC,KAAA,eAAAwhC,EAAA/wB,OAAA,SAKX,IALW,UAQdgQ,EARc,oBAAA1qB,OAQsBkJ,EARtB,KAAAlJ,OAQiCyI,KAAKC,UAAUC,IAEjD,QADbgQ,EAAapa,EAAKmtC,cAAchhB,IATlB,CAAA+gB,EAAAxhC,KAAA,eAAAwhC,EAAA/wB,OAAA,SAWX/B,GAXW,UAcpBzP,EAAUA,EAAQ/C,cAEdsjC,EAAM,GACJprB,EAAiB9f,EAAK+c,qBACtBmR,EAAmBluB,EAAKuuB,uBACxB4c,EAAenrC,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,aAC7Ds7B,EAAgBprC,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,cAC9Du7B,EAAoBrrC,EAAK8P,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,gBAC1Fw7B,EAAuBtrC,EAAK8P,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fy7B,EAAuBvrC,EAAK8P,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7F07B,EAAuBxrC,EAAK8P,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7F27B,EAAyBzrC,EAAK8P,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,qBAE/F47B,EAA+C,YAA5B5rB,EAAe9C,SAAyBkR,EAAmBluB,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,UAAW,eAAgBoe,KAEzJid,EAAave,UAAWue,EAAaiC,UAAU1B,GA7B/B,CAAAwB,EAAAxhC,KAAA,gBA8BZigC,EAAiBR,EAAaiC,UAAU1B,GACxCE,EAAyB5rC,EAAK8P,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,oBAClF+7B,EAhCY,GAAApqC,OAgCSkqC,EAhCT,YAAAlqC,OAgCkCkJ,EAhClC,0DAAAlJ,OAgCkG0pC,EAAaxpC,KAE3HmqC,EAAoB9rC,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,UAAW,eAAgB47B,IAC7FK,EAAkBX,EAAcgC,UAAUtB,GAC1CE,EApCY,GAAAvqC,OAoCWsqC,EApCX,2CAAAtqC,OAoCoEzB,EAAKjF,MAAM4P,QApC/E,cAqCZshC,EArCY,GAAAxqC,OAqCiBsqC,EArCjB,0CAAAtqC,OAqCyEzB,EAAKjF,MAAM4P,QArCpF,cAsCZuhC,EAtCY,GAAAzqC,OAsCyBsqC,EAtCzB,kDAAAtqC,OAsCyFzB,EAAKjF,MAAM4P,QAtCpG,cAAAuiC,EAAAxhC,KAAA,GA8CR8P,QAAQqD,IAAI,CACpB7e,EAAKqtC,+BACLrtC,EAAKstC,kBAAkBzB,EAAiB,KACxC7rC,EAAKutC,wBAAwBvB,EAAmBZ,EAAcvsC,KAAM,KACpEmB,EAAKutC,wBAAwBtB,EAAyBb,EAAcvsC,KAAM,KAC1EmB,EAAKutC,wBAAwBrB,EAAiCd,EAAcvsC,KAAM,OAnDlE,WAAAstC,EAAAe,EAAAz+B,KAAA29B,EAAA3xC,OAAAsyB,EAAA,EAAAtyB,CAAA0xC,EAAA,GAyChBE,EAzCgBD,EAAA,GA0ChBE,EA1CgBF,EAAA,GA2ChBxhC,EA3CgBwhC,EAAA,GA4ChBG,EA5CgBH,EAAA,GA6ChBI,EA7CgBJ,EAAA,GA2DZK,EAAsB,GACtBC,EAAuB,GAC7BjyC,OAAOkR,OAAOigC,GAAwB7sC,QAAQ,SAAAyF,GACxCA,EAAYgpC,YACdd,EAAqBzkC,KAAKzD,EAAYgpC,WAAW7lC,QAAQC,eAEvDpD,EAAYipC,WACdhB,EAAoBxkC,KAAKzD,EAAYipC,UAAU9lC,QAAQC,iBAIvD+kC,EAAa,KAEb/hC,GAAgBA,EAAa1F,MAAQ0F,EAAa1F,KAAKwoC,QAAqD,oBAApC9iC,EAAa1F,KAAKwoC,OAAO9hC,QAxEnF,CAAAshC,EAAAxhC,KAAA,gBAyEhBihC,EAAa/hC,EAAa1F,KAAKwoC,OAAO9hC,OAAO,SAAAC,GAAE,OAAI4gC,EAAoBzd,SAASnjB,EAAGupB,gBAAgBxtB,gBAAkB,CAAC0jC,EAAqB3jC,QAAQC,cAAe4jC,EAAqB7jC,QAAQC,eAAeonB,SAASnjB,EAAG2nB,GAAG5rB,gBAAkBiE,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,gBAzE5QslC,EAAAxhC,KAAA,GA0EV1L,EAAK+K,aAAa4hC,EAAlB,eAAAgB,EAAAlzC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA8B,SAAAyiC,EAAO/hC,GAAP,IAAArH,EAAAqpC,EAAAC,EAAAC,EAAAC,EAAA,OAAAziB,EAAAtwB,EAAAsQ,KAAA,SAAA0iC,GAAA,cAAAA,EAAAxiC,KAAAwiC,EAAAviC,MAAA,cAC5BlH,EAAc/J,OAAOkR,OAAOigC,GAAwB5xB,KAAK,SAAA+Z,GAAC,OAAIA,EAAE92B,OAAS4O,EAAGwe,eAC5EwjB,EAF4BpzC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAEVoR,IACbG,OAAS,UACpB6hC,EAAW3b,UAAY4Z,EACvB+B,EAAWK,WAAa1pC,EAAY0pC,WACpCL,EAAWroC,MAAQxF,EAAKuP,iBAAiBs+B,EAAWroC,MAAOhB,EAAY/F,UANrCwvC,EAAAviC,KAAA,EAOV1L,EAAKmuC,aAAaN,EAAWlrC,KAAM3C,EAAKjF,MAAMqzC,YAPpC,OAO5BN,EAP4BG,EAAAx/B,KAQ5Bs/B,EAAiBD,EAAYA,EAAUtc,KAAKxX,KAAK,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkByjC,EAAkB1jC,QAAQC,gBAAiB,KACjIomC,EAAcD,GAAkB/tC,EAAKjF,MAAMse,KAAKkX,MAAQnkB,SAASpM,EAAKjF,MAAMse,KAAKkX,MAAM+d,kBAAkBP,EAAeQ,OAAO,KAAO,KAC5IV,EAAWW,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EACtE9C,EAAIjjC,KAAK4lC,GAXyB,yBAAAI,EAAAphC,SAAA+gC,EAAA9yC,SAA9B,gBAAA2zC,GAAA,OAAAd,EAAA5gC,MAAAjS,KAAAkS,YAAA,IA1EU,eAuFV4/B,EAAUhiC,EAAa1F,KAAKwoC,OAAO9hC,OAAO,SAAAC,GAAE,OAAI4gC,EAAoBzd,SAASnjB,EAAGupB,gBAAgBxtB,gBAAkB,CAAC0jC,EAAqB3jC,QAAQC,cAAe4jC,EAAqB7jC,QAAQC,eAAeonB,SAASnjB,EAAG9E,KAAKa,gBAAkBiE,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,gBAvF/QslC,EAAAxhC,KAAA,GAwFV1L,EAAK+K,aAAa6hC,EAAlB,eAAA8B,EAAAj0C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA2B,SAAAwjC,EAAO9iC,GAAP,IAAArH,EAAAqpC,EAAA,OAAAtiB,EAAAtwB,EAAAsQ,KAAA,SAAAqjC,GAAA,cAAAA,EAAAnjC,KAAAmjC,EAAAljC,MAAA,OACzBlH,EAAc/J,OAAOkR,OAAOigC,GAAwB5xB,KAAK,SAAA+Z,GAAC,OAAIA,EAAE92B,OAAS4O,EAAGwe,eAC5EwjB,EAFyBpzC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAEPoR,IACbG,OAAS,OACpB6hC,EAAWW,UAAW,EACtBX,EAAW3b,UAAY4Z,EACvB+B,EAAWK,WAAa1pC,EAAY0pC,WACpCL,EAAWroC,MAAQxF,EAAKuP,iBAAiBs+B,EAAWroC,MAAOhB,EAAY/F,UACvEysC,EAAIjjC,KAAK4lC,GARsB,wBAAAe,EAAA/hC,SAAA8hC,EAAA7zC,SAA3B,gBAAA+zC,GAAA,OAAAH,EAAA3hC,MAAAjS,KAAAkS,YAAA,IAxFU,WAoGZ6/B,EAAmBF,EAAW/rC,IAAI,SAAAiL,GAAE,OAAIA,EAAGlJ,KAAKiF,gBAChDklC,EAAwB,IAAIvY,OAAOv0B,EAAKjF,MAAM4P,QAAQgoB,QAAQ,KAAM,IAAI/qB,cAAgB,OAC1F2kC,GAAmBA,EAAgBrnC,MAAQqnC,EAAgBrnC,KAAKwoC,QAAwD,oBAAvCnB,EAAgBrnC,KAAKwoC,OAAO9hC,QAtG/F,CAAAshC,EAAAxhC,KAAA,gBAuGVqhC,EAAgBR,EAAgBrnC,KAAKwoC,OAAO9hC,OAAO,SAAAC,GAAE,OAAKghC,EAAiB7d,SAASnjB,EAAGlJ,KAAKiF,gBAAkBiE,EAAG2nB,GAAG5rB,gBAAkB6jC,EAAuB9jC,QAAQC,eAAiBiE,EAAG8d,MAAM/hB,cAAcknC,MAAMhC,IAA0BjhC,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,gBAvGhRslC,EAAAxhC,KAAA,GAwGV1L,EAAK+K,aAAagiC,EAAlB,eAAAgC,EAAAt0C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAiC,SAAA6jC,EAAOnjC,GAAP,IAAArH,EAAAqpC,EAAAC,EAAAC,EAAAC,EAAA,OAAAziB,EAAAtwB,EAAAsQ,KAAA,SAAA0jC,GAAA,cAAAA,EAAAxjC,KAAAwjC,EAAAvjC,MAAA,cAC/BlH,EAAc/J,OAAOkR,OAAOigC,GAAwB5xB,KAAK,SAAA+Z,GAAC,MAAe,SAAXA,EAAE92B,QAChE4wC,EAF+BpzC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAEboR,IACbG,OAAS,UACpB6hC,EAAWxjB,YAAc,OACzBwjB,EAAW3b,UAAY4Z,EACvB+B,EAAWK,WAAa1pC,EAAY0pC,WACpCL,EAAWroC,MAAQxF,EAAKuP,iBAAiBs+B,EAAWroC,MAAOhB,EAAY/F,UAPlCwwC,EAAAvjC,KAAA,EAQb1L,EAAKmuC,aAAaN,EAAWlrC,KAAM3C,EAAKjF,MAAMqzC,YARjC,OAQ/BN,EAR+BmB,EAAAxgC,KAS/Bs/B,EAAiBD,EAAYA,EAAUtc,KAAKxX,KAAK,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkByjC,EAAkB1jC,QAAQC,gBAAiB,KACjIomC,EAAcD,GAAkB/tC,EAAKjF,MAAMse,KAAKkX,MAAQnkB,SAASpM,EAAKjF,MAAMse,KAAKkX,MAAM+d,kBAAkBP,EAAeQ,OAAO,KAAO,KAC5IV,EAAWW,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EACtE9C,EAAIjjC,KAAK4lC,GAZ4B,yBAAAoB,EAAApiC,SAAAmiC,EAAAl0C,SAAjC,gBAAAo0C,GAAA,OAAAH,EAAAhiC,MAAAjS,KAAAkS,YAAA,IAxGU,aAwHdw/B,GAA2BA,EAAwBtnC,MAAQsnC,EAAwBtnC,KAAKwoC,QAAgE,oBAA/ClB,EAAwBtnC,KAAKwoC,OAAO9hC,QAxH/H,CAAAshC,EAAAxhC,KAAA,gBAyHVshC,EAAaR,EAAwBtnC,KAAKwoC,OAAO9hC,OAAO,SAAAC,GAAE,OAAKghC,EAAiB7d,SAASnjB,EAAGlJ,KAAKiF,gBAAkBiE,EAAG9E,KAAKa,gBAAkB2jC,EAAqB5jC,QAAQC,gBAAkBiE,EAAG8d,MAAM/hB,cAAcknC,MAAMhC,IAA0BjhC,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,gBAzHpRslC,EAAAxhC,KAAA,GA0HV1L,EAAK+K,aAAaiiC,EAAlB,eAAAmC,EAAA10C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA8B,SAAAikC,EAAOvjC,GAAP,IAAArH,EAAAqpC,EAAA,OAAAtiB,EAAAtwB,EAAAsQ,KAAA,SAAA8jC,GAAA,cAAAA,EAAA5jC,KAAA4jC,EAAA3jC,MAAA,OAC5BlH,EAAc/J,OAAOkR,OAAOigC,GAAwB5xB,KAAK,SAAA+Z,GAAC,MAAe,SAAXA,EAAE92B,QAChE4wC,EAF4BpzC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAEVoR,IACbG,OAAS,OACpB6hC,EAAWW,UAAW,EACtBX,EAAWxjB,YAAc,OACzBwjB,EAAW3b,UAAY4Z,EACvB+B,EAAWxhC,UAAYD,SAASP,EAAGQ,WACnCwhC,EAAWK,WAAa1pC,EAAY0pC,WACpCL,EAAWroC,MAAQxF,EAAKuP,iBAAiBs+B,EAAWroC,MAAOhB,EAAY/F,UACvEysC,EAAIjjC,KAAK4lC,GAVyB,yBAAAwB,EAAAxiC,SAAAuiC,EAAAt0C,SAA9B,gBAAAw0C,GAAA,OAAAH,EAAApiC,MAAAjS,KAAAkS,YAAA,IA1HU,aAwIds/B,GAAcA,EAAWpnC,MAAQonC,EAAWpnC,KAAKA,MAAQonC,EAAWpnC,KAAKA,KAAKqqC,OAAS90C,OAAOkR,OAAO2gC,EAAWpnC,KAAKA,KAAKqqC,OAAOzwC,QAxInH,CAAAouC,EAAAxhC,KAAA,gBAyIVL,EAAcihC,EAAWpnC,KAAKA,KAAKqqC,MAAM3jC,OAAO,SAAAC,GAAE,OAAIA,EAAG2jC,YAAc9C,EAAqB1d,SAASnjB,EAAG2jC,WAAW5nC,iBAzIzGslC,EAAAxhC,KAAA,GA2IV1L,EAAK+K,aAAaM,EAAlB,eAAAokC,EAAAh1C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+B,SAAAukC,EAAO7jC,GAAP,IAAArH,EAAAmrC,EAAAC,EAAA,OAAArkB,EAAAtwB,EAAAsQ,KAAA,SAAAskC,GAAA,cAAAA,EAAApkC,KAAAokC,EAAAnkC,MAAA,WAC7BlH,EAAc/J,OAAOkR,OAAOigC,GAAwB5xB,KAAK,SAAAxV,GAAW,OAAKA,EAAYgpC,YAAc3hC,EAAG2jC,YAAchrC,EAAYgpC,WAAW7lC,QAAQC,gBAAkBiE,EAAG2jC,WAAW5nC,kBACpKpD,EAAYgpC,WAFE,CAAAqC,EAAAnkC,KAAA,eAAAmkC,EAAA1zB,OAAA,oBAKnC3X,EAAYmD,QAAUnD,EAAYgpC,WAAW7lC,QACxCyC,GAAkBA,EAActL,SAAUsL,EAAc4kB,SAASxqB,EAAYsH,OAN/C,CAAA+jC,EAAAnkC,KAAA,YAQR,cADnBikC,EAAY3vC,EAAK8vC,mBAAmBjkC,EAAIrH,IAChCwH,OARmB,CAAA6jC,EAAAnkC,KAAA,gBAS/BikC,EAAUI,QAAS,EACnBJ,EAAUzd,UAAYwZ,EACtBiE,EAAUzB,WAAa1pC,EAAY0pC,WAXJ2B,EAAAnkC,KAAA,GAYJ1L,EAAKjF,MAAMi1C,eAAeC,eAAeN,EAAUhtC,MAZ/C,WAY/BgtC,EAAUnB,SAZqBqB,EAAAphC,KAa/BkhC,EAAUI,QAAS,GAEfvrC,EAAYipC,YAAakC,EAAUnB,SAfR,CAAAqB,EAAAnkC,KAAA,gBAgBvBkkC,EAAiB5vC,EAAKjF,MAAMi1C,eAAeE,MAAM1rC,EAAYipC,UAAU9lC,SAAQ,GAhBxDkoC,EAAAnkC,KAAA,GAiBJkkC,EAAeO,iBAAiBR,EAAUhtC,MAjBtC,QAiB7BgtC,EAAUI,OAjBmBF,EAAAphC,KAAA,QAoB/By8B,EAAIjjC,KAAK0nC,GApBsB,yBAAAE,EAAAhjC,SAAA6iC,EAAA50C,SAA/B,gBAAAs1C,GAAA,OAAAX,EAAA1iC,MAAAjS,KAAAkS,YAAA,IA3IU,eAuKpBk+B,EAAMA,EAAIxD,KAAK,SAACzsC,EAAG+4B,GAAJ,OAAW5nB,SAASnR,EAAEoR,WAAaD,SAAS4nB,EAAE3nB,WAAa,GAAK,IAvK3D6gC,EAAA/wB,OAAA,SA2Kbnc,EAAKqa,cAAc8R,EAAe+e,EAAK,MA3K1B,yBAAAgC,EAAArgC,SAAAo+B,EAAAnwC,SAl9CHA,KA+nDnBu1C,kBA/nDmB51C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+nDC,SAAAmlC,IAAA,IAAA3lC,EAAAP,EAAAmmC,EAAAjc,EAAAkc,EAAAC,EAAA9T,EAAAwO,EAAAQ,EAAA+E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7F,EAAA8F,EAAAC,EAAA/hC,EAAAgiC,EAAAC,EAAAnkC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA6lC,GAAA,cAAAA,EAAA3lC,KAAA2lC,EAAA1lC,MAAA,UAAOf,EAAPwmC,EAAAryC,OAAA,QAAAmqB,IAAAkoB,EAAA,IAAAA,EAAA,GAAwB/mC,EAAxB+mC,EAAAryC,OAAA,QAAAmqB,IAAAkoB,EAAA,GAAAA,EAAA,GAAwC,GAAIZ,EAA5CY,EAAAryC,OAAA,QAAAmqB,IAAAkoB,EAAA,IAAAA,EAAA,IAClBxmC,EAAUA,GAAoB3K,EAAKjF,MAAM4P,UAExBP,GAAkBA,EAActL,OAH/B,CAAAsyC,EAAA1lC,KAAA,eAAA0lC,EAAAj1B,OAAA,SAIT,IAJS,UAOlBxR,EAAUA,EAAQ/C,cAEd0sB,EAAU,GACVkc,EAAU,KACVC,EAAe,KACb9T,EAAkB38B,EAAKuuB,yBAEvB4c,EAAenrC,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,cAGlD8c,UAAWue,EAAaiC,UAAUzQ,GAjBjC,CAAAyU,EAAA1lC,KAAA,YAkBVigC,EAAiBR,EAAaiC,UAAUzQ,GAG9C8T,EAAY,GAAAhvC,OAAMkqC,EAAN,YAAAlqC,OAA+BkJ,EAA/B,mDAAAlJ,OAAwF0pC,EAAaxpC,QACjH6uC,EAAUxwC,EAAKqxC,iBAAiBZ,KAGjBD,EAAQtrC,MAAQsrC,EAAQtrC,KAAKA,MAAQsrC,EAAQtrC,KAAKA,KAAKqqC,OAAS90C,OAAOkR,OAAO6kC,EAAQtrC,KAAKA,KAAKqqC,OAAOzwC,QAzBtG,CAAAsyC,EAAA1lC,KAAA,gBA2BRglC,EAAaj2C,OAAOkR,OAAO6kC,EAAQtrC,KAAKA,KAAKqqC,OAAOzwC,OACpD6xC,EAAel2C,OAAOkR,OAAO6kC,EAAQtrC,KAAKA,KAAKqqC,OAAOvgC,MACtD4hC,EAAwBD,GAAgBA,EAAaW,aAAellC,SAASukC,EAAaW,cAAgB,EAAI,EAE9GT,EA/BQ,GAAApvC,OA+BuBkqC,EA/BvB,YAAAlqC,OA+BgDkJ,EA/BhD,oDAAAlJ,OA+B0GivC,GA/B1GU,EAAA1lC,KAAA,GAgCQ1L,EAAKstC,kBAAkBuD,EAA2B,IAhC1D,cAgCVC,EAhCUM,EAAA3iC,OAkCGqiC,EAAU5rC,KAAKA,KAAKqqC,OAASuB,EAAU5rC,KAAKA,KAAKqqC,MAAMzwC,QAlC1D,CAAAsyC,EAAA1lC,KAAA,gBAAA0lC,EAAA1lC,KAAA,GAmCM1L,EAAKuxC,iBAAiBT,EAAU5rC,KAAKA,KAAKqqC,MAAOnlC,GAnCvD,SAmCZ0mC,EAnCYM,EAAA3iC,OAsCKhU,OAAOkR,OAAOmlC,GAAWhyC,SAElCiyC,EAAqBt2C,OAAOkR,OAAOmlC,GAAWlwC,IAAI,SAAA6O,GAAM,OAAKrD,SAASqD,EAAO6hC,gBACvDplC,KAAKqE,IAALxD,MAAAb,KAAIzR,OAAA4/B,EAAA,EAAA5/B,CAAQs2C,KAGbH,IAEzBn2C,OAAOkR,OAAOmlC,GAAW/xC,QAAQ,SAAC8M,GAChBpR,OAAOoE,KAAK2xC,EAAQtrC,KAAKA,KAAKqqC,OAAOvgB,SAASnjB,EAAG2lC,WAE/DhB,EAAQtrC,KAAKA,KAAKqqC,MAAM1jC,EAAG2lC,SAAW3lC,KAK1C7L,EAAKyxC,wBAAwBhB,EAAcD,EAAQtrC,KAAKA,KAAKqqC,SAtDrD,QAAA6B,EAAA1lC,KAAA,iBA2Dd8kC,EAAU,KA3DI,WA8DZtF,EAAMsF,EAEND,GACFve,QAAQqc,IAAI,cAAenD,GAGxBA,EApEW,CAAAkG,EAAA1lC,KAAA,gBAAA0lC,EAAA1lC,KAAA,GAsEF1L,EAAK0xC,YAAYjB,GAtEf,YAsEdvF,EAtEckG,EAAA3iC,OA0EDy8B,EAAIhmC,MAAsC,IAA9BkH,SAAS8+B,EAAIhmC,KAAK+G,QA1E7B,CAAAmlC,EAAA1lC,KAAA,SA2ERslC,EAAe,EACfC,GAAgB,EA5ER,eAAAG,EAAA1lC,KAAA,GA8EJ1L,EAAKi/B,aAAa,KA9Ed,eAAAmS,EAAA1lC,KAAA,GA+EE1L,EAAK0xC,YAAYjB,GA/EnB,QA+EVvF,EA/EUkG,EAAA3iC,KAgFVuiC,IACAC,KAAgB/F,IAAOA,EAAIhmC,OAAOkH,SAAS8+B,EAAIhmC,KAAK+G,QAjF1C,WAmFH+kC,EAAe,IAAMC,EAnFlB,CAAAG,EAAA1lC,KAAA,iBAuFVw/B,GAAOA,EAAIhmC,MAAQkH,SAAS8+B,EAAIhmC,KAAK+G,QAAU,IAC3CiD,EAAY9C,SAASe,KAAKg5B,MAAQ,KAElC+K,EAAc,CAClBhsC,KAAM,CACJA,KAAKgmC,EAAIhmC,MAEXgK,aAEFlP,EAAK2xC,mCAAmC,yBAA0BlB,EAAcS,IAhGpE,aAqGZhG,GAAOA,EAAIhmC,MAAQgmC,EAAIhmC,KAAKA,MAAQgmC,EAAIhmC,KAAKA,KAAKqqC,OArGtC,CAAA6B,EAAA1lC,KAAA,SAsGd4oB,EAAU4W,EAAIhmC,KAAKA,KAAKqqC,MAtGV6B,EAAA1lC,KAAA,wBAAA0lC,EAAAj1B,OAAA,SAwGP,IAxGO,eAAAi1B,EAAAj1B,OAAA,SA4GX,CACLmY,UACAkc,UACAC,iBA/GgB,yBAAAW,EAAAvkC,SAAAyjC,EAAAx1C,SA/nDDA,KAivDnB82C,oBAjvDmBn3C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAivDG,SAAA0mC,IAAA,IAAAlnC,EAAAmnC,EAAAC,EAAA3nC,EAAAmmC,EAAAriC,EAAA8jC,EAAArV,EAAAyO,EAAA9W,EAAAkc,EAAAC,EAAA1E,EAAAkG,EAAArB,EAAAsB,EAAApB,EAAAC,EAAA7F,EAAAiH,EAAAnlC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA6mC,GAAA,cAAAA,EAAA3mC,KAAA2mC,EAAA1mC,MAAA,UAAOf,EAAPwnC,EAAArzC,OAAA,QAAAmqB,IAAAkpB,EAAA,IAAAA,EAAA,GAAwBL,EAAxBK,EAAArzC,OAAA,QAAAmqB,IAAAkpB,EAAA,GAAAA,EAAA,GAA2C,EAAGJ,EAA9CI,EAAArzC,OAAA,QAAAmqB,IAAAkpB,EAAA,GAAAA,EAAA,GAA+D,SAAU/nC,EAAzE+nC,EAAArzC,OAAA,QAAAmqB,IAAAkpB,EAAA,GAAAA,EAAA,GAAyF,GAAI5B,EAA7F4B,EAAArzC,OAAA,QAAAmqB,IAAAkpB,EAAA,IAAAA,EAAA,IACpBxnC,EAAUA,GAAoB3K,EAAKjF,MAAM4P,UAExBP,GAAkBA,EAActL,OAH7B,CAAAszC,EAAA1mC,KAAA,eAAA0mC,EAAAj2B,OAAA,SAIX,IAJW,UAOpBxR,EAAUA,EAAQ/C,cAEZsG,EAAmBlO,EAAKjF,MAAMmT,iBAG9B8jC,EAAuBhyC,EAAK8P,gBAAgB,CAAC,UAAW,qBAC9DgiC,EAAmB5lC,KAAKqE,IAAIyhC,EAAsBF,GAE5CnV,EAAkB38B,EAAKuuB,uBACvB6c,EAAgBprC,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,cAEhEwkB,EAAU,GACVkc,EAAU,KACVC,EAAe,MAGfrF,EAAcxe,UAAWwe,EAAcgC,UAAUzQ,GAvBjC,CAAAyV,EAAA1mC,KAAA,YAwBZqgC,EAAkBX,EAAcgC,UAAUzQ,GAGhD8T,EAAY,GAAAhvC,OAAMsqC,EAAN,cAAAtqC,OAAkCyM,EAAlC,2CAAAzM,OAA4FkJ,EAA5F,gBAAAlJ,OAAkHuwC,EAAlH,cAAAvwC,OAAmJswC,EAAnJ,gBACZvB,EAAUxwC,EAAKqxC,iBAAiBZ,KAGjBD,EAAQtrC,KAAKwoC,QAAUjzC,OAAOkR,OAAO6kC,EAAQtrC,KAAKwoC,QAAQ5uC,QA/BvD,CAAAszC,EAAA1mC,KAAA,gBAiCVumC,EAAqBx3C,OAAOkR,OAAO6kC,EAAQtrC,KAAKwoC,QAAQ9sC,IAAI,SAAAiL,GAAE,OAAKO,SAASP,EAAGiS,eAC/E8yB,EAAwB1kC,KAAKqE,IAALxD,MAAAb,KAAIzR,OAAA4/B,EAAA,EAAA5/B,CAAQw3C,IAEpCC,EApCU,GAAAzwC,OAoCsBsqC,EApCtB,cAAAtqC,OAoCkDyM,EApClD,2CAAAzM,OAoC4GkJ,EApC5G,gBAAAlJ,OAoCkImvC,EApClI,cAAAnvC,OAoCoKswC,EApCpK,aAAAK,EAAA1mC,KAAA,GAsCM1L,EAAKutC,wBAAwB2E,EAA4B9G,EAAcvsC,KAAM,IAtCnF,cAsCZiyC,EAtCYsB,EAAA3jC,OAwCCqiC,EAAU5rC,KAAKwoC,QAAUoD,EAAU5rC,KAAKwoC,OAAO5uC,QAxChD,CAAAszC,EAAA1mC,KAAA,gBAAA0mC,EAAA1mC,KAAA,GA0CI1L,EAAKqyC,kBAAkBvB,EAAU5rC,KAAKwoC,OAAQtjC,GAAe,GAAM,GA1CvE,SA0Cd0mC,EA1CcsB,EAAA3jC,OA4CGhU,OAAOkR,OAAOmlC,GAAWhyC,SAElCiyC,EAAqBt2C,OAAOkR,OAAOmlC,GAAWlwC,IAAI,SAAA6O,GAAM,OAAKrD,SAASqD,EAAOqO,eACvD5R,KAAKqE,IAALxD,MAAAb,KAAIzR,OAAA4/B,EAAA,EAAA5/B,CAAQs2C,KAGbH,IAEzBn2C,OAAOkR,OAAOmlC,GAAW/xC,QAAQ,SAAC8M,GAChBpR,OAAOoE,KAAK2xC,EAAQtrC,KAAKwoC,QAAQ1e,SAASnjB,EAAGw8B,WAE3DmI,EAAQtrC,KAAKwoC,OAAO7hC,EAAGw8B,SAAWx8B,KAKtC7L,EAAKyxC,wBAAwBhB,EAAcD,EAAQtrC,KAAKwoC,UA5D9C,QAAA0E,EAAA1mC,KAAA,iBAiEhB8kC,EAAU,KAjEM,WAoEdtF,EAAMsF,EAEND,GACFve,QAAQqc,IAAI,cAAenD,GAGxBA,EA1Ea,CAAAkH,EAAA1mC,KAAA,gBAAA0mC,EAAA1mC,KAAA,GA4EJ1L,EAAKutC,wBAAwBkD,EAAcrF,EAAcvsC,KAAM,GA5E3D,QA4EhBqsC,EA5EgBkH,EAAA3jC,KAAA,aA+Gdy8B,GAAOA,EAAIhmC,MAAQgmC,EAAIhmC,KAAKwoC,QA/Gd,CAAA0E,EAAA1mC,KAAA,SAgHhB4oB,EAAU4W,EAAIhmC,KAAKwoC,OAhHH0E,EAAA1mC,KAAA,wBAAA0mC,EAAAj2B,OAAA,SAkHT,IAlHS,eAAAi2B,EAAAj2B,OAAA,SAsHb,CACLmY,UACAkc,UACAC,iBAzHkB,yBAAA2B,EAAAvlC,SAAAglC,EAAA/2C,SAjvDHA,KA62DnB0iC,YA72DmB/iC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA62DL,SAAAmnC,IAAA,IAAA3nC,EAAAmnC,EAAAC,EAAA3nC,EAAAkqB,EAAAie,EAAAvlC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAinC,GAAA,cAAAA,EAAA/mC,KAAA+mC,EAAA9mC,MAAA,cAAOf,EAAP4nC,EAAAzzC,OAAA,QAAAmqB,IAAAspB,EAAA,IAAAA,EAAA,GAAwBT,EAAxBS,EAAAzzC,OAAA,QAAAmqB,IAAAspB,EAAA,GAAAA,EAAA,GAA2C,EAAGR,EAA9CQ,EAAAzzC,OAAA,QAAAmqB,IAAAspB,EAAA,GAAAA,EAAA,GAA+D,SAAUnoC,EAAzEmoC,EAAAzzC,OAAA,QAAAmqB,IAAAspB,EAAA,GAAAA,EAAA,GAAyF,GAAzFC,EAAA9mC,KAAA,EACU1L,EAAK0K,gBAAgBC,EAASmnC,EAAkBC,EAAgB3nC,GAD1E,cACNkqB,EADMke,EAAA/jC,KAAA+jC,EAAAr2B,OAAA,SAGLnc,EAAKyyC,eAAene,EAASlqB,IAHxB,wBAAAooC,EAAA3lC,SAAAylC,EAAAx3C,SA72DKA,KAk3DnB22C,wBAA0B,SAACiB,EAAUxH,GACnC,IAAMyH,EAAa,GACnBl4C,OAAOoE,KAAKqsC,GAAKnsC,QAAQ,SAAA+Y,GACvB,IAAMjM,EAAKq/B,EAAIpzB,IACXjM,EAAGiS,aAAiBjS,EAAGI,QAAsC,YAA5BJ,EAAGI,OAAOrE,gBAC7C+qC,EAAW76B,GAAUjM,KAKzB,IAAM+mC,EAAgB,CACpB1tC,KAAM,CACJwoC,OAAQiF,IAIZ3yC,EAAK6yC,kBAAkBH,GAAU,EAAOE,IAl4DvB93C,KAo4DnB4P,gBAp4DmBjQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAo4DD,SAAA2nC,IAAA,IAAAnoC,EAAAmnC,EAAAC,EAAA3nC,EAAAmmC,EAAAwC,EAAAjzB,EAAAorB,EAAA8H,EAAA1e,EAAAkc,EAAAC,EAAAwC,EAAAC,EAAAlmC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA4nC,GAAA,cAAAA,EAAA1nC,KAAA0nC,EAAAznC,MAAA,OAAOf,EAAPuoC,EAAAp0C,OAAA,QAAAmqB,IAAAiqB,EAAA,IAAAA,EAAA,GAAwBpB,EAAxBoB,EAAAp0C,OAAA,QAAAmqB,IAAAiqB,EAAA,GAAAA,EAAA,GAA2C,EAAGnB,EAA9CmB,EAAAp0C,OAAA,QAAAmqB,IAAAiqB,EAAA,GAAAA,EAAA,GAA+D,SAAU9oC,EAAzE8oC,EAAAp0C,OAAA,QAAAmqB,IAAAiqB,EAAA,GAAAA,EAAA,GAAyF,GAAI3C,EAA7F2C,EAAAp0C,OAAA,QAAAmqB,IAAAiqB,EAAA,IAAAA,EAAA,GAEZH,EAAa,KACXjzB,EAAiB9f,EAAK+c,qBAHZo2B,EAAAlmB,GAKRnN,EAAec,SALPuyB,EAAAznC,KAMT,YANSynC,EAAAlmB,GAAA,IAAAkmB,EAAAlmB,GAAA,yBAAAkmB,EAAAznC,KAAA,GAOO1L,EAAKqwC,kBAAkB1lC,EAASP,EAAemmC,GAPtD,eAOZwC,EAPYI,EAAA1kC,KAAA0kC,EAAAh3B,OAAA,2BAAAg3B,EAAAznC,KAAA,GAWO1L,EAAK4xC,oBAAoBjnC,EAASmnC,EAAkBC,EAAgB3nC,EAAemmC,GAX1F,eAWZwC,EAXYI,EAAA1kC,KAAA0kC,EAAAh3B,OAAA,uBAgBZ+uB,EAAM,IAEN6H,EAlBY,CAAAI,EAAAznC,KAAA,YAoBZ4oB,GApBY0e,EAuBVD,GAHFze,QACAkc,EArBYwC,EAqBZxC,QACAC,EAtBYuC,EAsBZvC,cAGED,EAzBU,CAAA2C,EAAAznC,KAAA,gBAAAynC,EAAAznC,KAAA,GA2BA1L,EAAKozC,iBAAiB9e,EAASlqB,GA3B/B,QA2BZ8gC,EA3BYiI,EAAA1kC,KAAA0kC,EAAAznC,KAAA,iBA6BNunC,EAAqBx4C,OAAOoE,KAAKmB,EAAKjF,MAAM0P,iBA7BtC0oC,EAAAE,GA+BJvzB,EAAec,SA/BXuyB,EAAAznC,KAgCL,YAhCKynC,EAAAE,GAAA,IAAAF,EAAAE,GAAA,yBAAAF,EAAAznC,KAAA,GAiCI1L,EAAKuxC,iBAAiBjd,EAAS2e,GAjCnC,eAiCR/H,EAjCQiI,EAAA1kC,KAAA0kC,EAAAh3B,OAAA,2BAAAg3B,EAAAznC,KAAA,GAsCI1L,EAAKqyC,kBAAkB/d,EAAS2e,GAtCpC,eAsCR/H,EAtCQiI,EAAA1kC,KAAA0kC,EAAAh3B,OAAA,oBA2CR+uB,GAAOzwC,OAAOoE,KAAKqsC,GAAKpsC,QAC1BkB,EAAKyxC,wBAAwBhB,EAAcvF,GA5CjC,eAAAiI,EAAAh3B,OAAA,SAmDT1hB,OACJkR,OAAOu/B,GACPt/B,OAAO,SAAAC,GAAE,OAAKA,EAAGC,OAAS1B,EAAc4kB,SAASnjB,EAAGC,MAAMiE,iBAC1D23B,KAAK,SAACzsC,EAAG+4B,GAAJ,OAAW/4B,EAAEoR,UAAY2nB,EAAE3nB,WAAa,EAAI,KAtDpC,yBAAA8mC,EAAAtmC,SAAAimC,EAAAh4C,SAp4DCA,KA47DnBuyC,6BA57DmB5yC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA47DY,SAAAmoC,IAAA,IAAAC,EAAA,OAAAhoB,EAAAtwB,EAAAsQ,KAAA,SAAAioC,GAAA,cAAAA,EAAA/nC,KAAA+nC,EAAA9nC,MAAA,cACvB6nC,EAAmB,IAAIvzC,EAAKjF,MAAM04C,YAAY13B,IAAI23B,SACtD,CACE,CACEC,UAAU,EACVC,OAAQ,GACR32C,KAAM,cACN42C,QAAS,CACP,CACEC,aAAc,UACd72C,KAAM,GACNoB,KAAM,YAGV01C,SAAS,EACTC,gBAAiB,OACjB31C,KAAM,aAGV,8CAnB2Bm1C,EAAAvmB,GAsBtB7gB,SAtBsBonC,EAAA9nC,KAAA,EAsBP6nC,EAAiBU,QAAQC,cAAcC,OAtBhC,cAAAX,EAAAH,GAAAG,EAAA/kC,KAAA+kC,EAAAr3B,OAAA,YAAAq3B,EAAAvmB,IAAAumB,EAAAH,KAAA,wBAAAG,EAAA3mC,SAAAymC,EAAAx4C,SA57DZA,KAo9DnBs5C,gCAp9DmB,eAAAC,EAAA55C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAo9De,SAAAmpC,EAAOx8B,GAAP,IAAAy8B,EAAAC,EAAAnI,EAAAxgC,EAAAmiC,EAAA,OAAAziB,EAAAtwB,EAAAsQ,KAAA,SAAAkpC,GAAA,cAAAA,EAAAhpC,KAAAgpC,EAAA/oC,MAAA,cAAA+oC,EAAA/oC,KAAA,EAItB8P,QAAQqD,IAAI,CACpB7e,EAAKqtC,+BACLrtC,EAAKjF,MAAM04C,YAAY13B,IAAI24B,sBAAsB58B,KANnB,cAAAy8B,EAAAE,EAAAhmC,KAAA+lC,EAAA/5C,OAAAsyB,EAAA,EAAAtyB,CAAA85C,EAAA,GAE9BlI,EAF8BmI,EAAA,GAG9B3oC,EAH8B2oC,EAAA,GAS1BxG,EAAcniC,GAAMA,EAAG2lB,MAAQ3lB,EAAG2lB,KAAK1yB,QAAUkB,EAAKjF,MAAMse,KAAKkX,MAAQvwB,EAAKjF,MAAMse,KAAKkX,MAAM+d,kBAAkBziC,EAAG2lB,KAAK3lB,EAAG2lB,KAAK1yB,OAAS,GAAGyvC,OAAO,IAAM,KAThIkG,EAAAt4B,OAAA,SAWzB6xB,EAAc5hC,SAASigC,IAAkBjgC,SAAS4hC,GAAe,MAXxC,wBAAAyG,EAAA5nC,SAAAynC,EAAAx5C,SAp9Df,gBAAA65C,GAAA,OAAAN,EAAAtnC,MAAAjS,KAAAkS,YAAA,GAAAlS,KAi+DnB23C,eAj+DmB,eAAAmC,EAAAn6C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAi+DF,SAAA0pC,EAAOvgB,GAAP,IAAAlqB,EAAAK,EAAA2yB,EAAA0X,EAAA9nC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAwpC,GAAA,cAAAA,EAAAtpC,KAAAspC,EAAArpC,MAAA,UAAgBtB,EAAhB0qC,EAAAh2C,OAAA,QAAAmqB,IAAA6rB,EAAA,GAAAA,EAAA,GAAgC,GAE1CxgB,GAAYA,EAAQx1B,QAAqC,oBAApBw1B,EAAQv1B,QAFnC,CAAAg2C,EAAArpC,KAAA,eAAAqpC,EAAA54B,OAAA,SAGN,IAHM,cAMT1R,EAAkBzK,EAAKjF,MAAM0P,gBAAkBzK,EAAKjF,MAAM0P,gBAAkBzK,EAAKu9B,0BAElFnzB,GAAkBA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAK4L,KAGxB2yB,EAAW9I,EAAQ1oB,OAAO,SAAAC,GAAE,OAAKzB,EAAc4kB,SAASnjB,EAAGC,QAAU,CAAC,UAAW,WAAY,aAAc,cAAe,kBAAmB,mBAAoB,iBAAkB,mBAAmBkjB,SAASnjB,EAAGG,WAE3MlN,QACXs+B,EAASsK,KAAK,SAACzsC,EAAG+4B,GAAJ,OAAW/4B,EAAEoR,UAAY2nB,EAAE3nB,WAAa,EAAI,IAf7C0oC,EAAA54B,OAAA,SAkBRihB,GAlBQ,wBAAA2X,EAAAloC,SAAAgoC,EAAA/5C,SAj+DE,gBAAAk6C,GAAA,OAAAJ,EAAA7nC,MAAAjS,KAAAkS,YAAA,GAAAlS,KAq/DnBg1C,mBAAqB,SAACjkC,GAA2B,IAAvBrH,EAAuBwI,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACtCxI,EAAcA,GAAe/J,OAAOkR,OAAO3L,EAAKjF,MAAM0P,iBAAiBuP,KAAK,SAAAxV,GAAW,OAAIqH,EAAG2jC,YAAchrC,EAAYqoB,KAAKllB,QAAQC,gBAAkBiE,EAAG2jC,WAAW5nC,gBAErK,IAAMqtC,EAAkBppC,EAAGqpC,YAAc1wC,GAAeA,EAAYqoB,KAAOhhB,EAAGqpC,WAAWl7B,KAAK,SAAAq0B,GAAG,OAAIA,EAAI8G,eAAevtC,gBAAkBpD,EAAYmD,QAAQC,eAAiBymC,EAAI+G,SAAgC,aAArB/G,EAAI+G,QAAQn4C,MAAuBoxC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,SAAfA,EAAMp4C,OAAiBuI,MAAMoC,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBymC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,OAAfA,EAAMp4C,OAAeuI,MAAMoC,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,gBAAiB,KACvc0tC,EAAiBzpC,EAAGqpC,YAAc1wC,GAAeA,EAAYqoB,KAAOhhB,EAAGqpC,WAAWl7B,KAAK,SAAAq0B,GAAG,OAAIA,EAAI8G,eAAevtC,gBAAkBpD,EAAYmD,QAAQC,eAAiBymC,EAAI+G,SAAgC,aAArB/G,EAAI+G,QAAQn4C,MAAuBoxC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,OAAfA,EAAMp4C,OAAeuI,MAAMoC,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBymC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,SAAfA,EAAMp4C,OAAiBuI,MAAMoC,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,gBAAiB,KACtc2tC,EAAmB1pC,EAAGqpC,YAAc1wC,GAAeA,EAAYmD,QAAUkE,EAAGqpC,WAAWl7B,KAAK,SAAAq0B,GAAG,OAAIA,EAAI8G,eAAevtC,gBAAkBpD,EAAYmD,QAAQC,eAAiBymC,EAAI+G,SAAgC,aAArB/G,EAAI+G,QAAQn4C,MAAuBoxC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,SAAfA,EAAMp4C,OAAiBuI,MAAMoC,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAA+F,+CAA9EymC,EAAI+G,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,OAAfA,EAAMp4C,OAAeuI,MAAMoC,gBAAkE,KAEjd4tC,EAAehxC,EAAY/F,SAC3B4rB,EAAc7lB,EAAYvH,MAAQuH,EAAYsH,MAC9Cu8B,EAAO,GAAA5mC,OAAMoK,EAAG2lC,QAAT,KAAA/vC,OAAoB4oB,GAC3BorB,EAAYjxC,EAAYqoB,KAAOroB,EAAYqoB,KAAK/gB,MAAQ,KACxDE,EAASipC,EAAkB,UAAaK,EAAiB,SAAYC,EAAmB,WAAa,KACrGlpC,EAAYD,SAASpM,EAAKkN,YAAYrB,EAAG6pC,iBAAiBC,GAAG5nC,UAAY,KAE3E6nC,EAAW,KACf,OAAQ5pC,GACN,IAAK,UACH4pC,EAAWX,EACX,MACF,IAAK,SACHW,EAAWN,EACX,MACF,IAAK,WACHM,EAAWL,EAaf,MAAO,CACL/jB,KARW3lB,EAAGqpC,WAAarpC,EAAGqpC,WAAWt0C,IAAI,SAAAytC,GAAG,MAAK,CACrDE,OAAQF,EAAIwH,kBACR,GAOJrwC,MANYowC,EAAW51C,EAAKuP,iBAAiBqmC,EAASR,QAAQz8B,OAAOqB,KAAK,SAAAq7B,GAAK,MAAmB,UAAfA,EAAMp4C,OAAkBuI,MAAOgwC,GAAgBx1C,EAAKuP,iBAAiB1D,EAAGrG,MAAOgwC,GAOlKxpC,SACAq8B,UACAh8B,YACAopC,YACAprB,cACAvM,YAVkBjS,EAAGqpC,YAAcrpC,EAAGqpC,WAAWp2C,OAAS+M,EAAGqpC,WAAW,GAAG5D,aAAe,KAW1FkE,eACA7yC,KAAMkJ,EAAG2lC,QACThe,GAAI3nB,EAAG2jC,WACPvjC,OAAQ,YACRlF,KAAM8E,EAAGiqC,aACTC,QAASlqC,EAAGmqC,UACZl5B,SAAUjR,EAAGoqC,UACbnqC,MAAOtH,EAAYsH,MACnBspB,gBAAiB5wB,EAAYmD,UA1iEd7M,KA6iEnBy2C,iBA7iEmB,eAAA2E,EAAAz7C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6iEA,SAAAgrC,EAAOjL,EAAK9gC,GAAZ,IAAAgsC,EAAAC,EAAA/J,EAAAgK,EAAAtpC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAgrC,GAAA,cAAAA,EAAA9qC,KAAA8qC,EAAA7qC,MAAA,UAA2B0qC,IAA3BE,EAAAx3C,OAAA,QAAAmqB,IAAAqtB,EAAA,KAAAA,EAAA,GACXD,EAAsB57C,OAAOkR,OAAO3L,EAAKjF,MAAM0P,iBAAiB7J,IAAI,SAAA4D,GAAW,OAAIA,EAAYqoB,KAAKllB,QAAQC,gBAC5G0kC,EAAapB,EAAMA,EAAIt/B,OAAO,SAAAC,GAAE,OAAIA,EAAG2jC,YAAc6G,EAAoBrnB,SAASnjB,EAAG2jC,WAAW5nC,iBAAgB43B,OAAO,SAACpV,EAAQve,GACpI,IAAM2qC,EAAWx2C,EAAK8vC,mBAAmBjkC,GAEzC,OADAue,EAAOosB,EAASnO,SAAWmO,EACpBpsB,GACN,IAAM,IAEFgsB,EARU,CAAAG,EAAA7qC,KAAA,eAAA6qC,EAAA7qC,KAAA,EAQkB1L,EAAKo2C,oBAAoB9J,EAAYliC,GARvD,OAAAmsC,EAAAtpB,GAAAspB,EAAA9nC,KAAA8nC,EAAA7qC,KAAA,gBAAA6qC,EAAAtpB,GAQwEqf,EARxE,eAAAiK,EAAAp6B,OAAA,SAAAo6B,EAAAtpB,IAAA,yBAAAspB,EAAA1pC,SAAAspC,EAAAr7C,SA7iEA,gBAAA27C,EAAAC,GAAA,OAAAR,EAAAnpC,MAAAjS,KAAAkS,YAAA,GAAAlS,KAujEnB67C,mBAvjEmB,eAAAC,EAAAn8C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAujEE,SAAA0rC,EAAOviB,GAAP,IAAAlqB,EAAA0sC,EAAA1D,EAAA2D,EAAA/pC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAyrC,GAAA,cAAAA,EAAAvrC,KAAAurC,EAAAtrC,MAAA,cAAgBtB,EAAhB2sC,EAAAj4C,OAAA,QAAAmqB,IAAA8tB,EAAA,GAAAA,EAAA,GAAgC,GAAID,IAApCC,EAAAj4C,OAAA,QAAAmqB,IAAA8tB,EAAA,KAAAA,EAAA,GAAuD3D,IAAvD2D,EAAAj4C,OAAA,QAAAmqB,IAAA8tB,EAAA,KAAAA,EAAA,GAAAC,EAAAtrC,KAAA,EACN1L,EAAKqyC,kBAAkB/d,EAASlqB,EAAe0sC,EAAY1D,GADrD,cAAA4D,EAAA76B,OAAA,SAAA66B,EAAAvoC,MAAA,wBAAAuoC,EAAAnqC,SAAAgqC,EAAA/7C,SAvjEF,gBAAAm8C,GAAA,OAAAL,EAAA7pC,MAAAjS,KAAAkS,YAAA,GAAAlS,KA0jEnBu3C,kBA1jEmB,eAAA6E,EAAAz8C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0jEC,SAAAgsC,EAAO7iB,GAAP,IAAAlqB,EAAA0sC,EAAA1D,EAAAxoC,EAAAwsC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1qC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAosC,GAAA,cAAAA,EAAAlsC,KAAAksC,EAAAjsC,MAAA,UAAgBtB,EAAhBstC,EAAA54C,OAAA,QAAAmqB,IAAAyuB,EAAA,GAAAA,EAAA,GAAgC,GAAIZ,IAApCY,EAAA54C,OAAA,QAAAmqB,IAAAyuB,EAAA,KAAAA,EAAA,GAAuDtE,IAAvDsE,EAAA54C,OAAA,QAAAmqB,IAAAyuB,EAAA,KAAAA,EAAA,GACb13C,EAAKjF,MAAM4P,SAAY2pB,GAAYA,EAAQx1B,QAAqC,oBAApBw1B,EAAQv1B,QADvD,CAAA44C,EAAAjsC,KAAA,eAAAisC,EAAAx7B,OAAA,SAET,IAFS,UAKb/R,GAAkBA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAKmB,EAAKjF,MAAM0P,kBAGrCG,EAAe,GACfwsC,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmBt3C,EAAK8P,gBAAgB,CAAC,QAAS,gBAClDynC,EAAoBv3C,EAAK8P,gBAAgB,CAAC,QAAS,iBACnD0nC,EAAoBx3C,EAAK8P,gBAAgB,CAAC,QAAS,sBACnD2nC,EAAuBz3C,EAAK8P,gBAAgB,CAAC,QAAS,oBAI5D1F,EAAcrL,QAAQ,SAAA+M,GACpB,IAAMtH,EAAcxE,EAAKjF,MAAM0P,gBAAgBqB,GACzC6oB,EAA2B30B,EAAK8P,gBAAgB,CAAC,WAAY,UAAW,UAAW,kBACnF8kB,EAAwBpwB,EAAYqwB,WAAarwB,EAAYqwB,UAAUC,kBAAoBtwB,EAAYqwB,UAAUC,kBAAkBntB,QAAU,KAC7IotB,EAA4BvwB,EAAYqwB,WAAarwB,EAAYqwB,UAAUC,mBAAqBtwB,EAAYqwB,UAAUC,kBAAkBE,aAAexwB,EAAYqwB,UAAUC,kBAAkBE,aAAe,GAC9M4iB,EAA2B53C,EAAK8P,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,sBAErFmlB,EAAiBj1B,EAAK8P,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,kBAAmBtL,EAAYqoB,KAAK/gB,QAC/GopB,EAA6BD,GAAkBA,EAAeH,kBAAoBG,EAAeH,kBAAkBntB,QAAU,KAG7HkwC,EAAmB73C,EAAK8P,gBAAgB,CAAC,QAAS,kBAAmBtL,EAAYqoB,KAAK/gB,QAE5FwoB,EAAQv1B,QAAQ,SAAA8M,GACd,IAAIsD,EAAgB3K,EAAY/F,SAC1Bg3C,EAAYjxC,EAAYqoB,KAAK/gB,MAC7BgsC,EAAcxjB,EAAQ1oB,OAAO,SAAAmsC,GAAC,OAAIA,EAAEp1C,OAASkJ,EAAGlJ,OAChDq1C,EAAeF,EAAYh5C,OAAS,GAAKg5C,EAAYlsC,OAAO,SAAAqsC,GAAG,OAAIA,EAAI7iB,gBAAgBxtB,gBAAkBpD,EAAYmD,QAAQC,gBAAe9I,OAAS,EACrJu2B,EAA0C,IAAvByiB,EAAYh5C,QAAgB+M,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cAC3K0tB,EAA6C,IAAvBwiB,EAAYh5C,QAAgB+M,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cAC5KswC,EAAqBhjB,GAA8BrpB,EAAG9E,KAAKa,gBAAkBstB,EAA2BttB,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,cAEnPuwC,EAAsBH,GAAgBF,EAAY99B,KAAK,SAAAi+B,GAAG,OAAIA,EAAIlxC,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,gBAAkBqwC,EAAIzkB,GAAG5rB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,eAAkB+sB,GAA4BsjB,EAAIzkB,GAAG5rB,gBAAkB+sB,EAAyBhtB,QAAQC,eAAiBkwC,EAAYlsC,OAAO,SAAAwsC,GAAI,OAAIA,EAAKhjB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,gBAAe9I,OAAS,KAC5Zu5C,EAAqBL,GAAgBF,EAAY99B,KAAK,SAAAi+B,GAAG,OAAIA,EAAI7iB,gBAAgBxtB,gBAAkBpD,EAAYmD,QAAQC,eAAiBkwC,EAAYlsC,OAAO,SAAAwsC,GAAI,OAAIA,EAAKhjB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,gBAAe9I,QAAUm5C,EAAIzkB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,gBAExSutB,EAAgB+iB,GAAuBtjB,IAA0B/oB,EAAG9E,KAAKa,gBAAkBgtB,EAAsBhtB,eAAiBmtB,EAA0Bn0B,IAAI,SAAC0E,GAAQ,OAAOA,EAAEsC,gBAAkBonB,SAASnjB,EAAG9E,KAAKa,iBAAmBiE,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cACtS0wC,EAAiBV,IAA6B/rC,EAAG9E,KAAKa,gBAAkBgwC,EAAyBjwC,QAAQC,eAAiBgwC,EAAyB5iB,aAAap0B,IAAI,SAAC0E,GAAQ,OAAOA,EAAEsC,gBAAkBonB,SAASnjB,EAAG9E,KAAKa,iBAAmBiE,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cACtW2tB,EAAcyiB,IAAiB7iB,GAAiBtpB,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,gBAAkBiE,EAAG2nB,GAAG5rB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,eAAkB+sB,GAA4B9oB,EAAG2nB,GAAG5rB,gBAAkB+sB,EAAyBhtB,QAAQC,eAAiBkwC,EAAYlsC,OAAO,SAAAqsC,GAAG,OAAIA,EAAI7iB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,gBAAe9I,OAAS,GACzY02B,EAAawiB,IAAiB7iB,IAAkBgjB,GAAuBtsC,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYmD,QAAQC,eAAiBkwC,EAAYlsC,OAAO,SAAAqsC,GAAG,OAAIA,EAAI7iB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,gBAAe9I,QAAU+M,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,cAC9S2wC,EAAeT,EAAYh5C,OAAS,GAAKg5C,EAAYlsC,OAAO,SAAAqsC,GAAG,OAAIzzC,EAAY8C,UAAU1G,IAAI,SAAAvE,GAAC,OAAIA,EAAEsL,QAAQC,gBAAeonB,SAASipB,EAAI7iB,gBAAgBxtB,iBAAgB9I,OAAS,GAAK+M,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cAGpP0lB,EAAmBuqB,GAAoBA,EAAiBlwC,QAAUkwC,EAAiBlwC,QAAUnD,EAAYqoB,KAAKllB,QAG9G6wC,EAAUV,EAAY99B,KAAK,SAAAnO,GAAE,OAAKA,EAAGupB,gBAAgBxtB,gBAAkB2vC,EAAkB5vC,QAAQC,gBAAkBiE,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,iBAC5N6wC,OAAwBxvB,IAAZuvB,EAEZE,EAAmBD,GAAa5sC,EAAGupB,gBAAgBxtB,gBAAkB0lB,EAAiB1lB,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB4vC,EAAkB7vC,QAAQC,eAAiBiE,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiB5H,EAAK+L,MAAMF,EAAGrG,OAAOmK,GAAG,GAChQgpC,EAAkBF,GAAa5sC,EAAGupB,gBAAgBxtB,gBAAkB0lB,EAAiB1lB,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAG9E,KAAKa,gBAAkB4vC,EAAkB7vC,QAAQC,eAAiB5H,EAAK+L,MAAMF,EAAGrG,OAAOmK,GAAG,GAE/PipC,EAAmBH,GAAa5sC,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB6vC,EAAqB9vC,QAAQC,eAAiB5H,EAAK+L,MAAMF,EAAGrG,OAAOmK,GAAG,GACtQkpC,EAAoBJ,GAAa5sC,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAG9E,KAAKa,gBAAkB6vC,EAAqB9vC,QAAQC,eAAiB5H,EAAK+L,MAAMF,EAAGrG,OAAOmK,GAAG,GAEvQmpC,EAAeL,GAAa5sC,EAAGupB,gBAAgBxtB,gBAAkB2vC,EAAkB5vC,QAAQC,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAG9E,KAAKa,gBAAkB0vC,EAAiB3vC,QAAQC,eAAiB5H,EAAK+L,MAAMF,EAAGrG,OAAOmK,GAAG,GACpQopC,EAAgBN,GAAa5sC,EAAGupB,gBAAgBxtB,gBAAkB2vC,EAAkB5vC,QAAQC,eAAiBiE,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB0vC,EAAiB3vC,QAAQC,eAAiB5H,EAAK+L,MAAMF,EAAGrG,OAAOmK,GAAG,GAErQqpC,EAAqBntC,EAAGupB,gBAAgBxtB,gBAAkB2vC,EAAkB5vC,QAAQC,gBAAkBmxC,IAAkBJ,GAAmE9sC,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,cACxOqxC,EAAoBptC,EAAGupB,gBAAgBxtB,gBAAkB2vC,EAAkB5vC,QAAQC,gBAAkBkxC,IAAiBJ,GAAoE7sC,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,cAErOsxC,GAAeT,IAAcpjB,IAAqBkjB,IAAiBF,IAAuBztC,EAAaiB,EAAGlJ,OAASkJ,EAAG9E,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cAC/O6tB,GAAYgjB,IAAcnjB,IAAwBgjB,IAAmBH,IAAwBvtC,EAAaiB,EAAGlJ,OAASkJ,EAAG2nB,GAAG5rB,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAAiBiE,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cAMtP,GAAIytB,GAAoBC,GAAuBH,GAAiBI,GAAeC,GAAcC,GAAYyjB,GAAeX,GAAgBD,GAAkBI,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAmB,CAElT,IAAI7sC,EAAS,KACTq8B,EAAUx8B,EAAGlJ,KAEb4yB,EACFvpB,EAAS,UACAwpB,EACTxpB,EAAS,SACAmpB,GAAiBmjB,EAC1BtsC,EAAS,UACAqpB,EACTrpB,EAAS,OACAspB,EACTtpB,EAAS,UACAypB,EACTzpB,EAAS,OACAktC,EACTltC,EAAS,UACAusC,EACTvsC,EAAS,WACA0sC,EACT1sC,EAAS,UACA2sC,EACT3sC,EAAS,WACA8sC,EACT9sC,EAAS,aACA+sC,EACT/sC,EAAS,cACA4sC,EACT5sC,EAAS,iBACA6sC,EACT7sC,EAAS,kBACAitC,EACTjtC,EAAS,kBACAgtC,IACThtC,EAAS,oBAGX,IAAIyxB,EAAc,KAoBlB,GAnBIgb,IACFpQ,GAAW,IAAMx8B,EAAGwe,YACpBoT,EAAcz9B,EAAKuP,iBAAiBipC,EAAQhzC,MAAO+xC,EAAkB94C,WAGhEw6C,GAAqBD,KACxB3Q,GAAW,IAAMr8B,IAMjBH,EAAGupB,gBAAgBxtB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cAChEuH,EAAgB,GACPspC,IACTtpC,EAAgB/C,SAASP,EAAG2pC,eAI1B5qC,EAAay9B,GAEf,OAAQz9B,EAAay9B,GAASr8B,QAC5B,IAAK,UACCpB,EAAay9B,GAASr8B,SAAWA,GAAUwpB,IAC7C5qB,EAAay9B,GAAS8Q,WAAan5C,EAAKuP,iBAAiB1D,EAAGrG,MAAO2J,IAErE,MACF,QACE,IAAKqpC,EAAS,CACZ,IAAMY,EAAWxuC,EAAay9B,GAAS7iC,MAAM+G,KAAKvM,EAAKuP,iBAAiB1D,EAAGrG,MAAO2J,IAClFvE,EAAay9B,GAAS7iC,MAAQ4zC,QAMpC,GAAIH,GAAqBD,EAClB3B,EAA0BroB,SAASnjB,EAAGlJ,KAAKiF,iBAC9C61B,EAAcz9B,EAAKuP,iBAAiB1D,EAAGrG,MAAO+xC,EAAkB94C,UAChE24C,EAAkBnvC,KAAlBxN,OAAAw4B,EAAA,EAAAx4B,CAAA,GAA4BoR,EAA5B,CAAgCw8B,UAASv8B,QAAO2pC,YAAWhY,cAAazxB,SAAQxG,MAAOxF,EAAKuP,iBAAiB1D,EAAGrG,MAAO2J,YAWzH,OARAvE,EAAay9B,GAAb5tC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAA8BoR,EAA9B,CAAkCw8B,UAASv8B,QAAO2pC,YAAWhY,cAAazxB,SAAQxG,MAAOxF,EAAKuP,iBAAiB1D,EAAGrG,MAAO2J,KAGpHkoC,EAA0BroB,SAASnjB,EAAGlJ,KAAKiF,gBAC9CyvC,EAA0BpvC,KAAK4D,EAAGlJ,KAAKiF,eAIjCoE,GACN,IAAK,WACH,IAAMqtC,EAAOvB,EAAYlsC,OAAO,SAAAqsC,GAAG,OAAKA,IAAQpsC,IAChD,GAAIwtC,EAAKv6C,OAAS,EAAG,CACnB,IAAMm5C,EAAMoB,EAAK,GACjBzuC,EAAay9B,GAASiR,eAAiBt5C,EAAKuP,iBAAiB0oC,EAAIzyC,MAAOyyC,EAAIzC,cAC5E5qC,EAAay9B,GAAShe,YAAc4tB,EAAI5tB,YAE1C,MACF,IAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACHzf,EAAay9B,GAAShe,YAAcve,QAWlDsrC,EAAkBr4C,QAAQ,SAAA8M,GACnBwrC,EAA0BroB,SAASnjB,EAAGlJ,KAAKiF,iBAC9CgD,EAAaiB,EAAGw8B,SAAWx8B,MAI3BirC,EAxMc,CAAAa,EAAAjsC,KAAA,gBAAAisC,EAAAjsC,KAAA,GAyMK1L,EAAKo2C,oBAAoBxrC,EAAcR,EAAegpC,GAzM3D,QAyMhBxoC,EAzMgB+sC,EAAAlpC,KAAA,eAAAkpC,EAAAx7B,OAAA,SA8MXvR,GA9MW,yBAAA+sC,EAAA9qC,SAAAsqC,EAAAr8C,SA1jED,gBAAAy+C,GAAA,OAAArC,EAAAnqC,MAAAjS,KAAAkS,YAAA,GAAAlS,KA0wEnB0+C,qBAAuB,SAACC,EAAOl+B,GAE7B,IAAM5Q,EAAU3K,EAAKjF,OAASiF,EAAKjF,MAAM4P,QAAU3K,EAAKjF,MAAM4P,QAAU,KAClErG,EAAgBtE,EAAKjF,OAASiF,EAAKjF,MAAMuJ,cAAgBtE,EAAKjF,MAAMuJ,cAAgB,KAE1F,IAAKqG,IAAYrG,IAAkBtE,EAAKjF,MAAM0P,kBAAoBzK,EAAKjF,MAAM0P,gBAAgBnG,GAC3F,OAAO,EAGT,IACMo3B,EADc17B,EAAKjF,MAAM0P,gBAAgBnG,GAClBuoB,KAAK/gB,MAE9B4tC,EAAY15C,EAAK25C,wBAChBD,EAAU/uC,KACb+uC,EAAU/uC,GAAW,IAGlB+uC,EAAU/uC,GAAS+wB,KACtBge,EAAU/uC,GAAS+wB,GAAY,IAGjCge,EAAU/uC,GAAS+wB,GAAU+d,GAASl+B,EACtCvb,EAAK45C,yBAAyBF,IAhyEb5+C,KAkyEnB8+C,yBAA2B,SAAAn9C,GACzBuD,EAAK+e,gBAAgB,eAAgB7U,KAAKC,UAAU1N,KAnyEnC3B,KAwyEnB6+C,sBAAwB,WAA2D,IAA1DhvC,EAA0DqC,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAhD,KAAM0uB,EAA0C1uB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAA/B,KAAM1I,EAAyB0I,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAClE0sC,EAAY15C,EAAK65C,cAAc,gBAAgB,EAAM,IACrDp9C,EAAeuD,EAAKjF,MAAM0B,aAAXhC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAA+BuF,EAAKjF,MAAM0B,cAAiB,GAC5E2tB,EAASsvB,EAsBb,OApBI/uC,IACE+uC,EAAU/uC,IACZyf,EAASsvB,EAAU/uC,GACf+wB,IACFtR,EAASA,EAAOsR,GAAYtR,EAAOsR,GAAY,GAE3Cp3B,GACF7J,OAAOoE,KAAKpC,GAAcsC,QAAQ,SAAA06C,GAChC,IAAM5tC,EAAKpP,EAAag9C,IACnBrvB,EAAOqvB,IAAU5tC,EAAGC,OAASD,EAAGC,MAAMiE,gBAAkBzL,EAAcyL,gBACzEqa,EAAOqvB,GAASh9C,EAAag9C,QAMrCrvB,EAAS,IAINA,GAj0EUtvB,KAm0EnBs7C,oBAn0EmB,eAAA0D,EAAAr/C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAm0EG,SAAA4uC,EAAOnvC,GAAP,IAAAR,EAAAgpC,EAAA4G,EAAAN,EAAAO,EAAAC,EAAAC,EAAA7C,EAAA8C,EAAAptC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8uC,GAAA,cAAAA,EAAA5uC,KAAA4uC,EAAA3uC,MAAA,cAAqBtB,EAArBgwC,EAAAt7C,OAAA,QAAAmqB,IAAAmxB,EAAA,GAAAA,EAAA,GAAqC,GAAIhH,IAAzCgH,EAAAt7C,OAAA,QAAAmqB,IAAAmxB,EAAA,KAAAA,EAAA,GAEfhwC,GAAkBA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAKmB,EAAKjF,MAAM0P,kBAGrCuvC,EAAa,GAI4B,kBAHzCN,EAAY15C,EAAK25C,yBAGA35C,EAAKjF,MAAM4P,WAC9B+uC,EAAU15C,EAAKjF,MAAM4P,SAAW,IAI5BsvC,EAAoB,GACpBC,EAAsB,GACtBC,EAAuBn6C,EAAK8P,gBAAgB,CAAC,QAAS,oBAC5DrV,OAAOoE,KAAKs7C,GAAsBp7C,QAAQ,SAAA+M,GACxC,IAAM+rC,EAAmBsC,EAAqBruC,GACxCwuC,EAAkBt6C,EAAK8P,gBAAgB,CAAC,QAAS,SAAU+nC,EAAiB9gB,UAAUhnB,gBACtFwqC,EAAmBD,EAAgB3yC,QAAQC,cACjDqyC,EAAkBM,GAAoBD,EACtCL,EAAkBM,GAAkBzuC,MAAQ+rC,EAAiB9gB,UAC7DmjB,EAAoBjyC,KAAKsyC,KAGrBjD,EAAmBt3C,EAAK8P,gBAAgB,CAAC,QAAS,gBA3BpCuqC,EAAA3uC,KAAA,GAgCd1L,EAAK+K,aAAaX,EAAlB,eAAAowC,EAAA//C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAiC,SAAAsvC,EAAOn2C,GAAP,IAAAE,EAAAk3B,EAAA+Z,EAAAiF,EAAArvC,EAAA,OAAAkgB,EAAAtwB,EAAAsQ,KAAA,SAAAovC,GAAA,cAAAA,EAAAlvC,KAAAkvC,EAAAjvC,MAAA,UAE/BlH,EAAcxE,EAAKjF,MAAM0P,gBAAgBnG,GACzCo3B,EAAWl3B,EAAYqoB,KAAK/gB,MAC5B2pC,EAAYjxC,EAAYqoB,KAAK/gB,MAGoB,kBAA5C4tC,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,KACvCge,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAY,IAGtCgf,EAX+BjgD,OAAAw4B,EAAA,EAAAx4B,CAAA,GAWfi/C,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,MAE9CrwB,EAAc5Q,OAAOkR,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,OACxD+G,EAAYvM,OAdM,CAAA67C,EAAAjvC,KAAA,eAAAivC,EAAAjvC,KAAA,EAgB7B1L,EAAK+K,aAAaM,EAAlB,eAAAuvC,EAAAngD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+B,SAAA0vC,EAAOhvC,EAAIhL,GAAX,IAAA44C,EAAAqB,EAAAnuC,EAAAC,EAAAmuC,EAAArd,EAAAsd,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxD,EAAAyD,EAAAhuB,EAAAiuB,EAAA,OAAAhwB,EAAAtwB,EAAAsQ,KAAA,SAAAiwC,GAAA,cAAAA,EAAA/vC,KAAA+vC,EAAA9vC,MAAA,UAC7B+tC,EAD6B,KAAAh4C,OAChBoK,EAAGQ,UADa,OAE7ByuC,EAAWpB,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAASC,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAAS5tC,EAE/Gc,EAAa,MAEbmuC,EAASnuC,YAAe3M,EAAK+L,MAAM+uC,EAASnuC,YAAYvO,QANzB,CAAAo9C,EAAA9vC,KAAA,QAOjCiB,EAAa3M,EAAK+L,MAAM+uC,EAASnuC,YAPA6uC,EAAA9vC,KAAA,uBAAA8vC,EAAA9vC,KAAA,EASd1L,EAAK67B,kBAAkBr3B,EAAaqH,EAAGiS,YAAajS,EAAGQ,WATzC,OASjCM,EATiC6uC,EAAA/sC,KAUjCqsC,EAASnuC,WAAaA,EAVW,QAa/BC,EAAa5M,EAAK+L,MAAMF,EAAGrG,OAC3Bu1C,EAAmBpuC,EAAW5E,MAAM6E,GAGnCkuC,EAASpiC,kBACZoiC,EAASpiC,gBAAkB7M,EAAGlJ,MAlBG64C,EAAAvuB,GAsB3BphB,EAAGG,OAtBwBwvC,EAAA9vC,KAuB5B,SAvB4B8vC,EAAAvuB,GAAA,GAwB5B,YAxB4BuuB,EAAAvuB,GAAA,GAyB5B,SAzB4BuuB,EAAAvuB,GAAA,GA0B5B,YA1B4BuuB,EAAAvuB,GAAA,GA2B5B,YA3B4BuuB,EAAAvuB,GAAA,GAmC5B,YAnC4BuuB,EAAAvuB,GAAA,GAoC5B,WApC4BuuB,EAAAvuB,GAAA,GA2C5B,aA3C4BuuB,EAAAvuB,GAAA,GAkD5B,YAlD4BuuB,EAAAvuB,GAAA,GAmD5B,aAnD4BuuB,EAAAvuB,GAAA,GA2D5B,oBA3D4BuuB,EAAAvuB,GAAA,GA4D5B,qBA5D4BuuB,EAAAvuB,GAAA,GAqE5B,eArE4BuuB,EAAAvuB,GAAA,GAsE5B,gBAtE4BuuB,EAAAvuB,GAAA,GAkH5B,mBAlH4BuuB,EAAAvuB,GAAA,GAmH5B,oBAnH4BuuB,EAAAvuB,GAAA,2BA4B1B6tB,EAASxuC,cACZwuC,EAASluC,WAAaA,EACtBkuC,EAASt1C,MAAQu1C,EACjBD,EAASxuC,YAAcyuC,EACvBD,EAASzwB,YAAc/lB,GAhCMk3C,EAAAr/B,OAAA,2BAqC1B2+B,EAASxuC,cACZwuC,EAASt1C,MAAQoH,EACjBkuC,EAASxuC,YAAcM,EACvBkuC,EAASluC,WAAaA,EAAWmR,IAAIpR,IAxCR6uC,EAAAr/B,OAAA,2BA4C1B2+B,EAASxuC,cACZwuC,EAASluC,WAAaA,EACtBkuC,EAASxuC,YAAcyuC,EACvBD,EAASt1C,MAAQs1C,EAASxB,gBA/CGkC,EAAAr/B,OAAA,uBAoD1B2+B,EAASxuC,YApDiB,CAAAkvC,EAAA9vC,KAAA,gBAAA8vC,EAAA9vC,KAAA,GAqDC1L,EAAKy7C,mBAAmB5vC,EAAGiS,aArD5B,QAqDvB4f,EArDuB8d,EAAA/sC,KAsD7BqsC,EAASluC,WAAaA,EACtBkuC,EAASxuC,YAAcyuC,EACvBD,EAASpd,gBAAkBA,EAxDE,eAAA8d,EAAAr/B,OAAA,uBA6D1B2+B,EAASpd,gBA7DiB,CAAA8d,EAAA9vC,KAAA,gBAAA8vC,EAAA9vC,KAAA,GA8DC1L,EAAKy7C,mBAAmB5vC,EAAGiS,aA9D5B,QA8DvB4f,EA9DuB8d,EAAA/sC,KA+D7BqsC,EAASpd,gBAAkBA,EAC3Bod,EAASxuC,YAActM,EAAK+L,MAAM+uC,EAASrd,aAAa11B,MAAM+yC,EAASpd,iBAhE1C,eAmE/Bod,EAASluC,WAAa5M,EAAK+L,MAAM,GAnEFyvC,EAAAr/B,OAAA,uBAuE1B2+B,EAASpd,gBAvEiB,CAAA8d,EAAA9vC,KAAA,gBAAA8vC,EAAA9vC,KAAA,GAwEC1L,EAAKy7C,mBAAmB5vC,EAAGiS,aAxE5B,QAwEvB4f,EAxEuB8d,EAAA/sC,KAyE7BqsC,EAASpd,gBAAkBA,EAzEE,WA4E1Bod,EAASxuC,YA5EiB,CAAAkvC,EAAA9vC,KAAA,YA8E7BovC,EAASxuC,YAActM,EAAK+L,MAAM,GAClC+uC,EAASluC,WAAa5M,EAAK+L,MAAM,IAEViuC,EAAWnuC,EAAGw8B,SAjFR,CAAAmT,EAAA9vC,KAAA,SAAA8vC,EAAAnI,GAiFmB2G,EAAWnuC,EAAGw8B,SAjFjCmT,EAAA9vC,KAAA,wBAAA8vC,EAAA9vC,KAAA,GAiFmD,IAAI8P,QAAJ,eAAAkgC,EAAAjhD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAAwwC,EAAO//B,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAAqwC,GAAA,cAAAA,EAAAnwC,KAAAmwC,EAAAlwC,MAAA,OAC1F1L,EAAKjF,MAAMse,KAAK0C,IAAI24B,sBAAsB7oC,EAAGlJ,KAAM,SAACqZ,EAAKnQ,GACnDmQ,GACFH,EAAOG,GAETJ,EAAQ/P,KALgF,wBAAA+vC,EAAA/uC,SAAA8uC,EAAA7gD,SAAZ,gBAAA+gD,EAAAC,GAAA,OAAAJ,EAAA3uC,MAAAjS,KAAAkS,YAAA,IAjFnD,QAAAwuC,EAAAnI,GAAAmI,EAAA/sC,KAAA,SAiFvBysC,EAjFuBM,EAAAnI,MA6FtB2G,EAAWnuC,EAAGw8B,WACjB2R,EAAWnuC,EAAGw8B,SAAW6S,GAGrBC,EAAeD,EAAe1pB,KAAK5lB,OAAO,SAAAyiC,GAAG,OAAK6L,EAAoBlrB,SAASqf,EAAI1mC,QAAQC,gBAAkBymC,EAAIE,OAAOF,EAAIE,OAAOzvC,OAAS,GAAG8I,gBAAlC,4BAAAnG,OAAgF61C,EAAiB3vC,QAAQgrB,QAAQ,IAAK,IAAI/qB,iBAE7O5H,EAAKwd,UAAU,eAAgB29B,GAE3BA,GAAgBA,EAAar8C,QAC/Bq8C,EAAap8C,QAAQ,SAAAsvC,GACnB,IAAI/hC,EAAcF,SAASiiC,EAAInpC,KAAM,IAC/B62C,EAAmB9B,EAAkB5L,EAAI1mC,QAAQC,eACjDuH,EAAgB4sC,EAAiBt9C,SACvC6N,EAActM,EAAKuP,iBAAiBjD,EAAa6C,GACjD2rC,EAASxuC,YAAcwuC,EAASxuC,YAAYC,KAAKD,GACjDtM,EAAKwd,UAAU,oBAAsB3R,EAAGlJ,KAAO,IAAKo5C,EAAiBjwC,MAAOQ,EAAYtE,QAAQ,GAAI8yC,EAASxuC,YAAYtE,QAAQ,OA5G1G,eAAAwzC,EAAAr/B,OAAA,uBAoH1B2+B,EAASpd,gBApHiB,CAAA8d,EAAA9vC,KAAA,gBAAA8vC,EAAA9vC,KAAA,GAqHC1L,EAAKy7C,mBAAmB5vC,EAAGiS,aArH5B,QAqHvB4f,EArHuB8d,EAAA/sC,KAsH7BqsC,EAASpd,gBAAkBA,EAtHE,WAyH/Bod,EAASxuC,YAActM,EAAK+L,MAAM+uC,EAASt1C,OAEtCs1C,EAASluC,WA3HiB,CAAA4uC,EAAA9vC,KAAA,aA6HNsuC,EAAWnuC,EAAGw8B,SA7HR,CAAAmT,EAAA9vC,KAAA,SAAA8vC,EAAAQ,GA6HmBhC,EAAWnuC,EAAGw8B,SA7HjCmT,EAAA9vC,KAAA,wBAAA8vC,EAAA9vC,KAAA,GA6HmD,IAAI8P,QAAJ,eAAAygC,EAAAxhD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAA+wC,EAAOtgC,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAA4wC,GAAA,cAAAA,EAAA1wC,KAAA0wC,EAAAzwC,MAAA,OAC1F1L,EAAKjF,MAAMse,KAAK0C,IAAI24B,sBAAsB7oC,EAAGlJ,KAAM,SAACqZ,EAAKnQ,GACnDmQ,GACFH,EAAOG,GAETJ,EAAQ/P,KALgF,wBAAAswC,EAAAtvC,SAAAqvC,EAAAphD,SAAZ,gBAAAshD,EAAAC,GAAA,OAAAJ,EAAAlvC,MAAAjS,KAAAkS,YAAA,IA7HnD,QAAAwuC,EAAAQ,GAAAR,EAAA/sC,KAAA,SA6HvBysC,EA7HuBM,EAAAQ,MAuIrBnE,EAAmB73C,EAAK8P,gBAAgB,CAAC,QAAS,kBAAmB2lC,IACrE6F,EAAoBzD,GAAoBA,EAAiBp5C,SAAWo5C,EAAiBp5C,SAAW,GAChG6uB,EAAmBuqB,GAAoBA,EAAiBlwC,QAAUkwC,EAAiBlwC,QAAUnD,EAAYqoB,KAAKllB,QAG/GqyC,EAAWnuC,EAAGw8B,WACjB2R,EAAWnuC,EAAGw8B,SAAW6S,IAGrBC,EAAeD,EAAe1pB,KAAK5lB,OAAO,SAAAyiC,GAAG,OAAKA,EAAI1mC,QAAQC,gBAAkB0lB,MAClE6tB,EAAar8C,SAC/B8N,EAAaR,SAAS+uC,EAAa,GAAGj2C,KAAM,IAC5C0H,EAAa5M,EAAKuP,iBAAiB3C,EAAY0uC,GAC/CR,EAASluC,WAAaA,IApJG,uBAAA4uC,EAAAr/B,OAAA,oBA8JnC2+B,EAAShvC,MAAQxH,EAGjBsG,EAAaiB,EAAGw8B,SAAWyS,EAG3BpB,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAASqB,SAG1CJ,EAASjB,GAvKmB,yBAAA+B,EAAA3uC,SAAAguC,EAAA//C,SAA/B,gBAAAwhD,EAAAC,GAAA,OAAA3B,EAAA7tC,MAAAjS,KAAAkS,YAAA,IAhB6B,WA4LjComC,EA5LiC,CAAAuH,EAAAjvC,KAAA,gBAAAivC,EAAAjvC,KAAA,GA6Ld1L,EAAKozC,iBAAiBxoC,EAAc,CAACtG,GAAgBtE,EAAKjF,MAAM0B,cA7LlD,QA6LnCmO,EA7LmC+vC,EAAAlsC,KAAA,yBAAAksC,EAAA9tC,SAAA4tC,EAAA3/C,SAAjC,gBAAA0hD,GAAA,OAAAhC,EAAAztC,MAAAjS,KAAAkS,YAAA,IAhCc,eAkOhB0sC,GACF15C,EAAK45C,yBAAyBF,GAnOZW,EAAAl+B,OAAA,SAsObvR,GAtOa,yBAAAyvC,EAAAxtC,SAAAktC,EAAAj/C,SAn0EH,gBAAA2hD,GAAA,OAAA3C,EAAA/sC,MAAAjS,KAAAkS,YAAA,GAAAlS,KA2iFnBs4C,iBA3iFmB,eAAAsJ,EAAAjiD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2iFA,SAAAwxC,EAAO/xC,GAAP,IAAAR,EAAAwyC,EAAAlD,EAAAxnB,EAAA2qB,EAAA7vC,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAuxC,GAAA,cAAAA,EAAArxC,KAAAqxC,EAAApxC,MAAA,cAAqBtB,EAArByyC,EAAA/9C,OAAA,QAAAmqB,IAAA4zB,EAAA,GAAAA,EAAA,GAAqC,GAAID,EAAzCC,EAAA/9C,OAAA,QAAAmqB,IAAA4zB,EAAA,GAAAA,EAAA,GAAwD,KAEpEzyC,GAAkBA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAKmB,EAAKjF,MAAM0P,mBAGrCivC,EAAY15C,EAAK65C,cAAc,gBAAgB,EAAM,KAG1C75C,EAAKjF,MAAM4P,WACxB+uC,EAAU15C,EAAKjF,MAAM4P,SAAW,IAGlCC,EAAenQ,OAAOC,OAAO,GAAIkQ,GAE3BsnB,EAAYlyB,EAAKuuB,uBAfNuuB,EAAApxC,KAAA,EAmBX1L,EAAK+K,aAAaX,EAAlB,eAAA2yC,EAAAtiD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAiC,SAAA6xC,EAAO14C,GAAP,IAAAE,EAAAk3B,EAAA,OAAAnQ,EAAAtwB,EAAAsQ,KAAA,SAAA0xC,GAAA,cAAAA,EAAAxxC,KAAAwxC,EAAAvxC,MAAA,cAE/BlH,EAAcxE,EAAKjF,MAAM0P,gBAAgBnG,GACzCo3B,EAAWl3B,EAAYqoB,KAAK/gB,MAG7B4tC,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,KACjCge,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAY,IAG5CkhB,EAAeA,GAAgBniD,OAAOkR,OAAOixC,GAAc99C,OAAS89C,EAAe58C,EAAK25C,sBAAsB35C,EAAKjF,MAAM4P,QAAS+wB,EAAUp3B,GAVvG24C,EAAAvxC,KAAA,EA6B/B1L,EAAK+K,aAAatQ,OAAOoE,KAAK+9C,GAA9B,eAAAM,EAAAziD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA6C,SAAAgyC,EAAO1D,EAAOjyC,GAAd,IAAAqE,EAAAuxC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3lC,EAAA4lC,EAAAvoB,EAAA12B,EAAAk/C,EAAAhxC,EAAAixC,EAAAC,EAAAC,EAAA9xC,EAAA+xC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzpB,EAAAQ,EAAAkpB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnzB,EAAAtwB,EAAAsQ,KAAA,SAAAozC,GAAA,cAAAA,EAAAlzC,KAAAkzC,EAAAjzC,MAAA,WAC3CG,EAAK+wC,EAAanD,KAGZ5tC,EAAGC,OAASD,EAAGC,MAAMiE,gBAAkBzL,EAAcyL,iBAAkBlE,EAAGqmB,WAAa9lB,SAASP,EAAGqmB,aAAe9lB,SAAS8lB,IAJtF,CAAAysB,EAAAjzC,KAAA,eAAAizC,EAAAxiC,OAAA,UAKxC,GALwC,UAQ3CihC,EAAa1D,GAAaA,EAAU15C,EAAKjF,MAAM4P,UAAY+uC,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,IAAage,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAE9I4D,EAAiB,CACrBuB,cAAe,UACfC,gBAAiB,SACjBC,kBAAmB,UACnBC,oBAAqB,UACrBC,sBAAuB,UACvBC,uBAAwB,UACxBC,uBAAwB,UACxBC,yBAA0B,UAC1BC,0BAA2B,WAEvB9B,EAAgB,CAAC,UAAW,WAC5BC,EAA4B,YAAd1xC,EAAGI,OACjBuxC,EAAYF,EAActuB,SAASnjB,EAAGI,QACtCwxC,EAAyB,2BAAd5xC,EAAGwqB,OACdve,EAASjM,EAAG6M,gBAAkB7M,EAAG6M,gBAAkB,KACnDglC,EAAkBjjD,OAAOoE,KAAKw+C,GAAgBruB,SAASnjB,EAAGwqB,UAG5Dve,GAAUlN,EAAakN,IAAWlN,EAAakN,GAAQnL,YA7BV,CAAAgyC,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UA8BxC,GA9BwC,aAiC7CqhC,GAAa1lC,IAAWlN,EAAakN,IAAW4lC,GAAmB7xC,EAAG8M,OAAO7Z,QAjChC,CAAA6/C,EAAAjzC,KAAA,gBAmCzCypB,EAA8C,YAA9BkoB,EAAexxC,EAAGwqB,QAClC53B,EAAW02B,EAAgB,GAAK3wB,EAAY/F,SAClDmM,EAAY,IAAAnJ,OAAKoK,EAAGwzC,UAAa,CAC/BpzC,OAAQ,UACRH,MAAOxH,EACP0H,OAAQqxC,EAAexxC,EAAGwqB,QAC1BhqB,UAAWD,SAASP,EAAGwzC,QAAU,KACjC18C,KAAMmV,EAASjM,EAAG6M,gBAAkB,KACpC2R,YAAa8K,EAAgB3wB,EAAYqoB,KAAK/gB,MAAQxH,EACtDkB,MAAOqG,EAAGrG,MAAQqG,EAAGrG,MAAQxF,EAAKuP,iBAAiB1D,EAAG8M,OAAO,GAAIla,GAAUuf,YA5C9B2gC,EAAAxiC,OAAA,UA+CxC,GA/CwC,WAmD5CohC,GAAgBzlC,GAAW4lC,EAnDiB,CAAAiB,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UAoDxC,GApDwC,WAuD7CwhC,EAAS9xC,EAAG8xC,OAAS9xC,EAAG8xC,OAAS,KAvDY,CAAAgB,EAAAjzC,KAAA,gBAAAizC,EAAAjzC,KAAA,GA2D/B,IAAI8P,QAAJ,eAAA8jC,EAAA7kD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAAo0C,EAAO3jC,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAAi0C,GAAA,cAAAA,EAAA/zC,KAAA+zC,EAAA9zC,MAAA,OAC1B1L,EAAKjF,MAAMse,KAAK0C,IAAIT,eAAezP,EAAG6M,gBAAiB,SAACsD,EAAK8xB,GACvD9xB,GACFH,EAAOG,GAETJ,EAAQkyB,KALgB,wBAAA0R,EAAA3yC,SAAA0yC,EAAAzkD,SAAZ,gBAAA2kD,EAAAC,GAAA,OAAAJ,EAAAvyC,MAAAjS,KAAAkS,YAAA,IA3D+B,QA2D/C2wC,EA3D+CgB,EAAAlwC,KAAA,WAwE5CkvC,IAAYF,GAAYE,EAAO52C,KAAKa,gBAAkB5H,EAAKjF,MAAM4P,QAAQ/C,eAxE7B,CAAA+2C,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UAyExC,GAzEwC,eAAAwiC,EAAAjzC,KAAA,GA4ExB1L,EAAK67B,kBAAkBr3B,EAAam5C,EAAO7/B,YAAa6/B,EAAOtxC,WA5EvC,QA4E3CM,EA5E2CgyC,EAAAlwC,KA8EjDkvC,EAAO1xC,OAAS,YAChB0xC,EAAO3xC,OAASqxC,EAAexxC,EAAGwqB,QAClCsnB,EAAOvoB,gBAAkB5wB,EAAYmD,QACrCg2C,EAAOtxC,UAAYD,SAASP,EAAGwzC,QAAU,KAErCzB,EAAU,KAnFmCe,EAAA1xB,GAoFzCphB,EAAGwqB,OApFsCsoB,EAAAjzC,KAqF1C,kBArF0CizC,EAAA1xB,GAAA,GAsF1C,wBAtF0C0xB,EAAA1xB,GAAA,GAgH1C,oBAhH0C0xB,EAAA1xB,GAAA,GA+H1C,2BA/H0C0xB,EAAA1xB,GAAA,GAkN1C,8BAlN0C0xB,EAAA1xB,GAAA,GAmN1C,6BAnN0C0xB,EAAA1xB,GAAA,GAoN1C,0BApN0C0xB,EAAA1xB,GAAA,GAqN1C,2BArN0C0xB,EAAA1xB,GAAA,GAsN1C,sBAtN0C0xB,EAAA1xB,GAAA,wBAuFxCphB,EAAG8M,OAvFqC,CAAAgmC,EAAAjzC,KAAA,gBAwFvC0xC,IACF1D,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAAS5tC,GAzFR8yC,EAAAxiC,OAAA,UA2FpC,GA3FoC,WA8FzCwhC,EAAOnqB,GAAG5rB,gBAAkBpD,EAAYqoB,KAAKllB,QAAQC,cA9FZ,CAAA+2C,EAAAjzC,KAAA,gBAgGvC0xC,UACK1D,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAjGNkF,EAAAxiC,OAAA,UAoGpC,GApGoC,WAuG7CyhC,EAAU/xC,EAAG8M,OAAS3Y,EAAKuP,iBAAiB1D,EAAG8M,OAAO,GAAInU,EAAY/F,UAAUuf,WAAa,EAvGhD,CAAA2gC,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UA0GpC,GA1GoC,eA6G7CwhC,EAAOn4C,MAAQo4C,EACfD,EAAOrxC,YAAcsxC,EA9GwBe,EAAAxiC,OAAA,wBAiHxCtQ,EAAG8M,OAjHqC,CAAAgmC,EAAAjzC,KAAA,gBAkHvC0xC,IACF1D,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAAS5tC,GAnHR8yC,EAAAxiC,OAAA,UAqHpC,GArHoC,eAwHxCwhC,EAAOhxC,aACJkxC,EAAqB79C,EAAKuP,iBAAiB1D,EAAG8M,OAAO,GAAI,IAAI5Q,MAAM4E,GACzEgxC,EAAOhxC,WAAaA,EACpBgxC,EAAOn4C,MAAQq4C,EACfF,EAAOrxC,YAAcuxC,GA5HsBc,EAAAxiC,OAAA,wBAgIzC2hC,EAAgCjyC,EAAGiiC,UAAYjiC,EAAGiiC,UAAY,KAhIrB,CAAA6Q,EAAAjzC,KAAA,gBAAAizC,EAAAjzC,KAAA,GAmIJ,IAAI8P,QAAJ,eAAAmkC,EAAAllD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAAy0C,EAAOhkC,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAAs0C,GAAA,cAAAA,EAAAp0C,KAAAo0C,EAAAn0C,MAAA,OACjD1L,EAAKjF,MAAMse,KAAK0C,IAAI24B,sBAAsB7oC,EAAG6M,gBAAiB,SAACsD,EAAKnQ,GAC9DmQ,GACFH,EAAOG,GAETJ,EAAQ/P,KALuC,wBAAAg0C,EAAAhzC,SAAA+yC,EAAA9kD,SAAZ,gBAAAglD,EAAAC,GAAA,OAAAJ,EAAA5yC,MAAAjS,KAAAkS,YAAA,IAnII,QAmI3C8wC,EAnI2Ca,EAAAlwC,KAAA,WA6IxCqvC,EA7IwC,CAAAa,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UA8IpC,GA9IoC,WAkJxCtQ,EAAGiiC,YACNjiC,EAAGiiC,UAAYgQ,EACXV,IACF1D,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAAS5tC,IAIjDG,EAAS,KACT+xC,EAAqC,KACrCC,EAA0C,GACxCC,EAAsBj+C,EAAK8P,gBAAgB,CAAC,WAAY,UAAW,kBAGrEtL,EAAYqwB,WAAarwB,EAAYqwB,UAAUmrB,cAC7ClC,EAA8BtsB,MAChCusB,EAAqCv5C,EAAYqwB,UAAUmrB,YAAYr4C,QAAQgrB,QAAQ,IAAK,IAAI/qB,cAChGo2C,EAA0CF,EAA8BtsB,KAAK5lB,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAG0iC,OAAO1iC,EAAG0iC,OAAOzvC,OAAS,GAAG8I,gBAAhC,4BAAAnG,OAA8Es8C,MAC5OD,EAA8BmC,SACvCjC,EAA0CvjD,OAAOkR,OAAOmyC,EAA8BmC,QAAQr0C,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,iBAGrKo2C,EAAwCl/C,SAC1CkN,EAAS,YAKRgyC,EAAwCl/C,SACvCg/C,EAA8BtsB,MAChCusB,EAAqCv5C,EAAYqoB,KAAKllB,QAAQgrB,QAAQ,IAAK,IAAI/qB,gBAC/Eo2C,EAA0CF,EAA8BtsB,KAAK5lB,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAG0iC,OAAO1iC,EAAG0iC,OAAOzvC,OAAS,GAAG8I,gBAAhC,4BAAAnG,OAA8Es8C,MAGxMj/C,QAAUm/C,IACrDF,EAAqCE,EAAoBt2C,QAAQgrB,QAAQ,IAAK,IAAI/qB,cAClFo2C,EAA0CF,EAA8BtsB,KAAK5lB,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,eAAiBiE,EAAG0iC,OAAO1iC,EAAG0iC,OAAOzvC,OAAS,GAAG8I,gBAAhC,4BAAAnG,OAA8Es8C,OAE9OD,EAA8BmC,SACvCjC,EAA0CvjD,OAAOkR,OAAOmyC,EAA8BmC,QAAQr0C,OAAO,SAACC,GAAS,OAAOA,EAAGlE,QAAQC,gBAAkBpD,EAAYmD,QAAQC,iBAGrKo2C,EAAwCl/C,SAC1CkN,EAAS,YAIRgyC,EAAwCl/C,OAhMA,CAAA6/C,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UAiMpC,GAjMoC,WAoMvC+hC,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiBh5C,KAAOkH,SAAS8xC,EAAiBh5C,KAAM,IAAOg5C,EAAiBgC,KAAOhC,EAAiBgC,IAAIh7C,KAAQkH,SAAS8xC,EAAiBgC,IAAIh7C,KAAM,IAAM,KAtMrI,CAAAy5C,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UAyMpC,GAzMoC,eA4MvCiiC,EAAmBp+C,EAAKuP,iBAAiB4uC,EAAa35C,EAAY/F,UACxEk/C,EAAO3xC,OAASA,EAChB2xC,EAAOn4C,MAAQ44C,EACfT,EAAOrxC,YAAc8xC,EA/MwBO,EAAAxiC,OAAA,wBAuNxC3X,EAAYqwB,WAAcrwB,EAAYqwB,UAAUmrB,YAvNR,CAAArB,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UAwNpC,GAxNoC,WA2NzCkiC,EAAqBxyC,EAAGiiC,UAAYjiC,EAAGiiC,UAAY,KA3NV,CAAA6Q,EAAAjzC,KAAA,gBAAAizC,EAAAjzC,KAAA,GA8Nf,IAAI8P,QAAJ,eAAA2kC,EAAA1lD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAAi1C,EAAOxkC,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAA80C,GAAA,cAAAA,EAAA50C,KAAA40C,EAAA30C,MAAA,OACtC1L,EAAKjF,MAAMse,KAAK0C,IAAI24B,sBAAsB7oC,EAAG6M,gBAAiB,SAACsD,EAAKnQ,GAC9DmQ,GACFH,EAAOG,GAETJ,EAAQ/P,KAL4B,wBAAAw0C,EAAAxzC,SAAAuzC,EAAAtlD,SAAZ,gBAAAwlD,EAAAC,GAAA,OAAAJ,EAAApzC,MAAAjS,KAAAkS,YAAA,IA9Ne,QA8N3CqxC,EA9N2CM,EAAAlwC,KAAA,WAwOxC4vC,EAxOwC,CAAAM,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UAyOpC,GAzOoC,WA6OxCtQ,EAAGiiC,YACNjiC,EAAGiiC,UAAYuQ,EACXjB,IACF1D,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAAS5tC,IAI/C+oB,EAAwBpwB,EAAYqwB,UAAUC,kBAAkBntB,QAAQC,cAAc+qB,QAAQ,IAAK,IACnGyC,EAAkB5wB,EAAYqoB,KAAKllB,QAAQC,cAAc+qB,QAAQ,IAAK,KACtE2rB,EAA+BD,EAAmB7sB,KAAK5lB,OAAO,SAACC,GAAS,OAAOA,EAAG0iC,OAAOzvC,QAAU,GAAK+M,EAAG0iC,OAAO1iC,EAAG0iC,OAAOzvC,OAAS,GAAG8I,gBAAhC,4BAAAnG,OAA8EmzB,IAA2B/oB,EAAG0iC,OAAO1iC,EAAG0iC,OAAOzvC,OAAS,GAAG8I,gBAAhC,4BAAAnG,OAA8E2zB,MAEnQt2B,OAxPW,CAAA6/C,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UAyPpC,GAzPoC,WA4PvCoiC,EAA4BD,EAA6BtvC,OAEzDwvC,EAAcx+C,EAAKjF,MAAMse,KAAK0C,IAAIsmB,IAAIme,UAAU,CACpD,CACE1M,aAAc,UACd72C,KAAM,SACNoB,KAAM,YAEPkgD,EAA0Br5C,KAAMq5C,EAA0BhQ,UAExCiQ,EAAYiC,OAtQY,CAAA9B,EAAAjzC,KAAA,gBAAAizC,EAAAxiC,OAAA,UAuQpC,GAvQoC,eA0QvCsiC,EAAiBD,EAAYiC,OAC7B/B,EAAsB1+C,EAAKuP,iBAAiBkvC,EAAgBj6C,EAAY/F,UAC9Ek/C,EAAOn4C,MAAQk5C,EAAoB1gC,WA5QU2gC,EAAAxiC,OAAA,6BAAAwiC,EAAAxiC,OAAA,sBAkRjDwhC,EAAOhxC,WAAaA,EACpBgxC,EAAO7xC,MAAQxH,EACfq5C,EAAOtzB,YAAc/lB,EACrBq5C,EAAO/wC,WAAaD,EAAW5E,MAAM/H,EAAK+L,MAAM4xC,EAAOn4C,QAGvDoF,EAAakN,GAAU6lC,EAIlB9xC,EAAG8xC,SACN9xC,EAAG8xC,OAASA,EACZjE,EAAU15C,EAAKjF,MAAM4P,SAAS+wB,GAAU+d,GAAS5tC,GA9RF,0BAAA8yC,EAAA9xC,SAAAswC,EAAAriD,SAA7C,gBAAA4lD,EAAAC,GAAA,OAAAzD,EAAAnwC,MAAAjS,KAAAkS,YAAA,IA7B+B,wBAAAiwC,EAAApwC,SAAAmwC,EAAAliD,SAAjC,gBAAA8lD,GAAA,OAAA7D,EAAAhwC,MAAAjS,KAAAkS,YAAA,IAnBW,cAoVb0sC,GACF15C,EAAK45C,yBAAyBF,GArVfoD,EAAA3gC,OAAA,SAwVVvR,GAxVU,yBAAAkyC,EAAAjwC,SAAA8vC,EAAA7hD,SA3iFA,gBAAA+lD,GAAA,OAAAnE,EAAA3vC,MAAAjS,KAAAkS,YAAA,GAAAlS,KAq4FnB+3C,kBAAoB,SAACH,GAAkC,IAAxBoO,EAAwB9zC,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GAC/CrL,EAAMm/C,GAAgBpO,EAEtBxB,EAAc,CAClBhsC,KAJmD8H,UAAAlO,OAAA,EAAAkO,UAAA,QAAAic,EAKnD/Z,UAHgB9C,SAASe,KAAKg5B,MAAQ,MAKxC,OAAOnmC,EAAK2xC,mCAAmC,iBAAkBhwC,EAAKuvC,IA54FrDp2C,KA+4FnBimD,iBAAmB,WACjB,OAAO/gD,EAAK65C,cAAc,iBAAiB,IAh5F1B/+C,KAk5FnBkmD,iBAAmB,SAACC,GAClB,OAAOjhD,EAAK+e,gBAAgB,gBAAiBkiC,IAn5F5BnmD,KAq5FnBu2C,iBAAmB,SAACqB,GAA4B,IAAlBoO,EAAkB9zC,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GACxCrL,EAAMm/C,GAAgBpO,EACxBwO,EAAiBlhD,EAAKwtB,8BAA8B,iBAAkB,IAE1E,OAAI0zB,GAAkBA,EAAev/C,GAC5Bu/C,EAAev/C,GAAKuD,KAEtB,MA55FUpK,KA85FnBqmD,mBAAqB,SAACC,EAAOC,GAAqB,IAAd1oC,EAAc3L,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAP,GAGzC,OADA2L,GADAA,EAASzO,KAAKC,UAAUwO,IACRkH,OAAO,GAAGA,OAAO,EAAElH,EAAO7Z,OAAO,GAAG6zB,QAAQ,cAAe,OAC3E,YAAAlxB,OACI2/C,EADJ,KAAA3/C,OACckX,EADd,gBAAAlX,OAEM4/C,EAAOh5C,KAAK,KAFlB,qBAj6FiBvN,KAw6FnBwmD,uBAx6FmB,eAAAC,EAAA9mD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAw6FM,SAAAq2C,EAAOC,GAAP,IAAAC,EAAAC,EAAAN,EAAAO,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1tB,EAAA2tB,EAAAC,EAAAC,EAAAC,EAAAp1C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA82C,GAAA,cAAAA,EAAA52C,KAAA42C,EAAA32C,MAAA,UAAsBg2C,EAAtBU,EAAAtjD,OAAA,QAAAmqB,IAAAm5B,EAAA,GAAAA,EAAA,GAAqC,KAAKT,EAA1CS,EAAAtjD,OAAA,QAAAmqB,IAAAm5B,EAAA,GAAAA,EAAA,GAAuD,KAAKf,EAA5De,EAAAtjD,OAAA,QAAAmqB,IAAAm5B,EAAA,GAAAA,EAAA,GAAmE,MACpFR,EAAiB5hD,EAAK8P,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAE1D8c,QAHG,CAAAy1B,EAAA32C,KAAA,eAAA22C,EAAAlmC,OAAA,UAId,GAJc,cAOjB0lC,EAAWz1C,SAASe,KAAKg5B,MAAM,KAC/B2b,EAAc,CAClBQ,MAAM,IACNC,QAAQ,YACRC,eAAe,MACfC,MAAM,CACJC,QAAUjB,EAAe75C,gBAGzB85C,IACFI,EAAYW,MAAME,cAAgBjB,GAEhCC,IACFG,EAAYW,MAAMG,cAAgBjB,GAGpCN,EAASA,GAAUO,EAAeiB,SAASC,aACrCf,EAAgB/hD,EAAKmhD,mBAAmB,eAAeE,EAAOS,GAC9DE,EAAW,CACfe,MAAMhB,GA1BeM,EAAA32C,KAAA,GA6BD1L,EAAKgjD,gBAAgBpB,EAAelP,SAASsP,GA7B5C,WA6BjB1tB,EA7BiB+tB,EAAA5zC,KA8BnBwzC,EAAejiD,EAAK+qB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,MAC9D4tB,EAAgBD,GAAgBA,EAAanjD,OAAO,EAAIsN,SAAS61C,EAAaA,EAAanjD,OAAO,GAAGuN,WAAa,OAEnG61C,EAAcR,GAAkBQ,EAAcP,GAAgBE,EAASK,EAAc,OAjCnF,CAAAG,EAAA32C,KAAA,gBAAA22C,EAAA32C,KAAA,GAkCQ1L,EAAKshD,uBAAuBG,EAAeS,EAAc,EAAEP,EAAaN,GAlChF,SAkCfc,EAlCeE,EAAA5zC,QAoCnBwzC,EAAeA,EAAaxgD,OAAO0gD,IApChB,eAAAE,EAAAlmC,OAAA,SAuChB8lC,GAvCgB,yBAAAI,EAAAx1C,SAAA20C,EAAA1mD,SAx6FN,gBAAAmoD,GAAA,OAAA1B,EAAAx0C,MAAAjS,KAAAkS,YAAA,GAAAlS,KAi9FnBooD,eAj9FmBzoD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAi9FF,SAAAg4C,IAAA,IAAAC,EAAAC,EAAAl3B,EAAA/R,EAAA2nB,EAAA7yB,EAAA6zC,EAAAf,EAAAJ,EAAAttB,EAAAn3B,EAAAmmD,EAAAC,EAAAn5B,EAAAo5B,EAAAx2C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAk4C,GAAA,cAAAA,EAAAh4C,KAAAg4C,EAAA/3C,MAAA,UAAO03C,EAAPI,EAAA1kD,OAAA,QAAAmqB,IAAAu6B,EAAA,GAAAA,EAAA,GAAmB,KAAKH,EAAxBG,EAAA1kD,OAAA,QAAAmqB,IAAAu6B,EAAA,GAAAA,EAAA,GAA+B,KAExCr3B,EAFS,kBAAA1qB,OAEyB2hD,GAErB,QADbhpC,EAAapa,EAAKwtB,8BAA8BrB,IAHvC,CAAAs3B,EAAA/3C,KAAA,eAAA+3C,EAAAtnC,OAAA,SAKN/B,GALM,cAAAqpC,EAAA/3C,KAAA,EAQS1L,EAAKsiC,eARd,cAQTP,EARS0hB,EAAAh1C,KASTS,EAAY6yB,EAAU7yB,UAAU,KAEhC6zC,EAXS,yFAAAthD,OAYkEyN,EAZlE,4KA0BT8yC,EAAS,CACbe,SAGInB,EAAiB5hD,EAAK8P,gBAAgB,CAAC,UAAU,YAAY,WAAW,aA9B/D2zC,EAAA/3C,KAAA,GA+BK1L,EAAKgjD,gBAAgBpB,EAAelP,SAASsP,GA/BlD,YA+BX1tB,EA/BWmvB,EAAAh1C,OAiCCzO,EAAK+qB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,GAjClD,CAAAmvB,EAAA/3C,KAAA,gBAAA+3C,EAAAtnC,OAAA,UAkCN,GAlCM,WAqCfmY,EAAUt0B,EAAK+qB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,GACrDn3B,EAAOm3B,EAAQx1B,OAtCN,CAAA2kD,EAAA/3C,KAAA,gBAAA+3C,EAAAtnC,OAAA,UAyCN,GAzCM,eA6CZmY,EAAQ,GAAGovB,WAAapvB,EAAQn3B,EAAK,GAAGkP,YACzCioB,EAAUA,EAAQqvB,OAAOz3C,KAAKwF,KAAKvU,EAAK,KAGpCmmD,EAAe7oD,OAAOoE,KAAKmB,EAAK8P,gBAAgB,CAAC,cACjDyzC,EAAwBvjD,EAAK8P,gBAAgB,CAAC,aAAa,aAE7Dsa,EAAS,GACbk5B,EAAavkD,QAAS,SAAAV,GACpB+rB,EAAO/rB,GAAQ,CACbslC,IAAI,KACJ73B,MAAM,KACN0sB,SAAS,QAKb/9B,OAAOoE,KAAKmB,EAAKjF,MAAM+8B,mBAAmB/4B,QAAS,SAAAy5B,GACjD/9B,OAAOoE,KAAKmB,EAAKjF,MAAM+8B,kBAAkBU,IAAWz5B,QAAS,SAAA+M,GAE3D,IAAM83C,EAAuB5jD,EAAKjF,MAAM+8B,kBAAkBU,GAAU1sB,GAEpEw3C,EAAavkD,QAAS,SAAAV,GACpB,IAAMs8B,EAAcrG,EAAQta,KAAM,SAAA6pC,GAAK,OAAIA,EAAMnB,QAAQxiD,GAAG0H,gBAAkBg8C,EAAqBvlD,GAAMsJ,QAAQC,kBAC5GwiB,EAAO/rB,GAAMslC,KAAQhJ,GAAe36B,EAAK+L,MAAM4uB,EAAYgJ,KAAKh0B,GAAGya,EAAO/rB,GAAMslC,QAAU0f,GAAUrjD,EAAK0jC,QAAQ1jC,EAAKuP,iBAAiBorB,EAAYgJ,IAAI,IAAI5lB,IAAI,MAAMhW,MAAM,KAAK0E,GAAG42C,OACtLj5B,EAAO/rB,GAAMyN,MAAQA,EACrBse,EAAO/rB,GAAMm6B,SAAWA,EACxBpO,EAAO/rB,GAAMslC,IAAMhJ,EAAYgJ,WAOvC2f,EAAavkD,QAAS,SAAAV,GACf+rB,EAAO/rB,GAAMyN,QAChBse,EAAO/rB,GAAMyN,MAAQy3C,EAAsBz3C,MAC3Cse,EAAO/rB,GAAMm6B,SAAW+qB,EAAsB/qB,YAI9C4qB,GAAeh5B,EAAOg5B,KACxBh5B,EAASA,EAAOg5B,IAvFHK,EAAAtnC,OAAA,SA0FRnc,EAAKytB,8BAA8BtB,EAAe/B,EAAQ,OA1FlD,yBAAAq5B,EAAA52C,SAAAs2C,EAAAroD,SAj9FEA,KA6iGnBkoD,gBA7iGmB,eAAAc,EAAArpD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6iGD,SAAA44C,EAAOrR,GAAP,IAAAsP,EAAAgC,EAAAC,EAAA/+C,EAAAg/C,EAAAl3C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA44C,GAAA,cAAAA,EAAA14C,KAAA04C,EAAAz4C,MAAA,cAAiBs2C,EAAjBkC,EAAAplD,OAAA,QAAAmqB,IAAAi7B,EAAA,GAAAA,EAAA,GAA0B,GAAIF,EAA9BE,EAAAplD,OAAA,QAAAmqB,IAAAi7B,EAAA,IAAAA,EAAA,GAAsDD,EAAtDC,EAAAplD,OAAA,QAAAmqB,IAAAi7B,EAAA,GAAAA,EAAA,GAA+D,KAA/DC,EAAAz4C,KAAA,EACG6Q,IAChB6nC,KAAK1R,EAAUsP,EAAUiC,GACzBI,MAAM,SAAAroC,GACyB,oBAAnBgoC,GACTA,EAAehoC,KALL,cACV9W,EADUi/C,EAAA11C,KAAA01C,EAAAhoC,OAAA,SAQTjX,GARS,wBAAAi/C,EAAAt3C,SAAAk3C,EAAAjpD,SA7iGC,gBAAAwpD,GAAA,OAAAR,EAAA/2C,MAAAjS,KAAAkS,YAAA,GAAAlS,KAujGnB42C,YAvjGmB,eAAA6S,EAAA9pD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAujGL,SAAAq5C,EAAO9R,GAAP,IAAAsR,EAAAC,EAAA/+C,EAAAu/C,EAAAz3C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAm5C,GAAA,cAAAA,EAAAj5C,KAAAi5C,EAAAh5C,MAAA,cAAiBs4C,EAAjBS,EAAA3lD,OAAA,QAAAmqB,IAAAw7B,EAAA,IAAAA,EAAA,GAAyCR,EAAzCQ,EAAA3lD,OAAA,QAAAmqB,IAAAw7B,EAAA,GAAAA,EAAA,GAAkD,KAAlDC,EAAAh5C,KAAA,EACO6Q,IAChBC,IAAIk2B,EAAUuR,GACdI,MAAM,SAAAroC,GACyB,oBAAnBgoC,GACTA,EAAehoC,KALT,YACN9W,EADMw/C,EAAAj2C,MAAA,CAAAi2C,EAAAh5C,KAAA,eAAAg5C,EAAAvoC,OAAA,SASHjX,GATG,cAAAw/C,EAAAvoC,OAAA,SAWHI,IAAM0nC,IAXH,yBAAAS,EAAA73C,SAAA23C,EAAA1pD,SAvjGK,gBAAA6pD,GAAA,OAAAJ,EAAAx3C,MAAAjS,KAAAkS,YAAA,GAAAlS,KAqkGnByyC,wBArkGmB,eAAAqX,EAAAnqD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAqkGO,SAAA05C,EAAOnS,GAAP,IAAA7zC,EAAAs4B,EAAA2tB,EAAA51C,EAAAgyC,EAAA6D,EAAA7/C,EAAAgsC,EAAA8T,EAAAh4C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA05C,GAAA,cAAAA,EAAAx5C,KAAAw5C,EAAAv5C,MAAA,UAAiB7M,EAAjBmmD,EAAAlmD,OAAA,QAAAmqB,IAAA+7B,EAAA,GAAAA,EAAA,GAAwB,GAAI7tB,EAA5B6tB,EAAAlmD,OAAA,QAAAmqB,IAAA+7B,EAAA,GAAAA,EAAA,GAAkC,IAAKF,EAAvCE,EAAAlmD,OAAA,QAAAmqB,IAAA+7B,EAAA,GAAAA,EAAA,GAAqD,EACvE91C,EAAY9C,SAASe,KAAKg5B,MAAQ,QAGpC+a,EAAiBlhD,EAAKwtB,8BAA8B,iBAAkB,MAEpD0zB,EAAexO,IAAawO,EAAexO,GAAUxjC,WAAaA,EAAYgyC,EAAexO,GAAUxjC,UAAYioB,GANjH,CAAA8tB,EAAAv5C,KAAA,eAAAu5C,EAAA9oC,OAAA,SAOf+kC,EAAexO,GAAUxtC,MAPV,cAUlB6/C,EAASlmD,EAAKimD,GAVIG,EAAAv5C,KAAA,GAWL1L,EAAK0xC,YAAYgB,EAAW,WAAaqS,GAXpC,aAWlB7/C,EAXkB+/C,EAAAx2C,QAeZvJ,EAAKA,OAASA,EAAKA,KAAK4kB,QAAQglB,MAAM,QAAgC,0BAAtB5pC,EAAKA,KAAK4kB,QAf9C,CAAAm7B,EAAAv5C,KAAA,gBAgBlByrB,EAAI,IACA+Z,EAAc,CAClBhsC,KAAK,CACHA,KAAKA,EAAKA,MAEZgK,aAEFlP,EAAK2xC,mCAAmC,iBAAkBe,EAAUxB,IAvBhD+T,EAAA9oC,OAAA,SAyBfjX,GAzBe,aA0Bb4/C,EAAcjmD,EAAKC,OAAS,GA1Bf,CAAAmmD,EAAAv5C,KAAA,gBAAAu5C,EAAAv5C,KAAA,GA2BT1L,EAAKutC,wBAAwBmF,EAAU7zC,EAAMs4B,EAAK2tB,EAAc,GA3BvD,eAAAG,EAAA9oC,OAAA,SAAA8oC,EAAAx2C,MAAA,eAAAw2C,EAAA9oC,OAAA,SA6BjB,MA7BiB,yBAAA8oC,EAAAp4C,SAAAg4C,EAAA/pD,SArkGP,gBAAAoqD,GAAA,OAAAN,EAAA73C,MAAAjS,KAAAkS,YAAA,GAAAlS,KAomGnBwyC,kBApmGmB,eAAA6X,EAAA1qD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAomGC,SAAAi6C,EAAO1S,GAAP,IAAAvb,EAAAkuB,EAAAvE,EAAAmD,EAAAD,EAAAriD,EAAAuN,EAAAgyC,EAAAh8C,EAAAgsC,EAAAoU,EAAAt4C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAg6C,GAAA,cAAAA,EAAA95C,KAAA85C,EAAA75C,MAAA,UAAiByrB,EAAjBmuB,EAAAxmD,OAAA,QAAAmqB,IAAAq8B,EAAA,GAAAA,EAAA,GAAuB,GAAID,EAA3BC,EAAAxmD,OAAA,QAAAmqB,IAAAq8B,EAAA,IAAAA,EAAA,GAAgDxE,EAAhDwE,EAAAxmD,OAAA,QAAAmqB,IAAAq8B,EAAA,IAAAA,EAAA,GAA+DrB,EAA/DqB,EAAAxmD,OAAA,QAAAmqB,IAAAq8B,EAAA,GAAAA,EAAA,GAAwE,KAAMtB,EAA9EsB,EAAAxmD,OAAA,QAAAmqB,IAAAq8B,EAAA,IAAAA,EAAA,GACZ3jD,EAAMm/C,GAAgBpO,EACtBxjC,EAAY9C,SAASe,KAAKg5B,MAAQ,QAGpC+a,EAAiBlhD,EAAKwtB,8BAA8B,iBAAkB,MAGpD0zB,EAAev/C,IAAQu/C,EAAev/C,GAAKuN,WAAaA,EAAYgyC,EAAev/C,GAAKuN,UAAYioB,GARxG,CAAAouB,EAAA75C,KAAA,gBAAA65C,EAAAppC,OAAA,SASR+kC,EAAev/C,GAAKuD,MAAQmgD,EAAcnE,EAAev/C,GAAKuD,KAAKA,KAAOg8C,EAAev/C,GAAKuD,MATtF,eAAAqgD,EAAA75C,KAAA,GAYD1L,EAAK0xC,YAAYgB,EAAUsR,EAAgBC,GAZ1C,eAYd/+C,EAZcqgD,EAAA92C,KAcZyiC,EAAc,CAClBhsC,KAAK,CACHA,KAAKA,EAAKA,MAEZgK,aAEFlP,EAAK2xC,mCAAmC,iBAAkBhwC,EAAKuvC,GApB7CqU,EAAAppC,OAAA,SAqBVjX,GAAQmgD,EAAcngD,EAAKA,KAAOA,GArBxB,yBAAAqgD,EAAA14C,SAAAu4C,EAAAtqD,SApmGD,gBAAA0qD,GAAA,OAAAL,EAAAp4C,MAAAjS,KAAAkS,YAAA,GAAAlS,KA2nGnB2qD,sBA3nGmB,eAAAC,EAAAjrD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2nGK,SAAAw6C,EAAOjT,GAAP,IAAAsP,EAAA7qB,EAAAkuB,EAAAvE,EAAAmD,EAAAtiD,EAAAuN,EAAAgyC,EAAAh8C,EAAAgsC,EAAA0U,EAAA54C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAs6C,GAAA,cAAAA,EAAAp6C,KAAAo6C,EAAAn6C,MAAA,UAAiBs2C,EAAjB4D,EAAA9mD,OAAA,QAAAmqB,IAAA28B,EAAA,GAAAA,EAAA,GAA0B,GAAIzuB,EAA9ByuB,EAAA9mD,OAAA,QAAAmqB,IAAA28B,EAAA,GAAAA,EAAA,GAAkC,GAAIP,EAAtCO,EAAA9mD,OAAA,QAAAmqB,IAAA28B,EAAA,IAAAA,EAAA,GAAyD9E,EAAzD8E,EAAA9mD,OAAA,QAAAmqB,IAAA28B,EAAA,IAAAA,EAAA,GAAsE3B,EAAtE2B,EAAA9mD,OAAA,QAAAmqB,IAAA28B,EAAA,GAAAA,EAAA,GAA6E,KAC7FjkD,EAAMm/C,GAAgBpO,EACtBxjC,EAAY9C,SAASe,KAAKg5B,MAAQ,QAGlC+a,EAAiBlhD,EAAKwtB,8BAA8B,iBAAkB,MAEtD0zB,EAAev/C,IAAQu/C,EAAev/C,GAAKuN,WAAaA,EAAYgyC,EAAev/C,GAAKuN,UAAYioB,GAPpG,CAAA0uB,EAAAn6C,KAAA,gBAAAm6C,EAAA1pC,OAAA,SAQZ+kC,EAAev/C,GAAKuD,MAAQmgD,EAAcnE,EAAev/C,GAAKuD,KAAKA,KAAOg8C,EAAev/C,GAAKuD,MARlF,eAAA2gD,EAAAn6C,KAAA,GAWH1L,EAAKgjD,gBAAgBtQ,EAAUsP,GAAU,EAAOiC,GAX7C,eAWhB/+C,EAXgB2gD,EAAAp3C,KAYhByiC,EAAc,CAClBhsC,KAAK,CACHA,KAAKA,EAAKA,MAEZgK,aAEFlP,EAAK2xC,mCAAmC,iBAAkBhwC,EAAKuvC,GAlBzC2U,EAAA1pC,OAAA,SAmBdjX,GAAQmgD,EAAcngD,EAAKA,KAAOA,GAnBpB,yBAAA2gD,EAAAh5C,SAAA84C,EAAA7qD,SA3nGL,gBAAAgrD,GAAA,OAAAJ,EAAA34C,MAAAjS,KAAAkS,YAAA,GAAAlS,KAgpGnByd,oBAAsB,SAAAP,GACpB,IAAIoS,EAAS,QACb,GAAIhe,SAAS4L,EAAM+tC,MAAO,CACxB,IAAMC,EAAY55C,SAAS4L,EAAM+tC,MACjC,OAAQC,GACN,KAAK,KACH57B,EAAS,SACT,MACF,QACEA,EAAM,SAAA3oB,OAAYukD,SAGbhuC,EAAM8R,UACfM,EAASpS,EAAM8R,QAAQm8B,MAAM,MAAM,IAGrC,OAAO77B,GAhqGUtvB,KAkqGnBorD,iBAAmB,WACjB,OAAOh+C,KAnqGUpN,KAqqGnBiwB,aAAe,SAACpqB,EAAMwlD,GACpB,IAAKA,EACH,OAAO,KAGT,IADAxlD,EAAOlG,OAAOC,OAAO,GAAIiG,IAChB7B,OAAS,EAAG,CACnB,IAAMsnD,EAAOzlD,EAAK0lD,QAClB,IAAK1lD,EAAK7B,OACR,OAAOqnD,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAOpmD,EAAK+qB,aAAapqB,EAAMwlD,EAAMC,IAGzC,OAAO,MAlrGUtrD,KAorGnBgV,gBAAkB,SAACnP,GAA0B,IAApB2lD,EAAoBt5C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GAE3C,GADAs5C,EAAUA,GAAoBp+C,IAC1BvH,EAAK7B,OAAS,EAAG,CACnB,IAAMsnD,EAAOzlD,EAAK0lD,QAClB,IAAK1lD,EAAK7B,OACR,YAAyBmqB,IAAlBq9B,EAAQF,GAAsBE,EAAQF,GAAQ,KAChD,GAAIE,EAAQF,GACjB,OAAOpmD,EAAK8P,gBAAgBnP,EAAM2lD,EAAQF,IAG9C,OAAO,MA9rGUtrD,KAgsGnByrD,UAAY,SAAC5lD,GACX,OAAOuH,IAAcs+C,QAAU,IAAM7lD,GAjsGpB7F,KAmsGnB2rD,sBAAwB,WAKtB,OAJkBhsD,OAAOoE,KAAKqJ,IAAcw+C,cAAc1sC,KAAK,SAAA6kB,GAE7D,OADe32B,IAAcw+C,aAAa7nB,GAAKzK,IACjCxsB,gBAAkBsX,OAAOmV,SAAS2K,OAAOp3B,iBAEnC,QAxsGL9M,KA0sGnB6rD,eAAiB,WACf,MAAO,CAAC,KAAK,KAAK,KAAK,MAAM33B,SAAShvB,EAAKkN,cAAcoD,OAAO,QAA4C,OAAlCtQ,EAAKkN,cAAcoD,OAAO,OA3sGnFxV,KA6sGnB8rD,gBAAkB,WAChB,OAAO1nC,OAAOmV,SAAS2K,OAAOp3B,cAAconB,SAAS9mB,IAAc2+C,WAAWj/C,gBA9sG7D9M,KAgtGnBgsD,eAAiB,WACf,OAAO5nC,OAAOmV,SAAS2K,OAAOp3B,cAAconB,SAAS9mB,IAAcs+C,QAAQ5+C,gBAjtG1D9M,KAmtGnBisD,aAAe,WACb,OAAO7nC,OAAOmV,SAAS2K,OAAOp3B,cAAconB,SAAS9mB,IAAc8+C,QAAQp/C,gBAptG1D9M,KAstGnBmsD,4BAttGmBxsD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAstGW,SAAA+7C,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAt6C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAg8C,GAAA,cAAAA,EAAA97C,KAAA87C,EAAA77C,MAAA,OAC5By7C,GADmCA,EAAPG,EAAAxoD,OAAA,QAAAmqB,IAAAq+B,EAAA,GAAAA,EAAA,GAAc,OAC3BpoC,OAAOmV,SAAS1xB,KAAKkd,OAAO,GACrCunC,EAAqBpnD,EAAK8P,gBAAgB,CAAC,YAAa,SAAU,aAClEu3C,EAAWrnD,EAAK8mD,iBAClBM,EAAmBx6B,SAAWy6B,GAAYnoC,OAAOsoC,KACnDtoC,OAAOsoC,GAAG,MAAO,OAAQL,GACzBjoC,OAAOsoC,GAAG,OAAQ,aANQ,wBAAAD,EAAA16C,SAAAq6C,EAAApsD,SAttGXA,KA+tGnB0d,yBA/tGmB,eAAAivC,EAAAhtD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+tGQ,SAAAu8C,EAAOzvC,GAAP,IAAApV,EAAA8kD,EAAAC,EAAAC,EAAA/nC,EAAAgoC,EAAA96C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAw8C,GAAA,cAAAA,EAAAt8C,KAAAs8C,EAAAr8C,MAAA,UAAkB7I,EAAlBilD,EAAAhpD,OAAA,QAAAmqB,IAAA6+B,EAAA,GAAAA,EAAA,GAA6B,KAEhDH,EAAmBz/C,IAAc8/C,UAAUC,OAAOhI,OAClD2H,EAAeD,EAAiBC,aAChCC,EAAW3oC,OAAOmV,SAAS2K,OAAOp3B,cAAconB,SAAS9mB,IAAcs+C,QAAQ5+C,gBAEjF+/C,EAAiB/6B,UAAW1N,OAAOsoC,KAAOI,IAAgBC,EANrC,CAAAE,EAAAr8C,KAAA,eASnBi8C,EAAiBO,uBAE2B,IAA1ChgD,IAAcoR,QAAQqjB,iBAClB7c,EAAiB5X,IAAcoR,QAAQ6uC,kBAAkBjgD,IAAcoR,QAAQqjB,iBACrF1kB,EAAUC,eAAV,IAAAzW,OAA+Bqe,IAEtB8nC,IAAiBC,IAC1B5vC,EAAUC,eAAiB,UAhBR6vC,EAAAr8C,KAAA,EAoBhB,IAAI8P,QAAJ,eAAA4sC,EAAA3tD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAAk9C,EAAOzsC,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAA+8C,GAAA,cAAAA,EAAA78C,KAAA68C,EAAA58C,MAAA,OACjBuM,EAAUswC,YAAc,WACtB3sC,GAAQ,IAEV3D,EAAUuwC,gBAAkB,WAC1B3sC,KAGFqD,OAAOsoC,GAAG,OAAQ,QAASvvC,GARV,wBAAAqwC,EAAAz7C,SAAAw7C,EAAAvtD,SAAZ,gBAAA2tD,EAAAC,GAAA,OAAAN,EAAAr7C,MAAAjS,KAAAkS,YAAA,IApBgB,OA+BC,oBAAbnK,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuBklD,EAAA5rC,OAAA,UAwClB,GAxCkB,yBAAA4rC,EAAAl7C,SAAA66C,EAAA5sD,SA/tGR,gBAAA6tD,GAAA,OAAAlB,EAAA16C,MAAAjS,KAAAkS,YAAA,GAAAlS,KAywGnB8tD,eAzwGmB,eAAAC,EAAApuD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAywGF,SAAA29C,EAAO7rD,EAAM0K,EAAS06B,GAAtB,IAAAjQ,EAAA,OAAA7G,EAAAtwB,EAAAsQ,KAAA,SAAAw9C,GAAA,cAAAA,EAAAt9C,KAAAs9C,EAAAr9C,MAAA,cAAAq9C,EAAAt9C,KAAA,EAEP2mB,EAAW,IAAIpyB,EAAKjF,MAAMse,KAAK0C,IAAI23B,SAASrR,EAAK16B,GAF1CohD,EAAA5sC,OAAA,SAGN,CAAElf,OAAMm1B,aAHF,OAAA22B,EAAAt9C,KAAA,EAAAs9C,EAAA97B,GAAA87B,EAAA,SAKb/oD,EAAK2xB,eAAe,6BAA8B10B,EAAM0K,EAAxDohD,EAAA97B,IALa,cAAA87B,EAAA5sC,OAAA,SAOR,MAPQ,wBAAA4sC,EAAAl8C,SAAAi8C,EAAAhuD,KAAA,YAzwGE,gBAAAkuD,EAAAC,EAAAC,GAAA,OAAAL,EAAA97C,MAAAjS,KAAAkS,YAAA,GAAAlS,KAkxGnBquD,kBAAoB,WAA4B,IAA3BC,EAA2Bp8C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACrC,OAAOhN,EAAK65C,cAAc,kBAAkB,EAAOuP,IAnxGlCtuD,KAqxGnBuuD,qBAAuB,SAACC,EAAUC,GAUhC,OATKD,EAAS3hD,SAAW3H,EAAKjF,MAAM4P,UAClC2+C,EAAS3hD,QAAU3H,EAAKjF,MAAM4P,SAE3B2+C,EAAStsC,WACZssC,EAAStsC,SAAWhd,EAAKmpD,qBAEG,qBAAnBG,EAASE,OAA0BF,EAASE,cAC9CF,EAASE,QAEbF,EAAS3hD,aAGd4hD,EAAWA,IAAuBvpD,EAAKjF,MAAMwuD,SAAWvpD,EAAKjF,MAAMwuD,SAA+C,oBAA5BvpD,EAAKjF,MAAM0uD,aAA8BzpD,EAAKjF,MAAM0uD,eAAiB,QAElJF,EAASG,aAAaJ,KApyGdxuD,KAwyGnB6lB,2BAA6B,SAAC7I,GAAmC,IAA3B6kB,EAA2B3vB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAChD+9B,EAAiB/qC,EAAK8P,gBAAgB,CAAC,UAAW,oBACxD6sB,EAAkBA,GAAmB38B,EAAKuuB,uBAC1C,IAAM3N,EAAW5gB,EAAK8P,gBAAgB,CAAC,UAAW,oBAAqB6sB,EAAiB,aAClFgtB,EAAa3pD,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,YAAa,UAAWi7B,IACnF6e,EAAU5pD,EAAK8P,gBAAgB,CAAC,UAAW,YAAa8Q,EAAU,UAAW+b,KAAqBgtB,EACxG,OAAO7xC,EAAM,GAAArW,OAAMmoD,EAAN,QAAAnoD,OAAoBqW,GAAW,MA9yG3Bhd,KAgzGnB+uD,uBAAyB,SAACliD,GAAoC,IAA3Bg1B,EAA2B3vB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAC7C+9B,EAAiB/qC,EAAK8P,gBAAgB,CAAC,UAAW,oBACxD6sB,EAAkBA,GAAmB38B,EAAKuuB,uBAC1C,IAAM3N,EAAW5gB,EAAK8P,gBAAgB,CAAC,UAAW,oBAAqB6sB,EAAiB,aAClFgtB,EAAa3pD,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,YAAa,UAAWi7B,IACnF6e,EAAU5pD,EAAK8P,gBAAgB,CAAC,UAAW,YAAa8Q,EAAU,UAAW+b,KAAqBgtB,EACxG,OAAOhiD,EAAO,GAAAlG,OAAMmoD,EAAN,aAAAnoD,OAAyBkG,GAAY,MAtzGlC7M,KAwzGnBwD,YAAc,SAACqsB,GAA6D,IAArDm/B,EAAqD98C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAtC,EAAG+8C,EAAmC/8C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAzB,IAAKg9C,EAAoBh9C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAR,IAClE,IACE88C,EAAe59C,KAAK+9C,IAAIH,GACxBA,EAAe1rD,MAAM0rD,GAAgB,EAAIA,EAEzC,IAAMI,EAAev/B,EAAS,EAAI,IAAM,GAEpCnjB,EAAI4E,SAASue,EAASze,KAAK+9C,IAAIE,OAAOx/B,IAAW,GAAG3iB,QAAQ8hD,IAAe9rC,WAC3EosC,EAAK5iD,EAAE1I,OAAS,EAAK0I,EAAE1I,OAAS,EAAI,EAExC,OAAOorD,GAAgBE,EAAI5iD,EAAEqY,OAAO,EAAGuqC,GAAKJ,EAAY,IAAMxiD,EAAEqY,OAAOuqC,GAAGz3B,QAAQ,iBAAkB,KAAOq3B,IAAcF,EAAeC,EAAU79C,KAAK+9C,IAAIt/B,EAASnjB,GAAGQ,QAAQ8hD,GAAc51C,MAAM,GAAK,IACxM,MAAOtS,GACP,OAAO,OAp0GQ9G,KAu0GnBuvD,qBAv0GmB5vD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAu0GI,SAAAm/C,IAAA,IAAAC,EAAAp+B,EAAA/R,EAAAowC,EAAA9X,EAAAqQ,EAAA79C,EAAAulD,EAAA5I,EAAA6I,EAAAC,EAAA39C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAq/C,GAAA,cAAAA,EAAAn/C,KAAAm/C,EAAAl/C,MAAA,UAAO6+C,EAAPI,EAAA7rD,OAAA,QAAAmqB,IAAA0hC,EAAA,IAAAA,EAAA,GACfx+B,EADe,qBAAA1qB,OACsB8oD,GAExB,QADbnwC,EAAapa,EAAKmtC,cAAchhB,IAFjB,CAAAy+B,EAAAl/C,KAAA,eAAAk/C,EAAAzuC,OAAA,SAIZ/B,GAJY,cAOfowC,EAAYxqD,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,WAAY,cAAclP,IAAI,SAAAiqD,GAAI,OAAIA,EAAKjjD,gBACrG8qC,EAAW1yC,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,WAAY,YAAa,cAClFizC,EAAQwH,EAAavqD,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,oBAAsB9P,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,cAErL5K,EAAO,CACX69C,MAAK,GAAAthD,OAAKshD,IAZS6H,EAAAl/C,KAAA,GAeC1L,EAAKylD,sBAAsB/S,EAAUxtC,EAAM,MAAM,GAAM,GAfxD,cAejBulD,EAfiBG,EAAAn8C,OAgBJg8C,EAAUvlD,MAAQulD,EAAUvlD,KAAKulD,WAhB7B,CAAAG,EAAAl/C,KAAA,gBAiBnB++C,EAAYA,EAAUvlD,KAAKulD,UACrB5I,EAAWz1C,SAASe,KAAKg5B,MAAQ,KACjCukB,EAAiB,GAnBJE,EAAAl/C,KAAA,GAoBb1L,EAAK+K,aAAa0/C,EAAlB,eAAAK,EAAArwD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA6B,SAAA4/C,EAAO1uD,GAAP,IAAAyhB,EAAAktC,EAAA,OAAAz/B,EAAAtwB,EAAAsQ,KAAA,SAAA0/C,GAAA,cAAAA,EAAAx/C,KAAAw/C,EAAAv/C,MAAA,YAC7BrP,EAAE6uD,KAAOrJ,GAAY2I,EAAUx7B,SAAS3yB,EAAE8uD,OAAOvjD,gBADpB,CAAAqjD,EAAAv/C,KAAA,QAE/Bg/C,EAAeziD,KAAK5L,GAFW4uD,EAAAv/C,KAAA,sBAIzBoS,EAAczhB,EAAE+uD,SAClBJ,GAAoB,EALOC,EAAAv/C,KAAA,EAMzB1L,EAAK+K,aAAa1O,EAAEgvD,WAApB,eAAAC,EAAA7wD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgC,SAAAogD,EAAOr6B,GAAP,IAAA9F,EAAAogC,EAAAnyB,EAAA,OAAA9N,EAAAtwB,EAAAsQ,KAAA,SAAAkgD,GAAA,cAAAA,EAAAhgD,KAAAggD,EAAA//C,MAAA,WAChCs/C,EADgC,CAAAS,EAAA//C,KAAA,eAAA+/C,EAAAtvC,OAAA,oBAIrB,qBAAX+U,EAAEj0B,KAJ8B,CAAAwuD,EAAA//C,KAAA,YAK5B0f,EAAY8F,EAAEvY,OAAOqe,SACrBw0B,EAAgBxrD,EAAKiyB,kBAAkB7G,IANX,CAAAqgC,EAAA//C,KAAA,gBAAA+/C,EAAA//C,KAAA,EAQL1L,EAAKwrB,gBAAgBJ,EAAWogC,EAAc7jD,SAAS,EAAMmW,GARxD,QAQ1Bub,EAR0BoyB,EAAAh9C,OASZzO,EAAK+L,MAAMstB,GAAc1pB,GAAG,OAC9Cq7C,GAAoB,GAVU,QAAAS,EAAA//C,KAAA,kCAAA+/C,EAAA5+C,SAAA0+C,EAAAzwD,SAAhC,gBAAA4wD,GAAA,OAAAJ,EAAAv+C,MAAAjS,KAAAkS,YAAA,IANyB,OAyB3Bg+C,GACFN,EAAeziD,KAAK5L,GA1BS,wBAAA4uD,EAAAp+C,SAAAk+C,EAAAjwD,SAA7B,gBAAA6wD,GAAA,OAAAb,EAAA/9C,MAAAjS,KAAAkS,YAAA,IApBa,eAAA49C,EAAAzuC,OAAA,SAmDZnc,EAAKqa,cAAc8R,EAAeu+B,IAnDtB,yBAAAE,EAAA/9C,SAAAy9C,EAAAxvD,SAv0GJA,KA63GnB8wD,eA73GmBnxD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA63GF,SAAA0gD,IAAA,IAAA35B,EAAA+xB,EAAA6H,EAAAC,EAAAC,EAAAh/C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA0gD,GAAA,cAAAA,EAAAxgD,KAAAwgD,EAAAvgD,MAAA,cAAOwmB,EAAP85B,EAAAltD,OAAA,QAAAmqB,IAAA+iC,EAAA,GAAAA,EAAA,GAAmB,KAC5B/H,EAASjkD,EAAK8P,gBAAgB,CAAC,QAAS,WACzCoiB,GAAclyB,EAAK8P,gBAAgB,CAAC,UAAW,oBAAoBkf,SAASkD,KAC/EA,EAAYlyB,EAAKuuB,wBAEbu9B,EAAe9rD,EAAK8P,gBAAgB,CAAC,QAAS,SALrCm8C,EAAAvgD,KAAA,EAMI1L,EAAKstC,kBAAkBwe,EAAapZ,SAASxgB,GAAY45B,EAAa30B,KAAK,GAAM,EAAO8sB,GAN5F,cAMT8H,EANSE,EAAAx9C,KAAAw9C,EAAA9vC,OAAA,SAOR4vC,GAPQ,wBAAAE,EAAAp/C,SAAAg/C,EAAA/wD,SA73GEA,KAs4GnB0T,gBAt4GmB,eAAA09C,EAAAzxD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAs4GD,SAAAghD,EAAOxkD,GAAP,IAAAsG,EAAAyzC,EAAAC,EAAAyK,EAAAC,EAAAC,EAAAC,EAAAr6B,EAAA/F,EAAA/R,EAAAoyC,EAAAC,EAAAC,EAAAha,EAAA/5B,EAAA+a,EAAAuwB,EAAA75B,EAAAllB,EAAAynD,EAAAC,EAAA5/C,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAshD,GAAA,cAAAA,EAAAphD,KAAAohD,EAAAnhD,MAAA,UAAgBuC,EAAhB2+C,EAAA9tD,OAAA,QAAAmqB,IAAA2jC,EAAA,GAAAA,EAAA,GAAyB,KAAMlL,EAA/BkL,EAAA9tD,OAAA,QAAAmqB,IAAA2jC,EAAA,GAAAA,EAAA,GAAgD,KAAMjL,EAAtDiL,EAAA9tD,OAAA,QAAAmqB,IAAA2jC,EAAA,GAAAA,EAAA,GAAqE,KAAMR,EAA3EQ,EAAA9tD,OAAA,QAAAmqB,IAAA2jC,EAAA,IAAAA,EAAA,GAAwGP,EAAxGO,EAAA9tD,OAAA,QAAAmqB,IAAA2jC,EAAA,GAAAA,EAAA,GAAoH,KAAMN,EAA1HM,EAAA9tD,OAAA,QAAAmqB,IAAA2jC,EAAA,GAAAA,EAAA,GAAkI,KAAML,EAAxIK,EAAA9tD,OAAA,QAAAmqB,IAAA2jC,EAAA,GAAAA,EAAA,GAAgJ,KAC1J16B,EAAYlyB,EAAKuuB,uBAQjBpC,EATU,gBAAA1qB,OASsBywB,EATtB,KAAAzwB,OASmCkG,EATnC,KAAAlG,OAS8CwM,EAT9C,KAAAxM,OASwD4qD,EATxD,KAAA5qD,OASqE6qD,EATrE,KAAA7qD,OAS8E8qD,GAG3E,QAFfnyC,EAAapa,EAAKmtC,cAAchhB,IAVpB,CAAA0gC,EAAAnhD,KAAA,eAcR8gD,EAAqBpyC,EAAWxO,OAAO,SAAA0mB,GAAC,OAA2B,OAArBA,EAAEovB,gBAA4BA,GAAkBpvB,EAAEovB,gBAAkBA,KAAwC,OAAnBpvB,EAAEqvB,cAA0BA,GAAgBrvB,EAAEqvB,cAAgBA,OACjL6K,EAAmB1tD,OAAS,GAfxC,CAAA+tD,EAAAnhD,KAAA,cAgBRihD,EAAeH,EAAmBx9C,MAAM9J,MAhBhC,CAAA2nD,EAAAnhD,KAAA,eAkBVihD,EAAeA,EAAa/gD,OAAO,SAAA5G,GAAC,QAAO08C,GAAkB18C,EAAEkK,WAAawyC,MAAqBC,GAAgB38C,EAAEkK,WAAayyC,MAC/G7iD,OAAS,GAnBhB,CAAA+tD,EAAAnhD,KAAA,gBAAAmhD,EAAA1wC,OAAA,SAoBDwwC,GApBC,QAAAE,EAAAnhD,KAAA,iBA0Bd0O,EAAa,GA1BC,eA6BVsyC,EAAU1sD,EAAK8P,gBAAgB,CAAC,QAAS,UAC3C4iC,EA9BY,GAAAjxC,OA8BEirD,EAAQha,SAASxgB,IA9BnBzwB,OA8BgCkG,IAI5C+5C,GAAkBC,GAA2B,OAAX1zC,GAAiC,OAAdo+C,KACjD1zC,EAAS,GAEX+oC,GAAkBt1C,SAASs1C,KACzB0K,EACFzzC,EAAO1Q,KAAP,SAAAxG,OAAqBigD,KAEfhuB,EAAQguB,EAAkB,OAChC/oC,EAAO1Q,KAAP,SAAAxG,OAAqBiyB,MAIrBiuB,GAAgBv1C,SAASu1C,IAC3BhpC,EAAO1Q,KAAP,OAAAxG,OAAmBkgD,IAGN,OAAX1zC,GACF0K,EAAO1Q,KAAP,UAAAxG,OAAsBwM,IAGN,OAAdo+C,GAAsBjgD,SAASigD,IACjC1zC,EAAO1Q,KAAP,aAAAxG,OAAyB4qD,IAGb,OAAVC,GACF3zC,EAAO1Q,KAAP,SAAAxG,OAAqB6qD,IAGT,OAAVC,GAAkBngD,SAASmgD,IAC7B5zC,EAAO1Q,KAAP,SAAAxG,OAAqB8qD,IAGnB5zC,EAAO7Z,SACT4zC,GAAY,IAAM/5B,EAAOtQ,KAAK,OAI5B47C,EAASjkD,EAAK8P,gBAAgB,CAAC,QAAS,WAvE9B+8C,EAAAnhD,KAAA,GAwEG1L,EAAK0xC,YAAYgB,GAAU,EAAOuR,GAxErC,WAwEZ75B,EAxEYyiC,EAAAp+C,KAAA,CAAAo+C,EAAAnhD,KAAA,gBAAAmhD,EAAA1wC,OAAA,SA0EP,IA1EO,eA6EVjX,EAAOklB,EAAOllB,KAEhBynD,EAAe,KACJ,OAAX1+C,IACF0+C,EAAeznD,EAAK0G,OAAO,SAAA5G,GAAC,OAAKA,EAAEiJ,SAAWA,KAGhDmM,EAAWnS,KAAK,CACdgG,SACA0zC,eACAD,iBACAx8C,KAAMynD,IAGR3sD,EAAKqa,cAAc8R,EAAe/R,GA3FlByyC,EAAA1wC,OAAA,SA6FTjX,GA7FS,yBAAA2nD,EAAAhgD,SAAAs/C,EAAArxD,SAt4GC,gBAAAgyD,GAAA,OAAAZ,EAAAn/C,MAAAjS,KAAAkS,YAAA,GAAAlS,KAq+GnBiyD,qBAr+GmB,eAAAC,EAAAvyD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAq+GI,SAAA8hD,EAAO30C,EAAc40C,GAArB,IAAA/gC,EAAA/R,EAAA+yC,EAAA,OAAA5hC,EAAAtwB,EAAAsQ,KAAA,SAAA6hD,GAAA,cAAAA,EAAA3hD,KAAA2hD,EAAA1hD,MAAA,UACfygB,EADe,gBAAA1qB,OACiB6W,EADjB,KAAA7W,OACiCyrD,EAAmBjwD,QACnEmd,EAAapa,EAAKwtB,8BAA8BrB,KAEnCnsB,EAAK+L,MAAMqO,GAAYhc,QAJrB,CAAAgvD,EAAA1hD,KAAA,eAAA0hD,EAAAjxC,OAAA,SAKZnc,EAAK+L,MAAMqO,IALC,cAAAgzC,EAAA1hD,KAAA,EAQM1L,EAAK6rB,oBAAoBvT,EAAc40C,EAAmBjwD,KAAMiwD,EAAmBv0C,QARzF,cAQfw0C,EAReC,EAAA3+C,KAAA2+C,EAAAjxC,OAAA,SASdnc,EAAKytB,8BAA8BtB,EAAeghC,EAAc,OATlD,wBAAAC,EAAAvgD,SAAAogD,EAAAnyD,SAr+GJ,gBAAAuyD,EAAAC,GAAA,OAAAN,EAAAjgD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAg/GnByyD,iBAh/GmB,eAAAC,EAAA/yD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAg/GA,SAAAsiD,EAAOn1C,GAAP,IAAA6T,EAAA/R,EAAA5V,EAAA/F,EAAA,OAAA8sB,EAAAtwB,EAAAsQ,KAAA,SAAAmiD,GAAA,cAAAA,EAAAjiD,KAAAiiD,EAAAhiD,MAAA,UACjB4M,EAAeA,GAAgBtY,EAAKjF,MAAMuJ,cADzB,CAAAopD,EAAAhiD,KAAA,eAAAgiD,EAAAvxC,OAAA,UAIR,GAJQ,UAOXgQ,EAPW,oBAAA1qB,OAOyB6W,KACpC8B,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QATzB,CAAAsvD,EAAAhiD,KAAA,eAAAgiD,EAAAvxC,OAAA,SAURnc,EAAK+L,MAAMqO,IAVH,YAaX5V,EAAcxE,EAAK8P,gBAAgB,CAAC,QAAS,SAAUwI,EAAavI,mBAC1CvL,EAAY/F,SAd3B,CAAAivD,EAAAhiD,KAAA,SAAAgiD,EAAAzgC,GAcsCzoB,EAAY/F,SAdlDivD,EAAAhiD,KAAA,wBAAAgiD,EAAAhiD,KAAA,GAcmE1L,EAAK6rB,oBAAoBvT,EAAc,YAd1G,QAAAo1C,EAAAzgC,GAAAygC,EAAAj/C,KAAA,eAcXhQ,EAdWivD,EAAAzgC,GAAAygC,EAAAvxC,OAAA,SAgBVnc,EAAKytB,8BAA8BtB,EAAe1tB,EAAU,OAhBlD,yBAAAivD,EAAA7gD,SAAA4gD,EAAA3yD,SAh/GA,gBAAA6yD,GAAA,OAAAH,EAAAzgD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAkgHnBu0B,UAAY,SAAC08B,EAAM6B,EAAazpD,GAC9B,GAAI4nD,GAAQ6B,GAAezpD,EAAiB,CAC1C,IAAI0pD,EAASpzD,OAAOoE,KAAKktD,GAAMvsB,OAAO,SAACsuB,EAAapmD,GAClD,IAAMqmD,EAAa/tD,EAAK+L,MAAM6hD,EAAYlmD,IACpCi8B,EAAM3jC,EAAK+L,MAAMggD,EAAKrkD,IAC5B,OAAO1H,EAAK+L,MAAM+hD,GAAavhD,KAAKwhD,EAAWhmD,MAAM47B,KACpD,GAEH,GAAIkqB,EACF,OAAO7tD,EAAK+L,MAAM8hD,GAAQ9vC,IAAI5Z,GAGlC,OAAO,MA9gHUrJ,KAghHnBkzD,oBAAsB,SAAC3B,GAA4B,IAAjB4B,EAAiBjhD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAN,EAM3C,MAL0B,CACxBkhD,KAAM,KACNC,IAAK,MACLC,KAAM,QAEiB/B,GAAa4B,GAthHrBnzD,KAwhHnBuzD,yBAxhHmB5zD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAwhHQ,SAAAmjD,IAAA,IAAAC,EAAAC,EAAApjB,EAAAW,EAAAC,EAAAO,EAAA,OAAAhhB,EAAAtwB,EAAAsQ,KAAA,SAAAkjD,GAAA,cAAAA,EAAAhjD,KAAAgjD,EAAA/iD,MAAA,cACnB6iD,EAAkBvuD,EAAK8P,gBAAgB,CAAC,YAAa,SACrD0+C,EAAuBxuD,EAAK8P,gBAAgB,CAAC,QAAS,QAAS,QAAS,kBAAmB,OAAQ,mBACnGs7B,EAAgBprC,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,cAC9Di8B,EAAkBX,EAAcgC,UAAU,GAC1CpB,EALmB,GAAAvqC,OAKIsqC,EALJ,2CAAAtqC,OAK6D+sD,EAAqB7mD,QALlF,cAAA8mD,EAAA/iD,KAAA,EAMK1L,EAAKutC,wBAAwBvB,EAAmBZ,EAAcvsC,KAAM,MANzE,aAMnB0tC,EANmBkiB,EAAAhgD,OAQF89B,EAAgBrnC,MAAQqnC,EAAgBrnC,KAAKwoC,QAAwD,oBAAvCnB,EAAgBrnC,KAAKwoC,OAAO9hC,QARxF,CAAA6iD,EAAA/iD,KAAA,gBAAA+iD,EAAAtyC,OAAA,SAShBowB,EAAgBrnC,KAAKwoC,OAAO9hC,OAAO,SAAAC,GAAE,OAAKA,EAAGupB,gBAAgBxtB,gBAAkB2mD,EAAgB5mD,QAAQC,eAAiBiE,EAAG2nB,GAAG5rB,gBAAkB4mD,EAAqB7mD,QAAQC,eAAiB5H,EAAK+L,MAAMF,EAAGrG,OAAOmK,GAAG,MATtM,eAAA8+C,EAAAtyC,OAAA,SAWlB,IAXkB,yBAAAsyC,EAAA5hD,SAAAyhD,EAAAxzD,SAxhHRA,KAqiHnB4zD,yBAA2B,SAAC7D,GAC1B,OAAO7qD,EAAKjF,MAAMyJ,YAAY8C,UAAU0S,KAAK,SAAAsY,GAAC,OAAIA,EAAE3qB,QAAQC,gBAAkBijD,EAAKjjD,iBAtiHlE9M,KAwiHnB6zD,aAAe,SAAAnpD,GACb,OAAOxF,EAAK+L,MAAMvG,GAAOmpD,aAAax9B,IAAUy9B,aAAa5mD,QAAQ,IAziHpDlN,KA2iHnB+zD,uBAAyB,SAAA1/C,GACvB,OAAOnP,EAAK+L,MAAL,KAAAtK,OAAgB0N,KA5iHNrU,KA8iHnBg0D,qBAAuB,SAACz1B,EAAclqB,KAAgCnC,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,KAAAA,UAAA,OAC9D+hD,EAA0B/uD,EAAK6uD,uBAAuB1/C,GAC5D,OAAOnP,EAAK+L,MAAMstB,GAActxB,MAAMgnD,GAAyBJ,aAAax9B,IAAUy9B,aAAa5mD,QAAQ,IAhjH1FlN,KAkjHnByU,iBAAmB,SAAC8pB,EAAclqB,GAAuC,IAAxBg+C,EAAwBngD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAC9D,IAAKmC,EACH,OAAOnP,EAAK+L,MAAMstB,GAEpB,IAAM01B,EAA0B/uD,EAAK6uD,uBAAuB1/C,GACxDzC,EAAU1M,EAAK+L,MAAMstB,GAActb,IAAIgxC,GAI3C,OAHI5B,IAAiBA,EAAa/uD,UAChCsO,EAAUA,EAAQ3E,MAAMolD,IAEnBzgD,GA3jHU5R,KA6jHnBk0D,oBA7jHmBv0D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6jHG,SAAA8jD,IAAA,IAAA32C,EAAA42C,EAAAC,EAAAniD,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA6jD,GAAA,cAAAA,EAAA3jD,KAAA2jD,EAAA1jD,MAAA,cACpB4M,GAD2BA,EAAP62C,EAAArwD,OAAA,QAAAmqB,IAAAkmC,EAAA,GAAAA,EAAA,GAAsB,OACGnvD,EAAKjF,MAAMyJ,YAAYqoB,KAAK/gB,MADrDsjD,EAAA1jD,KAAA,EAES1L,EAAKomC,0BAA0B9tB,EAAc,UAAU+rC,MAAM,SAAAroC,GACxFhc,EAAK2xB,eAAe,yBAA0B3V,KAH5B,cAEdkzC,EAFcE,EAAA3gD,KAAA2gD,EAAAjzC,OAAA,SAMb+yC,GANa,wBAAAE,EAAAviD,SAAAoiD,EAAAn0D,SA7jHHA,KAqkHnB++C,cAAgB,SAACl4C,GAAkD,IAA7C0tD,IAA6CriD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,KAAAA,UAAA,GAA1BsiD,EAA0BtiD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACpDod,EAASklC,EACb,GAAIpwC,OAAOR,aAAc,CACvB,IAAM1N,EAAO0N,aAAaC,QAAQhd,GAClC,GAAIqP,IACFoZ,EAASpZ,EACLq+C,GACF,IACEjlC,EAASlgB,KAAK0U,MAAM5N,GACpB,MAAOgL,GAEPoO,EAAS,KACTpqB,EAAKuvD,iBAAiB5tD,IAK9B,OAAKyoB,GACIklC,GAvlHQx0D,KA2lHnB00D,gBAAkB,WAAsB,IAArBC,EAAqBziD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAP,GAC/B,GAAIkS,OAAOR,aAAc,CAEvB,IAAK+wC,IAAgBA,EAAY3wD,OAC/B,OAAOogB,OAAOR,aAAagxC,QAI7B,IADA,IAAMC,EAAqB,GAClBnoD,EAAI,EAAGA,EAAI0X,OAAOR,aAAa5f,OAAQ0I,IAAK,CACnD,IAAMooD,EAAY1wC,OAAOR,aAAa/c,IAAI6F,GACrCioD,EAAYzgC,SAAS4gC,IACxBD,EAAmB1nD,KAAK2nD,GAI5BD,EAAmB5wD,QAAQ,SAAC6wD,GAC1B5vD,EAAKuvD,iBAAiBK,OA3mHT90D,KA+mHnBy0D,iBAAmB,SAAC5tD,GAClB,QAAIud,OAAOR,eACTQ,OAAOR,aAAamxC,WAAWluD,IACxB,IAlnHQ7G,KAsnHnBikB,gBAAkB,SAACpd,EAAK6D,GAA6B,IAAtB2E,EAAsB6C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GACnD,GAAIkS,OAAOR,aACT,IAGE,OAFAlZ,EAAQ2E,EAAYD,KAAKC,UAAU3E,GAASA,EAC5C0Z,OAAOR,aAAaoxC,QAAQnuD,EAAK6D,IAC1B,EACP,MAAOwS,GACPga,QAAQha,MAAM,kBAAkBA,GAChCkH,OAAOR,aAAamxC,WAAWluD,GAGnC,OAAO,GAjoHU7G,KAmoHnBi1D,eAnoHmB,eAAAC,EAAAv1D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAmoHF,SAAA8kD,EAAOzrD,GAAP,IAAA0rD,EAAAtC,EAAAn9C,EAAA0/C,EAAAC,EAAAC,EAAA,OAAA9kC,EAAAtwB,EAAAsQ,KAAA,SAAA+kD,GAAA,cAAAA,EAAA7kD,KAAA6kD,EAAA5kD,MAAA,WACVlH,GAAexE,EAAKjF,MAAMyJ,cAC7BA,EAAcxE,EAAKjF,MAAMyJ,aAEtBA,EAJU,CAAA8rD,EAAA5kD,KAAA,eAAA4kD,EAAAn0C,OAAA,UAKN,GALM,cAQT+zC,EAA0B,GARjBI,EAAA5kD,KAAA,EASW1L,EAAK6rB,oBAAoBrnB,EAAYqoB,KAAK/gB,MAAO,kBAT5D,WAST8hD,EATS0C,EAAA7hD,OAWMm/C,EAAY9uD,OAXlB,CAAAwxD,EAAA5kD,KAAA,eAAA4kD,EAAAn0C,OAAA,UAYN,GAZM,OAef,IAfe1L,EAAA,SAeN0/C,GACP,IAAMI,EAAyB,IAAI/0C,QAAJ,eAAAg1C,EAAA/1D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAAslD,EAAO70C,EAASC,GAAhB,IAAA60C,EAAA,OAAAnlC,EAAAtwB,EAAAsQ,KAAA,SAAAolD,GAAA,cAAAA,EAAAllD,KAAAklD,EAAAjlD,MAAA,cAAAilD,EAAAllD,KAAA,EAAAklD,EAAAjlD,KAAA,EAET1L,EAAK6rB,oBAAoBrnB,EAAYqoB,KAAK/gB,MAAO,kBAAmB,CAACqkD,IAF5D,OAEjCO,EAFiCC,EAAAliD,KAGvCmN,EAAQ80C,GAH+BC,EAAAjlD,KAAA,gBAAAilD,EAAAllD,KAAA,EAAAklD,EAAA1jC,GAAA0jC,EAAA,SAKvC3+B,QAAQqc,IAARsiB,EAAA1jC,IACArR,EAAQ,MAN+B,yBAAA+0C,EAAA9jD,SAAA4jD,EAAA31D,KAAA,YAAZ,gBAAA81D,EAAAC,GAAA,OAAAL,EAAAzjD,MAAAjS,KAAAkS,YAAA,IAS/BkjD,EAAwBjoD,KAAKsoD,IAVtBJ,EAAgB,EAAGA,EAAgBvC,EAAY9uD,OAAQqxD,IAAiB1/C,EAAxE0/C,GAfM,OAAAG,EAAA5kD,KAAA,GA4Bc8P,QAAQqD,IAAIqxC,GA5B1B,WA4BTE,EA5BSE,EAAA7hD,KA8BVm/C,GAAgBwC,EA9BN,CAAAE,EAAA5kD,KAAA,gBAAA4kD,EAAAn0C,OAAA,UA+BN,GA/BM,eAkCTk0C,EAAOzC,EAAYhiD,OAAO,SAACklD,EAAOjwD,GAAR,OAAkBiwD,IAAUV,EAAevvD,KAlC5DyvD,EAAAn0C,OAAA,SAoCRk0C,EAAKvxD,OAAS,GApCN,yBAAAwxD,EAAAzjD,SAAAojD,EAAAn1D,SAnoHE,gBAAAi2D,GAAA,OAAAf,EAAAjjD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAyqHnB6gC,eAzqHmB,eAAAq1B,EAAAv2D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAyqHF,SAAA8lD,EAAOzsD,EAAamG,GAApB,IAAA6wB,EAAA01B,EAAAC,EAAA11B,EAAA21B,EAAApR,EAAAlrB,EAAA,OAAAvJ,EAAAtwB,EAAAsQ,KAAA,SAAA8lD,GAAA,cAAAA,EAAA5lD,KAAA4lD,EAAA3lD,MAAA,UAEVlH,GAAgBmG,EAFN,CAAA0mD,EAAA3lD,KAAA,eAAA2lD,EAAAl1C,OAAA,UAGN,GAHM,UAMXqf,GAAmB,EACnB01B,EAAqB,KACrBC,EAA2B,KAE3B11B,EAA8B,MAG9Bj3B,EAAYqwB,YAAarwB,EAAYqwB,UAAUjI,QAbpC,CAAAykC,EAAA3lD,KAAA,YAcP0lD,EAAkB5sD,EAAYqwB,UAAUmrB,YAAY/iD,KACpD+iD,EAAchgD,EAAKiyB,kBAAkBm/B,GACrCt8B,EAAoB90B,EAAKiyB,kBAAkBztB,EAAYqwB,UAAUC,kBAAkB73B,OAIrF+iD,IAAelrB,EApBN,CAAAu8B,EAAA3lD,KAAA,gBAAA2lD,EAAA3lD,KAAA,GAsBsB1L,EAAKutD,iBAAiB6D,GAtB5C,eAsBXD,EAtBWE,EAAA5iD,KAAA4iD,EAAA3lD,KAAA,GAgCgB1L,EAAK65B,mBAAmBu3B,EAAiBzmD,GAhCzD,SAgCXumD,EAhCWG,EAAA5iD,QAmCTgtB,EAA8Bz7B,EAAKuP,iBAAiB2hD,EAAoBC,GAExE31B,EAAmBx7B,EAAK+L,MAAMmlD,GAAoBvhD,GAAG,IArC5C,eAAA0hD,EAAAl1C,OAAA,SA6CR,CACLqf,mBACA01B,qBACAC,2BACA11B,gCAjDa,yBAAA41B,EAAAxkD,SAAAokD,EAAAn2D,SAzqHE,gBAAAw2D,EAAAC,GAAA,OAAAP,EAAAjkD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAkuHnBulC,kBAluHmB,eAAAmxB,EAAA/2D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAkuHC,SAAAsmD,EAAOn5C,EAAco5C,GAArB,IAAAC,EAAAC,EAAAj5C,EAAAgkB,EAAAk1B,EAAAC,EAAAC,EAAAj0C,EAAAk0C,EAAAC,EAAAC,EAAAllD,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA4mD,GAAA,cAAAA,EAAA1mD,KAAA0mD,EAAAzmD,MAAA,UAAgCimD,EAAhCO,EAAApzD,OAAA,QAAAmqB,IAAAipC,EAAA,GAAAA,EAAA,GAA2C,EAAGN,EAA9CM,EAAApzD,OAAA,QAAAmqB,IAAAipC,EAAA,GAAAA,EAAA,GAAuD,SAAUv5C,EAAjEu5C,EAAApzD,OAAA,QAAAmqB,IAAAipC,EAAA,GAAAA,EAAA,GAA0E,GACtFv1B,EAAkB38B,EAAK+c,qBACvB80C,EAAgBl1B,EAAgBk1B,eAAiB,IAClB,WAAbD,EAHN,CAAAO,EAAAzmD,KAAA,gBAAAymD,EAAAzmD,KAAA,EAGoC1L,EAAKjF,MAAMse,KAAK0C,IAAIq2C,iBAHxD,OAAAD,EAAAllC,GAAAklC,EAAA1jD,KAAA0jD,EAAAzmD,KAAA,iBAAAymD,EAAAllC,GAG2E7gB,SAASwlD,GAHpF,WAGZE,EAHYK,EAAAllC,GAIlB0kC,EAAavlD,SAASulD,IAAeG,EAAgBD,EAE/CE,EAAQ,GAET3lD,SAASulD,IAAgBvlD,SAAS0lD,GARrB,CAAAK,EAAAzmD,KAAA,gBAAAymD,EAAAh2C,OAAA,SAST41C,GATS,QAYlB,IAASj0C,EAAc6zC,EAAY7zC,EAAcg0C,EAAiBh0C,GAAa+zC,GACzEG,EAAU9lD,KAAKC,IAAI2R,EAAY+zC,EAAcC,MACjCA,GAAgC,WAAbF,IACjCI,EAAU,UAEZD,EAAM9pD,KAAKjI,EAAKqyD,sBAAsB/5C,EAAco5C,EAAzCj3D,OAAAw4B,EAAA,EAAAx4B,CAAA,CAAqD63D,UAAWx0C,EAAak0C,WAAYr5C,KAjBpF,OAAAw5C,EAAAzmD,KAAA,GAoBY8P,QAAQqD,IAAIkzC,GApBxB,eAoBZE,EApBYE,EAAA1jD,KAAA0jD,EAAAh2C,OAAA,SAqBX81C,EAAgBzyB,OAAQ,SAACygB,EAAOj7C,GAErC,OADAi7C,EAASA,EAAOx+C,OAAOuD,IAEvB,KAxBgB,yBAAAmtD,EAAAtlD,SAAA4kD,EAAA32D,SAluHD,gBAAAy3D,EAAAC,GAAA,OAAAhB,EAAAzkD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA6vHnB23D,uBA7vHmB,eAAAC,EAAAj4D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6vHM,SAAAwnD,EAAOr6C,EAAcF,GAArB,IAAAw6C,EAAAjoD,EAAAynB,EAAAygC,EAAAC,EAAAh2C,EAAAi2C,EAAAC,EAAAC,EAAAC,EAAAlmD,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA4nD,GAAA,cAAAA,EAAA1nD,KAAA0nD,EAAAznD,MAAA,UAAiCknD,EAAjCM,EAAAp0D,OAAA,QAAAmqB,IAAAiqC,EAAA,GAAAA,EAAA,GAAgD,GACvEvoD,GAD2EA,EAApDuoD,EAAAp0D,OAAA,QAAAmqB,IAAAiqC,EAAA,GAAAA,EAAA,GAA8D,OAChElzD,EAAKjF,MAAM4P,QADT,CAAAwoD,EAAAznD,KAAA,eAAAynD,EAAAh3C,OAAA,SAGd,MAHc,YAKjBiW,EAAWpyB,EAAKiyB,kBAAkB3Z,MACxB8Z,EAAS6hB,QAAQ77B,GANV,CAAA+6C,EAAAznD,KAAA,gBAOfonD,GAAeD,EAAAzgC,EAAS6hB,SAAQ77B,GAAjBrL,MAAA8lD,EAAAp4D,OAAA4/B,EAAA,EAAA5/B,CAAgCm4D,IAEjD91C,EAAW,KACXi2C,EAAW,KAVMI,EAAA1nD,KAAA,GAAA0nD,EAAAznD,KAAA,GAgBT8P,QAAQqD,IAAI,CACpB7e,EAAKjF,MAAMse,KAAK0C,IAAIq3C,cACpBN,EAAaO,YAAY,CAAEtsD,KAAM4D,MAlBhB,QAAAqoD,EAAAG,EAAA1kD,KAAAwkD,EAAAx4D,OAAAsyB,EAAA,EAAAtyB,CAAAu4D,EAAA,GAcjBl2C,EAdiBm2C,EAAA,GAejBF,EAfiBE,EAAA,GAAAE,EAAAznD,KAAA,iBAAAynD,EAAA1nD,KAAA,GAAA0nD,EAAAlmC,GAAAkmC,EAAA,sBAwBjBr2C,IAAYi2C,EAxBK,CAAAI,EAAAznD,KAAA,gBAAAynD,EAAAh3C,OAAA,SAyBZnc,EAAKuP,iBAAiBvP,EAAKuP,iBAAiBuN,EAAU,GAAG/U,MAAMgrD,GAAW,IAzB9D,eAAAI,EAAAh3C,OAAA,SA6BhBnc,EAAK+L,MAAM,IA7BK,yBAAAonD,EAAAtmD,SAAA8lD,EAAA73D,KAAA,cA7vHN,gBAAAw4D,EAAAC,GAAA,OAAAb,EAAA3lD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA6xHnBokD,uBA7xHmB,eAAAsU,EAAA/4D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6xHM,SAAAsoD,EAAOrhC,EAAUshC,EAAaC,EAAkB9wD,EAAU+wD,GAA1D,IAAAC,EAAA/2C,EAAA,OAAAyO,EAAAtwB,EAAAsQ,KAAA,SAAAuoD,GAAA,cAAAA,EAAAroD,KAAAqoD,EAAApoD,MAAA,cAAAooD,EAAAroD,KAAA,EAAAqoD,EAAApoD,KAAA,EASE1L,EAAKjF,MAAMse,KAAK0C,IAAIq3C,cATtB,OASft2C,EATeg3C,EAAArlD,MAWVolD,EAAAzhC,EAAS6hB,SACjBiL,uBADQnyC,MAAA8mD,EAAA,CACeH,GADfjyD,OAAAhH,OAAA4/B,EAAA,EAAA5/B,CAC+Bk5D,KACvC1tC,KAAK,CACJlf,KAAM2sD,EACN52C,aAIDi3C,GAAG,kBAAmB,SAAUpxD,GACjC7H,KAAK0iB,UAAL,yCAAA/b,OAAwDkB,IACxDixD,MACCI,KAAK,eAAgB,SAAUC,EAAoBC,GACpDp5D,KAAK0iB,UAAU,iCAAkC02C,GACjDN,EAAiBM,KAxBEJ,EAAApoD,KAAA,gBAAAooD,EAAAroD,KAAA,EAAAqoD,EAAA7mC,GAAA6mC,EAAA,SA2BrB9zD,EAAKwd,UAALs2C,EAAA7mC,IACApqB,EAAS,KAADixD,EAAA7mC,IA5Ba,yBAAA6mC,EAAAjnD,SAAA4mD,EAAA34D,KAAA,YA7xHN,gBAAAq5D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,EAAAzmD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA6zHnB05D,0BAA4B,SAAAC,GAC1B,IAAKz0D,EAAKjF,MAAMse,KAAKkX,MAAMmkC,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgBlzD,OAAOgzD,EAAW,iCAGtC,IAAI1c,EAAI0c,EAAUvgD,MAAM,EAAG,IACvBgd,EAAI,KAAKzvB,OAAOgzD,EAAUvgD,MAAM,GAAI,MACpC5O,EAAI,KAAK7D,OAAOgzD,EAAUvgD,MAAM,IAAK,MAGzC,OAFA5O,EAAItF,EAAKjF,MAAMse,KAAKkX,MAAMqkC,YAAYtvD,GACjC,CAAC,GAAI,IAAI0pB,SAAS1pB,KAAIA,GAAK,IACzB,CACLyyC,EAAGA,EACH7mB,EAAGA,EACH5rB,EAAGA,IA30HYxK,KA+0HnB+5D,gCAAkC,SAACC,EAAO9+B,EAAS++B,EAAmB3/B,GACpE,OAAOpF,EAAcglC,aACnB,CAAC,UAAW,UAAW,UAAW,SAClC,CAACF,EAAO1/B,EAAiBY,EAASi/B,mBAASF,MAl1H5Bj6D,KAs1HnBo6D,oBAt1HmB,eAAAC,EAAA16D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAs1HG,SAAAiqD,EAAO1B,GAAP,IAAA2B,EAAAC,EAAA,OAAA/pC,EAAAtwB,EAAAsQ,KAAA,SAAAgqD,GAAA,cAAAA,EAAA9pD,KAAA8pD,EAAA7pD,MAAA,cACd2pD,EAAer1D,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,aAD/CylD,EAAA7pD,KAAA,EAEF1L,EAAK0xC,YAAL,GAAAjwC,OAAoB4zD,EAAajoB,UAAUooB,OAA3C,iBAAA/zD,OAAiEiyD,EAAjE,WAAAjyD,OAAsF4zD,EAAa18C,OAAO88C,OAAS,KAAM,CACzIC,QAAS,CACPC,YAAaN,EAAa18C,OAAOosC,UAJjB,YAEduQ,EAFcC,EAAA9mD,QAQT6mD,EAAIpwD,KARK,CAAAqwD,EAAA7pD,KAAA,eAAA6pD,EAAAp5C,OAAA,SASXm5C,EAAIpwD,MATO,cAAAqwD,EAAAp5C,OAAA,SAYb,MAZa,wBAAAo5C,EAAA1oD,SAAAuoD,EAAAt6D,SAt1HH,gBAAA86D,GAAA,OAAAT,EAAApoD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAq2HnB+6D,iBAr2HmB,eAAAC,EAAAr7D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAq2HA,SAAA4qD,EAAOz9C,EAAcF,EAAYw6C,EAAckC,EAAOjyD,EAAU+wD,GAAhE,IAAAoC,EAAA5jC,EAAA2iC,EAAArB,EAAA19B,EAAAigC,EAAAxB,EAAAyB,EAAAne,EAAA7mB,EAAA5rB,EAAA,OAAAimB,EAAAtwB,EAAAsQ,KAAA,SAAA4qD,GAAA,cAAAA,EAAA1qD,KAAA0qD,EAAAzqD,MAAA,UACX0mB,EAAWpyB,EAAKiyB,kBAAkB3Z,GADvB,CAAA69C,EAAAzqD,KAAA,eAIf7I,EAAS,KAAM,sBAJAszD,EAAAh6C,OAAA,UAKR,GALQ,UAQZiW,EAAS6hB,QAAQ77B,GARL,CAAA+9C,EAAAzqD,KAAA,eASf7I,EAAS,KAAM,oBATAszD,EAAAh6C,OAAA,UAUR,GAVQ,cAaX44C,GAAoBiB,EAAA5jC,EAAS6hB,SAAQ77B,GAAjBrL,MAAAipD,EAAAv7D,OAAA4/B,EAAA,EAAA5/B,CAAgCm4D,IAAcwD,YAbvDD,EAAA1qD,KAAA,EAgBTioD,EAAc1zD,EAAKjF,MAAM4P,QACzBqrB,EAAUh2B,EAAKuuB,uBACf0nC,EAAgBj2D,EAAK60D,gCAAgCC,EAAO9+B,EAAS++B,EAAmB3iC,EAASqR,UAlBxF0yB,EAAAzqD,KAAA,GAoBS1L,EAAKjF,MAAMse,KAAK0C,IAAIs6C,SAASC,KACnD,KAAOL,EAAcj4C,SAAS,OAC9B01C,GAtBa,eAoBTe,EApBS0B,EAAA1nD,KAAAynD,EAyBKl2D,EAAKw0D,0BAA0BC,GAA3C1c,EAzBOme,EAyBPne,EAAG7mB,EAzBIglC,EAyBJhlC,EAAG5rB,EAzBC4wD,EAyBD5wD,EAEdtF,EAAKgZ,0BAA0BV,EAAcF,EAAYw6C,EAAanxD,OAAO,CAACqzD,EAAO/c,EAAG7mB,EAAG5rB,IAAKzC,EAAU+wD,GA3B3FuC,EAAAh6C,OAAA,UA6BR,GA7BQ,eAAAg6C,EAAA1qD,KAAA,GAAA0qD,EAAAlpC,GAAAkpC,EAAA,SA+BftzD,EAAS,KAADszD,EAAAlpC,IA/BOkpC,EAAAh6C,OAAA,UAgCR,GAhCQ,yBAAAg6C,EAAAtpD,SAAAkpD,EAAAj7D,KAAA,aAr2HA,gBAAAy7D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA/oD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAy4HnB+7D,8BAz4HmB,eAAAC,EAAAr8D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAy4Ha,SAAA4rD,EAAOz+C,EAAcjK,EAAc2oD,EAAYC,EAAUlE,GAAzD,IAAA3gC,EAAA8kC,EAAArrD,EAAA,OAAA0f,EAAAtwB,EAAAsQ,KAAA,SAAA4rD,GAAA,cAAAA,EAAA1rD,KAAA0rD,EAAAzrD,MAAA,UACxB0mB,EAAWpyB,EAAKiyB,kBAAkB3Z,GADV,CAAA6+C,EAAAzrD,KAAA,eAAAyrD,EAAAh7C,OAAA,UAIrB,GAJqB,cASxB+6C,EAAc,CAClBF,aACA9xD,KAAM+xD,EACNnrD,MAAOuC,EACPmlB,GAAIpB,EAASqR,SACb2zB,MAAOhrD,SAAS2mD,IAdYoE,EAAAzrD,KAAA,EAoBb1L,EAAKjF,MAAMs8D,qBAAqBC,QAAQJ,GApB3B,cAoBxBrrD,EApBwBsrD,EAAA1oD,KAAA0oD,EAAAh7C,OAAA,SAsBvBtQ,GAtBuB,wBAAAsrD,EAAAtqD,SAAAkqD,EAAAj8D,SAz4Hb,gBAAAy8D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAb,EAAA/pD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAk6HnB45C,sBAl6HmB,eAAAkjB,EAAAn9D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAk6HK,SAAA0sD,EAAOl1D,GAAP,OAAA4oB,EAAAtwB,EAAAsQ,KAAA,SAAAusD,GAAA,cAAAA,EAAArsD,KAAAqsD,EAAApsD,MAAA,cAAAosD,EAAApsD,KAAA,EACR,IAAI8P,QAAJ,eAAAu8C,EAAAt9D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAA6sD,EAAOp8C,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAA0sD,GAAA,cAAAA,EAAAxsD,KAAAwsD,EAAAvsD,MAAA,OACxB1L,EAAKjF,MAAMse,KAAK0C,IAAI24B,sBAAsB/xC,EAAM,SAACqZ,EAAKnQ,GAChDmQ,GACFH,EAAOG,GAETJ,EAAQ/P,KALc,wBAAAosD,EAAAprD,SAAAmrD,EAAAl9D,SAAZ,gBAAAo9D,EAAAC,GAAA,OAAAJ,EAAAhrD,MAAAjS,KAAAkS,YAAA,IADQ,cAAA8qD,EAAA37C,OAAA,SAAA27C,EAAArpD,MAAA,wBAAAqpD,EAAAjrD,SAAAgrD,EAAA/8D,SAl6HL,gBAAAs9D,GAAA,OAAAR,EAAA7qD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA66HnBu9D,iCA76HmB,eAAAC,EAAA79D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA66HgB,SAAAotD,EAAOC,EAAKC,EAAU51D,EAAU+wD,GAAhC,IAAAl7C,EAAAggD,EAAA7sD,EAAA8sD,EAAA,OAAAptC,EAAAtwB,EAAAsQ,KAAA,SAAAqtD,GAAA,cAAAA,EAAAntD,KAAAmtD,EAAAltD,MAAA,cAE7BgN,EAAkB,KAFWkgD,EAAAntD,KAAA,EAAAmtD,EAAAltD,KAAA,EAKN1L,EAAKjF,MAAMs8D,qBAAqBwB,sBAAsB,CAAEL,MAAKC,aALvD,OAKzBC,EALyBE,EAAAnqD,KAM/BiK,EAAkBggD,EAAW5gD,OANE8gD,EAAAltD,KAAA,uBAAAktD,EAAAntD,KAAA,EAAAmtD,EAAA3rC,GAAA2rC,EAAA,SAU/B/1D,EAAS,MAAM,GAVgB+1D,EAAAz8C,OAAA,UAWxB,GAXwB,WAc5BzD,EAd4B,CAAAkgD,EAAAltD,KAAA,gBAgB/B7I,EAAS,MAAM,GAhBgB+1D,EAAAz8C,OAAA,UAiBxB,GAjBwB,eAyBjCy3C,EALM/nD,EAAK,CACTwqB,OAAQ,gBACR3d,oBAMIigD,EAAyBz5C,OAAO45C,YAAY,WAChD94D,EAAKjF,MAAMse,KAAK0C,IAAI24B,sBAAsBh8B,EAAiB,SAACsD,EAAKk4C,IAE1Dl4C,GAAOk4C,IACVh1C,OAAO65C,cAAcJ,GACrB9sD,EAAGiiC,UAAYomB,EACfroD,EAAGI,QAAU+P,GAAOk4C,EAAQjoD,OAAS,UAAY,QAEjDpJ,EAASgJ,EAAImQ,GAE2B,oBAA7BkD,OAAO85C,mBAChB95C,OAAO85C,kBAAkBntD,EAAI6M,EAAiB7M,EAAGI,OAAQ,UAI9D,KA3C8B2sD,EAAAz8C,OAAA,UA6C1B,GA7C0B,yBAAAy8C,EAAA/rD,SAAA0rD,EAAAz9D,KAAA,YA76HhB,gBAAAm+D,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAvrD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA69HnBu+D,+BA79HmB,eAAAC,EAAA7+D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA69Hc,SAAAouD,EAAOjhD,EAAcy8C,EAAmBlyD,EAAU+wD,GAAlD,IAAAxhC,EAAAshC,EAAAoB,EAAA9+B,EAAAigC,EAAAxB,EAAA+E,EAAAzhB,EAAA7mB,EAAA5rB,EAAA,OAAAimB,EAAAtwB,EAAAsQ,KAAA,SAAAkuD,GAAA,cAAAA,EAAAhuD,KAAAguD,EAAA/tD,MAAA,UACzB0mB,EAAWpyB,EAAKiyB,kBAAkB3Z,GADT,CAAAmhD,EAAA/tD,KAAA,eAI7B7I,EAAS,KAAM,sBAJc42D,EAAAt9C,OAAA,UAKtB,GALsB,cAAAs9C,EAAAhuD,KAAA,EASvBioD,EAAc1zD,EAAKjF,MAAM4P,QATF8uD,EAAA/tD,KAAA,EAUT0mB,EAAS6hB,QAAQylB,SAAShG,GAAavf,OAV9B,cAUvB2gB,EAVuB2E,EAAAhrD,KAWvBunB,EAAUh2B,EAAKuuB,uBACf0nC,EAAgBj2D,EAAK60D,gCAAgCC,EAAO9+B,EAAS++B,EAAmB3iC,EAASqR,UAZ1Eg2B,EAAA/tD,KAAA,GAcL1L,EAAKjF,MAAMse,KAAK0C,IAAIs6C,SAASC,KACnD,KAAOL,EAAcj4C,SAAS,OAC9B01C,GAhB2B,eAcvBe,EAduBgF,EAAAhrD,KAAA+qD,EAmBTx5D,EAAKw0D,0BAA0BC,GAA3C1c,EAnBqByhB,EAmBrBzhB,EAAG7mB,EAnBkBsoC,EAmBlBtoC,EAAG5rB,EAnBek0D,EAmBfl0D,EAEdtF,EAAKgZ,0BAA0BV,EAAc,yBAA0B,CAACo7C,EAAaqB,EAAmBhd,EAAG7mB,EAAG5rB,GAAIzC,EAAU+wD,GArB/F6F,EAAAt9C,OAAA,UAuBtB,GAvBsB,eAAAs9C,EAAAhuD,KAAA,GAAAguD,EAAAxsC,GAAAwsC,EAAA,SAyB7BznC,QAAQha,MAARyhD,EAAAxsC,IACApqB,EAAS,KAAD42D,EAAAxsC,IA1BqBwsC,EAAAt9C,OAAA,UA2BtB,GA3BsB,yBAAAs9C,EAAA5sD,SAAA0sD,EAAAz+D,KAAA,aA79Hd,gBAAA6+D,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAAvsD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA4/HnBi/D,kBA5/HmB,eAAAC,EAAAv/D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA4/HC,SAAA8uD,EAAO7kC,EAAiB8kC,EAAWC,EAAOC,EAAS50D,EAAOsvD,EAAOuF,EAAUrkC,GAA3E,IAAA0X,EAAA4sB,EAAAC,EAAAC,EAAA1wC,EAAA5kB,EAAA,OAAAqmB,EAAAtwB,EAAAsQ,KAAA,SAAAkvD,GAAA,cAAAA,EAAAhvD,KAAAgvD,EAAA/uD,MAAA,eACFud,IAAZ+M,EADc,CAAAykC,EAAA/uD,KAAA,eAAA+uD,EAAA/uD,KAAA,EAEK1L,EAAKjF,MAAMse,KAAK0C,IAAI2+C,aAFzB,OAEVhtB,EAFU+sB,EAAAhsD,KAGhBunB,EAAU5pB,SAASshC,GAHH,cAMZ4sB,EAAS,CACb,CAAEr9D,KAAM,OAAQoB,KAAM,UACtB,CAAEpB,KAAM,UAAWoB,KAAM,UACzB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,oBAAqBoB,KAAM,YAG/Bk8D,EAAS,CACb,CAAEt9D,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,WAAYoB,KAAM,YAGtBm8D,EAAa,CACjBG,QAAS,IACT19D,KAAMi9D,EACNlkC,QAASA,EACT4kC,kBAAmBxlC,GAGftL,EAAU,CACdqwC,QACAC,UACA50D,QACAsvD,QACAuF,YAGIn1D,EAAOgF,KAAKC,UAAU,CAC1B0wD,MAAO,CACLC,aAAcR,EACdS,OAAQR,GAEVS,YAAa,SACbV,OAAQE,EACR1wC,QAASA,IA3CO2wC,EAAAt+C,OAAA,SA8CX,IAAIX,QAAQ,SAACI,EAASC,GAC3B7b,EAAKjF,MAAMse,KAAK6c,gBAAgBjQ,KAAK,CACnCg1C,QAAS,MACT/6D,GAAIiN,KAAKg5B,MAAMnoB,WAAWk9C,UAAU,GACpC7kC,OAAQ,uBACR1d,OAAQ,CAACwhD,EAAOj1D,GAChB6B,KAAMozD,GACL,SAACniD,EAAOs9C,GACT,GAAIt9C,EACF,OAAO6D,EAAO7D,GAGhB4D,EAAQ05C,EAAI5nB,aA1DE,yBAAA+sB,EAAA5tD,SAAAotD,EAAAn/D,SA5/HD,gBAAAqgE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA1B,EAAAjtD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA2jInB6gE,WA3jImB,eAAAC,EAAAnhE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2jIN,SAAA0wD,EAAOC,EAAkBC,EAAQC,GAAjC,IAAAC,EAAAz2D,EAAA02D,EAAAC,EAAAzuB,EAAA1X,EAAA8kC,EAAAsB,EAAAC,EAAAvH,EAAAiG,EAAAuB,EAAAlC,EAAAQ,EAAA2B,EAAAjC,EAAAxwC,EAAAqwC,EAAAE,EAAAn1D,EAAAs3D,EAAAxvD,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAkxD,GAAA,cAAAA,EAAAhxD,KAAAgxD,EAAA/wD,MAAA,UAAsDuwD,EAAtDO,EAAA19D,OAAA,QAAAmqB,IAAAuzC,EAAA,GAAAA,EAAA,GAAmE,EAAGh3D,EAAtEg3D,EAAA19D,OAAA,QAAAmqB,IAAAuzC,EAAA,GAAAA,EAAA,GAA8E,KACnFN,EAAel8D,EAAKiyB,kBAAkB6pC,GACtCK,EAAkBn8D,EAAKiyB,kBAAkB+pC,GAE1CE,GAAiBC,EAJX,CAAAM,EAAA/wD,KAAA,eAAA+wD,EAAAtgD,OAAA,UAKF,GALE,cAAAsgD,EAAA/wD,KAAA,EAQU1L,EAAKjF,MAAMse,KAAK0C,IAAI2gD,IAAIC,QARlC,UAQLjvB,EARK+uB,EAAAhuD,KASPunB,EAAU5pB,SAASshC,GAEjBotB,EAAe,CACnB,CAAE79D,KAAM,OAAQoB,KAAM,UACtB,CAAEpB,KAAM,UAAWoB,KAAM,UACzB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,oBAAqBoB,KAAM,YAG/B+9D,EAAep8D,EAAK8P,gBAAgB,CAAC,SAAUgsD,IAE/CO,EAASnwD,KAAK0wD,OAAM,IAAIzvD,MAAOY,UAAY,IAAO,OAC5CquD,EAAaS,YArBd,CAAAJ,EAAA/wD,KAAA,gBAAA+wD,EAAA/wD,KAAA,GAqBkCwwD,EAAajoB,QAAQmoB,EAAaS,aAAad,GAAQ5nB,OArBzF,QAAAsoB,EAAAxvC,GAAAwvC,EAAAhuD,KAAAguD,EAAA/wD,KAAA,iBAAA+wD,EAAAxvC,GAqBkG,KArBlG,QAqBP6nC,EArBO2H,EAAAxvC,GAsBPgvC,EAAa,IACfnH,EAAQ1oD,SAAS0oD,GAAS1oD,SAAS6vD,IAErCnH,EAAQA,EAAM92C,WAER+8C,EAASqB,EAAa/9D,KACtBi+D,EAAaF,EAAaE,WAE1BlC,EAAU+B,EAAgB14B,SAC1Bm3B,EAAoBsB,EAAaz4B,SAEjC84B,EAAaH,EAAan/D,MAAQ6+D,EAElCxB,EAAS,CACbtkC,UACA/4B,KAAMs/D,EACN3B,oBACAD,QAASyB,EAAazB,QAAQ38C,YAAc,KAG1C8L,EAAU,GA1CH2yC,EAAAppB,GA4CHipB,EA5CGG,EAAA/wD,KA6CJ,OA7CI+wD,EAAAppB,GAAA,2BA8CD8mB,EAAQ4B,EACR1B,EAAWgC,EAEjB72D,EAAQA,GAASxF,EAAK2uD,aAAa3uD,EAAK+L,MAAM,GAAG+wD,IAAI,KAAKtwD,MAAM,IAChEsd,EAAU,CACRtkB,QACAsvD,QACAqF,QACAC,UACAC,YAvDKoC,EAAAtgD,OAAA,2BA2DP2N,EAAU,CACRiyC,SACAjH,QACAuH,SACAjC,UACA2C,SAAS,GAhEJN,EAAAtgD,OAAA,2BAqELjX,EAAOgF,KAAKC,UAAU,CAC1BmwD,SACAxwC,UACA+wC,MAAO,CACLE,SACAD,gBAEFE,YAAa,WA5EJyB,EAAAtgD,OAAA,SAiFJ,IAAIX,QAAQ,SAACI,EAASC,GAC3B7b,EAAKjF,MAAMse,KAAK6c,gBAAgBjQ,KAAK,CACnClf,KAAMg1D,EACNd,QAAS,MACTtiD,OAAQ,CAACojD,EAAQ72D,GACjBmxB,OAAQ,uBACRn2B,GAAIiN,KAAKg5B,MAAMnoB,WAAWk9C,UAAU,IACnC,SAACljD,EAAOglD,GACT,GAAIhlD,GAAUglD,GAAYA,EAAShlD,MACjC,OAAO4D,EAAQ,MACV,GAAIohD,GAAYA,EAAStvB,OAAQ,CACtC,IAAMimB,EAAmB3zD,EAAKw0D,0BAA0BwI,EAAStvB,QAGjE,OAFAimB,EAAiBmB,MAAQA,EACzBnB,EAAiB0I,OAASA,EACnBzgD,EAAQ+3C,SA/FV,yBAAA8I,EAAA5vD,SAAAgvD,EAAA/gE,SA3jIM,gBAAAmiE,EAAAC,EAAAC,GAAA,OAAAvB,EAAA7uD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAgqInB+6D,iBAhqImB,eAAAuH,EAAA3iE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAgqIA,SAAAkyD,EAAOvB,EAAkBC,EAAQC,EAAqB5jD,EAAYw6C,EAAc/vD,EAAU+wD,GAA1F,IAAAsI,EAAAC,EAAAxI,EAAA0I,EAAAvH,EAAA/c,EAAA7mB,EAAA5rB,EAAAg4D,EAAAC,EAAAC,EAAA7kD,EAAA8kD,EAAAzwD,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAmyD,GAAA,cAAAA,EAAAjyD,KAAAiyD,EAAAhyD,MAAA,UAAA+xD,EAAA3+D,OAAA,QAAAmqB,IAAAw0C,EAAA,GAAAA,EAAA,GAA8H,KAEzIvB,EAAel8D,EAAKiyB,kBAAkB6pC,GACtCK,EAAkBn8D,EAAKiyB,kBAAkB+pC,GAE1CE,GAAiBC,EALL,CAAAuB,EAAAhyD,KAAA,eAMf7I,EAAS,KAAM,sBANA66D,EAAAvhD,OAAA,UAOR,GAPQ,cAAAuhD,EAAAhyD,KAAA,EAUc1L,EAAK27D,WAAWG,EAAkBC,EAAQC,GAVxD,QAUXrI,EAVW+J,EAAAjvD,OAaP4tD,EAA2B1I,EAA3B0I,OAAQvH,EAAmBnB,EAAnBmB,MAAO/c,EAAY4b,EAAZ5b,EAAG7mB,EAASyiC,EAATziC,EAAG5rB,EAAMquD,EAANruD,EACvBg4D,EAAe,CAACjB,EAAQ/2D,EAAGyyC,EAAG7mB,GAE9BqsC,EAAYpB,EAAgBwB,eAAe3jD,KAAK,SAAA4jD,GAAC,OAAIA,EAAE3gE,OAASmb,IAChEolD,GAAWD,GAAYA,EAAU3pB,OAAO55B,KAAK,SAAAxS,GAAC,MAAe,UAAXA,EAAEvK,QACrDmB,MAAMgO,SAAS0oD,KAAW0I,GAC7BF,EAAaO,QAAQ/I,GAEjBn8C,EAASi6C,EAAanxD,OAAO67D,GACnCt9D,EAAKgZ,0BAA0BgjD,EAAqB5jD,EAAYO,EAAQ9V,EAAU+wD,IAElF/wD,EAAS,KAAM,oBAxBA,yBAAA66D,EAAA7wD,SAAAwwD,EAAAviE,SAhqIA,gBAAAgjE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAhB,EAAArwD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA4rInBujE,aA5rImB,eAAAC,EAAA7jE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA4rIJ,SAAAozD,EAAOjmD,EAAc8c,EAAiB2/B,EAAmBlyD,EAAU+wD,GAAnE,IAAAkH,EAAA0D,EAAAxoC,EAAAwkC,EAAApoC,EAAAshC,EAAAoB,EAAAhrC,EAAA20C,EAAA,OAAAlzC,EAAAtwB,EAAAsQ,KAAA,SAAAmzD,GAAA,cAAAA,EAAAjzD,KAAAizD,EAAAhzD,MAAA,cAEPovD,EAAe,CACnB,CAAE79D,KAAM,OAAQoB,KAAM,UACtB,CAAEpB,KAAM,UAAWoB,KAAM,UACzB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,oBAAqBoB,KAAM,YAG/BmgE,EAAkB,CACtB,CAAEvhE,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,OAAQoB,KAAM,WACtB,CAAEpB,KAAM,oBAAqBoB,KAAM,UAZxBqgE,EAAAhzD,KAAA,EAeS1L,EAAKjF,MAAMse,KAAK0C,IAAI2+C,aAf7B,UAeP1kC,EAfO0oC,EAAAjwD,KAiBP+rD,EAAa,CACjBxkC,UACA2kC,QAAS,IACT19D,KAAMqb,EACNsiD,kBAAmBxlC,GAGfhD,EAAWpyB,EAAKiyB,kBAAkB3Z,GAxB3B,CAAAomD,EAAAhzD,KAAA,gBA2BX7I,EAAS,KAAM,sBA3BJ67D,EAAAviD,OAAA,UA4BJ,GA5BI,eA+BTu3C,EAAc1zD,EAAKjF,MAAM4P,QA/BhB+zD,EAAAhzD,KAAA,GAgCK0mB,EAAS6hB,QAAQylB,SAAShG,GAAavf,OAhC5C,QAgCT2gB,EAhCS4J,EAAAjwD,MAiCTqb,EAAU,IACNgrC,MAAQA,EAChBhrC,EAAQ/iB,KAAO2sD,EACf5pC,EAAQirC,kBAAoBA,EAEtB0J,EAAav0D,KAAKC,UAAU,CAChC0wD,MAAO,CACLC,eACA0D,mBAEFlE,OAAQE,EACRQ,YAAa,kBACblxC,YAKF9pB,EAAKjF,MAAMse,KAAK6c,gBAAgBjQ,KAC9B,CACEg1C,QAAS,MACT/6D,GAAI,aACJ6G,KAAM2sD,EACNr9B,OAAQ,uBACR1d,OAAQ,CAAC+6C,EAAa+K,IAExB,SAACzmD,EAAOglD,GACN,GAAIhlD,GAAUglD,GAAYA,EAAShlD,MACjC,OAAOnV,EAAS,KAAMmV,GACjB,GAAIglD,GAAYA,EAAStvB,OAAQ,CACtC,IAAMimB,EAAmB3zD,EAAKw0D,0BAA0BwI,EAAStvB,QACzDqK,EAAY4b,EAAZ5b,EAAG7mB,EAASyiC,EAATziC,EAAG5rB,EAAMquD,EAANruD,EAEdtF,EAAKgZ,0BAA0BV,EAAc,yBAA0B,CAACo7C,EAAaqB,EAAmBhd,EAAG7mB,EAAG5rB,GAAIzC,EAAU+wD,MAjErH,yBAAA8K,EAAA7xD,SAAA0xD,EAAAzjE,SA5rII,gBAAA6jE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAvxD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAmwInBkkE,mBAnwImB,eAAAC,EAAAxkE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAmwIE,SAAA+zD,EAAO5mD,EAAc6mD,EAAcC,GAAnC,IAAAC,EAAAC,EAAA5yD,EAAA6yD,EAAA,OAAAh0C,EAAAtwB,EAAAsQ,KAAA,SAAAi0D,GAAA,cAAAA,EAAA/zD,KAAA+zD,EAAA9zD,MAAA,cAAA8zD,EAAA9zD,KAAA,EAIT8P,QAAQqD,IAAI,CACpB7e,EAAKwrB,gBAAgBlT,EAAc8mD,GAAY,GAC/Cp/D,EAAKy/D,aAAannD,EAAc6mD,EAAcC,KAN7B,cAAAC,EAAAG,EAAA/wD,KAAA6wD,EAAA7kE,OAAAsyB,EAAA,EAAAtyB,CAAA4kE,EAAA,GAEjB3yD,EAFiB4yD,EAAA,GAGjBC,EAHiBD,EAAA,GAQnBt/D,EAAKwd,UAAU,qBAAsBlF,EAActY,EAAK+L,MAAMwzD,GAAWv3D,UAAWhI,EAAK+L,MAAMW,GAAS1E,UAAYu3D,GAAav/D,EAAK+L,MAAMwzD,GAAWG,IAAI1/D,EAAK+L,MAAMW,KARnJ8yD,EAAArjD,OAAA,SASZojD,GAAav/D,EAAK+L,MAAMwzD,GAAWG,IAAI1/D,EAAK+L,MAAMW,KATtC,wBAAA8yD,EAAA3yD,SAAAqyD,EAAApkE,SAnwIF,gBAAA6kE,EAAAC,EAAAC,GAAA,OAAAZ,EAAAlyD,MAAAjS,KAAAkS,YAAA,GAAAlS,KA8wInB2kE,aA9wImB,eAAAK,EAAArlE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA8wIJ,SAAA40D,EAAOznD,EAAc6mD,EAAcC,GAAnC,OAAA7zC,EAAAtwB,EAAAsQ,KAAA,SAAAy0D,GAAA,cAAAA,EAAAv0D,KAAAu0D,EAAAt0D,MAAA,UACR4M,GAAiB6mD,GAAiBC,EAD1B,CAAAY,EAAAt0D,KAAA,eAAAs0D,EAAA7jD,OAAA,UAEJ,GAFI,cAIbnc,EAAKwd,UAAU,eAAgBlF,EAAc6mD,EAAcC,GAJ9CY,EAAAt0D,KAAA,EAKA1L,EAAK6rB,oBAChBvT,EAAc,YAAa,CAAC8mD,EAAYD,IAN7B,cAAAa,EAAA7jD,OAAA,SAAA6jD,EAAAvxD,MAAA,wBAAAuxD,EAAAnzD,SAAAkzD,EAAAjlE,SA9wII,gBAAAmlE,EAAAC,EAAAC,GAAA,OAAAL,EAAA/yD,MAAAjS,KAAAkS,YAAA,GAAAlS,KAuxInBslE,mCAAqC,SAAC9nD,EAAcF,EAAYO,EAAQnT,EAAO3C,EAAU+wD,EAAkByM,GACzGrgE,EAAKjF,MAAMie,0BAA0BV,EAAcF,EAAYO,EAAQnT,EAAO,SAACqG,GACrD,oBAAbhJ,GACTA,EAASgJ,IAEV,SAACA,GAC8B,oBAArB+nD,GACTA,EAAiB/nD,IAElB,KAAMw0D,IAhyIQvlE,KAkyInBke,0BAA4B,SAACV,EAAcF,EAAYO,EAAQ9V,EAAU+wD,GAA0E,IAAxDyM,EAAwDrzD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAA/C,KAAMszD,EAAyCtzD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GAAvBuzD,EAAuBvzD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACxI,IACEhN,EAAKjF,MAAMie,0BAA0BV,EAAcF,EAAYO,EAAQ,KAAM,SAAC9M,GACpD,oBAAbhJ,GACTA,EAASgJ,IAEV,SAACA,GAC8B,oBAArB+nD,GACTA,EAAiB/nD,IAElB,KAAMw0D,EAAQC,EAAUC,GAC3B,MAAOvoD,GACPnV,EAAS,KAAMmV,KA9yIAld,KAizInB0lE,aAAe,SAACloD,EAAc3Q,EAAS9E,EAAU+wD,GAC/C5zD,EAAKjF,MAAMie,0BAA0BV,EAAc,UAAW,CAC5D3Q,EACA3H,EAAKjF,MAAMse,KAAKkX,MAAMkwC,iBAAiB,MACtC,KAAM,SAAC50D,GACgB,oBAAbhJ,GACTA,EAASgJ,IAEV,SAACA,GAC8B,oBAArB+nD,GACTA,EAAiB/nD,MA3zIJ/Q,KA+zInB4lE,wBAA0B,SAACpoD,EAAc3Q,EAAS43D,EAAW18D,EAAU+wD,GACrE5hC,QAAQqc,IAAI,0BAA0B/1B,EAAc3Q,EAAS43D,GAC7Dv/D,EAAKjF,MAAMie,0BAA0BV,EAAc,UAAW,CAC5D3Q,EACA3H,EAAK2uD,aAAa4Q,IACjB,KAAM,SAAC1zD,GACgB,oBAAbhJ,GACTA,EAASgJ,IAEV,SAACA,GAC8B,oBAArB+nD,GACTA,EAAiB/nD,MA10IJ/Q,KA80InB6lE,YAAc,SAACroD,EAAc3Q,EAAS9E,EAAU+wD,GAC9C5zD,EAAKjF,MAAMie,0BAA0BV,EAAc,UAAW,CAC5D3Q,EACA3H,EAAKjF,MAAMse,KAAKkX,MAAMkwC,iBAAiB,OACtC,KAAM,SAAC50D,GACgB,oBAAbhJ,GACTA,EAASgJ,IAEV,SAACA,GAC8B,oBAArB+nD,GACTA,EAAiB/nD,MAx1IJ/Q,KA41InB8lE,aA51ImBnmE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA41IJ,SAAA01D,IAAA,IAAA3uC,EAAAznB,EAAAq2D,EAAAx8D,EAAAynD,EAAAgV,EAAA/zD,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAy1D,GAAA,cAAAA,EAAAv1D,KAAAu1D,EAAAt1D,MAAA,cAAOwmB,EAAP6uC,EAAAjiE,OAAA,QAAAmqB,IAAA83C,EAAA,GAAAA,EAAA,GAAiB,KAAKt2D,EAAtBs2D,EAAAjiE,OAAA,QAAAmqB,IAAA83C,EAAA,GAAAA,EAAA,GAAsC,KAC/CD,EAAe,KACfx8D,EAAgB,KACf4tB,IACHA,EAAYlyB,EAAKuuB,wBAJNyyC,EAAAt1D,KAAA,EAMM1L,EAAK4rD,eAAe15B,GAN1B,YAMP65B,EANOiV,EAAAvyD,QAODs9C,EAAKkV,UAPJ,CAAAD,EAAAt1D,KAAA,SAQXqgD,EAAKkV,UAAUliE,QAAS,SAAAmiE,GACtB,IAAMC,EAAWnhE,EAAK+L,MAAMm1D,EAAQt9B,KACpC,GAAIu9B,EAAS,CACX,IAAMr1D,EAAQo1D,EAAQ72C,YAChBy2C,IAAgBA,EAAar0D,GAAG00D,IAAgB12D,IAAmBA,EAAgBqB,KACvFg1D,EAAeK,EACf78D,EAAgBwH,MAdXk1D,EAAAt1D,KAAA,qBAkBFjB,EAlBE,CAAAu2D,EAAAt1D,KAAA,gBAAAs1D,EAAAt1D,KAAA,GAmBL1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAA22D,EAAA3mE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+C,SAAAk2D,EAAOv1D,GAAP,IAAAtH,EAAA28D,EAAA,OAAA51C,EAAAtwB,EAAAsQ,KAAA,SAAA+1D,GAAA,cAAAA,EAAA71D,KAAA61D,EAAA51D,MAAA,cAC7ClH,EAAciG,EAAgBqB,GADew1D,EAAA51D,KAAA,EAE5B1L,EAAKo8B,aAAa53B,GAFU,QAE7C28D,EAF6CG,EAAA7yD,OAGf,OAApB0yD,EAAStT,SAClBiT,IAAgBA,EAAar0D,GAAG00D,EAAStT,UAC5CiT,EAAeK,EAAStT,OACxBvpD,EAAgBwH,IAN+B,wBAAAw1D,EAAAz0D,SAAAw0D,EAAAvmE,SAA/C,gBAAAymE,GAAA,OAAAH,EAAAr0D,MAAAjS,KAAAkS,YAAA,IAnBK,eAAAg0D,EAAA7kD,OAAA,SA8BN7X,GA9BM,yBAAA08D,EAAAn0D,SAAAg0D,EAAA/lE,SA51IIA,KA43InBo/B,wBA53ImB,eAAAsnC,EAAA/mE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA43IO,SAAAs2D,EAAOnpD,EAAa8mD,GAApB,IAAA3gE,EAAA2Z,EAAA+T,EAAA/R,EAAAggB,EAAAsnC,EAAA10D,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAo2D,GAAA,cAAAA,EAAAl2D,KAAAk2D,EAAAj2D,MAAA,UAA+BjN,EAA/BijE,EAAA5iE,OAAA,QAAAmqB,IAAAy4C,EAAA,GAAAA,EAAA,GAAwC,KAAKtpD,EAA7CspD,EAAA5iE,OAAA,QAAAmqB,IAAAy4C,EAAA,GAAAA,EAAA,GAAwD,cAC3EtC,EADmB,CAAAuC,EAAAj2D,KAAA,eAAAi2D,EAAAxlD,OAAA,UAEf,GAFe,UAMlBgQ,EANkB,wBAAA1qB,OAMsB6W,EANtB,KAAA7W,OAMsC29D,EANtC,KAAA39D,OAMoDhD,KACtE2b,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QARlB,CAAAujE,EAAAj2D,KAAA,eAAAi2D,EAAAxlD,OAAA,SASfnc,EAAK+L,MAAMqO,IATI,cAAAunD,EAAAj2D,KAAA,GAYE1L,EAAK6rB,oBAAoBvT,EAAcF,EAAY,CAACgnD,IAZtD,aAYpBhlC,EAZoBunC,EAAAlzD,MAAA,CAAAkzD,EAAAj2D,KAAA,YAclBjN,IACF27B,EAAgBp6B,EAAKuP,iBAAiB6qB,EAAe37B,KAEvD27B,EAAgBp6B,EAAK+L,MAAMquB,IAERh8B,QAnBG,CAAAujE,EAAAj2D,KAAA,gBAAAi2D,EAAAxlD,OAAA,SAoBbnc,EAAKytB,8BAA8BtB,EAAeiO,EAAe,KApBpD,eAAAunC,EAAAxlD,OAAA,SAuBjBnc,EAAK+L,MAAM,IAvBM,yBAAA41D,EAAA90D,SAAA40D,EAAA3mE,SA53IP,gBAAA8mE,EAAAC,GAAA,OAAAL,EAAAz0D,MAAAjS,KAAAkS,YAAA,GAAAlS,KAq5InBgnE,oBAr5ImB,eAAAC,EAAAtnE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAq5IG,SAAA62D,EAAOC,EAAW7nC,GAAlB,IAAA8nC,EAAAv3D,EAAAwb,EAAAg8C,EAAArpC,EAAAspC,EAAAhtB,EAAAitB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAj2D,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA23D,GAAA,cAAAA,EAAAz3D,KAAAy3D,EAAAx3D,MAAA,UAAgCw2D,EAAhCe,EAAAnkE,OAAA,QAAAmqB,IAAAg6C,EAAA,GAAAA,EAAA,GAA+C,KAAKt4D,EAApDs4D,EAAAnkE,OAAA,QAAAmqB,IAAAg6C,EAAA,GAAAA,EAAA,GAA4D,KAE5E98C,EAAQnmB,EAAK+L,MAAM,GAEjBo2D,EAAgBniE,EAAK8P,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,YAC/DgpB,EAAc94B,EAAK8P,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,kBAAkBmyD,IALjE,CAAAiB,EAAAx3D,KAAA,eAAAw3D,EAAA/mD,OAAA,SAOX,CACLgK,QACAg9C,eAAenjE,EAAK+L,MAAM,KATV,UAcI/L,EAAKiyB,kBAAkBkwC,EAAcr2D,OAdzC,CAAAo3D,EAAAx3D,KAAA,gBAAAw3D,EAAAx3D,KAAA,GAgBZ1L,EAAKjF,MAAMqnC,aAAa+/B,EAAcr2D,MAAOq2D,EAAcx6D,QAASw6D,EAAc9/B,KAhBtE,eAAA6gC,EAAAx3D,KAAA,GAmBG8P,QAAQqD,IAAI,CACjCqjD,EAAiBliE,EAAK8uD,qBAAqBoT,EAAe,IAAOv3D,EAAU3K,EAAKwrB,gBAAgB22C,EAAcr2D,MAAMnB,GAAQ,GAAS3K,EAAK+L,MAAM,GAChJ/L,EAAKojE,oBAAoBjB,EAAcr2D,OACvCnB,EAAU3K,EAAKomC,0BAA0BtN,EAAY77B,KAAK,mBAAmB,CAAC0N,IAAY3K,EAAK+L,MAAM,GACrG/L,EAAKomC,0BAA0BtN,EAAY77B,KAAK,kBAChD+C,EAAKomC,0BAA0BtN,EAAY77B,KAAK,eAChD0N,EAAU3K,EAAKwrB,gBAAgBsN,EAAY77B,KAAK0N,GAAW3K,EAAK+L,MAAM,KAzBpD,eAmBdq2D,EAnBcc,EAAAz0D,KA4BhB2mC,EAAUgtB,EAASxhE,IAAI,SAAA0vB,GAAC,OAAItwB,EAAK+L,MAAMukB,KAEvCtwB,EAAK+L,MAAMquB,GAAeh8B,UAC5Bg8B,EAAgBp6B,EAAK+L,MAAM,IAE7BquB,EAAgBp6B,EAAK+L,MAAMquB,GAAe7tB,KAAK6oC,EAAQ,IAEnDitB,EAAIriE,EAAK+L,MAAM/L,EAAK8uD,qBAAqB10B,EAAc,KACvDkoC,EAAiBltB,EAAQ,GACzBmtB,EAAentB,EAAQ,GACvBotB,EAAmBptB,EAAQ,GAC3BqtB,EAAiBrtB,EAAQ,GACzBstB,EAAIttB,EAAQ,GAAG7oC,KAAK81D,GAEpBM,EAAuB3iE,EAAK+L,MAAM,IAGtC62D,GAFIA,EAAMP,EAAEt6D,MAAM46D,GAAsB5kD,IAAI,MAElCxR,KAAKm2D,EAAE36D,MAAMu6D,GAAgBvkD,IAAIwkD,GAAcx6D,MAAO/H,EAAK+L,MAAM,KAAKS,MAAMm2D,GAAuB5kD,IAAI,OACjH6kD,EAAM5iE,EAAK+L,MAAMG,KAAKC,IAAIk2D,EAAGO,IAEzBC,EAAUL,EACVM,EAAcH,EAAqB56D,MAAMs6D,GAAGtkD,IAAI,KAChDglD,EAAiBN,EAAel2D,KAAKu2D,GAAat2D,MAAMq2D,GACxDG,EAAkBP,EAAel2D,KAAKq2D,GAAKp2D,MAAMq2D,GAErD18C,EAAQnmB,EAAK+L,MAAM62D,GAAK7kD,IAAIilD,GAAiBjlD,IAAI+kD,EAAY/kD,IAAIglD,IArD7CG,EAAA/mD,OAAA,SAuDb,CACLgK,QACAg9C,eAAeP,IAzDG,yBAAAM,EAAAr2D,SAAAm1D,EAAAlnE,SAr5IH,gBAAAuoE,EAAAC,GAAA,OAAAvB,EAAAh1D,MAAAjS,KAAAkS,YAAA,GAAAlS,KAi9InByoE,mBAj9ImB,eAAAC,EAAA/oE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAi9IE,SAAAs4D,EAAO3qC,GAAP,IAAAiJ,EAAA2hC,EAAAC,EAAAC,EAAAC,EAAA,OAAAt4C,EAAAtwB,EAAAsQ,KAAA,SAAAu4D,GAAA,cAAAA,EAAAr4D,KAAAq4D,EAAAp4D,MAAA,cAAAo4D,EAAAp4D,KAAA,EAEK1L,EAAKsiC,eAFV,cAEbP,EAFa+hC,EAAAr1D,KAGbi1D,EAA0D,OAArCt3D,SAAS21B,EAAU7yB,UAAU,QAAe,OAHpD40D,EAAAp4D,KAAA,EAUT8P,QAAQqD,IAAI,CAIpB7e,EAAK6rB,oBAAoB,kBAAkB,wBAAwB,CAACiN,EAAYnxB,QAAQ+7D,MAdvE,cAAAC,EAAAG,EAAAr1D,KAAAm1D,EAAAnpE,OAAAsyB,EAAA,EAAAtyB,CAAAkpE,EAAA,GASjBE,EATiBD,EAAA,IAkBnBC,EAAc7jE,EAAK+L,MAAM83D,IACTzlE,UACdylE,EAAc7jE,EAAK+L,MAAM,IApBR+3D,EAAA3nD,OAAA,SAuBZ0nD,GAvBY,yBAAAC,EAAAj3D,SAAA42D,EAAA3oE,SAj9IF,gBAAAipE,GAAA,OAAAP,EAAAz2D,MAAAjS,KAAAkS,YAAA,GAAAlS,KA0+InBkpE,sBA1+ImB,eAAAC,EAAAxpE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0+IK,SAAA+4D,EAAOprC,GAAP,IAAAnuB,EAAAw5D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA33D,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAq5D,GAAA,cAAAA,EAAAn5D,KAAAm5D,EAAAl5D,MAAA,UAAoBf,EAApBg6D,EAAA7lE,OAAA,QAAAmqB,IAAA07C,EAAA,GAAAA,EAAA,GAA4B,KAC5CR,EAAkB,KAClBC,EAAetrC,EAAYsrC,aAAetrC,EAAYsrC,aAAe,IAE1DtlE,OAJK,CAAA8lE,EAAAl5D,KAAA,aAKIf,EALJ,CAAAi6D,EAAAl5D,KAAA,gBAAAk5D,EAAAl5D,KAAA,EAKoB1L,EAAK6rB,oBAAoBiN,EAAY77B,KAAK,mBAAmB,CAAC0N,IALlF,OAAAi6D,EAAA33C,GAAA23C,EAAAn2D,KAAAm2D,EAAAl5D,KAAA,iBAAAk5D,EAAA33C,GAK8FjtB,EAAK+L,MAAM,GALzG,QAKds4D,EALcO,EAAA33C,GAMpBk3C,EAAgBC,EAAa,IAAM,CACjCzgC,IAAI,KACJkhC,KAAK7kE,EAAK+L,MAAM,GAChBW,QAAQ1M,EAAK+L,MAAMs4D,IATD,eAAAO,EAAAl5D,KAAA,GAcc1L,EAAKomC,0BAA0BtN,EAAY77B,KAAK,mBAd9D,aAchBqnE,EAdgBM,EAAAn2D,OAeiC,+CAA1B61D,EAfP,CAAAM,EAAAl5D,KAAA,gBAgBd64D,EAhBc,GAAA9iE,OAgBgBq3B,EAAY77B,KAhB5B,iBAAAwE,OAgBgD6iE,GAE9DE,EAAqBxkE,EAAK8P,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,YAAY,iBAEhF20D,EAAkBD,EAAmBniC,IApBvBuiC,EAAAl5D,KAAA,GAqBd1L,EAAKjF,MAAMqnC,aAAamiC,EAA0BD,EAAuBG,GArB3D,eAuBdC,EAAepzC,MAAMvqB,KAAKuqB,MAAMkzC,EAAmBM,YAAYjmE,QAvBjD+lE,EAAAl5D,KAAA,GAwBd1L,EAAK+K,aAAa25D,EAAlB,eAAAK,EAAAtqE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+B,SAAA65D,EAAOC,GAAP,IAAAC,EAAA1gE,EAAA2gE,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1sC,EAAA2sC,EAAAC,EAAAC,EAAAC,EAAA5iC,EAAA6iC,EAAAC,EAAAC,EAAA,OAAAv6C,EAAAtwB,EAAAsQ,KAAA,SAAAw6D,GAAA,cAAAA,EAAAt6D,KAAAs6D,EAAAr6D,MAAA,cAAAq6D,EAAAt6D,KAAA,EAAAs6D,EAAAr6D,KAAA,EAEA1L,EAAKomC,0BAA0Bm+B,EAAyB,eAAe,CAACU,IAFxE,YAE3BC,EAF2Ba,EAAAt3D,MAAA,CAAAs3D,EAAAr6D,KAAA,cAIzBlH,EAAcxE,EAAKgmE,wBAAwBd,IAJlB,CAAAa,EAAAr6D,KAAA,gBAAAq6D,EAAAr6D,KAAA,EASnB8P,QAAQqD,IAAI,CACpB7e,EAAK6rB,oBAAoB04C,EAAyB,aAAa,CAACW,IAChEv6D,EAAU3K,EAAK6rB,oBAAoBiN,EAAY77B,KAAK,yBAAyB,CAAC0N,EAAQu6D,IAAuBllE,EAAK+L,MAAM,KAX7F,UAAAo5D,EAAAY,EAAAt3D,KAAA22D,EAAA3qE,OAAAsyB,EAAA,EAAAtyB,CAAA0qE,EAAA,GAO3BE,EAP2BD,EAAA,GAQ3BE,EAR2BF,EAAA,IAczBC,IAAcrlE,EAAK+L,MAAMs5D,EAAWY,YAAYt2D,GAAG,GAd1B,CAAAo2D,EAAAr6D,KAAA,gBAerB65D,EAAYvlE,EAAKjF,MAAM+8B,kBAAkBgB,EAAYN,UAAUM,EAAYotC,iBAC3ErtC,EAAgB0sC,EAAUY,GAhBLJ,EAAAr6D,KAAA,GAqBjB8P,QAAQqD,IAAI,CACpB7e,EAAKojE,oBAAoBtqC,EAAY77B,MACrC+C,EAAKomC,0BAA0Bm/B,EAAUnlC,IAAInjC,KAAM,eAAgB,CAAC47B,EAAclxB,YAvBzD,eAAA69D,EAAAO,EAAAt3D,KAAAg3D,EAAAhrE,OAAAsyB,EAAA,EAAAtyB,CAAA+qE,EAAA,GAmBzBE,EAnByBD,EAAA,GAoBzBE,EApByBF,EAAA,GA0BrB1iC,EAAkB/iC,EAAKuP,iBAAiB81D,EAAWY,WAAW,IAC9DL,EAA6B5lE,EAAKwjC,eAAe1K,EAAYotC,iBAC7DL,EAA6B7lE,EAAKuP,iBAAiBm2D,EAAiB,IAAI39D,MAAM/H,EAAKuP,iBAAiBo2D,EAAkB,KAI5HvB,EAAan8D,KAAKzD,EAAYsH,OAhCHi6D,EAAAr6D,KAAA,GAiCE1L,EAAKyiC,eAAej+B,EAAYsH,MAAM85D,EAA2BC,EAA2B9iC,GAjC9F,QAiCrB+iC,EAjCqBC,EAAAt3D,KAkC3B01D,EAAgB3/D,EAAYsH,OAA5BrR,OAAAw4B,EAAA,EAAAx4B,CAAA,CACEiS,QAAQ1M,EAAK+L,MAAMu5D,GACnBT,KAAK9hC,EAAgBh7B,MAAM,QACxB+9D,GArCsB,QAAAC,EAAAr6D,KAAA,iBAAAq6D,EAAAt6D,KAAA,GAAAs6D,EAAA94C,GAAA84C,EAAA,kCAAAA,EAAAl5D,SAAAm4D,EAAAlqE,KAAA,aAA/B,gBAAAsrE,GAAA,OAAArB,EAAAh4D,MAAAjS,KAAAkS,YAAA,IAxBc,eAAA43D,EAAAzoD,OAAA,SAwEfioD,EAAeA,EAAa5kC,OAAQ,SAAC4kC,EAAa9pC,GAUvD,OATA8pC,EAAa9pC,GAAet6B,EAAK8P,gBAAgB,CAAC,QAAQ,SAASwqB,EAAYvqB,iBAAmB,GAE7Fo0D,EAAgB7pC,KACnB6pC,EAAgB7pC,GAAe,CAC7BuqC,KAAK7kE,EAAK+L,MAAM,GAChBW,QAAQ1M,EAAK+L,MAAM,KAGvBq4D,EAAa9pC,GAAb7/B,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAgC2pE,EAAa9pC,GAAgB6pC,EAAgB7pC,IACtE8pC,GACP,IAAM,MAnFc,yBAAAQ,EAAA/3D,SAAAq3D,EAAAppE,SA1+IL,gBAAAurE,GAAA,OAAApC,EAAAl3D,MAAAjS,KAAAkS,YAAA,GAAAlS,KA+jJnBi/B,yBA/jJmB,eAAAusC,EAAA7rE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+jJQ,SAAAo7D,EAAO57D,EAASkuB,GAAhB,IAAAzgB,EAAAkgB,EAAAkuC,EAAAx5D,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAk7D,GAAA,cAAAA,EAAAh7D,KAAAg7D,EAAA/6D,MAAA,cAA+B0M,EAA/BouD,EAAA1nE,OAAA,QAAAmqB,IAAAu9C,EAAA,GAAAA,EAAA,GAA0C,qBAC7DluC,EAAiB,GADEmuC,EAAA/6D,KAAA,EAGnB1L,EAAK+K,aAAa8tB,EAAcsB,WAAW7B,eAA3C,eAAAouC,EAAAjsE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA2D,SAAAw7D,EAAOniE,GAAP,IAAAoiE,EAAAC,EAAAtJ,EAAA3K,EAAAtmD,EAAA,OAAAif,EAAAtwB,EAAAsQ,KAAA,SAAAu7D,GAAA,cAAAA,EAAAr7D,KAAAq7D,EAAAp7D,MAAA,UACzDk7D,EAAoB5mE,EAAK8P,gBAAgB,CAAC,QAAS,SAAUtL,EAAYsH,MAAMiE,gBACrFvL,EAAW/J,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQ+J,EAAgBoiE,GAE7BC,EAAyB7mE,EAAKiyB,kBAAkB4G,EAAcsB,WAAWl9B,MAJhB,CAAA6pE,EAAAp7D,KAAA,eAAAo7D,EAAA3qD,OAAA,wBASzDohD,EAAYsJ,EAAuBlJ,eAAe3jD,KAAK,SAAA4jD,GAAC,OAAIA,EAAE3gE,OAASmb,IAEvEw6C,EAAe,CAACjoD,GAClB4yD,EAAU3pB,OAAO90C,OAAO,GAC1B8zD,EAAa3qD,KAAKzD,EAAYmD,SAb+Bm/D,EAAAp7D,KAAA,GAgBrC1L,EAAKomC,0BAA0BvN,EAAcsB,WAAWl9B,KAAMmb,EAAYw6C,GAhBrC,QAgBzDtmD,EAhByDw6D,EAAAr4D,KAiB/D6pB,EAAe9zB,EAAYsH,OAAS9L,EAAKuP,iBAAiBjD,EAAa9H,EAAY/F,UAjBpB,yBAAAqoE,EAAAj6D,SAAA85D,EAAA7rE,SAA3D,gBAAAisE,GAAA,OAAAL,EAAA35D,MAAAjS,KAAAkS,YAAA,IAHmB,cAAAy5D,EAAAtqD,OAAA,SAyBlBmc,GAzBkB,wBAAAmuC,EAAA55D,SAAA05D,EAAAzrE,SA/jJR,gBAAAksE,EAAAC,GAAA,OAAAX,EAAAv5D,MAAAjS,KAAAkS,YAAA,GAAAlS,KA0lJnB0/B,oBA1lJmB,eAAA0sC,EAAAzsE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0lJG,SAAAg8D,EAAOC,EAAO78C,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,GAAhF,IAAA08D,EAAA35B,EAAA45B,EAAAt6D,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAg8D,GAAA,cAAAA,EAAA97D,KAAA87D,EAAA77D,MAAA,cAAyF27D,IAAzFC,EAAAxoE,OAAA,QAAAmqB,IAAAq+C,EAAA,KAAAA,EAAA,GAAAC,EAAA77D,KAAA,EACC1L,EAAKwnE,iBAAiBJ,EAAO78C,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GAAc,GADvH,cACd35B,EADc65B,EAAA94D,KAAA84D,EAAAprD,OAAA,SAEbuxB,GAFa,wBAAA65B,EAAA16D,SAAAs6D,EAAArsE,SA1lJH,gBAAA2sE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAn6D,MAAAjS,KAAAkS,YAAA,GAAAlS,KA8lJnB0sE,iBA9lJmB,eAAAS,EAAAxtE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA8lJA,SAAA+8D,EAAOd,EAAO78C,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,GAAjE,IAAAluB,EAAA08D,EAAAc,EAAAC,EAAAh+C,EAAAi+C,EAAA3pE,EAAAD,EAAAE,EAAA2pE,EAAAhwC,EAAAiwC,EAAAC,EAAAp9C,EAAA0N,EAAA4I,EAAA+mC,EAAA9mC,EAAA+mC,EAAA5iC,EAAA6iC,EAAAC,EAAAC,EAAAC,EAAAhrC,EAAAirC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAxxC,GAAAmK,GAAAsnC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA5nC,GAAA6nC,GAAAC,GAAA/sC,GAAAgtC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAl/D,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA4gE,GAAA,cAAAA,EAAA1gE,KAAA0gE,EAAAzgE,MAAA,cAAgFf,EAAhFuhE,GAAAptE,OAAA,QAAAmqB,IAAAijD,GAAA,GAAAA,GAAA,GAA0F,KAAM7E,IAAhG6E,GAAAptE,OAAA,QAAAmqB,IAAAijD,GAAA,KAAAA,GAAA,GAAqH/D,IAArH+D,GAAAptE,OAAA,QAAAmqB,IAAAijD,GAAA,KAAAA,GAAA,GAAyI9D,IAAzI8D,GAAAptE,OAAA,SAAAmqB,IAAAijD,GAAA,MAAAA,GAAA,IACb9hD,EAAS,KACTi+C,EAAoB,KAClB3pE,EAAgB6rB,GAAcne,SAASme,EAAW7rB,cAAc,EAAK6rB,EAAW7rB,aAAe,EAC/FD,EAAY8rB,GAAcne,SAASme,EAAW9rB,UAAU,EAAK8rB,EAAW9rB,SAAYuB,EAAKjF,MAAM+B,SAAW,EAAI,EAC9G6B,EAAgB4rB,GAAcne,SAASme,EAAW5rB,cAAc,EAAK4rB,EAAW5rB,aAAgBqB,EAAKjF,MAAM+B,SAAW,EAAI,EAE1HwrE,EAAgBtoE,EAAKm0B,8BAA8B,iBACnDmE,EAAiB9zB,GAAeo0B,EAAUp0B,EAAYo0B,GAASuB,WAAW7B,eAAiB,GAC3FiwC,EAAwBjwC,EAAex5B,OAAO,EAAIw5B,EAAe1sB,OAAQ,SAAAmoB,GAAC,OAAIA,EAAEnH,UAAY,KAC5F47C,KAAiBD,GAAyBA,EAAsBzpE,OAAO,GACvEssB,EAAYprB,EAAK8P,gBAAgB,CAAC,QAAS,SAAUhE,EAAMiE,cAAe,WAAa/P,EAAKuI,WAAWuD,IAEzGgtB,EAAc94B,EAAK8P,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,kBAAkBhE,MAChE+sB,GAAiBC,EAAYc,cAAgBd,EAAYc,aAAa9tB,MAAMlE,gBAAkBixB,EAAc/sB,MAAMlE,gBACnIkxB,EAAc,MAIV4I,EAAiBl9B,EAAY09B,SAC7BumC,EAAgBH,GAA6C,IAA5Bl8D,SAASk8D,GApB/B6D,EAAAzgE,KAAA,GAuBiB1L,EAAKmiC,6BAA6B39B,EAAY47B,IAAInjC,KAAM,WAAY,MAvBrF,aAuBX0kC,EAvBWwqC,EAAA19D,MAAA,CAAA09D,EAAAzgE,KAAA,gBAAAygE,EAAAzgE,KAAA,GAyBT1L,EAAKjF,MAAMqnC,aAAaV,EAAezkC,KAAM0kC,EAAqBD,EAAeW,KAzBxE,QA4BXqmC,EAAqB1oE,EAAK8P,gBAAgB,CAAC,YAAa,SA5B7Cq8D,EAAAl/C,GA6BTm6C,EA7BS+E,EAAAzgE,KA8BV,iBA9BUygE,EAAAl/C,GAAA,GAiCV,cAjCUk/C,EAAAl/C,GAAA,GAoCV,gBApCUk/C,EAAAl/C,GAAA,GAwCV,SAxCUk/C,EAAAl/C,GAAA,GAiDV,kBAjDUk/C,EAAAl/C,GAAA,GAwDV,sBAxDUk/C,EAAAl/C,GAAA,GA2DV,sBA3DUk/C,EAAAl/C,GAAA,GA8DV,eA9DUk/C,EAAAl/C,GAAA,GAiEV,eAjEUk/C,EAAAl/C,GAAA,GAoEV,cApEUk/C,EAAAl/C,GAAA,GAuEV,cAvEUk/C,EAAAl/C,GAAA,GA0EV,gBA1EUk/C,EAAAl/C,GAAA,GA2FV,yBA3FUk/C,EAAAl/C,GAAA,GAkGV,qBAlGUk/C,EAAAl/C,GAAA,GA8GV,eA9GUk/C,EAAAl/C,GAAA,GAoHV,qBApHUk/C,EAAAl/C,GAAA,IA0HV,iBA1HUk/C,EAAAl/C,GAAA,IAgIV,kBAhIUk/C,EAAAl/C,GAAA,IA4JV,sBA5JUk/C,EAAAl/C,GAAA,IA6KV,gCA7KUk/C,EAAAl/C,GAAA,IA8LV,oBA9LUk/C,EAAAl/C,GAAA,IAiNV,gBAjNUk/C,EAAAl/C,GAAA,IAoOV,aApOUk/C,EAAAl/C,GAAA,IAoPV,iBApPUk/C,EAAAl/C,GAAA,IAmQV,eAnQUk/C,EAAAl/C,GAAA,IAoQV,mBApQUk/C,EAAAl/C,GAAA,IAqQV,0BArQUk/C,EAAAl/C,GAAA,IA0VV,gBA1VUk/C,EAAAl/C,GAAA,IAgXV,2BAhXUk/C,EAAAl/C,GAAA,IAiXV,4BAjXUk/C,EAAAl/C,GAAA,IAoYV,uBApYUk/C,EAAAl/C,GAAA,IAuYV,yBAvYUk/C,EAAAl/C,GAAA,IA4YV,oBA5YUk/C,EAAAl/C,GAAA,IAsZV,uBAtZUk/C,EAAAl/C,GAAA,IAyZV,gBAzZUk/C,EAAAl/C,GAAA,IA0ZV,iBA1ZUk/C,EAAAl/C,GAAA,IA2ZV,sBA3ZUk/C,EAAAl/C,GAAA,IA8aV,cA9aUk/C,EAAAl/C,GAAA,IA+aV,gBA/aUk/C,EAAAl/C,GAAA,IAgbV,mBAhbUk/C,EAAAl/C,GAAA,6BA+Bb7C,GAAUpqB,EAAK8P,gBAAgB,CAAC,QAAS,YAAa0oB,EAAU,WAAax4B,EAAKuI,WAAWiwB,IAAWzoB,cA/B3Fo8D,EAAAhwD,OAAA,4BAkCbiO,EAASgB,EAlCI+gD,EAAAhwD,OAAA,4BAqCbiO,GAAUpqB,EAAK8P,gBAAgB,CAAC,WAAY8oB,EAAS,cAAgB,IAAI7oB,cArC5Do8D,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GAyCQ1L,EAAKomC,0BAA0B5hC,EAAY47B,IAAInjC,KAAM,oBAzC7D,eAyCT6oC,EAzCSqmC,EAAA19D,KA0CRzO,EAAK+L,MAAM+5B,GAAU1nC,UACxBgsB,EAASpqB,EAAKuP,iBAAiBu2B,EAAUthC,EAAY47B,IAAI3hC,UACrD0pE,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,KA7CtDwtE,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GAkDE1L,EAAKw6B,oBAAoB,OAAQjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GAlD9G,eAkDbj9C,EAlDa+hD,EAAA19D,KAAA09D,EAAAzgE,KAAA,GAmDE1L,EAAKy6B,2BAA2BrQ,EAAQ5lB,GAnD1C,eAmDb4lB,EAnDa+hD,EAAA19D,KAoDT05D,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,KArDtG+gD,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GAyDE1L,EAAKwnE,iBAAiB,cAAej9C,EAAYiO,EAAU1sB,EAAO,KAAMtH,EAAaA,EAAY2hE,GAAIx7D,EAAS08D,EAAcc,GAAa,GAzD3I,eAyDb/9C,EAzDa+hD,EAAA19D,KAAA09D,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GA4DE1L,EAAKwnE,iBAAiB,cAAej9C,EAAYiO,EAAU1sB,EAAO,KAAMtH,EAAaA,EAAY4nE,GAAIzhE,EAAS08D,EAAcc,GAAa,GA5D3I,eA4Db/9C,EA5Da+hD,EAAA19D,KAAA09D,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GA+DE1L,EAAKwnE,iBAAiB,cAAej9C,EAAYiO,EAAU1sB,EAAO,KAAMtH,EAAaA,EAAY2hE,GAAIx7D,EAAS08D,GA/DhH,eA+Dbj9C,EA/Da+hD,EAAA19D,KAAA09D,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GAkEE1L,EAAKwnE,iBAAiB,cAAej9C,EAAYiO,EAAU1sB,EAAO,KAAMtH,EAAaA,EAAY4nE,GAAIzhE,EAAS08D,GAlEhH,eAkEbj9C,EAlEa+hD,EAAA19D,KAAA09D,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GAqEE1L,EAAKwnE,iBAAiB,aAAcj9C,EAAYiO,EAAU1sB,EAAO,KAAMtH,EAAaA,EAAY2hE,GAAIx7D,EAAS08D,GArE/G,eAqEbj9C,EArEa+hD,EAAA19D,KAAA09D,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GAwEE1L,EAAKwnE,iBAAiB,aAAcj9C,EAAYiO,EAAU1sB,EAAO,KAAMtH,EAAaA,EAAY4nE,GAAIzhE,EAAS08D,GAxE/G,eAwEbj9C,EAxEa+hD,EAAA19D,KAAA09D,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GA8EH8P,QAAQqD,IAAI,CACpB7e,EAAKojE,oBAAoBvqC,EAAc57B,KAAM,SAAU,KACvD+C,EAAKwnE,iBAAiB,eAAgBj9C,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,KAhFtG,eAAAsB,EAAAwD,EAAA19D,KAAAm6D,EAAAnuE,OAAAsyB,EAAA,EAAAtyB,CAAAkuE,EAAA,GA4EXE,EA5EWD,EAAA,GA6EXE,EA7EWF,EAAA,GAmFbx+C,EAASpqB,EAAK+L,MAAM,GACf/L,EAAK+L,MAAM+8D,GAAc1qE,SAAY4B,EAAK+L,MAAM88D,GAAazqE,UAChEgsB,EAASpqB,EAAKuP,iBAAiBs5D,EAAarkE,EAAY47B,IAAI3hC,UAAUsJ,MAAM+gE,IAE1EX,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,KAxFtG+gD,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GA4FE1L,EAAKw6B,oBAAoB,cAAejQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GA5FrH,eA4Fbj9C,EA5Fa+hD,EAAA19D,KAAA09D,EAAAzgE,KAAA,GA6FE1L,EAAKy6B,2BAA2BrQ,EAAQ5lB,GA7F1C,eA6Fb4lB,EA7Fa+hD,EAAA19D,KA8FT05D,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,KA/FtG+gD,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GAmGW1L,EAAKwpC,0BAA0BhlC,EAAaq0B,EAAeluB,GAnGtE,eAmGPmzB,EAnGOquC,EAAA19D,KAoGb2b,EAASA,GAAUpqB,EAAK+L,MAAM,IAC9Bqe,EAASpqB,EAAK+L,MAAM+xB,IACTnuB,GAAG,GACRw4D,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,KAGnHhB,EAAS+9C,EAAc,IAAM,KA3GlBgE,EAAAhwD,OAAA,4BAAAgwD,EAAAzgE,KAAA,GA+GE1L,EAAKmiC,6BAA6B39B,EAAY47B,IAAInjC,KAAM,MAAO,MA/GjE,eA+GbmtB,EA/Ga+hD,EAAA19D,QAiHX2b,EAASpqB,EAAK+L,MAAMqe,GAAQrM,IAAI/d,EAAK+L,MAAM,OAjHhCogE,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IAqHE1L,EAAKomC,0BAA0B5hC,EAAY47B,IAAInjC,KAAM,eAAgB,CAAC47B,EAAclxB,UArHtF,gBAqHbyiB,EArHa+hD,EAAA19D,QAuHX2b,EAASpqB,EAAKuP,iBAAiB6a,EAAQyO,EAAcp6B,WAvH1C0tE,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IA2HE1L,EAAKomC,0BAA0B5hC,EAAY47B,IAAInjC,KAAM,eAAgB,CAAC47B,EAAclxB,UA3HtF,gBA2HbyiB,EA3Ha+hD,EAAA19D,QA6HX2b,EAASpqB,EAAKuP,iBAAiB6a,EAAQyO,EAAcp6B,WA7H1C0tE,EAAAhwD,OAAA,6BAiIbiO,EAAS+9C,EAAc,MAAQnoE,EAAK+L,MAAM,GAjI7BogE,EAAAzgE,KAAA,IAsIH8P,QAAQqD,IAAI,CACpBia,EAAc94B,EAAKwrB,gBAAgBsN,EAAY77B,KAAM0N,GAAW,KAChE3K,EAAKwnE,iBAAL,eAAsCj9C,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GACjHmB,EAAiBxoE,EAAKk6B,wBAAwBrB,EAAcsB,WAAWl9B,KAAM0N,EAASkuB,EAAcsB,WAAW17B,SAASo6B,EAAcmB,UAAUI,eAAiB,OAzItJ,gBAAA2uC,EAAAoD,EAAA19D,KAAAu6D,EAAAvuE,OAAAsyB,EAAA,EAAAtyB,CAAAsuE,EAAA,GAmIXE,EAnIWD,EAAA,GAoIXE,EApIWF,EAAA,GAqIXG,EArIWH,EAAA,GA4ITI,EAAcppE,EAAK+L,MAAM,GACzBo9D,IACFC,EAAcA,EAAY78D,KAAK48D,IAE7BF,IACFG,EAAcA,EAAY78D,KAAK08D,IAG7BG,EAAYz5D,GAAG,IAAMu5D,IACvB9+C,EAASpqB,EAAK+L,MAAMq9D,GAAarhE,MAAMmhE,GAEnCf,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,MAxJxG+gD,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IAgKH8P,QAAQqD,IAAI,CACpB7e,EAAKwrB,gBAAgBqN,EAAc57B,KAAM0N,GACzC3K,EAAKw6B,oBAAL,eAAyCjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,KAlKzG,gBAAAgC,EAAA8C,EAAA19D,KAAA66D,EAAA7uE,OAAAsyB,EAAA,EAAAtyB,CAAA4uE,EAAA,GA8JXE,EA9JWD,EAAA,GA+JXE,EA/JWF,EAAA,GAqKbl/C,EAAS+9C,EAAc,IAAM,KACzBoB,GAAcC,IAChBp/C,EAASpqB,EAAK+L,MAAMw9D,GAAYxhE,MAAMyhE,GAClCrB,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,MAzKxG+gD,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IAiLH8P,QAAQqD,IAAI,CACpB7e,EAAKw6B,oBAAL,oBAA8CjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GACzHrnE,EAAKw6B,oBAAL,gBAA0CjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,KAnL1G,gBAAAoC,EAAA0C,EAAA19D,KAAAi7D,EAAAjvE,OAAAsyB,EAAA,EAAAtyB,CAAAgvE,EAAA,GA+KXE,EA/KWD,EAAA,GAgLXE,EAhLWF,EAAA,GAsLbt/C,EAAS+9C,EAAc,IAAM,KACzBwB,GAAeC,IACjBx/C,EAASpqB,EAAK+L,MAAM49D,GAAap9D,KAAKq9D,GAClCzB,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,MA1LxG+gD,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IAmMH8P,QAAQqD,IAAI,CACpB7e,EAAKw6B,oBAAL,WAAqCjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GAChHrnE,EAAKw6B,oBAAL,iBAA2CjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GACtHrnE,EAAKw6B,oBAAL,mBAA6CjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,KAtM7G,gBAAAwC,EAAAsC,EAAA19D,KAAAq7D,EAAArvE,OAAAsyB,EAAA,EAAAtyB,CAAAovE,EAAA,GAgMXE,EAhMWD,EAAA,GAiMXE,EAjMWF,EAAA,IAkMXG,GAlMWH,EAAA,KAyMKC,GAAiBC,IAC3BE,GAAcD,GAAWt6D,GAAG,GAAKs6D,GAAWliE,MAAMiiE,EAAYjsD,IAAI,MAAMxR,KAAKw9D,GAAiB,EACpG3/C,EAAS,CACP8/C,eACAH,kBA7MSoC,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IAqNH8P,QAAQqD,IAAI,CACpB7e,EAAKw6B,oBAAL,aAAuCjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GAClHrnE,EAAKw6B,oBAAL,kBAA4CjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,KAvN5G,gBAAA8C,GAAAgC,EAAA19D,KAAA27D,GAAA3vE,OAAAsyB,EAAA,EAAAtyB,CAAA0vE,GAAA,GAmNXE,GAnNWD,GAAA,GAoNXE,GApNWF,GAAA,GA0NTC,IAAcC,KACVC,GAAUD,GAAgBJ,YAAYniE,MAAMsiE,IAC5CG,GAAYF,GAAgBP,cAAchiE,MAAMsiE,IAEtDjgD,EAAS,CACPmgD,WACAC,eAhOS2B,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IAwOH8P,QAAQqD,IAAI,CACpB7e,EAAKw6B,oBAAL,mBAA6CjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GACxHrnE,EAAKw6B,oBAAL,8BAAwDjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,KA1OxH,gBAAAoD,GAAA0B,EAAA19D,KAAAi8D,GAAAjwE,OAAAsyB,EAAA,EAAAtyB,CAAAgwE,GAAA,GAsOXE,GAtOWD,GAAA,GAuOXE,GAvOWF,GAAA,GA6OTC,IAAcC,KAChBxgD,EAASpqB,EAAK+L,MAAM6+D,IAAap+D,MAAMm+D,IACnCxC,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,MAhPxG+gD,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IAwPH8P,QAAQqD,IAAI,CACpB7e,EAAKw6B,oBAAL,mBAA6CjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,GACxHrnE,EAAKw6B,oBAAL,8BAAwDjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,KA1PxH,gBAAAwD,GAAAsB,EAAA19D,KAAAq8D,GAAArwE,OAAAsyB,EAAA,EAAAtyB,CAAAowE,GAAA,GAsPXE,GAtPWD,GAAA,GAuPXE,GAvPWF,GAAA,GA4PR9qE,EAAK+L,MAAMi/D,IAAa5sE,SAAY4B,EAAK+L,MAAMg/D,IAAY3sE,UAC9DgsB,EAAS4gD,GAAYjtD,IAAIgtD,IAAYv+D,MAAM,GAAGzE,MAAM,KAChDogE,IACF/9C,EAASA,EAAOpiB,QAAQvJ,GAAY,MA/P3B0tE,EAAAhwD,OAAA,6BAsQT8uD,GAAY,GACZxxC,GAAa,KACjBrP,EAASpqB,EAAK+L,MAAM,GAChB63B,GAAM5jC,EAAK+L,MAAM,GACjBm/D,GAAqB,EACrBC,GAAUnrE,EAAK+L,MAAM,GACrBq/D,GAAqB,KACrBC,GAAerrE,EAAK+L,MAAM,GA7QjBogE,EAAAzgE,KAAA,IAoRH8P,QAAQqD,IAAI,CACpB7e,EAAKikC,2BAA2Bz/B,EAAYq0B,GAC5CC,EAAc94B,EAAKgkE,sBAAsBlrC,GAAe,KACxDt0B,EAAY6nE,aAAersE,EAAKssE,aAAa9nE,EAAY6nE,cAAgB,KACzErsE,EAAKomC,0BAA0B5hC,EAAY47B,IAAInjC,KAAM,SAAU,CAAC47B,EAAclxB,YAxRnE,gBAAA2jE,GAAAa,EAAA19D,KAAA88D,GAAA9wE,OAAAsyB,EAAA,EAAAtyB,CAAA6wE,GAAA,GAgRXjD,EAhRWkD,GAAA,GAiRXH,GAjRWG,GAAA,GAkRXF,GAlRWE,GAAA,IAmRX9xC,GAnRW8xC,GAAA,KA4RP5nC,GAAM3jC,EAAKuP,iBAAiBkqB,GAAWj1B,EAAY47B,IAAI3hC,UAE3DmlC,GAAM5jC,EAAK0jC,QAAQC,GAAI5lB,IAAI,MAAMhW,MAAM,KACvCojE,GAAUvnC,GAEL5jC,EAAK+L,MAAMs/D,IAAcjtE,UAC5BwlC,GAAMA,GAAIr3B,KAAK8+D,IACfJ,GAAU,cAAgBI,IAIxBhD,GAA+B,mBAAVjB,GACvB3sE,OAAOoE,KAAKwpE,GAAmBtpE,QAAS,SAAA+M,GACtC,IAAMq4D,EAAkBkE,EAAkBv8D,GAC1C,IAAK9L,EAAK+L,MAAMo4D,EAAgBvgC,KAAKxlC,UAAsB,SAAV0N,GAAoB28D,GAAe,CAClF,IAAMnlC,EAAWtjC,EAAK+L,MAAMo4D,EAAgBvgC,KAC5CA,GAAMA,GAAIr3B,KAAK+2B,GACf2nC,GAAUn/D,GAASw3B,KAMrB8nC,IAAgC,mBAAVhE,GACxB3sE,OAAOoE,KAAKusE,IAAoBrsE,QAAS,SAAA+M,GACvC,IAAMygE,EAAuBnB,GAAmBt/D,GAChD,IAAK9L,EAAK+L,MAAMwgE,EAAqB3oC,KAAKxlC,UAAsB,SAAV0N,GAAoB28D,GAAe,CACvF,IAAMnlC,EAAWtjC,EAAK+L,MAAMwgE,EAAqB3oC,KACjDA,GAAMA,GAAIr3B,KAAK+2B,GACf2nC,GAAUn/D,GAASw3B,KAKrBM,GAAIj0B,GAAG,OACTu7D,GAAqB,EACrB9gD,EAASpqB,EAAK+L,MAAM,OAEpBqe,EAASpqB,EAAK+L,MAAM63B,IAElBukC,IACF/9C,EAASA,EAAOpiB,QAAQkjE,IAAoB,IACxCtnC,GAAIj0B,GAAG,QACTya,EAAM,IAAA3oB,OAAO2oB,OAIjB+gD,GAAU/gD,EACN+9C,IACF/9C,EAASA,EAAOpiB,QAAQkjE,IAAoB,MAIlC,0BAAV9D,IAEFh9C,EAAS,CACP+gD,WACAF,aACAuB,aAJmBpiD,IAlVV+hD,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IA8VH8P,QAAQqD,IAAI,CACpB7e,EAAKipC,yBAAyBzkC,EAAaq0B,EAAeluB,GAC1D3K,EAAKw6B,oBAAL,eAAyCjQ,EAAYiO,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAeluB,EAAS08D,KAhWzG,gBAAAmE,GAAAW,EAAA19D,KAAAg9D,GAAAhxE,OAAAsyB,EAAA,EAAAtyB,CAAA+wE,GAAA,GA4VX9sC,GA5VW+sC,GAAA,IA6VXC,GA7VWD,GAAA,KAqWO/sC,KACZitC,GAAqBv/D,SAASe,KAAKg5B,MAAQ,KAAQ/5B,SAASsyB,GAAeryB,WACjF+d,EAASpqB,EAAK+L,MAAM2/D,IAAc3jE,MAAM,SAAUgW,IAAI4tD,IAIlDxD,IACF/9C,EAASA,EAAOpiB,QAAQ,GAAK,MA5WpBmkE,EAAAhwD,OAAA,6BAkXbiO,EAAS,KAlXI+hD,EAAAzgE,KAAA,IAmXa1L,EAAKikC,2BAA2Bz/B,EAAaq0B,GAnX1D,gBAmXbwvC,EAnXa8D,EAAA19D,OAoXY45D,EAAkBoE,OAC3B,4BAAVrF,GACFh9C,EAASpqB,EAAKmvB,qBAAqBk5C,EAAkBoE,KAAK1pC,gBAAiB2lC,EAAmBt5C,uBAC1F+4C,IACF/9C,EAAS,IAAIpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,GAA1D,SAAA8C,OAAmFinE,EAAmBt5C,0BAGjHhF,EAASi+C,EAAkBoE,KAAK5nC,WAC5BsjC,IACF/9C,EAAS,IAAIpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,GAA1D,kBAAA8C,OAA4FzB,EAAK2gB,2BAA2B0nD,EAAkBoE,KAAK9nC,cAAcjsB,iBAAjK,2FA7XFyzD,EAAAhwD,OAAA,6BAqYbiO,EAASpqB,EAAKxB,iBAAiB,OAAOC,EAASC,EAAaC,GAAnD,YArYIwtE,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IAwYE1L,EAAKmiC,6BAA6B39B,EAAY47B,IAAInjC,KAAK,uBAAuB,MAxYhF,gBAwYbmtB,EAxYa+hD,EAAA19D,KA0Yb2b,GADAA,GAAe,KACApM,WAAW,KAAK,IAAIoM,GAAQpM,WA1Y9BmuD,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IA6YE1L,EAAKmiC,6BAA6B39B,EAAY47B,IAAInjC,KAAK,uBAAuB,MA7YhF,gBA6YbmtB,EA7Ya+hD,EAAA19D,KA8Yb2b,EAASpqB,EAAK+L,MAAMqe,GAAQrM,IAAI,KAChB,OAAZ6a,IACFxO,EAASpqB,EAAK+L,MAAM,KAAKS,MAAM4d,IAE7B+9C,IACF/9C,EAASA,EAAOpiB,QAAQ,GAAG,KAnZhBmkE,EAAAhwD,OAAA,6BAuZbiO,EAASpqB,EAAKxB,iBAAiB,OAAQC,EAAUC,EAAcC,GAAtD,YAvZIwtE,EAAAhwD,OAAA,6BAAAgwD,EAAAzgE,KAAA,IA4ZE1L,EAAKmiC,6BAA6B39B,EAAY47B,IAAInjC,KAAK,QAAQ,MA5ZjE,gBA4ZbmtB,EA5Za+hD,EAAA19D,QA8ZX2b,EAASpqB,EAAKuP,iBAAiB6a,EAAQ5lB,EAAY47B,IAAI3hC,UAEzC,iBAAV2oE,IACEh9C,EAAOza,GAAG,GACRw4D,IACF/9C,EAASpqB,EAAKxB,iBAAiB4rB,EAAQ3rB,EAAUC,EAAcC,IAAiBypE,EAAY,IAAA3mE,OAAO2pB,GAAc,MAGnHhB,EAASpqB,EAAK+L,MAAM,GAChBo8D,IACF/9C,EAAS,WAxaJ+hD,EAAAhwD,OAAA,6BAibbiO,EAAS,GAjbI+hD,EAAAzgE,KAAA,IAqbH8P,QAAQqD,IAAI,CACpB7e,EAAKmiC,6BAA6BT,EAAezkC,KAAM,kBAAkB,MACzE+C,EAAKmiC,6BAA6B39B,EAAY47B,IAAInjC,KAAM,qBAAqB,QAvblE,gBAAA2uE,GAAAO,EAAA19D,KAAAo9D,GAAApxE,OAAAsyB,EAAA,EAAAtyB,CAAAmxE,GAAA,GAmbXE,GAnbWD,GAAA,GAobXE,GApbWF,GAAA,GA2bRhzC,IACHA,EAAgBr0B,EAAY2hE,IAGxB7tC,GAAiBO,EAAgBA,EAAcsB,WAAW7B,eAAe13B,IAAI,SAAA4D,GAAW,OAAKA,EAAYmD,QAAQC,gBAAkB,MACnIqkE,GAAsB,mBAAV7E,GAA8B9uC,GAAiBA,GAA4B,cAAV8uC,EAAwB0E,GAA2B,gBAAV1E,GAA2B0E,GAAgBA,GAAclgE,OAAO,SAAA8gE,GAAe,OAAIX,KAAoBA,GAAgBnrE,IAAI,SAAAiqD,GAAI,OAAIA,EAAKjjD,gBAAeonB,SAAS09C,EAAgB9kE,iBAAkBmkE,KAG5TE,GAAUltE,QAAQ,SAAAsP,GAChB,IAAM20B,EAAiBhjC,EAAKgmE,wBAAwB33D,GAEpD,GAAK20B,GAAmBA,EAAepW,QAAvC,CAIA,IAAM+/C,EAA4B9zC,EAAgBA,EAAcsB,WAAW7B,eAAete,KAAK,SAAAxV,GAAW,OAAIA,EAAYmD,QAAQC,gBAAkByG,EAAazG,gBAAiB,KAC9K+kE,IAA8BA,EAA0B//C,UAG5DxC,EAAO4Y,EAAel3B,OAASk3B,MAK/Bx+B,EAAY4iE,IAAgD,oBAA/B5iE,EAAY4iE,GAAOroE,SAClDyF,EAAY4iE,GAAOroE,QAAS,SAAA6jC,GAC1B,IAAMI,EAAiBhjC,EAAK8P,gBAAgB,CAAC,QAAQ,SAAS8yB,EAAS7yB,gBACnEizB,IACF5Y,EAAOwY,GAAYI,KAvdZmpC,EAAAhwD,OAAA,6BAAAgwD,EAAAhwD,OAAA,6BAAAgwD,EAAAhwD,OAAA,SAoeViO,GApeU,0BAAA+hD,EAAAt/D,SAAAq7D,EAAAptE,SA9lJA,gBAAA8xE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAjF,EAAAl7D,MAAAjS,KAAAkS,YAAA,GAAAlS,KAokKnBqyE,eApkKmB,eAAAC,EAAA3yE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAokKF,SAAAkiE,EAAOjG,EAAOt7D,EAAOtH,EAAamG,GAAlC,IAAA08D,EAAAiG,EAAAljD,EAAA6hD,EAAA3D,EAAAiF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjhE,EAAAkhE,EAAA7+C,EAAA/E,EAAA4X,EAAApV,EAAAqhD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvzC,EAAAwzC,EAAAC,EAAAC,EAAAC,GAAA/iE,GAAA+xB,GAAApxB,GAAAqiE,GAAAC,GAAAC,GAAAC,GAAApE,GAAAqE,GAAAC,GAAAxjD,GAAA6M,GAAA1qB,GAAAshE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA/lE,GAAAgmE,GAAAC,GAAAvkE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAimE,GAAA,cAAAA,EAAA/lE,KAAA+lE,EAAA9lE,MAAA,OAA2C27D,IAA3CkK,GAAAzyE,OAAA,QAAAmqB,IAAAsoD,GAAA,KAAAA,GAAA,GAAgEjE,EAAhEiE,GAAAzyE,OAAA,QAAAmqB,IAAAsoD,GAAA,IAAAA,GAAA,GAEXnnD,EAAS,KACP6hD,EAAYjsE,EAAK8P,gBAAgB,CAAC,cAClCw4D,EAAgBtoE,EAAKm0B,8BAA8B,iBACnDo5C,EAAcjF,GAA6C,IAA5Bl8D,SAASk8D,GAGxCkF,EAAextE,EAAK8P,gBAAgB,CAAC,aAAc9P,EAAKjF,MAAMmT,mBAChEm5D,GAAgBmG,GAAqD,qBAA9BA,EAAanG,eACtDA,EAAemG,EAAanG,cAI1BoG,EAA0B,KAC1BztE,EAAKjF,MAAMmT,kBAAoBlO,EAAKjF,MAAMuJ,eACtCopE,EAAiB1tE,EAAKjF,MAAMuzB,oBAAoBtuB,EAAKjF,MAAMmT,kBAAkBlO,EAAKjF,MAAMuJ,mBAE5FmpE,EAA0B,IACFC,EAAe5hE,OAAS4hE,GAExCjzE,OAAOoE,KAAKotE,GAAWj9C,SAASljB,MAC1C2hE,EAA0B,IACF3hE,GAAStH,GAvBpBgtE,EAAAvkD,GA0BPm6C,EA1BOoK,EAAA9lE,KA2BR,oBA3BQ8lE,EAAAvkD,GAAA,GA8CR,sBA9CQukD,EAAAvkD,GAAA,GAyDR,aAzDQukD,EAAAvkD,GAAA,GA4DR,qBA5DQukD,EAAAvkD,GAAA,GA+DR,2BA/DQukD,EAAAvkD,GAAA,GAmER,kCAnEQukD,EAAAvkD,GAAA,GA2FR,iBA3FQukD,EAAAvkD,GAAA,GAqGR,qBArGQukD,EAAAvkD,GAAA,GA4GR,SA5GQukD,EAAAvkD,GAAA,GAmHR,0BAnHQukD,EAAAvkD,GAAA,GA0IR,qBA1IQukD,EAAAvkD,GAAA,GA0KR,sBA1KQukD,EAAAvkD,GAAA,IA+LR,QA/LQukD,EAAAvkD,GAAA,IAgNR,QAhNQukD,EAAAvkD,GAAA,IAoOR,WApOQukD,EAAAvkD,GAAA,IAoPR,eApPQukD,EAAAvkD,GAAA,IAiQR,qBAjQQukD,EAAAvkD,GAAA,IAuQR,eAvQQukD,EAAAvkD,GAAA,IA+QR,eA/QQukD,EAAAvkD,GAAA,IAiSR,QAjSQukD,EAAAvkD,GAAA,IAoSR,iBApSQukD,EAAAvkD,GAAA,IAkTR,qBAlTQukD,EAAAvkD,GAAA,IAwTR,6BAxTQukD,EAAAvkD,GAAA,IAoVR,sBApVQukD,EAAAvkD,GAAA,IAiXR,kBAjXQukD,EAAAvkD,GAAA,IAiYR,aAjYQukD,EAAAvkD,GAAA,6BAAAukD,EAAA9lE,KAAA,GAgCD8P,QAAQqD,IAAI,CACpB7e,EAAKg9B,sBACLh9B,EAAK+9B,oBAAoB,GAAIpzB,GAC7B3K,EAAKyxE,qBAAqB9mE,GAAS,KAnC1B,eAAAgjE,EAAA6D,EAAA/iE,KAAAm/D,EAAAnzE,OAAAsyB,EAAA,EAAAtyB,CAAAkzE,EAAA,GA6BTE,EA7BSD,EAAA,GA8BTE,EA9BSF,EAAA,GA+BTG,EA/BSH,EAAA,GAsCPE,GAAoBC,IACtB3jD,EAASpqB,EAAK+L,MAAMgiE,GAAmBhmE,MAAM+lE,GACzCD,IACFzjD,EAASA,EAAO5d,MAAM4d,EAAOriB,MAAM8lE,MAzC5B2D,EAAAr1D,OAAA,4BAAAq1D,EAAA9lE,KAAA,GA+C4C8P,QAAQqD,IAAI,CACjE7e,EAAKmtE,eAAe,kBAAmBrhE,EAAOtH,EAAamG,GAC3D3K,EAAKmtE,eAAe,yBAA0BrhE,EAAOtH,EAAamG,KAjDzD,eAAAqjE,EAAAwD,EAAA/iE,KAAAw/D,EAAAxzE,OAAAsyB,EAAA,EAAAtyB,CAAAuzE,EAAA,GA+CNE,EA/CMD,EAAA,GA+CYE,EA/CZF,EAAA,GAoDPC,GAAoBC,GAA0BD,EAAiBv+D,GAAG,IAAMw+D,EAAuBx+D,GAAG,KACpGya,EAAS+jD,EAAuBpwD,IAAImwD,GAAkB1hE,MAAM,GAAGzE,MAAM,MArD5DypE,EAAAr1D,OAAA,4BAAAq1D,EAAA9lE,KAAA,GA0DI1L,EAAK0xE,cA1DT,eA0DXtnD,EA1DWonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,4BAAAq1D,EAAA9lE,KAAA,GA6DI1L,EAAKg9B,sBA7DT,eA6DX5S,EA7DWonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,4BAAAq1D,EAAA9lE,KAAA,GAgEI1L,EAAK2xE,6BAA6BhnE,GAhEtC,eAgEXyf,EAhEWonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,4BAAAq1D,EAAA9lE,KAAA,GAwED8P,QAAQqD,IAAI,CACpB7e,EAAKmtE,eAAe,WAAYrhE,EAAOtH,EAAamG,GACpD3K,EAAKmtE,eAAe,kBAAmBrhE,EAAOtH,EAAamG,GAC3D3K,EAAKmtE,eAAe,yBAA0BrhE,EAAOtH,EAAamG,KA3EzD,eAAAyjE,EAAAoD,EAAA/iE,KAAA4/D,EAAA5zE,OAAAsyB,EAAA,EAAAtyB,CAAA2zE,EAAA,GAqETE,EArESD,EAAA,GAsETE,EAtESF,EAAA,GAuETG,EAvESH,EAAA,GA8EPI,EAA4B,KAE5BD,GAA+BF,GAAYC,IACvCG,EAAiBH,EAAgBxmE,MAAMumE,EAASvwD,IAAI,MAC1D0wD,EAA4BD,EAA4BjiE,KAAKmiE,IAI/DtkD,EAAS,CACPqkD,4BACAD,+BAxFSgD,EAAAr1D,OAAA,4BAAAq1D,EAAA9lE,KAAA,GA4FmC8P,QAAQqD,IAAI,CACxD7e,EAAKmtE,eAAe,aAAcrhE,EAAOtH,EAAamG,GAAS,GAC/D3K,EAAKmtE,eAAe,oBAAqBrhE,EAAOtH,EAAamG,GAAS,KA9F7D,eAAAgkE,EAAA6C,EAAA/iE,KAAAmgE,EAAAn0E,OAAAsyB,EAAA,EAAAtyB,CAAAk0E,EAAA,GA4FNE,EA5FMD,EAAA,GA4FOE,EA5FPF,EAAA,GAiGPC,GAAeC,GAAsBD,EAAYl/D,GAAG,KACtDya,EAAS0kD,EAAmB/wD,IAAI8wD,GAAariE,MAAM,GAAGzE,MAAM,MAlGnDypE,EAAAr1D,OAAA,4BAAAq1D,EAAA9lE,KAAA,GAsGoB1L,EAAKmtE,eAAe,mBAAoBrhE,EAAOtH,EAAamG,GAtGhF,eAsGLokE,EAtGKyC,EAAA/iE,QAwGHX,EAAgB1B,SAASe,KAAKg5B,MAAQ,KAC5C/b,GAAUtc,EAAgBihE,GAAoB,OAzGrCyC,EAAAr1D,OAAA,yBA6GP1hB,OAAOoE,KAAKotE,GAAWj9C,SAASljB,GA7GzB,CAAA0lE,EAAA9lE,KAAA,gBAAA8lE,EAAA9lE,KAAA,GA8GM1L,EAAK4xE,gBAAgB9lE,EAAO2hE,GA9GlC,QA8GTrjD,EA9GSonD,EAAA/iE,KAAA+iE,EAAA9lE,KAAA,wBAAA8lE,EAAA9lE,KAAA,GAgHM1L,EAAK6xE,aAAartE,EAAa6iE,GAhHrC,QAgHTj9C,EAhHSonD,EAAA/iE,KAAA,eAAA+iE,EAAAr1D,OAAA,qBAAAq1D,EAAAn+B,GAoHHvnC,EApHG0lE,EAAA9lE,KAqHJ,SArHI8lE,EAAAn+B,GAAA,GAwHJ,WAxHIm+B,EAAAn+B,GAAA,GAyHJ,YAzHIm+B,EAAAn+B,GAAA,GA4HJ,SA5HIm+B,EAAAn+B,GAAA,2BAAAm+B,EAAA9lE,KAAA,GAsHQ1L,EAAK8xE,wBAAwBnnE,EAAS8iE,GAtH9C,eAsHPrjD,EAtHOonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,2BAAAq1D,EAAA9lE,KAAA,GA0HQ1L,EAAK+xE,2BAA2BpnE,EAAS8iE,GA1HjD,eA0HPrjD,EA1HOonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,2BA6HDgU,EAAenwB,EAAKgyE,kBA7HnBR,EAAA9lE,KAAA,GA8HQykB,EAAapC,oBAAoBpjB,EAAS8iE,GA9HlD,eA8HPrjD,EA9HOonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,2BAAAq1D,EAAAr1D,OAAA,2BAmIPiO,IAAWpqB,EAAK+L,MAAMqe,GAAQhsB,UAChCgsB,EAASpqB,EAAK+L,MAAMqe,GAAQrM,IAAI,SAE9BqM,EAASpqB,EAAKmvB,qBAAqB/E,EAAQ5lB,EAAY4qB,sBAAuB5qB,EAAYytE,mBAtInFT,EAAAr1D,OAAA,4BA2ILgU,EAAenwB,EAAKgyE,kBACpB5mD,EAAYprB,EAAK8P,gBAAgB,CAAC,aAAc,QAAS,cACzDkzB,EAAiBhjC,EAAK8P,gBAAgB,CAAC,YAAasb,IA7I/ComD,EAAA9lE,KAAA,IA8IIykB,EAAa9C,SAAS7oB,EAAYqoB,KAAKllB,SA9I3C,cA8IXyiB,EA9IWonD,EAAA/iE,MAAA,CAAA+iE,EAAA9lE,KAAA,UAkJT0e,EAASpqB,EAAKuP,iBAAiB6a,EAAQ4Y,EAAevkC,UAEhDmvB,EAAgB5tB,EAAK+L,MAAM/L,EAAK8P,gBAAgB,CAAC,UAAW,mBApJzD0hE,EAAAx1B,GAqJDhZ,EAAe5T,sBArJdoiD,EAAA9lE,KAsJF,QAtJE8lE,EAAAx1B,GAAA,IA0JF,SA1JEw1B,EAAAx1B,GAAA,IA8JF,UA9JEw1B,EAAAx1B,GAAA,IAkKF,SAlKEw1B,EAAAx1B,GAAA,8BAuJCizB,EAAerhD,EAAc7P,IAAI,YACvCqM,EAASA,EAAOriB,MAAMknE,GAxJjBuC,EAAAr1D,OAAA,6BA2JC+yD,EAAgBthD,EAAc7P,IAAI,SACxCqM,EAASA,EAAOriB,MAAMmnE,GA5JjBsC,EAAAr1D,OAAA,6BA+JCgzD,EAAiBvhD,EAAc7P,IAAI,IACzCqM,EAASA,EAAOriB,MAAMonE,GAhKjBqC,EAAAr1D,OAAA,6BAmKLiO,EAASA,EAAOriB,MAAM6lB,GAnKjB4jD,EAAAr1D,OAAA,6BAAAq1D,EAAAr1D,OAAA,6BAAAq1D,EAAAr1D,OAAA,sBA2KLizD,EAAsB3B,EAAwBztE,EAAKjF,MAAMuJ,eA3KpDktE,EAAAU,GA4KHpmE,EA5KG0lE,EAAA9lE,KA6KJ,SA7KI8lE,EAAAU,GAAA,IAgLJ,WAhLIV,EAAAU,GAAA,IAiLJ,YAjLIV,EAAAU,GAAA,IAoLJ,SApLIV,EAAAU,GAAA,8BAAAV,EAAA9lE,KAAA,IA8KQ1L,EAAKmyE,oBAAoB/C,GA9KjC,gBA8KPhlD,EA9KOonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IAkLQ1L,EAAKoyE,uBAAuBhD,GAlLpC,gBAkLPhlD,EAlLOonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,6BAqLDgU,EAAenwB,EAAKgyE,kBArLnBR,EAAA9lE,KAAA,IAsLQykB,EAAa9C,SAAS+hD,EAAoBviD,KAAKllB,SAtLvD,gBAsLPyiB,EAtLOonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,6BAAAq1D,EAAAr1D,OAAA,6BA2LPiO,IAAWpqB,EAAK+L,MAAMqe,GAAQhsB,UAChCgsB,EAASpqB,EAAK+L,MAAMqe,GAAQrM,IAAI,OA5LvByzD,EAAAr1D,OAAA,sBAAAq1D,EAAAa,GAgMHvmE,EAhMG0lE,EAAA9lE,KAiMJ,SAjMI8lE,EAAAa,GAAA,IAoMJ,SApMIb,EAAAa,GAAA,8BAAAb,EAAA9lE,KAAA,IAkMQ1L,EAAKsyE,cAAc7E,GAlM3B,gBAkMPrjD,EAlMOonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,6BAqMDgU,EAAenwB,EAAKgyE,kBArMnBR,EAAA9lE,KAAA,IAsMQykB,EAAad,UAAUo+C,GAtM/B,gBAsMPrjD,EAtMOonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IAyMiB1L,EAAKo8B,aAAa53B,GAAa,EAAO6iE,EAAckG,GAzMrE,gBAyMDxxC,EAzMCy1C,EAAA/iE,OA0M+B,OAArBstB,EAAU8xB,SACzBzjC,EAAS2R,EAAU8xB,QA3Md2jB,EAAAr1D,OAAA,6BAAAq1D,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IAiNa1L,EAAKo8B,aAAa53B,GAAa,EAAO6iE,EAAckG,GAjNjE,YAiNLgC,EAjNKiC,EAAA/iE,KAmNX2b,EAASpqB,EAAK+L,MAAM,IAEhBwjE,GAAcvvE,EAAK+L,MAAMwjE,EAAUjzC,QAAQl+B,QArNpC,CAAAozE,EAAA9lE,KAAA,aAsNT0e,EAASpqB,EAAK+L,MAAMwjE,EAAUjzC,SAE1BgxC,EAxNK,CAAAkE,EAAA9lE,KAAA,iBAAA8lE,EAAA9lE,KAAA,IAyNgB1L,EAAK0xE,cAzNrB,UAyNDlC,EAzNCgC,EAAA/iE,QA2NL2b,EAASA,EAAO7d,KAAKijE,IA3NhB,SAAAgC,EAAA9lE,KAAA,0BAAA8lE,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IAyOD8P,QAAQqD,IAAI,CACpB7e,EAAK67B,kBAAkBr3B,GACvBxE,EAAKq+B,kBAAkB,CAACvyB,GAAQnB,GAChC3K,EAAKmtE,eAAe,mBAAoBrhE,EAAOtH,EAAamG,KA5OnD,YAAA8kE,EAAA+B,EAAA/iE,KAAAihE,GAAAj1E,OAAAsyB,EAAA,EAAAtyB,CAAAg1E,EAAA,GAsOT9iE,GAtOS+iE,GAAA,GAuOThxC,GAvOSgxC,GAAA,GAwOTpiE,GAxOSoiE,GAAA,KA+OP/iE,IAAc+xB,IAAkBA,GAAe5yB,IA/OxC,CAAA0lE,EAAA9lE,KAAA,iBAAA8lE,EAAA9lE,KAAA,IAgP4B1L,EAAK67B,kBAAkBr3B,EAAak6B,GAAe5yB,GAAOgS,aAhPtF,SAgPH6xD,GAhPG6B,EAAA/iE,KAiPT2b,EAASpqB,EAAK+L,MAAMY,IAAYoR,IAAI4xD,IAAwBnjE,MAAM,GAAGzE,MAAM,KAAKgW,IAAIzQ,IAAMvF,MAAM,KAjPvF,gBAAAypE,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IAwPD8P,QAAQqD,IAAI,CACpB7e,EAAKmtE,eAAe,mBAAoBrhE,EAAOtH,EAAamG,GAC5D3K,EAAKmtE,eAAe,eAAgBrhE,EAAOtH,EAAamG,KA1P/C,gBAAAilE,GAAA4B,EAAA/iE,KAAAohE,GAAAp1E,OAAAsyB,EAAA,EAAAtyB,CAAAm1E,GAAA,GAsPTE,GAtPSD,GAAA,GAuPTnE,GAvPSmE,GAAA,GA6PPC,IAAoBpE,KACtBthD,EAASshD,GAAa3jE,MAAM,KAAKgW,IAAI+xD,KA9P5B0B,EAAAr1D,OAAA,0BAkQexR,EAlQf,CAAA6mE,EAAA9lE,KAAA,iBAAA8lE,EAAA9lE,KAAA,IAkQ+B1L,EAAKm/B,oBAAoB,CAACrzB,GAAQnB,GAlQjE,SAAA6mE,EAAAe,GAAAf,EAAA/iE,KAAA+iE,EAAA9lE,KAAA,mBAAA8lE,EAAAe,IAkQ4E,EAlQ5E,gBAkQLxC,GAlQKyB,EAAAe,KAmQcxC,GAAkBjkE,KACzCse,EAAS2lD,GAAkBjkE,IApQlB0lE,EAAAr1D,OAAA,0BAwQFxR,EAxQE,CAAA6mE,EAAA9lE,KAAA,iBAAA8lE,EAAA9lE,KAAA,IAwQc1L,EAAKq8B,mBAAmB73B,EAAamG,GAxQnD,SAAA6mE,EAAAgB,GAAAhB,EAAA/iE,KAAA+iE,EAAA9lE,KAAA,mBAAA8lE,EAAAgB,IAwQ8D,EAxQ9D,gBAwQXpoD,EAxQWonD,EAAAgB,GAAAhB,EAAAr1D,OAAA,0BAgRP1hB,OAAOoE,KAAKotE,GAAWj9C,SAASljB,GAhRzB,CAAA0lE,EAAA9lE,KAAA,iBAiRHs3B,GAAiBipC,EAAUngE,GAC3B0gB,GAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UAnRhC+tC,EAAA/lE,KAAA,IAAA+lE,EAAA9lE,KAAA,IAsRQ1L,EAAKgtB,yBAAyBR,GAAgBwW,IAtRtD,SAsRP5Y,EAtROonD,EAAA/iE,KAAA+iE,EAAA9lE,KAAA,mBAAA8lE,EAAA/lE,KAAA,IAAA+lE,EAAAiB,GAAAjB,EAAA,oBA0RJpnD,IAAUpqB,EAAK+L,MAAMqe,GAAQhsB,UAChCgsB,EAAS,KA3RFonD,EAAA9lE,KAAA,0BAAA8lE,EAAA9lE,KAAA,IA8RM1L,EAAK0yE,cAAcluE,EAAYqoB,KAAK/gB,OA9R1C,SA8RTse,EA9RSonD,EAAA/iE,KAAA,gBAAA+iE,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IAkSI1L,EAAK2yE,iBAAiBnuE,EAAamG,GAlSvC,gBAkSXyf,EAlSWonD,EAAA/iE,KAAA+iE,EAAAr1D,OAAA,0BAqSP1hB,OAAOoE,KAAKotE,GAAWj9C,SAASljB,GArSzB,CAAA0lE,EAAA9lE,KAAA,iBAAA8lE,EAAA9lE,KAAA,IAsSM1L,EAAKwrB,gBAAgB1f,EAAOnB,GAtSlC,UAsSTyf,EAtSSonD,EAAA/iE,QAuSM2b,EAAOhsB,UACpBgsB,EAAS,KAxSFonD,EAAA9lE,KAAA,uBA2SUf,EA3SV,CAAA6mE,EAAA9lE,KAAA,iBAAA8lE,EAAA9lE,KAAA,IA2S0B1L,EAAKwrB,gBAAgBhnB,EAAYsH,MAAOnB,GA3SlE,SAAA6mE,EAAAoB,GAAApB,EAAA/iE,KAAA+iE,EAAA9lE,KAAA,mBAAA8lE,EAAAoB,IA2S6E,EA3S7E,UA2SLv5C,GA3SKm4C,EAAAoB,MA4SYv5C,GAAaj7B,UAChCi7B,GAAe,KAEjBjP,EAASiP,GA/SA,gBAAAm4C,EAAAr1D,OAAA,0BAmTcxR,EAnTd,CAAA6mE,EAAA9lE,KAAA,iBAAA8lE,EAAA9lE,KAAA,IAmT8B1L,EAAKwrB,gBAAgBhnB,EAAYqoB,KAAK/gB,MAAOnB,GAnT3E,SAAA6mE,EAAAqB,GAAArB,EAAA/iE,KAAA+iE,EAAA9lE,KAAA,mBAAA8lE,EAAAqB,IAmTsF,EAnTtF,gBAmTLlkE,GAnTK6iE,EAAAqB,MAqTTzoD,EAASzb,IArTA6iE,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IA4TkD8P,QAAQqD,IAAI,CACvE7e,EAAKmtE,eAAe,MAAOrhE,EAAOtH,EAAamG,GAAS,GACxD3K,EAAKmtE,eAAe,aAAcrhE,EAAOtH,EAAamG,GAAS,GAC/D3K,EAAKmtE,eAAe,oBAAqBrhE,EAAOtH,EAAamG,GAAS,KA/T7D,gBAAAslE,GAAAuB,EAAA/iE,KAAAyhE,GAAAz1E,OAAAsyB,EAAA,EAAAtyB,CAAAw1E,GAAA,GA4TNE,GA5TMD,GAAA,GA4TKE,GA5TLF,GAAA,GA4TkBG,GA5TlBH,GAAA,GAsUPI,GAAuBD,GAEvBA,IAA0BF,IAAaC,KACnC1B,GAAiB0B,GAAYroE,MAAMooE,GAAUpyD,IAAI,MACvDuyD,GAAuBD,GAAuB9jE,KAAKmiE,KAGrDtkD,EAAS,CACPkmD,wBACAD,2BA/USmB,EAAAr1D,OAAA,0BAqVP1hB,OAAOoE,KAAKotE,GAAWj9C,SAASljB,GArVzB,CAAA0lE,EAAA9lE,KAAA,iBAsVHs3B,GAAiBipC,EAAUngE,GAtVxB0lE,EAAA9lE,KAAA,IAuVM1L,EAAK8yE,uBAAuB9vC,GAAgBr4B,EAAS8iE,GAvV3D,SAuVTrjD,EAvVSonD,EAAA/iE,KAAA+iE,EAAA9lE,KAAA,0BAAA8lE,EAAA9lE,KAAA,IA6VC8P,QAAQqD,IAAI,CACpB7e,EAAK67B,kBAAkBr3B,GACvBxE,EAAKmtE,eAAe,mBAAoBrhE,EAAOtH,EAAamG,GAC5D08D,EAAernE,EAAK+yE,6BAA6BpoE,EAAS8iE,EAAyB3hE,GAAS,OAhWrF,SAAA2kE,GAAAe,EAAA/iE,KAAAiiE,GAAAj2E,OAAAsyB,EAAA,EAAAtyB,CAAAg2E,GAAA,GA0VPE,GA1VOD,GAAA,GA2VPE,GA3VOF,GAAA,GA4VPG,GA5VOH,GAAA,GAqWLE,IAAqBD,KACjBt3C,GAAeu3C,GAAkB7oE,MAAM4oE,IACzCI,GAAoB13C,GACpBw3C,KAAqB7wE,EAAK+L,MAAM8kE,IAAkBzyE,UACpD2yE,GAAoBA,GAAkBxkE,KAAKvM,EAAK+L,MAAM8kE,MAExDzmD,EAAS2mD,IA3WF,gBAAAS,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IAkX6C8P,QAAQqD,IAAI,CAClE7e,EAAKmtE,eAAe,kBAAmBrhE,EAAOtH,EAAamG,GAC3D3K,EAAKmtE,eAAe,yBAA0BrhE,EAAOtH,EAAamG,KApXzD,gBAAAqmE,GAAAQ,EAAA/iE,KAAAwiE,GAAAx2E,OAAAsyB,EAAA,EAAAtyB,CAAAu2E,GAAA,GAkXNE,GAlXMD,GAAA,GAkXYE,GAlXZF,GAAA,GAuXNC,KACHA,GAAmBlxE,EAAK+L,MAAM,IAG3BolE,KACHA,GAA0BnxE,EAAK+L,MAAM,IAGvCqe,EAAS+mD,GAAwB3kE,MAAM0kE,IA/X5BM,EAAAr1D,OAAA,6BAAAq1D,EAAA9lE,KAAA,IAkYkC8P,QAAQqD,IAAI,CACvD7e,EAAKmtE,eAAe,aAAcrhE,EAAOtH,EAAamG,GAAS,GAC/D3K,EAAKmtE,eAAe,oBAAqBrhE,EAAOtH,EAAamG,GAAS,KApY7D,gBAAAymE,GAAAI,EAAA/iE,KAAA4iE,GAAA52E,OAAAsyB,EAAA,EAAAtyB,CAAA22E,GAAA,GAkYN9lE,GAlYM+lE,GAAA,GAkYMC,GAlYND,GAAA,GAuYN/lE,KACHA,GAAatL,EAAK+L,MAAM,IAErBulE,KACHA,GAAqBtxE,EAAK+L,MAAM,KAGlCqe,EAASknD,GAAmB9kE,MAAMlB,KAIvBmB,GAAGzM,EAAK+L,MAAM,MACvBqe,EAASpqB,EAAK+L,MAAM,IAnZXylE,EAAAr1D,OAAA,6BAAAq1D,EAAAr1D,OAAA,6BAAAq1D,EAAAr1D,OAAA,SA0ZRiO,GA1ZQ,0BAAAonD,EAAA3kE,SAAAwgE,EAAAvyE,KAAA,gBApkKE,gBAAAk4E,EAAAC,EAAAC,EAAAC,GAAA,OAAA/F,EAAArgE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAg+KnBs4E,mBAh+KmB,eAAAC,EAAA54E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAg+KE,SAAAmoE,EAAO79B,GAAP,IAAA33B,EAAAqO,EAAA/R,EAAAm5D,EAAAC,EAAAxmE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAkoE,GAAA,cAAAA,EAAAhoE,KAAAgoE,EAAA/nE,MAAA,UAAkBoS,EAAlB01D,EAAA10E,OAAA,QAAAmqB,IAAAuqD,EAAA,GAAAA,EAAA,GAAgC,SAC7CrnD,EADa,mBAAA1qB,OACsBg0C,EADtB,KAAAh0C,OACmCqc,KAChD1D,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAHvB,CAAAq1E,EAAA/nE,KAAA,eAAA+nE,EAAAt3D,OAAA,SAIVnc,EAAK+L,MAAMqO,IAJD,cAAAq5D,EAAA/nE,KAAA,EAOS1L,EAAKojE,oBAAoB3tB,EAAW33B,GAP7C,YAOfy1D,EAPeE,EAAAhlE,MAAA,CAAAglE,EAAA/nE,KAAA,gBAAA+nE,EAAAt3D,OAAA,SASVnc,EAAK+L,MAAMwnE,IATD,eAAAE,EAAAt3D,OAAA,SAYZ,MAZY,yBAAAs3D,EAAA5mE,SAAAymE,EAAAx4E,SAh+KF,gBAAA44E,GAAA,OAAAL,EAAAtmE,MAAAjS,KAAAkS,YAAA,GAAAlS,KA8+KnB64E,yBA9+KmB,eAAAC,EAAAn5E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA8+KQ,SAAA0oE,EAAOrvE,EAAamG,GAApB,IAAAmT,EAAAg2D,EAAAC,EAAAC,EAAArnE,EAAAw9B,EAAA8pC,EAAAC,EAAAlnE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA4oE,GAAA,cAAAA,EAAA1oE,KAAA0oE,EAAAzoE,MAAA,UAA6BoS,EAA7Bo2D,EAAAp1E,OAAA,QAAAmqB,IAAAirD,EAAA,GAAAA,EAAA,GAA2C,SACpEvpE,EAAUA,GAAW3K,EAAKjF,MAAM4P,QADP,CAAAwpE,EAAAzoE,KAAA,eAAAyoE,EAAAh4D,OAAA,SAGhB,MAHgB,cAAAg4D,EAAAzoE,KAAA,EAUf8P,QAAQqD,IAAI,CACpB7e,EAAKomC,0BAA0B5hC,EAAYqoB,KAAK/gB,MAAO,MAAO,GAAI,GAAIgS,GACtE9d,EAAKomC,0BAA0B5hC,EAAYqoB,KAAK/gB,MAAO,aAAc,GAAI,GAAIgS,GAC7E9d,EAAKomC,0BAA0B5hC,EAAYqoB,KAAK/gB,MAAO,gBAAiB,CAACnB,GAAU,GAAImT,KAbhE,UAAAg2D,EAAAK,EAAA1lE,KAAAslE,EAAAt5E,OAAAsyB,EAAA,EAAAtyB,CAAAq5E,EAAA,GAOvBE,EAPuBD,EAAA,GAQvBpnE,EARuBonE,EAAA,GASvB5pC,EATuB4pC,EAAA,GAgBzBC,EAAMh0E,EAAK+L,MAAMioE,GACjBrnE,EAAa3M,EAAK+L,MAAMY,GACxBw9B,EAAenqC,EAAK+L,MAAMo+B,GAErBx9B,EAAWvO,SAAY+rC,EAAa/rC,SAAY41E,EAAI51E,SAAY4B,EAAK+L,MAAMo+B,GAAciqC,GAAG,KAAMp0E,EAAK+L,MAAMY,GAAYgD,GAAG3P,EAAK+L,MAAMo+B,IApBnH,CAAAgqC,EAAAzoE,KAAA,gBAqBjBuoE,EAAYj0E,EAAK2uD,aAAa3uD,EAAK+L,MAAMY,GAAYH,MAAMJ,SAAS4nE,EAAIj2D,IAAI,KAAKhW,MAAM4E,EAAWH,MAAM29B,OArBvFgqC,EAAAh4D,OAAA,SAsBhB83D,GAtBgB,eAAAE,EAAAh4D,OAAA,SAyBlBxP,GAzBkB,yBAAAwnE,EAAAtnE,SAAAgnE,EAAA/4E,SA9+KR,gBAAAu5E,EAAAC,GAAA,OAAAV,EAAA7mE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAygLnB+gC,kBAzgLmB,eAAA04C,EAAA95E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAygLC,SAAAqpE,EAAOhwE,GAAP,IAAAsZ,EAAA5O,EAAAid,EAAA/R,EAAA3b,EAAAkO,EAAAsB,EAAAyzC,EAAAC,EAAA8yB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApoE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8pE,GAAA,cAAAA,EAAA5pE,KAAA4pE,EAAA3pE,MAAA,UAAoBoS,EAApBs3D,EAAAt2E,OAAA,QAAAmqB,IAAAmsD,EAAA,GAAAA,EAAA,GAAkC,SAAUlmE,EAA5CkmE,EAAAt2E,OAAA,QAAAmqB,IAAAmsD,EAAA,IAAAA,EAAA,GAEZjpD,EAFY,kBAAA1qB,OAEsB+C,EAAYqoB,KAAK/gB,MAFvC,KAAArK,OAEgDqc,KAC5D1D,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAJxB,CAAAi3E,EAAA3pE,KAAA,eAAA2pE,EAAAl5D,OAAA,SAKTnc,EAAK+L,MAAMqO,IALF,cAQd3b,EAAW+F,EAAY/F,SART42E,EAAA3pE,KAAA,EAUK1L,EAAKomC,0BAA0B5hC,EAAYqoB,KAAK/gB,MAAO,aAAc,GAAI,GAAIgS,GAVlF,WAUdnR,EAVc0oE,EAAA5mE,QAaCS,EAbD,CAAAmmE,EAAA3pE,KAAA,gBAcVuC,EAAyC,SAAhCjO,EAAKjF,MAAMmT,iBACpBwzC,EAAiBt1C,SAAS8C,GAAc,KACxCyyC,EAAev1C,SAAS8C,GAAc,KAhB5BmmE,EAAA3pE,KAAA,GAiBQ1L,EAAKwO,gBAAgBhK,EAAYmD,QAASsG,EAAQyzC,EAAgBC,GAAc,GAjBxF,QAiBV8yB,EAjBUY,EAAA5mE,KAmBZimE,EAAc,CAChBxvE,KAAM,KACN8vE,SAAU,MAGRL,EAAa,CACfzvE,KAAM,KACN8vE,SAAU,MAGZP,EAAU11E,QAAQ,SAAAiG,GAChB,IAAMgwE,EAAW9oE,KAAK+9C,IAAI79C,SAASpH,EAAEkK,WAAa9C,SAAS8C,IACvD9C,SAASpH,EAAEkK,WAAa9C,SAAS8C,MAAgBwlE,EAAYM,UAAYA,EAAWN,EAAYM,YAClGN,EAAYM,SAAWA,EACvBN,EAAYxvE,KAAOF,GAGjBoH,SAASpH,EAAEkK,WAAa9C,SAAS8C,KAAeylE,EAAWK,WAC7DL,EAAWK,SAAWA,EACtBL,EAAWzvE,KAAOF,KAKlB0vE,EAAYxvE,MAAQyvE,EAAWzvE,OAC3B0vE,EAAmB50E,EAAK+L,MAAM2oE,EAAYxvE,KAAKoK,WAC/CulE,EAAkB70E,EAAK+L,MAAM4oE,EAAWzvE,KAAKoK,WAC7CwlE,EAAa90E,EAAK+L,MAAM2oE,EAAYxvE,KAAKgK,WACzC6lE,EAAY/0E,EAAK+L,MAAM4oE,EAAWzvE,KAAKgK,WACvC8lE,EAAWD,EAAUvoE,MAAMsoE,GAC3BG,EAAYJ,EAAgBroE,MAAMooE,GAClCM,EAAoBD,EAAUl3D,IAAIi3D,GAClCG,EAA0Bn1E,EAAK+L,MAAMmD,GAAW1C,MAAMsoE,GAC5DnoE,EAAaioE,EAAiBroE,KAAK2oE,EAAkBntE,MAAMotE,KApD7C,eAyDdxoE,IAAe3M,EAAK+L,MAAMY,GAAYvO,UACxCuO,EAAa3M,EAAKuP,iBAAiB5C,EAAYlO,MAI5CkO,GAAc3M,EAAK+L,MAAMY,GAAYvO,SAAW4B,EAAK+L,MAAMY,GAAYF,GAAG,MAC7EE,EAAa3M,EAAK+L,MAAM,IA/DRspE,EAAAl5D,OAAA,SAkEXnc,EAAKytB,8BAA8BtB,EAAexf,IAlEvC,yBAAA0oE,EAAAxoE,SAAA2nE,EAAA15E,SAzgLD,gBAAAw6E,GAAA,OAAAf,EAAAxnE,MAAAjS,KAAAkS,YAAA,GAAAlS,KA6kLnBy6E,gBAAkB,WAAuB,IAAtBC,EAAsBxoE,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GAOvC,OANIhN,EAAKjF,MAAMw6E,iBAAyD,oBAA/Bv1E,EAAKjF,MAAMw6E,iBAElDv1E,EAAKjF,MAAMw6E,gBAAgB,KAAMC,IAI5B,GAplLU16E,KAylLnBuf,cAAgB,SAAC1Y,EAAKuD,GAAoB,IAAdiyB,EAAcnqB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAR,IAIhC,OAHIhN,EAAKjF,MAAMsf,eAAqD,oBAA7Bra,EAAKjF,MAAMsf,eAChDra,EAAKjF,MAAMsf,cAAc1Y,EAAKuD,EAAMiyB,GAE/BjyB,GA7lLUpK,KA+lLnB62C,mCAAqC,SAAC8jC,EAAY9zE,EAAKuD,GAAoB,IAAdiyB,EAAcnqB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAR,IACjE,GAAIhN,EAAKjF,MAAMsf,eAAqD,oBAA7Bra,EAAKjF,MAAMsf,eAAgCnQ,KAAKC,UAAUjF,GAAMpG,QAAQ,IAAS,CACtH,IAAMsb,EAAapa,EAAKwtB,8BAA8BioD,EAAY,IAClEr7D,EAAWzY,GAAOuD,EAClBlF,EAAKjF,MAAMsf,cAAco7D,EAAYr7D,EAAY+c,GAAK,GAExD,OAAOjyB,GArmLUpK,KAumLnB2yB,8BAAgC,SAAC9rB,EAAKuD,GAAoB,IAAdiyB,EAAcnqB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAR,IAIhD,OAHIhN,EAAKjF,MAAMsf,eAAqD,oBAA7Bra,EAAKjF,MAAMsf,eAChDra,EAAKjF,MAAMsf,cAAc1Y,EAAKuD,EAAMiyB,GAAK,GAEpCjyB,GA3mLUpK,KA6mLnB0yB,8BAAgC,SAAC7rB,GAA6B,IAAxBwT,EAAwBnI,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACnD,OAAOhN,EAAKmtC,cAAcxrC,EAAKwT,GAAc,IA9mL5Bra,KAgnLnBqyC,cAAgB,SAACxrC,GAAsD,IAAjDwT,EAAiDnI,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAlC,KAAM0oE,EAA4B1oE,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GACjEoN,EAAa,KACjBzY,EAAMA,EAAIiG,cACV,IAAM+tE,EAAoB31E,EAAKuuB,uBAE/B,GAAIvuB,EAAKjF,MAAMqf,YAAcpa,EAAKjF,MAAMqf,WAAWu7D,IAAsB31E,EAAKjF,MAAMqf,WAAWu7D,GAAmBh0E,GAChHyY,EAAapa,EAAKjF,MAAMqf,WAAWu7D,GAAmBh0E,QAEjD,GAAI+zE,EAAiB,CAC1B,IAAME,EAAgB51E,EAAK65C,cAAc,cACrC+7B,GAAiBA,EAAcD,IAAsBC,EAAcD,GAAmBh0E,KACxFyY,EAAaw7D,EAAcD,GAAmBh0E,IAWlD,OAPwByY,GAAcA,EAAWlV,OAAuC,OAA9BkV,EAAWy7D,gBAA2BzpE,SAASgO,EAAWy7D,iBAAmBzpE,SAASe,KAAKg5B,MAAM,MAQlJ/rB,EAAWlV,KAEbiQ,GAzoLUra,KA2oLnBm0B,iBA3oLmB,eAAA6mD,EAAAr7E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2oLA,SAAA4qE,EAAO3W,EAAY56D,GAAnB,IAAAwxE,EAAAC,EAAA73C,EAAA83C,EAAAC,EAAA,OAAA5qD,EAAAtwB,EAAAsQ,KAAA,SAAA6qE,GAAA,cAAAA,EAAA3qE,KAAA2qE,EAAA1qE,MAAA,cAAA0qE,EAAA1qE,KAAA,EAIP8P,QAAQqD,IAAI,CACpB7e,EAAKwrB,gBAAgBhnB,EAAYqoB,KAAK/gB,MAAOszD,GAAY,GACzDp/D,EAAKojE,oBAAoB5+D,EAAYqoB,KAAK/gB,SAN3B,cAAAkqE,EAAAI,EAAA3nE,KAAAwnE,EAAAx7E,OAAAsyB,EAAA,EAAAtyB,CAAAu7E,EAAA,GAEf53C,EAFe63C,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAYn2E,EAAK+L,MAAM,GACvB/L,EAAK+L,MAAMqyB,GAAmBzuB,GAAG,IAAM3P,EAAK+L,MAAMmqE,GAAuBvmE,GAAG,KAC9EwmE,EAAYn2E,EAAK+L,MAAMqyB,GAAmBrgB,IAAI/d,EAAK+L,MAAMmqE,KAX1CE,EAAAj6D,OAAA,SAcVg6D,GAdU,wBAAAC,EAAAvpE,SAAAkpE,EAAAj7E,SA3oLA,gBAAAu7E,EAAAC,GAAA,OAAAR,EAAA/oE,MAAAjS,KAAAkS,YAAA,GAAAlS,KA2pLnBy7E,WAAa,SAACniD,GACZ,OAAOlV,OAAOs3D,KAAKpiD,EAAK,SAAU,aA5pLjBt5B,KA8pLnB27E,mBA9pLmBh8E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA8pLE,SAAAurE,IAAA,IAAA/rE,EAAAgsE,EAAA7oE,EAAA8oE,EAAAC,EAAAC,EAAA9pE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAwrE,GAAA,cAAAA,EAAAtrE,KAAAsrE,EAAArrE,MAAA,UAAOf,EAAPmsE,EAAAh4E,OAAA,QAAAmqB,IAAA6tD,EAAA,GAAAA,EAAA,GAAiB,KAC9BH,EAAkB,GACxBhsE,EAAUA,GAAW3K,EAAKjF,MAAM4P,QAFb,CAAAosE,EAAArrE,KAAA,eAAAqrE,EAAA56D,OAAA,SAKVw6D,GALU,UAQb7oE,EAAgB1B,SAASe,KAAKg5B,MAAQ,OAEtCywC,EAAsB52E,EAAK8P,gBAAgB,CAAC,QAAS,mBACnC8c,QAXL,CAAAmqD,EAAArrE,KAAA,gBAAAqrE,EAAArrE,KAAA,GAYX1L,EAAK+K,aAAa6rE,EAAoB77E,MAAMi8E,UAA5C,eAAAC,EAAAx8E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAuD,SAAA+rE,EAAOC,GAAP,IAAArrE,EAAAsrE,EAAA5yE,EAAAkI,EAAA2qE,EAAA5vE,EAAA6vE,EAAAC,EAAAtrE,EAAAurE,EAAA3B,EAAA,OAAAtqD,EAAAtwB,EAAAsQ,KAAA,SAAAksE,GAAA,cAAAA,EAAAhsE,KAAAgsE,EAAA/rE,MAAA,cACrDI,EAAQ,QACRsrE,EAAiBD,EAASO,OAC1BlzE,EAAc4yE,EAAetrE,GAHwB2rE,EAAA/rE,KAAA,EAKrD1L,EAAKjF,MAAMqnC,aAAa59B,EAAYvH,KAAMuH,EAAYmD,QAASnD,EAAY69B,KALtB,cAAAo1C,EAAA/rE,KAAA,EAOrC1L,EAAKwrB,gBAAgBhnB,EAAYvH,KAAM0N,GAPF,QAOrD+B,EAPqD+qE,EAAAhpE,OAQ5C/B,EAAQiD,GAAG,KACJ,aACd0nE,EAAaF,EAASE,WACtB5vE,EAAemvE,EAAoBtuE,MACnCgvE,EAAgBV,EAAoB36E,MACpCs7E,EAAYX,EAAoBe,aAChC1rE,EAASkrE,EAASS,qBAAuB9pE,EAAgB,UAAY,SACrE0pE,EAA4B,YAAXvrE,EACjB4pE,EAAiBnkD,IAAsC,IAA/BylD,EAASS,qBAA4BC,MAAMvnE,OAAO,uBAAyB,OACzGqmE,EAAgB1uE,KAAK,CACnB6D,QACAG,SACAS,UACA6qE,YACAF,aACAS,YAdkB,aAelBrwE,eACA6vE,gBACAzB,iBACA2B,oBA3BuD,wBAAAC,EAAA5qE,SAAAqqE,EAAAp8E,SAAvD,gBAAAi9E,GAAA,OAAAd,EAAAlqE,MAAAjS,KAAAkS,YAAA,IAZW,aA4Cb6pE,EAAoB72E,EAAK8P,gBAAgB,CAAC,QAAS,iBACnC8c,QA7CH,CAAAmqD,EAAArrE,KAAA,gBAAAqrE,EAAArrE,KAAA,GA8CkB1L,EAAKg4E,wBAAwBrtE,GA9C/C,QAAAosE,EAAAtoE,KA+CI1P,QAAQ,SAAAo4E,GAC3B,IACMzqE,EAAUyqE,EAASc,WACnBnsE,EAAQqrE,EAASe,iBAAiBpsE,MAClCurE,EAAaF,EAASgB,iBAAiBrsE,MACvCssE,EAAoBjB,EAASiB,kBAC7BC,EAAc,iBAAA52E,OAAoB41E,EAApB,QACdG,GAAkBL,EAASmB,WAAanB,EAASoB,QACjD9wE,EAAezH,EAAK8P,gBAAgB,CAAC,YAAa,cAAe,UACjEwnE,EAAgBt3E,EAAK8P,gBAAgB,CAAC,YAAa,cAAe,UAClE0oE,EAAoBx4E,EAAK8P,gBAAgB,CAAC,YAAa,cAAe,cACtE+lE,EAAiBnkD,IAA0C,IAAnCylD,EAASsB,aAAaC,YAAmBb,MAAMvnE,OAAO,uBAAyB,OACvGrE,EAASkrE,EAASoB,QAAU,UAAYnsE,SAAS+qE,EAASsB,aAAaC,aAAe5qE,EAAgB,UAAY,SAClHypE,EAAS,GAAA91E,OAAMyd,OAAOmV,SAAS2K,OAAtB,MAAAv9B,OAAiCzB,EAAK8P,gBAAgB,CAAC,YAAa,cAApE,WAAArO,OAA2Fo1E,EAAkB8B,MAA7G,KAAAl3E,OAAsH01E,EAASgB,iBAAiBrsE,MAAhJ,UACf6qE,EAAgB1uE,KAAK,CACnB6D,QACAG,SACAS,UACA6qE,YACAF,aACAS,YAnBkB,QAoBlBrwE,eACA6vE,gBACAzB,iBACA2B,iBACAa,iBACAD,oBACAI,wBA1Ea,eAAAzB,EAAA56D,OAAA,SA+EZw6D,GA/EY,yBAAAI,EAAAlqE,SAAA6pE,EAAA57E,SA9pLFA,KA+uLnBk9E,wBA/uLmB,eAAAY,EAAAn+E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+uLO,SAAA0tE,EAAOluE,GAAP,IAAAksE,EAAAvkB,EAAA9D,EAAAsqB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5tD,EAAAtwB,EAAAsQ,KAAA,SAAA6tE,GAAA,cAAAA,EAAA3tE,KAAA2tE,EAAA1tE,MAAA,cAClBmrE,EAAoB72E,EAAK8P,gBAAgB,CAAC,QAAS,gBAEnDwiD,EAAYukB,EAAkBwC,YAAY1nB,WAC1CnD,EAAuBqoB,EAAkBwC,YAAYC,aACrDR,EAAgBjC,EAAkBwC,YAAYP,cAL5BM,EAAA1tE,KAAA,EAOlB8P,QAAQqD,IAAI,CAChB7e,EAAKjF,MAAMqnC,aAAa02C,EAAc77E,KAAM67E,EAAcnxE,QAASmxE,EAAcz2C,KACjFriC,EAAKjF,MAAMqnC,aAAaosB,EAAqBvxD,KAAMuxD,EAAqB7mD,QAAS6mD,EAAqBnsB,OAThF,cAAA+2C,EAAA1tE,KAAA,EAed8P,QAAQqD,IAAI,CACpB7e,EAAKqgC,kBAAkBmuB,EAAqBvxD,KAAM,cAAeq1D,EAAW,SAAU,CAAC1mD,OAAQ,CAAE2tE,MAAO5uE,KACxG3K,EAAKqgC,kBAAkBmuB,EAAqBvxD,KAAM,iBAAkBq1D,EAAW,SAAU,CAAC1mD,OAAQ,CAAE2tE,MAAO5uE,OAjBrF,cAAAouE,EAAAK,EAAA3qE,KAAAuqE,EAAAv+E,OAAAsyB,EAAA,EAAAtyB,CAAAs+E,EAAA,GAatBE,EAbsBD,EAAA,GActBE,EAdsBF,EAAA,GAoBlBG,EAAuB,GApBLC,EAAA1tE,KAAA,GAsBlB1L,EAAK+K,aAAakuE,EAAlB,eAAAO,EAAA/+E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAqC,SAAAsuE,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAArB,EAAAsB,EAAAC,EAAAC,EAAA9B,EAAAF,EAAAC,EAAAgC,EAAA3B,EAAA4B,EAAA7xE,EAAA9C,EAAA40E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjuE,EAAAgC,EAAA0qB,EAAA++C,EAAA,OAAA7sD,EAAAtwB,EAAAsQ,KAAA,SAAAsvE,GAAA,cAAAA,EAAApvE,KAAAovE,EAAAnvE,MAAA,cAEnCiuE,EAAUvtE,SAASstE,EAAMn3C,aAAao3C,SACtCC,EAAsBV,EAAqBl/D,KAAK,SAAA8gE,GAAK,OAAI1uE,SAAS0uE,EAAMv4C,aAAao3C,WAAaA,IAH/DkB,EAAAnvE,KAAA,EAO/B8P,QAAQqD,IAAI,CACpB7e,EAAK6rB,oBAAoB2iC,EAAqBvxD,KAAM,WAAY,CAAC08E,IACjE35E,EAAKqgC,kBAAkBy4C,EAAc77E,KAAM,gBAAiBy8E,EAAM57D,YAAa,SAAU,CAAElS,OAAQ,CAAEmvE,UAAWrB,EAAMtkD,qBAT/E,UAAAykD,EAAAgB,EAAApsE,KAAAqrE,EAAAr/E,OAAAsyB,EAAA,EAAAtyB,CAAAo/E,EAAA,GAKvCpB,EALuCqB,EAAA,GAMvCC,EANuCD,EAAA,GAYpCrB,EAZoC,CAAAoC,EAAAnvE,KAAA,gBAAAmvE,EAAA1+D,OAAA,UAahC,GAbgC,WAiBnC69D,EAAmBD,EAAiBA,EAAenuE,OAAO,SAAA0sE,GAC9D,OAAOA,EAAS/1C,aAAaw4C,YAActC,EAAarjD,iBACtDp1B,EAAK+L,MAAMusE,EAASx6D,aAAanO,GAAG+pE,EAAM57D,cAC1C9d,EAAK+L,MAAMusE,EAAS/1C,aAAay4C,cAAcvuE,GAAGgsE,EAAaC,aAC/DtsE,SAASqsE,EAAaC,YAAc7B,EAAkBwC,YAAY4B,4BAA8B9tE,KAAKg5B,MAAQ,MAC5G,GAGC8zC,EAAkBD,EAAiBx6C,OAAO,SAAC/zB,EAAMyvE,GACrD,OAAKzvE,EAIDzL,EAAK+L,MAAMmvE,EAAK34C,aAAa44C,aAAaxrE,GAAGlE,EAAK82B,aAAa44C,aAC1DD,EAEFzvE,EANEyvE,GAOR,MAEG/C,EAAmB19E,OAAOkR,OAAOkrE,EAAkB97E,MAAM0P,iBAAiBuP,KAAK,SAAAxV,GAAW,OAAIA,EAAYmD,QAAQC,gBAAkB6wE,EAAarjD,gBAAgBxtB,gBACjKqwE,EAAaj4E,EAAKuP,iBAAiBkpE,EAAaR,WAAYE,EAAiB15E,UAC7Ey5E,EAAmBz9E,OAAOkR,OAAOwsE,EAAiBiD,YAAYphE,KAAK,SAAAqhE,GAAgB,OAAIA,EAAiB1zE,QAAQC,gBAAkB6wE,EAAa6C,WAAW1zE,gBAC1JsyE,EAAal6E,EAAKkN,YAAsC,IAA1BurE,EAAaC,YAAmBpoE,OAAO,gBAErEioE,EAAUqB,EAAsBA,EAAoBr3C,aAAag2C,QAAU,MAzCxC,CAAAsC,EAAAnvE,KAAA,gBAAAmvE,EAAAnvE,KAAA,GA0CH1L,EAAK6rB,oBAAoB2iC,EAAqBvxD,KAAM,mBAAoB,CAACs7E,IA1CtE,QAAAsC,EAAA5tD,GAAA4tD,EAAApsE,KAAAosE,EAAAnvE,KAAA,iBAAAmvE,EAAA5tD,GA0CkF,KA1ClF,WA0CnCktD,EA1CmCU,EAAA5tD,GA2CnC3kB,EA3CmC,GAAA7G,OA2CxB02E,EAAiBl7E,KA3CO,OAAAwE,OA2CGw2E,EAAWjwE,QAAQ,GA3CtB,KAAAvG,OA2C4By2E,EAAiBpsE,MA3C7C,YAAArK,OA2C6Dy4E,GAChG10E,EAAQm0E,EAEVS,EAAgB,MAChBR,EA/CqC,CAAAiB,EAAAnvE,KAAA,gBAAAmvE,EAAAnvE,KAAA,GAgDV1L,EAAK00C,sBAAsBklC,EAAoBlhE,iBAhDrC,QAgDjC2hE,EAhDiCQ,EAAApsE,KAiDjC6rE,EAAmBD,EAAiBA,EAAe7oD,KAAKxX,KAAK,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBswE,EAAiBvwE,QAAQC,gBAAiB,KAClJwyE,EAAgBE,EAAmBt6E,EAAKuP,iBAAiBnD,SAASkuE,EAAiBp1E,KAAM,IAAKgzE,EAAiBz5E,UAAYuB,EAAK+L,MAAM,GAlD/F,eAqDnCwuE,EAAkBv6E,EAAKuP,iBAAiBkpE,EAAaR,WAAYC,EAAiBz5E,UAElF+7E,EAAiBP,EAAkBj6E,EAAK+L,MAAMkuE,EAAgB13C,aAAa44C,aAAapzE,MAAM,IAAO/H,EAAK+L,MAAM,GAChH0uE,EAAmBD,EAAe7qE,GAAG,GAAK3P,EAAK+L,MAAM0sE,EAAaR,YAAYl6D,IAAIy8D,GAAkBx6E,EAAK+L,MAAM,GAC/G2uE,EAAqB16E,EAAK8uD,qBAAqB2rB,EAAkBvC,EAAiBz5E,UAzD/Co8E,EAAAnvE,KAAA,GA8D/B8P,QAAQqD,IAAI,CACpB7e,EAAK0yE,cAAcyF,EAAiBrsE,OACpC9L,EAAKwrB,gBAAgB2sD,EAAiBrsE,MAAOnB,GAAS,KAhEf,QAAAgwE,EAAAE,EAAApsE,KAAAmsE,EAAAngF,OAAAsyB,EAAA,EAAAtyB,CAAAkgF,EAAA,GA4DvChuE,EA5DuCiuE,EAAA,GA6DvCjsE,EA7DuCisE,EAAA,GAmEzCjuE,EAAa3M,EAAKuP,iBAAiB5C,EAAYwrE,EAAiB15E,UAChEkQ,EAAmB3O,EAAKuP,iBAAiBZ,EAAkBwpE,EAAiB15E,UACtE46B,EAAe1qB,EAAiB5G,MAAM4E,GACtCyrE,EAAoB/+C,EAAa1pB,GAAG,GAAKsoE,EAAWl6D,IAAIsb,GAActxB,MAAM,KAAKC,QAAQ,GAAK,IAAM,MAI1GmxE,EAAqBlxE,KAAK,CACxBK,QACA9C,QACA+yE,UACAN,aACAQ,eACA2B,gBACAD,gBACAI,kBACAE,mBACAtC,mBACAD,mBACAE,oBACAsC,qBACApC,SAAU2B,EAAex/E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQw/E,EAAR,CAAyB/5E,GAAI65E,EAAewB,UAAU,SAAA3qE,GAAC,OAAIA,EAAED,OAASspE,EAAgBtpE,SAAU,OAxFlF,yBAAAkqE,EAAAhuE,SAAA4sE,EAAA3+E,SAArC,gBAAA0gF,GAAA,OAAAhC,EAAAzsE,MAAAjS,KAAAkS,YAAA,IAtBkB,eAAAosE,EAAAj9D,OAAA,SAkHjBg9D,GAlHiB,yBAAAC,EAAAvsE,SAAAgsE,EAAA/9E,SA/uLP,gBAAA2gF,GAAA,OAAA7C,EAAA7rE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAm2LnB4gF,4BAn2LmB,eAAAC,EAAAlhF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAm2LW,SAAAywE,EAAOxmD,GAAP,IAAAuH,EAAAyO,EAAAW,EAAAC,EAAAvvC,EAAA,OAAA8uB,EAAAtwB,EAAAsQ,KAAA,SAAAswE,GAAA,cAAAA,EAAApwE,KAAAowE,EAAAnwE,MAAA,UACtBixB,EAAkB38B,EAAKuuB,yBACvB6c,EAAgBprC,EAAK8P,gBAAgB,CAAC,UAAW,YAAa,eAClD8c,UAAWwe,EAAcgC,UAAUzQ,GAHzB,CAAAk/C,EAAAnwE,KAAA,gBAIpBqgC,EAAkBX,EAAcgC,UAAUzQ,GAC1CqP,EALoB,GAAAvqC,OAKGsqC,EALH,aAAAtqC,OAK8B2pC,EAAczpC,IAL5C,2CAAAF,OAKyF2zB,EALzF,cAAAymD,EAAAnwE,KAAA,EAMC1L,EAAKstC,kBAAkBtB,EAAmB,MAAM,GANjD,YAMpBvvC,EANoBo/E,EAAAptE,OAOyB,kBAAxBhS,EAAaixC,OAPd,CAAAmuC,EAAAnwE,KAAA,gBAAAmwE,EAAA1/D,OAAA,SAQjB1f,EAAaixC,OAAO9hC,OAAO,SAAAC,GAAE,MAAgB,+CAAZA,EAAG9E,MAAyD8E,EAAG2nB,GAAG5rB,gBAAkBwtB,EAAgBxtB,iBARpH,eAAAi0E,EAAA1/D,OAAA,SAWrB,MAXqB,yBAAA0/D,EAAAhvE,SAAA+uE,EAAA9gF,SAn2LX,gBAAAghF,GAAA,OAAAH,EAAA5uE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAg3LnBihF,mBAh3LmBthF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAg3LE,SAAA6wE,IAAA,IAAArxE,EAAAsxE,EAAAC,EAAA/vD,EAAA/R,EAAA+hE,EAAA1xE,EAAA2xE,EAAApvE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8wE,GAAA,cAAAA,EAAA5wE,KAAA4wE,EAAA3wE,MAAA,UAAOf,EAAPyxE,EAAAt9E,OAAA,QAAAmqB,IAAAmzD,EAAA,GAAAA,EAAA,GAAiB,KAAMH,EAAvBG,EAAAt9E,OAAA,QAAAmqB,IAAAmzD,EAAA,GAAAA,EAAA,GAA0C,KAC7DzxE,EAAUA,GAAW3K,EAAKjF,MAAM4P,QADb,CAAA0xE,EAAA3wE,KAAA,eAAA2wE,EAAAlgE,OAAA,SAGV,MAHU,WAMb+/D,EAAqBl8E,EAAK8P,gBAAgB,CAAC,QAAS,kBAClC8c,QAPL,CAAAyvD,EAAA3wE,KAAA,eAAA2wE,EAAAlgE,OAAA,SAQV,MARU,UAWbgQ,EAXa,mBAAA1qB,OAWsBkJ,EAXtB,KAAAlJ,OAWiCw6E,GAEjC,QADb7hE,EAAapa,EAAKmtC,cAAchhB,IAZnB,CAAAkwD,EAAA3wE,KAAA,gBAAA2wE,EAAAlgE,OAAA,SAcV/B,GAdU,eAiBb+hE,EAAkB,GAClB1xE,EAAkByxE,EAAmBnhF,MAAM0P,gBAlB9B4xE,EAAA3wE,KAAA,GAmBb1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAA6xE,EAAA7hF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAoxE,EAAOzwE,GAAP,IAAAtH,EAAAswB,EAAA0nD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjxE,EAAAkxE,EAAA,OAAA5xD,EAAAtwB,EAAAsQ,KAAA,SAAA6xE,GAAA,cAAAA,EAAA3xE,KAAA2xE,EAAA1xE,MAAA,cAC9ClH,EAAciG,EAAgBqB,GAC9BgpB,EAAoBtwB,EAAYswB,kBAFcsoD,EAAA1xE,KAAA,EAG9C1L,EAAKjF,MAAMqnC,aAAatN,EAAkB73B,KAAM63B,EAAkBntB,QAASmtB,EAAkBuN,KAH/C,cAAA+6C,EAAA1xE,KAAA,EAIvB1L,EAAK6rB,oBAAoBiJ,EAAkB73B,KAAM,aAJ1B,OAI9Cu/E,EAJ8CY,EAAA3uE,KAK3CguE,EAAa,EAL8B,YAK3BA,GAAcrwE,SAASowE,IALI,CAAAY,EAAA1xE,KAAA,gBAAA0xE,EAAA1xE,KAAA,GAWxC8P,QAAQqD,IAAI,CACpB7e,EAAK07E,4BAA4B5mD,EAAkBntB,SACnD3H,EAAK6rB,oBAAoBiJ,EAAkB73B,KAAM,cAAe,CAACw/E,IACjEz8E,EAAK6rB,oBAAoBiJ,EAAkB73B,KAAM,sBAAuB,CAACw/E,IACzEz8E,EAAK6rB,oBAAoBiJ,EAAkB73B,KAAM,gBAAiB,CAAC+C,EAAKjF,MAAM4P,QAAS8xE,MAfvC,WAAAC,EAAAU,EAAA3uE,KAAAkuE,EAAAliF,OAAAsyB,EAAA,EAAAtyB,CAAAiiF,EAAA,GAOhDE,EAPgDD,EAAA,GAQhDE,EARgDF,EAAA,GAShDG,EATgDH,EAAA,GAUhDI,EAVgDJ,EAAA,GAkBlD3qD,QAAQqc,IAAR,UAAA5sC,OAAsBg7E,EAAtB,OAAAh7E,OAAsCo7E,EAAtC,OAAAp7E,OAAsDq7E,EAAtD,OAAAr7E,OAAuEs7E,IAEnEC,EAAc,KACdC,EAAe,KACfC,EAAgB,KAChBL,GAA6B,OAAfA,IAChBG,EAAch9E,EAAKuP,iBAAiBstE,EAAYr4E,EAAY/F,WAEzC,OAAjBs+E,EA1B8C,CAAAK,EAAA1xE,KAAA,YA2BhDoxE,EAAc98E,EAAKuP,iBAAiButE,EAAa,MACjDC,EAAe/8E,EAAKuP,iBAAiBwtE,EAAcv4E,EAAY/F,WAC9CkR,GAAG,GA7B4B,CAAAytE,EAAA1xE,KAAA,YA8B9CwxE,EAAgBH,GAGhBE,EAAeF,EAAah1E,MAAM+0E,GAAa/+D,IAAIi/D,IAClCrtE,GAAGmtE,KAClBG,EAAeH,GAGX7wE,EAASwwE,EAAaD,GAAkBS,EAAattE,GAAG,GAAK,WAAa,UAEvD,OAArBssE,GAA6BA,EAAiBr0E,gBAAkBqE,EAxCtB,CAAAmxE,EAAA1xE,KAAA,gBAAA0xE,EAAAjhE,OAAA,kBA4CxCghE,EAAgBP,GAAmBA,EAAgB99E,OAAS89E,EAAgB,GAAK,KAEvFT,EAAgBrwE,GAAS,CACvBG,SACA+wE,cACAC,eACAC,gBACAC,iBAnD4C,QAKaV,IALbW,EAAA1xE,KAAA,iCAAA0xE,EAAAvwE,SAAA0vE,EAAAzhF,SAAhD,gBAAAuiF,GAAA,OAAAf,EAAAvvE,MAAAjS,KAAAkS,YAAA,IAnBa,eAAAqvE,EAAAlgE,OAAA,SA6EZnc,EAAKqa,cAAc8R,EAAegwD,IA7EtB,yBAAAE,EAAAxvE,SAAAmvE,EAAAlhF,SAh3LFA,KA+7LnBwiF,cA/7LmB,eAAAC,EAAA9iF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+7LH,SAAAqyE,EAAOpe,GAAP,IAAAqe,EAAA3/D,EAAAqO,EAAA/R,EAAAif,EAAAqkD,EAAA1wE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAoyE,GAAA,cAAAA,EAAAlyE,KAAAkyE,EAAAjyE,MAAA,UAAmB+xE,IAAnBC,EAAA5+E,OAAA,QAAAmqB,IAAAy0D,EAAA,KAAAA,EAAA,GAAuC5/D,EAAvC4/D,EAAA5+E,OAAA,QAAAmqB,IAAAy0D,EAAA,GAAAA,EAAA,GAAqD,SAC9Dte,EADS,CAAAue,EAAAjyE,KAAA,eAAAiyE,EAAAxhE,OAAA,UAEL,GAFK,UAMRgQ,EANQ,cAAA1qB,OAMsB29D,EANtB,KAAA39D,OAMoCg8E,EANpC,KAAAh8E,OAMmDqc,GAC7C,WAAhBA,EAPU,CAAA6/D,EAAAjyE,KAAA,aAQN0O,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAT9B,CAAAu/E,EAAAjyE,KAAA,eAAAiyE,EAAAxhE,OAAA,SAUHnc,EAAK+L,MAAMqO,IAVR,cAAAujE,EAAAjyE,KAAA,GAcW1L,EAAKjF,MAAMse,KAAK0C,IAAIsP,WAAW+zC,GAd1C,aAcV/lC,EAdUskD,EAAAlvE,MAAA,CAAAkvE,EAAAjyE,KAAA,YAiBR+xE,IACFpkD,EAAer5B,EAAKuP,iBAAiB8pB,EAAc,MAGrDA,EAAer5B,EAAK+L,MAAMstB,IAGRj7B,QAxBN,CAAAu/E,EAAAjyE,KAAA,YAyBU,WAAhBoS,EAzBM,CAAA6/D,EAAAjyE,KAAA,gBAAAiyE,EAAAxhE,OAAA,SA0BDnc,EAAKytB,8BAA8BtB,EAAekN,IA1BjD,eAAAskD,EAAAxhE,OAAA,SA4BDkd,GA5BC,eAAAskD,EAAAxhE,OAAA,SAgCP,MAhCO,yBAAAwhE,EAAA9wE,SAAA2wE,EAAA1iF,SA/7LG,gBAAA8iF,GAAA,OAAAL,EAAAxwE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAi+LnB0wB,gBAj+LmB,eAAAqyD,EAAApjF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAi+LD,SAAA2yE,EAAOxlE,EAAc8mD,GAArB,IAAAqe,EAAA3/D,EAAAqO,EAAA/R,EAAA5V,EAAAu5E,EAAAC,EAAA7uE,EAAAkqB,EAAA4kD,EAAAjxE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA2yE,GAAA,cAAAA,EAAAzyE,KAAAyyE,EAAAxyE,MAAA,UAAiC+xE,IAAjCQ,EAAAn/E,OAAA,QAAAmqB,IAAAg1D,EAAA,KAAAA,EAAA,GAAqDngE,EAArDmgE,EAAAn/E,OAAA,QAAAmqB,IAAAg1D,EAAA,GAAAA,EAAA,GAAmE,SAC9E7e,EADW,CAAA8e,EAAAxyE,KAAA,eAAAwyE,EAAA/hE,OAAA,UAEP,GAFO,UAMVgQ,EANU,gBAAA1qB,OAMsB6W,EANtB,KAAA7W,OAMsC29D,EANtC,KAAA39D,OAMoDg8E,EANpD,KAAAh8E,OAMmEqc,GAC/D,WAAhBA,EAPY,CAAAogE,EAAAxyE,KAAA,aAQR0O,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAT5B,CAAA8/E,EAAAxyE,KAAA,eAAAwyE,EAAA/hE,OAAA,SAULnc,EAAK+L,MAAMqO,IAVN,UAeMpa,EAAKiyB,kBAAkB3Z,GAf7B,CAAA4lE,EAAAxyE,KAAA,cAiBRlH,EAAcxE,EAAK8P,gBAAgB,CAAC,QAAQ,SAASwI,EAAavI,iBAjB1D,CAAAmuE,EAAAxyE,KAAA,gBAAAwyE,EAAAxyE,KAAA,GAmBN1L,EAAKjF,MAAMqnC,aAAa9pB,EAAc9T,EAAYmD,QAASw2E,GAnBrD,QAAAD,EAAAxyE,KAAA,wBAAAwyE,EAAA/hE,OAAA,UAqBL,GArBK,eAAA+hE,EAAAxyE,KAAA,GA4BN8P,QAAQqD,IAAI,CACpB7e,EAAKutD,iBAAiBj1C,GACtBtY,EAAK65B,mBAAmBvhB,EAAc8mD,EAAYthD,KA9BpC,WAAAigE,EAAAG,EAAAzvE,KAAAuvE,EAAAvjF,OAAAsyB,EAAA,EAAAtyB,CAAAsjF,EAAA,GA0Bd5uE,EA1Bc6uE,EAAA,KA2Bd3kD,EA3Bc2kD,EAAA,KAAAE,EAAAxyE,KAAA,YAkCV+xE,IACFpkD,EAAer5B,EAAKuP,iBAAiB8pB,EAAclqB,KAGrDkqB,EAAer5B,EAAK+L,MAAMstB,IAGRj7B,QAzCJ,CAAA8/E,EAAAxyE,KAAA,YA0CQ,WAAhBoS,EA1CQ,CAAAogE,EAAAxyE,KAAA,gBAAAwyE,EAAA/hE,OAAA,SA2CHnc,EAAKytB,8BAA8BtB,EAAekN,EAAc,KA3C7D,eAAA6kD,EAAA/hE,OAAA,SA6CHkd,GA7CG,QAAA6kD,EAAAxyE,KAAA,iBAiDd1L,EAAK2xB,eAAe,gCAAiCrZ,GAjDvC,eAAA4lE,EAAA/hE,OAAA,SAmDT,MAnDS,yBAAA+hE,EAAArxE,SAAAixE,EAAAhjF,SAj+LC,gBAAAsjF,EAAAC,GAAA,OAAAR,EAAA9wE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAshMnBwjF,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAAS90D,OAAuB,CACzC80D,EAAS90D,SACT80D,EAASC,kBAAkB,EAAG,OAC9B,IAAMlpB,EAAM7sC,SAASg2D,YAAY,QAEjC,OADAF,EAASC,kBAAkB,EAAG,GACvBlpB,EAET,OAAO,GA9hMUx6D,KAgiMnB4jF,WAAa,SAACtqD,EAAKr5B,EAAO8H,GACxB,IAAM87E,EAASl2D,SAASvtB,cAAc,UACtCyjF,EAAO/hF,IAAMw3B,EAGTr5B,GACFN,OAAOoE,KAAK9D,GAAOgE,QAAQ,SAAC6/E,EAAMp3E,GAChCm3E,EAAOC,GAAQ7jF,EAAM6jF,KAID,oBAAb/7E,IACL87E,EAAOE,WACTF,EAAOG,mBAAqB,WACA,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC3CF,EAAOG,mBAAqB,KAC5Bj8E,MAIJ87E,EAAOI,OAASl8E,GAIf87E,EAAOz+E,IAAOuoB,SAASC,eAAei2D,EAAOz+E,KAChDuoB,SAASu2D,KAAKC,YAAYN,IAzjMX7jF,KA4jMnBokF,YAAc,SAAAtsD,GACZ,IACE1oB,KAAK0U,MAAMgU,GACX,MAAOhxB,GACP,OAAO,EAET,OAAO,GAlkMU9G,KAokMnBy8B,aAAe,SAAC5vB,GACd,QAAOA,GAAmD,OAAzCA,EAAQmnC,MAAM,wBArkMdh0C,KAukMnBsoE,oBAvkMmB,eAAA+b,EAAA1kF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAukMG,SAAAi0E,EAAO9mE,GAAP,IAAAwF,EAAAqO,EAAA/R,EAAAyuD,EAAAwW,EAAAryE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA+zE,GAAA,cAAAA,EAAA7zE,KAAA6zE,EAAA5zE,MAAA,UAAqBoS,EAArBuhE,EAAAvgF,OAAA,QAAAmqB,IAAAo2D,EAAA,GAAAA,EAAA,GAAmC,SACjDlzD,EADc,eAAA1qB,OACiB6W,EADjB,KAAA7W,OACiCqc,KAC/C1D,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAHtB,CAAAkhF,EAAA5zE,KAAA,eAAA4zE,EAAAnjE,OAAA,SAIXnc,EAAK+L,MAAMqO,IAJA,cAAAklE,EAAA5zE,KAAA,EAOM1L,EAAK6rB,oBAAoBvT,EAAc,cAAe,GAAI,GAAIwF,GAPpE,cAOd+qD,EAPcyW,EAAA7wE,KAAA6wE,EAAAnjE,OAAA,SAQbnc,EAAKytB,8BAA8BtB,EAAe08C,IARrC,wBAAAyW,EAAAzyE,SAAAuyE,EAAAtkF,SAvkMH,gBAAAykF,GAAA,OAAAJ,EAAApyE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAilMnB43E,cAjlMmB,eAAA8M,EAAA/kF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAilMH,SAAAs0E,EAAOnnE,GAAP,IAAAwF,EAAAqO,EAAA/R,EAAAzN,EAAA+yE,EAAA1yE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAo0E,GAAA,cAAAA,EAAAl0E,KAAAk0E,EAAAj0E,MAAA,UAAqBoS,EAArB4hE,EAAA5gF,OAAA,QAAAmqB,IAAAy2D,EAAA,GAAAA,EAAA,GAAmC,SAC3CvzD,EADQ,cAAA1qB,OACsB6W,KAC9B8B,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAH5B,CAAAuhF,EAAAj0E,KAAA,eAAAi0E,EAAAxjE,OAAA,SAILnc,EAAK+L,MAAMqO,IAJN,cAAAulE,EAAAj0E,KAAA,EAOW1L,EAAK6rB,oBAAoBvT,EAAc,aAAc,GAAI,GAAIwF,GAPxE,cAORnR,EAPQgzE,EAAAlxE,KAAAkxE,EAAAxjE,OAAA,SAQPnc,EAAKytB,8BAA8BtB,EAAexf,EAAY,KARvD,wBAAAgzE,EAAA9yE,SAAA4yE,EAAA3kF,SAjlMG,gBAAA8kF,GAAA,OAAAJ,EAAAzyE,MAAAjS,KAAAkS,YAAA,GAAAlS,KA2lMnB++B,mBA3lMmB,eAAAgmD,EAAAplF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2lME,SAAA20E,EAAOxnE,EAAc3Q,GAArB,IAAAmW,EAAAqO,EAAA/R,EAAA1N,EAAAqzE,EAAA/yE,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAy0E,GAAA,cAAAA,EAAAv0E,KAAAu0E,EAAAt0E,MAAA,UAA8BoS,EAA9BiiE,EAAAjhF,OAAA,QAAAmqB,IAAA82D,EAAA,GAAAA,EAAA,GAA4C,SAC/Dp4E,EAAUA,GAAoB3H,EAAKjF,MAAMyJ,YAAYqoB,KAAKllB,QACpDwkB,EAFa,aAAA1qB,OAEgB6W,EAFhB,KAAA7W,OAEgCkG,EAFhC,KAAAlG,OAE2Cqc,KACxD1D,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAJvB,CAAA4hF,EAAAt0E,KAAA,eAAAs0E,EAAA7jE,OAAA,SAKVnc,EAAK+L,MAAMqO,IALD,cAAA4lE,EAAAt0E,KAAA,EAOG1L,EAAK6rB,oBAAoBvT,EAAc,YAAa,CAAC3Q,GAAU,GAAImW,GAPtE,cAObpR,EAPaszE,EAAAvxE,KAAAuxE,EAAA7jE,OAAA,SAQZnc,EAAKytB,8BAA8BtB,EAAezf,EAAS,KAR/C,yBAAAszE,EAAAnzE,SAAAizE,EAAAhlF,SA3lMF,gBAAAmlF,EAAAC,GAAA,OAAAL,EAAA9yE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAqmMnBqlF,mBArmMmB,eAAAC,EAAA3lF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAqmME,SAAAk1E,EAAO/nE,EAAc3Q,GAArB,OAAA4jB,EAAAtwB,EAAAsQ,KAAA,SAAA+0E,GAAA,cAAAA,EAAA70E,KAAA60E,EAAA50E,MAAA,cAAA40E,EAAA50E,KAAA,EACN1L,EAAK65B,mBAAmBvhB,EAAc3Q,GADhC,cAAA24E,EAAAnkE,OAAA,SAAAmkE,EAAA7xE,MAAA,wBAAA6xE,EAAAzzE,SAAAwzE,EAAAvlF,SArmMF,gBAAAylF,EAAAC,GAAA,OAAAJ,EAAArzE,MAAAjS,KAAAkS,YAAA,GAAAlS,KAwmMnB2lF,QAxmMmB,eAAAC,EAAAjmF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAwmMT,SAAAw1E,EAAOroE,GAAP,IAAA6T,EAAA/R,EAAA2xC,EAAAre,EAAA,OAAAniB,EAAAtwB,EAAAsQ,KAAA,SAAAq1E,GAAA,cAAAA,EAAAn1E,KAAAm1E,EAAAl1E,MAAA,UACFygB,EADE,WAAA1qB,OACyB6W,KAC3B8B,EAAapa,EAAKwtB,8BAA8BrB,IAF9C,CAAAy0D,EAAAl1E,KAAA,eAAAk1E,EAAAzkE,OAAA,SAKuB,kBAAf/B,EAA0BA,EAAalQ,KAAK0U,MAAMxE,IAL1D,cAQR9B,EAAeA,GAA8BtY,EAAKjF,MAAMyJ,YAAYqoB,KAAK/gB,MARjE80E,EAAAl1E,KAAA,EASW1L,EAAK6rB,oBAAoBvT,EAAc,WATlD,YASFyzC,EATE60B,EAAAnyE,MAAA,CAAAmyE,EAAAl1E,KAAA,gBAWAgiC,EAAS,CACbqe,KAAMA,EAAK,GACX80B,UAAW90B,EAAK,IAbZ60B,EAAAzkE,OAAA,SAeCnc,EAAKytB,8BAA8BtB,EAAeuhB,IAfnD,eAAAkzC,EAAAzkE,OAAA,SAiBD,MAjBC,yBAAAykE,EAAA/zE,SAAA8zE,EAAA7lF,SAxmMS,gBAAAgmF,GAAA,OAAAJ,EAAA3zE,MAAAjS,KAAAkS,YAAA,GAAAlS,KA2nMnBimF,gBA3nMmB,eAAAC,EAAAvmF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2nMD,SAAA81E,EAAO7oE,GAAP,IAAAO,EAAAuoE,EAAAC,EAAAn0E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA61E,GAAA,cAAAA,EAAA31E,KAAA21E,EAAA11E,MAAA,cAAmBiN,EAAnBwoE,EAAAriF,OAAA,QAAAmqB,IAAAk4D,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAAriF,OAAA,QAAAmqB,IAAAk4D,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAA11E,KAAA,EACH1L,EAAK6rB,oBAAoB7rB,EAAKjF,MAAMyJ,YAAYqoB,KAAK/gB,MAAOsM,EAAYO,EAAQuoE,GAAY78B,MAAM,SAAAroC,GAC7Ghc,EAAK2xB,eAAe,yBAA0B3V,KAFhC,cAAAolE,EAAAjlE,OAAA,SAAAilE,EAAA3yE,MAAA,wBAAA2yE,EAAAv0E,SAAAo0E,EAAAnmF,SA3nMC,gBAAAumF,GAAA,OAAAL,EAAAj0E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAgoMnBu4D,YAhoMmB,eAAAiuB,EAAA7mF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAgoML,SAAAo2E,EAAOjpE,EAAcF,GAArB,IAAAopE,EAAA7oE,EAAAuoE,EAAA9uD,EAAAqvD,EAAAz0E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAm2E,GAAA,cAAAA,EAAAj2E,KAAAi2E,EAAAh2E,MAAA,UAAiCiN,EAAjC8oE,EAAA3iF,OAAA,QAAAmqB,IAAAw4D,EAAA,GAAAA,EAAA,GAA0C,GAAIP,EAA9CO,EAAA3iF,OAAA,QAAAmqB,IAAAw4D,EAAA,GAAAA,EAAA,GAA2D,GACnErvD,EAAWpyB,EAAKiyB,kBAAkB3Z,GAD1B,CAAAopE,EAAAh2E,KAAA,eAIV1L,EAAK2xB,eAAe,sBAAuBrZ,GAJjCopE,EAAAvlE,OAAA,SAKH,MALG,cAAAulE,EAAAh2E,KAAA,GAQC81E,EAAApvD,EAAS6hB,SAAQ77B,GAAjBrL,MAAAy0E,EAAA/mF,OAAA4/B,EAAA,EAAA5/B,CAAgCke,IAAQ06C,YAAY6tB,GARrD,cAAAQ,EAAAvlE,OAAA,SAAAulE,EAAAjzE,MAAA,wBAAAizE,EAAA70E,SAAA00E,EAAAzmF,SAhoMK,gBAAA6mF,EAAAC,GAAA,OAAAN,EAAAv0E,MAAAjS,KAAAkS,YAAA,GAAAlS,KA0oMnBqzC,aA1oMmB,eAAA0zC,EAAApnF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0oMJ,SAAA22E,EAAOhqE,GAAP,IAAAuB,EAAA0oE,EAAA/0E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAy2E,GAAA,cAAAA,EAAAv2E,KAAAu2E,EAAAt2E,MAAA,WACb2N,GAD4BA,EAAf0oE,EAAAjjF,OAAA,QAAAmqB,IAAA84D,EAAA,GAAAA,EAAA,GAAsB,OACpB/hF,EAAKjF,MAAMse,OACZA,EAAK0C,IAFN,CAAAimE,EAAAt2E,KAAA,eAAAs2E,EAAA7lE,OAAA,SAGJ,MAHI,cAAA6lE,EAAAt2E,KAAA,EAKC,IAAI8P,QAAJ,eAAAymE,EAAAxnF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAA+2E,EAAOtmE,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAA42E,GAAA,cAAAA,EAAA12E,KAAA02E,EAAAz2E,MAAA,OACxB2N,EAAK0C,IAAI24B,sBAAsB58B,EAAQ,SAACkE,EAAKnQ,GACvCmQ,GACFH,EAAOG,GAETJ,EAAQ/P,KALc,wBAAAs2E,EAAAt1E,SAAAq1E,EAAApnF,SAAZ,gBAAAsnF,EAAAC,GAAA,OAAAJ,EAAAl1E,MAAAjS,KAAAkS,YAAA,IALD,cAAAg1E,EAAA7lE,OAAA,SAAA6lE,EAAAvzE,MAAA,wBAAAuzE,EAAAn1E,SAAAi1E,EAAAhnF,SA1oMI,gBAAAwnF,GAAA,OAAAT,EAAA90E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAwpMnBynF,iBAxpMmB,eAAAC,EAAA/nF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAwpMA,SAAAs3E,EAAO52E,EAAI62E,EAASC,EAAY7nC,GAAhC,IAAAhN,EAAA80C,EAAA,OAAAr3D,EAAAtwB,EAAAsQ,KAAA,SAAAs3E,GAAA,cAAAA,EAAAp3E,KAAAo3E,EAAAn3E,MAAA,UAEboiC,EAAYgN,GAAYA,EAAShN,UAAYgN,EAAShN,UAAY,KAFrD,CAAA+0C,EAAAn3E,KAAA,eAAAm3E,EAAAn3E,KAAA,EAKI,IAAI8P,QAAJ,eAAAsnE,EAAAroF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAY,SAAA43E,EAAOnnE,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAAy3E,GAAA,cAAAA,EAAAv3E,KAAAu3E,EAAAt3E,MAAA,OAC7B1L,EAAKjF,MAAMse,KAAK0C,IAAI24B,sBAAsB7oC,EAAGlJ,KAAM,SAACqZ,EAAKnQ,GACnDmQ,GACFH,EAAOG,GAETJ,EAAQ/P,KALmB,wBAAAm3E,EAAAn2E,SAAAk2E,EAAAjoF,SAAZ,gBAAAmoF,EAAAC,GAAA,OAAAJ,EAAA/1E,MAAAjS,KAAAkS,YAAA,IALJ,OAKf8gC,EALe+0C,EAAAp0E,KAAA,UAgBZq/B,EAhBY,CAAA+0C,EAAAn3E,KAAA,eAAAm3E,EAAA1mE,OAAA,SAiBR,MAjBQ,WAoBXymE,EAAoB90C,EAAUtc,KAAK5lB,OAAO,SAACC,GAAS,OAAOA,EAAG0iC,OAAO1iC,EAAG0iC,OAAOzvC,OAAS,GAAG8I,gBAAhC,4BAAAnG,OAA8EihF,MAExH5jF,OAtBN,CAAA+jF,EAAAn3E,KAAA,gBAAAm3E,EAAA1mE,OAAA,SAuBR,MAvBQ,eAAA0mE,EAAAp3E,KAAA,GAAAo3E,EAAA1mE,OAAA,SA2BR,CACL2xB,EACA9tC,EAAKjF,MAAMse,KAAK0C,IAAIsmB,IAAIme,UAAUmiC,EAAYC,EAAkB,GAAG19E,KAAM09E,EAAkB,GAAGr0C,UA7BjF,eAAAs0C,EAAAp3E,KAAA,GAAAo3E,EAAA51D,GAAA41D,EAAA,UAAAA,EAAA1mE,OAAA,SAgCR,MAhCQ,yBAAA0mE,EAAAh2E,SAAA41E,EAAA3nF,KAAA,cAxpMA,gBAAAqoF,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAz1E,MAAAjS,KAAAkS,YAAA,GAAAlS,KA2rMnByoF,gBAAkB,SAACC,GACjB,IAAMC,EAAmBzjF,EAAK+L,MAAM/L,EAAK8P,gBAAgB,CAAC,UAAW,mBAAmBiO,IAAI,UAAUA,IAAI,OAC1G,OAAO/d,EAAK+L,MAAMy3E,GAAQzlE,IAAI0lE,IA7rMb3oF,KA+rMnBs3D,eA/rMmB33D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+rMF,SAAAu4E,IAAA,OAAAn4D,EAAAtwB,EAAAsQ,KAAA,SAAAo4E,GAAA,cAAAA,EAAAl4E,KAAAk4E,EAAAj4E,MAAA,UACV1L,EAAKjF,MAAMse,KADD,CAAAsqE,EAAAj4E,KAAA,eAAAi4E,EAAAxnE,OAAA,UAEN,GAFM,cAAAwnE,EAAAj4E,KAAA,EAIF1L,EAAKjF,MAAMse,KAAK0C,IAAIq2C,iBAJlB,cAAAuxB,EAAAxnE,OAAA,SAAAwnE,EAAAl1E,MAAA,wBAAAk1E,EAAA92E,SAAA62E,EAAA5oF,SA/rMEA,KAqsMnBwnC,aArsMmB7nC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAqsMJ,SAAAy4E,IAAA,IAAA9lE,EAAAqO,EAAA/R,EAAA2nB,EAAA8hD,EAAA1sD,EAAA2sD,EAAA92E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAw4E,GAAA,cAAAA,EAAAt4E,KAAAs4E,EAAAr4E,MAAA,UAAOoS,EAAPgmE,EAAAhlF,OAAA,QAAAmqB,IAAA66D,EAAA,GAAAA,EAAA,GAAmB,SAC1B33D,EADO,gBAAA1qB,OACyBqc,KAChC1D,EAAapa,EAAKwtB,8BAA8BrB,IAFzC,CAAA43D,EAAAr4E,KAAA,eAAAq4E,EAAA5nE,OAAA,SAIJ/B,GAJI,cAAA2pE,EAAAr4E,KAAA,EAOW1L,EAAKjF,MAAMse,KAAK0C,IAAIioE,SAASlmE,GAPxC,YAOPikB,EAPOgiD,EAAAt1E,MAAA,CAAAs1E,EAAAr4E,KAAA,gBAULm4E,EAAkB,CACtBlhF,KAAKo/B,EAAUp/B,KACfxE,OAAO4jC,EAAU5jC,OACjB+Q,UAAU6yB,EAAU7yB,WAEhBioB,EAAuB,WAAhBrZ,EAA2B9d,EAAK8P,gBAAgB,CAAC,QAAQ,QAAU,KAChF9P,EAAKytB,8BAA8BtB,EAAe03D,EAAiB1sD,GAhBxD4sD,EAAA5nE,OAAA,SAiBJ4lB,GAjBI,eAAAgiD,EAAA5nE,OAAA,SAoBN,MApBM,yBAAA4nE,EAAAl3E,SAAA+2E,EAAA9oF,SArsMIA,KA2tMnBu3D,sBA3tMmB,eAAA4xB,EAAAxpF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2tMK,SAAA+4E,EAAO5rE,EAAcF,GAArB,IAAAO,EAAAyZ,EAAAjG,EAAA/R,EAAA+c,EAAA8oB,EAAAkkC,EAAAn3E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA64E,GAAA,cAAAA,EAAA34E,KAAA24E,EAAA14E,MAAA,UAAiCiN,EAAjCwrE,EAAArlF,OAAA,QAAAmqB,IAAAk7D,EAAA,GAAAA,EAAA,GAA0C,GAC3D7rE,EADiB,CAAA8rE,EAAA14E,KAAA,eAAA04E,EAAAjoE,OAAA,SAEb,MAFa,UAKhBiW,EAAWpyB,EAAKiyB,kBAAkB3Z,GALlB,CAAA8rE,EAAA14E,KAAA,eAQpB1L,EAAK2xB,eAAe,sBAAuBrZ,GARvB8rE,EAAAjoE,OAAA,SASb,MATa,UAYhBgQ,EAZgB,yBAAA1qB,OAYyB6W,EAZzB,KAAA7W,OAYyC2W,EAZzC,KAAA3W,OAYuDyI,KAAKC,UAAUwO,MACtFyB,EAAapa,EAAKwtB,8BAA8BrB,IAbhC,CAAAi4D,EAAA14E,KAAA,gBAAA04E,EAAAjoE,OAAA,SAeb/B,GAfa,eAmBlB+c,EAAMn3B,EAAK8P,gBAAgB,CAAC,QAAQ,QACpC6I,EAAOq5C,SAA8B,WAAnBr5C,EAAOq5C,UAC3B76B,EAAM,MArBcitD,EAAA14E,KAAA,GAwBD0mB,EAASiyD,cAAcjsE,EAAYO,GAxBlC,eAwBhBsnC,EAxBgBmkC,EAAA31E,KAAA21E,EAAAjoE,OAAA,SA0Bfnc,EAAKytB,8BAA8BtB,EAAe8zB,EAAQ9oB,IA1B3C,yBAAAitD,EAAAv3E,SAAAq3E,EAAAppF,SA3tML,gBAAAwpF,EAAAC,GAAA,OAAAN,EAAAl3E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAwvMnBqnC,6BAxvMmB,eAAAqiD,EAAA/pF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAwvMY,SAAAs5E,EAAOnsE,EAAcF,GAArB,IAAA+e,EAAAxe,EAAAuoE,EAAApjE,EAAAqO,EAAA/R,EAAAszB,EAAAg3C,EAAA13E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAo5E,GAAA,cAAAA,EAAAl5E,KAAAk5E,EAAAj5E,MAAA,UAAiCyrB,EAAjCutD,EAAA5lF,OAAA,QAAAmqB,IAAAy7D,EAAA,GAAAA,EAAA,GAAuC,IAAK/rE,EAA5C+rE,EAAA5lF,OAAA,QAAAmqB,IAAAy7D,EAAA,GAAAA,EAAA,GAAqD,GAAIxD,EAAzDwD,EAAA5lF,OAAA,QAAAmqB,IAAAy7D,EAAA,GAAAA,EAAA,GAAsE,GAAI5mE,EAA1E4mE,EAAA5lF,OAAA,QAAAmqB,IAAAy7D,EAAA,GAAAA,EAAA,GAAwF,SAC/Gv4D,EADuB,uBAAA1qB,OACgB6W,EADhB,KAAA7W,OACgC2W,EADhC,KAAA3W,OAC8CyI,KAAKC,UAAUwO,GAD7D,KAAAlX,OACwEyI,KAAKC,UAAU+2E,GADvF,KAAAz/E,OACsGqc,KAC7H1D,EAAapa,EAAKwtB,8BAA8BrB,IAFzB,CAAAw4D,EAAAj5E,KAAA,eAAAi5E,EAAAxoE,OAAA,SAIpB/B,GAJoB,aAQT,WAAhB0D,IACFqZ,EAAM,MATqBwtD,EAAAj5E,KAAA,GAYR1L,EAAK6rB,oBAAoBvT,EAAcF,EAAYO,EAAQuoE,EAAYpjE,GAZ/D,eAYvB4vB,EAZuBi3C,EAAAl2E,KAAAk2E,EAAAxoE,OAAA,SActBnc,EAAKytB,8BAA8BtB,EAAeuhB,EAAQvW,IAdpC,yBAAAwtD,EAAA93E,SAAA43E,EAAA3pF,SAxvMZ,gBAAA8pF,EAAAC,GAAA,OAAAL,EAAAz3E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAywMnBsrC,0BAzwMmB,eAAA0+C,EAAArqF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAywMS,SAAA45E,EAAOzsE,EAAcF,GAArB,IAAAO,EAAAuoE,EAAApjE,EAAAqZ,EAAAhL,EAAA/R,EAAAszB,EAAAs3C,EAAAh4E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA05E,GAAA,cAAAA,EAAAx5E,KAAAw5E,EAAAv5E,MAAA,UAAiCiN,EAAjCqsE,EAAAlmF,OAAA,QAAAmqB,IAAA+7D,EAAA,GAAAA,EAAA,GAA0C,GAAI9D,EAA9C8D,EAAAlmF,OAAA,QAAAmqB,IAAA+7D,EAAA,GAAAA,EAAA,GAA2D,GAAIlnE,EAA/DknE,EAAAlmF,OAAA,QAAAmqB,IAAA+7D,EAAA,GAAAA,EAAA,GAA6E,SAAU7tD,EAAvF6tD,EAAAlmF,OAAA,QAAAmqB,IAAA+7D,EAAA,GAAAA,EAAA,GAA6F,IACjH74D,EADoB,uBAAA1qB,OACmB6W,EADnB,KAAA7W,OACmC2W,EADnC,KAAA3W,OACiDyI,KAAKC,UAAUwO,GADhE,KAAAlX,OAC2EyI,KAAKC,UAAU+2E,GAD1F,KAAAz/E,OACyGqc,KAC7H1D,EAAapa,EAAKwtB,8BAA8BrB,IAF5B,CAAA84D,EAAAv5E,KAAA,eAAAu5E,EAAA9oE,OAAA,SAIjB/B,GAJiB,aAQN,WAAhB0D,IACFqZ,EAAM,MATkB8tD,EAAAv5E,KAAA,GAcL1L,EAAK6rB,oBAAoBvT,EAAcF,EAAYO,EAAQuoE,EAAYpjE,GAdlE,eAcpB4vB,EAdoBu3C,EAAAx2E,KAAAw2E,EAAA9oE,OAAA,SAgBnBnc,EAAKytB,8BAA8BtB,EAAeuhB,EAAQvW,IAhBvC,yBAAA8tD,EAAAp4E,SAAAk4E,EAAAjqF,SAzwMT,gBAAAoqF,EAAAC,GAAA,OAAAL,EAAA/3E,MAAAjS,KAAAkS,YAAA,GAAAlS,KA4xMnBsqF,mBA5xMmB,eAAAC,EAAA5qF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA4xME,SAAAm6E,EAAOhtE,EAAcF,GAArB,IAAAO,EAAAuoE,EAAApjE,EAAAqZ,EAAAouD,EAAAv4E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAi6E,GAAA,cAAAA,EAAA/5E,KAAA+5E,EAAA95E,MAAA,cAAiCiN,EAAjC4sE,EAAAzmF,OAAA,QAAAmqB,IAAAs8D,EAAA,GAAAA,EAAA,GAA0C,GAAIrE,EAA9CqE,EAAAzmF,OAAA,QAAAmqB,IAAAs8D,EAAA,GAAAA,EAAA,GAA2D,GAAIznE,EAA/DynE,EAAAzmF,OAAA,QAAAmqB,IAAAs8D,EAAA,GAAAA,EAAA,GAA6E,SAAUpuD,EAAvFouD,EAAAzmF,OAAA,QAAAmqB,IAAAs8D,EAAA,GAAAA,EAAA,GAA6F,IAA7FC,EAAA95E,KAAA,EACN1L,EAAKomC,0BAA0B9tB,EAAcF,EAAYO,EAAQuoE,EAAYpjE,EAAaqZ,GADpF,cAAAquD,EAAArpE,OAAA,SAAAqpE,EAAA/2E,MAAA,wBAAA+2E,EAAA34E,SAAAy4E,EAAAxqF,SA5xMF,gBAAA2qF,EAAAC,GAAA,OAAAL,EAAAt4E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAgyMnB+wB,oBAhyMmB,eAAA85D,EAAAlrF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAgyMG,SAAAy6E,EAAOttE,EAAcF,GAArB,IAAAO,EAAAuoE,EAAApjE,EAAAsU,EAAAyzD,EAAArgF,EAAAsgF,EAAA94E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAw6E,GAAA,cAAAA,EAAAt6E,KAAAs6E,EAAAr6E,MAAA,UAAiCiN,EAAjCmtE,EAAAhnF,OAAA,QAAAmqB,IAAA68D,EAAA,GAAAA,EAAA,GAA0C,GAAI5E,EAA9C4E,EAAAhnF,OAAA,QAAAmqB,IAAA68D,EAAA,GAAAA,EAAA,GAA2D,GAAIhoE,EAA/DgoE,EAAAhnF,OAAA,QAAAmqB,IAAA68D,EAAA,GAAAA,EAAA,GAA6E,SAA7EA,EAAAhnF,OAAA,QAAAmqB,IAAA68D,EAAA,GAAAA,EAAA,GAA+F,EAE9GxtE,EAFe,CAAAytE,EAAAr6E,KAAA,eAAAq6E,EAAA5pE,OAAA,SAGX,MAHW,UAMdiW,EAAWpyB,EAAKiyB,kBAAkB3Z,GANpB,CAAAytE,EAAAr6E,KAAA,gBASlB1L,EAAKwd,UAAU,sBAAuBlF,GATpBytE,EAAA5pE,OAAA,SAUX,MAVW,WAafiW,EAAS6hB,QAAQ77B,GAbF,CAAA2tE,EAAAr6E,KAAA,gBAclB1L,EAAKwd,UAAU,oBAAqBpF,GAdlB2tE,EAAA5pE,OAAA,SAeX,MAfW,eAkBpB2B,EAA8B,WAAhBA,GAA4BA,IAAgB1f,MAAM0f,GAAe1R,SAAS0R,GAAeA,EAlBnFioE,EAAAt6E,KAAA,GAAAs6E,EAAAr6E,KAAA,IAqBEm6E,EAAAzzD,EAAS6hB,SAAQ77B,GAAjBrL,MAAA84E,EAAAprF,OAAA4/B,EAAA,EAAA5/B,CAAgCke,IAAQw7B,KAAK+sC,EAAYpjE,GAAaumC,MAAM,SAAArsC,GAC9FhY,EAAKwd,UAAL,GAAA/b,OAAkB6W,EAAlB,qBAAA7W,OAAkD2W,EAAlD,YAAwEJ,KAtBxD,eAqBZxS,EArBYugF,EAAAt3E,KAAAs3E,EAAA5pE,OAAA,SA8BX3W,GA9BW,QAAAugF,EAAAt6E,KAAA,GAAAs6E,EAAA94D,GAAA84D,EAAA,UAiClB/lF,EAAKwd,UAAU,4BAAfuoE,EAAA94D,IAjCkB,yBAAA84D,EAAAl5E,SAAA+4E,EAAA9qF,KAAA,cAhyMH,gBAAAkrF,EAAAC,GAAA,OAAAN,EAAA54E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAw0MnBiQ,aAx0MmB,eAAAm7E,EAAAzrF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAw0MJ,SAAAg7E,EAAOhgC,EAAOtjD,GAAd,IAAAujF,EAAAh8D,EAAAvpB,EAAAwlF,EAAAr5E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA+6E,GAAA,cAAAA,EAAA76E,KAAA66E,EAAA56E,MAAA,UAAwB06E,IAAxBC,EAAAvnF,OAAA,QAAAmqB,IAAAo9D,EAAA,KAAAA,EAAA,GACTj8D,EAAS,IACTg8D,EAFS,CAAAE,EAAA56E,KAAA,eAAA46E,EAAA56E,KAAA,EAGI8P,QAAQqD,IAAIsnC,EAAMvlD,IAAI,SAAC0xB,EAAGzxB,GACvC,OAAOgC,EAASyvB,EAAGzxB,EAAOslD,MAJjB,OAGX/7B,EAHWk8D,EAAA73E,KAAA63E,EAAA56E,KAAA,gBAOF7K,EAAQ,EAPN,YAOSA,EAAQslD,EAAMrnD,QAPvB,CAAAwnF,EAAA56E,KAAA,gBAAA46E,EAAAr5D,GAQT7C,EARSk8D,EAAA56E,KAAA,GAQS7I,EAASsjD,EAAMtlD,GAAQA,EAAOslD,GARvC,QAAAmgC,EAAAjzC,GAAAizC,EAAA73E,KAAA63E,EAAAr5D,GAQFhlB,KAREksC,KAAAmyC,EAAAr5D,GAAAq5D,EAAAjzC,IAAA,QAO+BxyC,IAP/BylF,EAAA56E,KAAA,uBAAA46E,EAAAnqE,OAAA,SAWNiO,GAXM,yBAAAk8D,EAAAz5E,SAAAs5E,EAAArrF,SAx0MI,gBAAAyrF,EAAAC,GAAA,OAAAN,EAAAn5E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAq1MnB4oC,QAAU,SAACC,GACT,OAAO3jC,EAAK+L,MAAO/L,EAAK+L,MAAM,GAAGQ,KAAKvM,EAAK+L,MAAM43B,GAAK5lB,IAAI,MAAO++C,IAAI,KAAKtwD,MAAM,GAAGxE,QAAQ,MAt1M1ElN,KAw1MnB2rF,iBAx1MmB,eAAAC,EAAAjsF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAw1MA,SAAAw7E,EAAOniF,GAAP,IAAAoiF,EAAA,OAAAr7D,EAAAtwB,EAAAsQ,KAAA,SAAAs7E,GAAA,cAAAA,EAAAp7E,KAAAo7E,EAAAn7E,MAAA,cAAAm7E,EAAAn7E,KAAA,EACS1L,EAAKmgF,mBAAmB37E,EAAYsH,MAAOtH,EAAYqoB,KAAKllB,SADrE,cACbi/E,EADaC,EAAAp4E,QAGfm4E,EAAgB5mF,EAAKuP,iBAAiBq3E,EAAepiF,EAAY/F,WAHlDooF,EAAA1qE,OAAA,SAKVyqE,GALU,wBAAAC,EAAAh6E,SAAA85E,EAAA7rF,SAx1MA,gBAAAgsF,GAAA,OAAAJ,EAAA35E,MAAAjS,KAAAkS,YAAA,GAAAlS,KA+1MnB+2E,aA/1MmB,eAAAkV,EAAAtsF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+1MJ,SAAA67E,EAAOxiF,GAAP,IAAA6iE,EAAAl7C,EAAA/R,EAAAmS,EAAAE,EAAAw6D,EAAAj6E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA27E,GAAA,cAAAA,EAAAz7E,KAAAy7E,EAAAx7E,MAAA,UAAoB27D,IAApB4f,EAAAnoF,OAAA,QAAAmqB,IAAAg+D,EAAA,KAAAA,EAAA,GAEP96D,EAFO,aAAA1qB,OAEsB+C,EAAYqoB,KAAKllB,QAFvC,KAAAlG,OAEkD4lE,KACzDjtD,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAJ7B,CAAA8oF,EAAAx7E,KAAA,eAAAw7E,EAAA/qE,OAAA,SAKJnc,EAAK+L,MAAMqO,IALP,cAAA8sE,EAAAx7E,KAAA,EAQiB1L,EAAKuE,mBAAmBC,GAAa,EAAO6iE,GAR7D,YAQP96C,EARO26D,EAAAz4E,QASU8d,EAAgBa,0BAT1B,CAAA85D,EAAAx7E,KAAA,YAUL+gB,EAAYF,EAAgBa,0BAC7BptB,EAAK+L,MAAM0gB,GAAWruB,QAXhB,CAAA8oF,EAAAx7E,KAAA,gBAAAw7E,EAAA/qE,OAAA,SAYFnc,EAAKytB,8BAA8BtB,EAAeM,IAZhD,eAAAy6D,EAAA/qE,OAAA,SAgBN,MAhBM,yBAAA+qE,EAAAr6E,SAAAm6E,EAAAlsF,SA/1MI,gBAAAqsF,GAAA,OAAAJ,EAAAh6E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAi3MnBssF,mBAj3MmB,eAAAC,EAAA5sF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAi3ME,SAAAm8E,EAAO9iF,GAAP,IAAAunD,EAAA9Y,EAAAs0C,EAAA,OAAAh8D,EAAAtwB,EAAAsQ,KAAA,SAAAi8E,GAAA,cAAAA,EAAA/7E,KAAA+7E,EAAA97E,MAAA,UACdlH,EAAYqoB,KADE,CAAA26D,EAAA97E,KAAA,eAAA87E,EAAArrE,OAAA,UAEV,GAFU,cAAAqrE,EAAA97E,KAAA,EAKA1L,EAAKygF,QAAQj8E,EAAYqoB,KAAK/gB,OAL9B,UAKbigD,EALay7B,EAAA/4E,OAMbwkC,EAAqB8Y,EAAOA,EAAK80B,UAAY,MANhC,CAAA2G,EAAA97E,KAAA,gBAAA87E,EAAA97E,KAAA,EAQc1L,EAAK+K,aAAakoC,EAAlB,eAAAw0C,EAAAhtF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAsC,SAAAu8E,EAAOhgF,EAAc7G,GAArB,OAAA0qB,EAAAtwB,EAAAsQ,KAAA,SAAAo8E,GAAA,cAAAA,EAAAl8E,KAAAk8E,EAAAj8E,MAAA,cAAAi8E,EAAAj8E,KAAA,EACtD1L,EAAK6rB,oBAAoBrnB,EAAYqoB,KAAK/gB,MAAO,kBAAmB,CAACjL,IADf,cAAA8mF,EAAAxrE,OAAA,SAAAwrE,EAAAl5E,MAAA,wBAAAk5E,EAAA96E,SAAA66E,EAAA5sF,SAAtC,gBAAA8sF,EAAAC,GAAA,OAAAJ,EAAA16E,MAAAjS,KAAAkS,YAAA,IARd,cAQXu6E,EARWC,EAAA/4E,KAAA+4E,EAAArrE,OAAA,SAWV82B,EAAmBzT,OAAO,SAACkxB,EAAiBhpD,EAAc7G,GAE/D,OADA6vD,EAAgBhpD,EAAaE,eAAiB2/E,EAAiB1mF,GACxD6vD,GACN,KAdc,eAAA82B,EAAArrE,OAAA,SAiBZ,IAjBY,yBAAAqrE,EAAA36E,SAAAy6E,EAAAxsF,SAj3MF,gBAAAgtF,GAAA,OAAAT,EAAAt6E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAo4MnByJ,mBAp4MmB,eAAAwjF,EAAAttF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAo4ME,SAAA68E,EAAOxjF,GAAP,IAAAyjF,EAAA5gB,EAAAl7C,EAAA/R,EAAAmS,EAAAnoB,EAAAC,EAAA6jF,EAAAC,EAAAvB,EAAAj6E,EAAA+jD,EAAA9gD,EAAAi5D,EAAAuf,EAAAjkF,EAAAkkF,EAAAr7E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA+8E,GAAA,cAAAA,EAAA78E,KAAA68E,EAAA58E,MAAA,UAAoBu8E,EAApBI,EAAAvpF,OAAA,QAAAmqB,IAAAo/D,EAAA,IAAAA,EAAA,GAA2ChhB,IAA3CghB,EAAAvpF,OAAA,QAAAmqB,IAAAo/D,EAAA,KAAAA,EAAA,GAEd7jF,EAAYqoB,KAFE,CAAAy7D,EAAA58E,KAAA,eAAA48E,EAAAnsE,OAAA,UAGV,GAHU,UAObgQ,EAPa,mBAAA1qB,OAOsB+C,EAAYqoB,KAAKllB,QAPvC,KAAAlG,OAOkD4lE,GAElD,QADbjtD,EAAapa,EAAKmtC,cAAchhB,IARnB,CAAAm8D,EAAA58E,KAAA,eAAA48E,EAAAnsE,OAAA,SAUV/B,GAVU,cAabmS,EAAkB,CACtBshC,OAAQ,KACR+4B,cAAe,KACfziF,gBAAiB,KACjBC,qBAAsB,KACtBC,yBAA0B,KAC1BkkF,yBAA0B,KAC1Bn7D,0BAA2B,KAC3Bo7D,mCAAoC,MAGhCpkF,EAAuB,GACvBC,EAA2B,GAzBdikF,EAAA58E,KAAA,GAkCT8P,QAAQqD,IAAI,CACpB7e,EAAKymF,iBAAiBjiF,GACtBxE,EAAK67B,kBAAkBr3B,GACvBxE,EAAKonF,mBAAmB5iF,GACxBxE,EAAKyoF,uBAAuBjkF,GAAa,GACzCxE,EAAKozE,mBAAmB5uE,EAAYqoB,KAAK/gB,OACzCu7D,EAAernE,EAAK0oF,qBAAqBlkF,EAAYqoB,KAAKllB,SAAW,OAxCpD,eAAAugF,EAAAI,EAAA75E,KAAA05E,EAAA1tF,OAAAsyB,EAAA,EAAAtyB,CAAAytF,EAAA,GA4BjBtB,EA5BiBuB,EAAA,GA6BjBx7E,EA7BiBw7E,EAAA,GA8BjBz3B,EA9BiBy3B,EAAA,GA+BjBv4E,EA/BiBu4E,EAAA,GAgCjBtf,EAhCiBsf,EAAA,GAiCjBC,EAjCiBD,EAAA,GA2CbhkF,EAAkBnE,EAAKuP,iBAAiBs5D,EAAa,IAAI9gE,MAAM4E,GAAYH,MAAMo6E,GAEnFl2B,GACFj2D,OAAOoE,KAAK6xD,GAAiB3xD,QAAQ,SAAC2I,GACpC,IAAMH,EAAe/C,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,OAAIA,EAAEsL,QAAQC,gBAAkBF,EAAaE,gBAC9F,GAAIL,GAAgBA,EAAaqlB,QAAS,CACxC,IAAM+7D,EAAyB3oF,EAAK+L,MAAM2kD,EAAgBhpD,IAAeqW,IAAI,KACvE6qE,EAAqBzkF,EAAgB4D,MAAM4gF,GACjDvkF,EAAqBsD,EAAaE,eAAiBghF,EACnDvkF,EAAyBqD,EAAaE,eAAiB+gF,KAK7Dp8D,EAAgBq6D,cAAgB5mF,EAAK+L,MAAM,GAC3CwgB,EAAgBa,0BAA4BjpB,EAExCyiF,IACFr6D,EAAgBq6D,cAAgBA,EAChCr6D,EAAgBa,0BAA4Bb,EAAgBa,0BAA0B7gB,KAAKq6E,IAG7Fr6D,EAAgBpoB,gBAAkBA,EAClCooB,EAAgBnoB,qBAAuBA,EACvCmoB,EAAgBloB,yBAA2BA,EAGvC+jF,GAAqBA,EAAkB/hD,QACrCz2B,IACFw4E,EAAkB/hD,MAAQ+hD,EAAkB/hD,MAAMtoB,IAAInO,IAIxD2c,EAAgBa,0BAA4Bb,EAAgBa,0BAA0B7gB,KAAK67E,EAAkB/hD,QAG/G9Z,EAAgBg8D,yBAA2Bh8D,EAAgBpoB,gBAC3DooB,EAAgBi8D,mCAAqCj8D,EAAgBa,0BAEjExd,IACF2c,EAAgBg8D,yBAA2Bh8D,EAAgBg8D,yBAAyBxgF,MAAM6H,GAC1F2c,EAAgBi8D,mCAAqCj8D,EAAgBi8D,mCAAmCzgF,MAAM6H,IAG5Gq4E,IACF17D,EAAgBshC,OAAS7tD,EAAKqvB,UAAU44D,EAAe7jF,EAAsBD,IAxF5DmkF,EAAAnsE,OAAA,SA+FZnc,EAAKqa,cAAc8R,EAAeI,IA/FtB,yBAAA+7D,EAAAz7E,SAAAm7E,EAAAltF,SAp4MF,gBAAA+tF,GAAA,OAAAd,EAAAh7E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAq+MnBguF,2BAr+MmB,eAAAC,EAAAtuF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAq+MU,SAAA69E,EAAO1wE,GAAP,IAAA2wE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxgB,EAAAygB,EAAAC,EAAA/8D,EAAAg9D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAx+D,EAAAtwB,EAAAsQ,KAAA,SAAAy+E,GAAA,cAAAA,EAAAv+E,KAAAu+E,EAAAt+E,MAAA,cAAAs+E,EAAAt+E,KAAA,EAMjB8P,QAAQqD,IAAI,CACpB7e,EAAKomC,0BAA0B9tB,EAAc,UAC7CtY,EAAKomC,0BAA0B9tB,EAAc,UAC7CtY,EAAKomC,0BAA0B9tB,EAAc,eAC7CtY,EAAKojE,oBAAoB9qD,KAVA,UAAA2wE,EAAAe,EAAAv7E,KAAAy6E,EAAAzuF,OAAAsyB,EAAA,EAAAtyB,CAAAwuF,EAAA,GAEzBE,EAFyBD,EAAA,GAGzBE,EAHyBF,EAAA,GAIzBG,EAJyBH,EAAA,GAKzBrgB,EALyBqgB,EAAA,KAavBC,GAAkBC,GAAkBC,GAAgBxgB,GAb7B,CAAAmhB,EAAAt+E,KAAA,gBAcnB49E,EAAgB,CACpB3hF,QAASwhF,GAELI,EAAgB,CACpB5hF,QAASyhF,GAEL58D,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UArBhBumD,EAAAt+E,KAAA,GA2Bf8P,QAAQqD,IAAI,CACpB7e,EAAKiqF,2BAA2Bz9D,EAAgB88D,GAChDtpF,EAAKiqF,2BAA2Bz9D,EAAgB+8D,KA7BzB,WAAAC,EAAAQ,EAAAv7E,KAAAg7E,EAAAhvF,OAAAsyB,EAAA,EAAAtyB,CAAA+uF,EAAA,GAyBvBE,EAzBuBD,EAAA,GA0BvBE,EA1BuBF,EAAA,IAgCrBC,IAAgBC,EAhCK,CAAAK,EAAAt+E,KAAA,gBAoCjBk+E,EAAcF,EAAa3hF,MAAM/H,EAAKuP,iBAAiB85E,EAAa,GAAI,KACxEQ,EAAcF,EAAa5hF,MAAM/H,EAAKuP,iBAAiB85E,EAAa,GAAI,KAExES,EAAgBF,EAAYr9E,KAAKs9E,GACjCE,EAAiBD,EAAc/rE,IAAI/d,EAAKuP,iBAAiBs5D,EAAa,KAxCrDmhB,EAAA7tE,OAAA,SA4ChB4tE,GA5CgB,eAAAC,EAAA7tE,OAAA,SAgDpB,MAhDoB,yBAAA6tE,EAAAn9E,SAAAm8E,EAAAluF,SAr+MV,gBAAAovF,GAAA,OAAAnB,EAAAh8E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAuhNnBmvF,2BAvhNmB,eAAAE,EAAA1vF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAuhNU,SAAAi/E,EAAOC,EAAiBC,GAAxB,IAAAn+D,EAAA/R,EAAAmwE,EAAAC,EAAA7pF,EAAA20D,EAAA33B,EAAA,OAAApS,EAAAtwB,EAAAsQ,KAAA,SAAAk/E,GAAA,cAAAA,EAAAh/E,KAAAg/E,EAAA/+E,MAAA,UAGrBygB,EAHqB,2BAAA1qB,OAGsB4oF,EAAgB1iF,QAHtC,KAAAlG,OAGiD6oF,EAAgB3iF,WACtFyS,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QALf,CAAAqsF,EAAA/+E,KAAA,eAAA++E,EAAAtuE,OAAA,SAMlBnc,EAAK+L,MAAMqO,IANO,cAAAqwE,EAAAh/E,KAAA,EAUnB8+E,EAAWvqF,EAAKiyB,kBAAkB,QAAQwR,SAC1C+mD,EAAMxqF,EAAK6uD,uBAAuB,KAElCluD,EAAO,IACRsH,KAAKoiF,EAAgB1iF,SAGtB4iF,EAAS3iF,gBAAkByiF,EAAgB1iF,QAAQC,eAAiB2iF,EAAS3iF,gBAAkB0iF,EAAgB3iF,QAAQC,eACzHjH,EAAKsH,KAAKsiF,GAEZ5pF,EAAKsH,KAAKqiF,EAAgB3iF,SApBD8iF,EAAA/+E,KAAA,GAsBP1L,EAAK6rB,oBAAoB,kBAAmB,eAAgB,CAAC2+D,EAAIxiF,UAAWrH,IAtBrE,aAsBnB20D,EAtBmBm1B,EAAAh8E,MAAA,CAAAg8E,EAAA/+E,KAAA,gBA2BjBiyB,EAAQ39B,EAAK+L,MAAMupD,EAAI,IAAIv3C,IAAIysE,GA3BdC,EAAAtuE,OAAA,SA4BhBnc,EAAKytB,8BAA8BtB,EAAewR,IA5BlC,eAAA8sD,EAAAtuE,OAAA,SA8BlB,MA9BkB,eAAAsuE,EAAAh/E,KAAA,GAAAg/E,EAAAx9D,GAAAw9D,EAAA,SAAAA,EAAAtuE,OAAA,SAgClB,MAhCkB,yBAAAsuE,EAAA59E,SAAAu9E,EAAAtvF,KAAA,aAvhNV,gBAAA4vF,EAAAC,GAAA,OAAAR,EAAAp9E,MAAAjS,KAAAkS,YAAA,GAAAlS,KA0jNnBkyB,yBA1jNmB,eAAA49D,EAAAnwF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0jNQ,SAAA0/E,EAAOR,EAAiBC,GAAxB,IAAAxsE,EAAAgtE,EAAA3+D,EAAA/R,EAAAmwE,EAAAC,EAAA7pF,EAAAoqF,EAAAptD,EAAAxG,EAAA6zD,EAAAh+E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA0/E,GAAA,cAAAA,EAAAx/E,KAAAw/E,EAAAv/E,MAAA,UAAyCoS,EAAzCktE,EAAAlsF,OAAA,QAAAmqB,IAAA+hE,EAAA,GAAAA,EAAA,GAAqD,SAAUF,IAA/DE,EAAAlsF,OAAA,QAAAmqB,IAAA+hE,EAAA,KAAAA,EAAA,GAErBV,EAAgBY,mBAClBZ,EAAkB7vF,OAAOC,OAAO,GAAI4vF,IACpB3iF,QAAU2iF,EAAgBY,iBAItC/+D,EARmB,yBAAA1qB,OAQsB4oF,EAAgB1iF,QARtC,KAAAlG,OAQiD6oF,EAAgB3iF,QARjE,KAAAlG,OAQ4Eqc,KAC/F1D,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAVjB,CAAA6sF,EAAAv/E,KAAA,eAAAu/E,EAAA9uE,OAAA,SAWhBnc,EAAK+L,MAAMqO,IAXK,cAAA6wE,EAAAx/E,KAAA,EAejB8+E,EAAWvqF,EAAKiyB,kBAAkB,QAAQwR,SAC1C+mD,EAAMxqF,EAAK6uD,uBAAuB,KAElCluD,EAAO,IACRsH,KAAKoiF,EAAgB1iF,SAEtBmjF,GAAWP,EAAS3iF,gBAAkByiF,EAAgB1iF,QAAQC,eAAiB2iF,EAAS3iF,gBAAkB0iF,EAAgB3iF,QAAQC,eACpIjH,EAAKsH,KAAKsiF,GAEZ5pF,EAAKsH,KAAKqiF,EAAgB3iF,SAxBHsjF,EAAAv/E,KAAA,GA0BF1L,EAAK6rB,oBAAoB,gBAAiB,eAAgB,CAAC2+D,EAAIxiF,UAAWrH,GAAO,GAAImd,GA1BnF,aA0BjBitE,EA1BiBE,EAAAx8E,MAAA,CAAAw8E,EAAAv/E,KAAA,gBA6BfiyB,EAAQ39B,EAAK+L,MAAMg/E,EAAO,IAAIhtE,IAAIysE,GAClCrzD,EAAsB,WAAhBrZ,EAA2B9d,EAAK8P,gBAAgB,CAAC,QAAQ,QAAU,KA9B1Dm7E,EAAA9uE,OAAA,SA+Bdnc,EAAKytB,8BAA8BtB,EAAewR,EAAOxG,IA/B3C,eAAA8zD,EAAA9uE,OAAA,SAiChB,MAjCgB,eAAA8uE,EAAAx/E,KAAA,GAAAw/E,EAAAh+D,GAAAg+D,EAAA,SAAAA,EAAA9uE,OAAA,SAmChB,MAnCgB,yBAAA8uE,EAAAp+E,SAAAg+E,EAAA/vF,KAAA,aA1jNR,gBAAAqwF,EAAAC,GAAA,OAAAR,EAAA79E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAsnNnBuwF,wBAtnNmB,eAAAC,EAAA7wF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAsnNO,SAAAogF,EAAO5gF,GAAP,IAAAP,EAAAgzB,EAAAouD,EAAAC,EAAAC,EAAA1+E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAogF,GAAA,cAAAA,EAAAlgF,KAAAkgF,EAAAjgF,MAAA,UAAgBtB,EAAhBshF,EAAA5sF,OAAA,QAAAmqB,IAAAyiE,EAAA,GAAAA,EAAA,GAAgC,GACxD/gF,EAAUA,GAAoB3K,EAAKjF,MAAM4P,QAEpCP,GAAkBA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAKmB,EAAKjF,MAAM0P,kBAGpCE,GAAYP,GAAkBA,EAActL,OAPzB,CAAA6sF,EAAAjgF,KAAA,eAAAigF,EAAAxvE,OAAA,SAQf,IARe,cAAAwvE,EAAAjgF,KAAA,EAWD1L,EAAKw9B,YAAY7yB,EAAS,EAAG,SAAUP,GAXtC,OAWlBgzB,EAXkBuuD,EAAAl9E,KAalB+8E,EAAqB,GACvBC,EAAuBzrF,EAAK+L,MAAM,GAItCqxB,EAASr+B,QAAQ,SAAA8M,GAEf,IAAM4pC,EAAY5pC,EAAG4pC,UACf7oC,EAAa5M,EAAK+L,MAAMF,EAAGe,YAMjC,OAJK4+E,EAAmB/1C,KACtB+1C,EAAmB/1C,GAAaz1C,EAAK+L,MAAM,IAGrCF,EAAGG,QACT,IAAK,UACL,IAAK,aACHw/E,EAAmB/1C,GAAa+1C,EAAmB/1C,GAAWlpC,KAAKK,GACnE,MACF,IAAK,WACL,IAAK,cACCA,EAAW+C,GAAG67E,EAAmB/1C,MACnCg2C,EAAuBA,EAAqBl/E,KAAKK,EAAWJ,MAAMg/E,EAAmB/1C,MAEvF+1C,EAAmB/1C,GAAa+1C,EAAmB/1C,GAAWjpC,MAAMI,GAChE4+E,EAAmB/1C,GAAWhpC,GAAG,KACnC++E,EAAmB/1C,GAAaz1C,EAAK+L,MAAM,IAU7C0/E,EAAqB97E,GAAG,IAC1BlV,OAAOoE,KAAK2sF,GAAoBzsF,QAAQ,SAAA+M,GACtC,IAAMutB,EAAemyD,EAAmB1/E,GACpCutB,GAAgBA,EAAa1pB,GAAG,KAC9B0pB,EAAa1pB,GAAG87E,GAClBD,EAAmB1/E,GAAS0/E,EAAmB1/E,GAAOU,MAAMi/E,IAE5DA,EAAuBA,EAAqBj/E,MAAMg/E,EAAmB1/E,IACrE0/E,EAAmB1/E,GAAS,QAzDd,yBAAA6/E,EAAA9+E,SAAA0+E,EAAAzwF,SAtnNP,gBAAA8wF,GAAA,OAAAN,EAAAv+E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAwrNnB+wF,2BAxrNmB,eAAAC,EAAArxF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAwrNU,SAAA4gF,EAAOC,EAASC,GAAhB,IAAAz0C,EAAA00C,EAAA,OAAA3gE,EAAAtwB,EAAAsQ,KAAA,SAAA4gF,GAAA,cAAAA,EAAA1gF,KAAA0gF,EAAAzgF,MAAA,cAAAygF,EAAAzgF,KAAA,EACK1L,EAAKosF,0BADV,YACrB50C,EADqB20C,EAAA19E,MAAA,CAAA09E,EAAAzgF,KAAA,eAAAygF,EAAAzgF,KAAA,EAGG1L,EAAK6rB,oBAAoB2rB,EAAkBv6C,KAAM,6BAA8B,CAAC+uF,EAASC,IAH5F,cAGnBC,EAHmBC,EAAA19E,KAAA09E,EAAAhwE,OAAA,SAKlB+vE,GALkB,cAAAC,EAAAhwE,OAAA,SAOpB,MAPoB,wBAAAgwE,EAAAt/E,SAAAk/E,EAAAjxF,SAxrNV,gBAAAuxF,EAAAC,GAAA,OAAAR,EAAA/+E,MAAAjS,KAAAkS,YAAA,GAAAlS,KAisNnBwxE,aAjsNmB7xE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAisNJ,SAAAohF,IAAA,IAAA5rF,EAAAwrB,EAAA/R,EAAAoyE,EAAAl4D,EAAAg6C,EAAAme,EAAAz/E,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAmhF,GAAA,cAAAA,EAAAjhF,KAAAihF,EAAAhhF,MAAA,UAAO/K,EAAP8rF,EAAA3tF,OAAA,QAAAmqB,IAAAwjE,EAAA,GAAAA,EAAA,GAAY,KAGnBtgE,EAHO,gBAIP/R,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAL7B,CAAAsuF,EAAAhhF,KAAA,eAAAghF,EAAAvwE,OAAA,SAMJnc,EAAK+L,MAAMqO,IANP,YASPoyE,EAAiBxsF,EAAK8P,gBAAgB,CAAC,QAAS,WATzC,CAAA48E,EAAAhhF,KAAA,gBAAAghF,EAAAhhF,KAAA,EAWW1L,EAAK0xC,YAAY86C,EAAe95C,UAX3C,YAWLpe,EAXKo4D,EAAAj+E,QAYI6lB,EAAQpvB,KAZZ,CAAAwnF,EAAAhhF,KAAA,aAaL/K,EAbK,CAAA+rF,EAAAhhF,KAAA,cAcH4iE,EAAWtuE,EAAK+qB,aAAapqB,EAAM2zB,EAAQpvB,OAdxC,CAAAwnF,EAAAhhF,KAAA,YAgBL4iE,EAAWtuE,EAAK+L,MAAMuiE,GAAUvmE,MAAM,KACjC/H,EAAK+L,MAAMuiE,GAAUlwE,QAjBrB,CAAAsuF,EAAAhhF,KAAA,gBAAAghF,EAAAvwE,OAAA,SAkBInc,EAAKytB,8BAA8BtB,EAAemiD,IAlBtD,QAAAoe,EAAAhhF,KAAA,wBAAAghF,EAAAvwE,OAAA,SAsBAnc,EAAKytB,8BAA8BtB,EAAemI,EAAQpvB,OAtB1D,eAAAwnF,EAAAvwE,OAAA,SA0BN,MA1BM,yBAAAuwE,EAAA7/E,SAAA0/E,EAAAzxF,SAjsNIA,KA6tNnB42E,YA7tNmBj3E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6tNL,SAAAwhF,IAAA,IAAAxgE,EAAA/R,EAAAoyE,EAAAl4D,EAAA3zB,EAAA2tE,EAAA,OAAA/iD,EAAAtwB,EAAAsQ,KAAA,SAAAqhF,GAAA,cAAAA,EAAAnhF,KAAAmhF,EAAAlhF,MAAA,UAGNygB,EAHM,gBAIN/R,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAL9B,CAAAwuF,EAAAlhF,KAAA,eAAAkhF,EAAAzwE,OAAA,SAMHnc,EAAK+L,MAAMqO,IANR,YASNoyE,EAAiBxsF,EAAK8P,gBAAgB,CAAC,QAAS,WAT1C,CAAA88E,EAAAlhF,KAAA,gBAAAkhF,EAAAlhF,KAAA,EAWY1L,EAAK0xC,YAAY86C,EAAe95C,UAX5C,YAWJpe,EAXIs4D,EAAAn+E,QAYK6lB,EAAQpvB,KAZb,CAAA0nF,EAAAlhF,KAAA,YAaF/K,EAAOlG,OAAOkR,OAAO6gF,EAAe7rF,QACtC2tE,EAAWtuE,EAAK+qB,aAAapqB,EAAM2zB,EAAQpvB,OAdvC,CAAA0nF,EAAAlhF,KAAA,YAgBN4iE,EAAWtuE,EAAK+L,MAAMuiE,GAAUvmE,MAAM,KACjC/H,EAAK+L,MAAMuiE,GAAUlwE,QAjBpB,CAAAwuF,EAAAlhF,KAAA,gBAAAkhF,EAAAzwE,OAAA,SAkBGnc,EAAKytB,8BAA8BtB,EAAemiD,IAlBrD,eAAAse,EAAAzwE,OAAA,SAuBL,MAvBK,yBAAAywE,EAAA//E,SAAA8/E,EAAA7xF,SA7tNKA,KAsvNnByiC,wBAA0B,WACxB,IAAKv9B,EAAKjF,MAAMuzB,oBACd,OAAO,EAET,IAAMmP,EAAcz9B,EAAK8P,gBAAgB,CAAC,QAAS,oBAC7C+8E,EAAiB7sF,EAAKjF,MAAMuzB,oBAAX,KASvB,OARwB7zB,OAAOoE,KAAKguF,GAAgBrtD,OAAO,SAAC/0B,EAAiBqB,GAC3E,IAAMtH,EAAcqoF,EAAe/gF,GAInC,OAHIrR,OAAOoE,KAAK4+B,GAAazO,SAASxqB,EAAYqoB,KAAK/gB,QAAU2xB,EAAYj5B,EAAYqoB,KAAK/gB,OAAO8gB,UACnGniB,EAAgBqB,GAAStH,GAEpBiG,GACN,KAlwNc3P,KAswNnBgyF,oBAtwNmBryF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAswNG,SAAA4hF,IAAA,IAAAv1C,EAAA15B,EAAAkvE,EAAAC,EAAAC,EAAAvgF,EAAAwgF,EAAAC,EAAAC,EAAA,OAAA9hE,EAAAtwB,EAAAsQ,KAAA,SAAA+hF,GAAA,cAAAA,EAAA7hF,KAAA6hF,EAAA5hF,MAAA,cAAA4hF,EAAA5hF,KAAA,EACY1L,EAAKosF,0BADjB,YACd50C,EADc81C,EAAA7+E,MAAA,CAAA6+E,EAAA5hF,KAAA,gBAAA4hF,EAAA5hF,KAAA,EAGQ1L,EAAKoyD,iBAHb,YAGZt0C,EAHYwvE,EAAA7+E,MAAA,CAAA6+E,EAAA5hF,KAAA,gBAKVshF,EAA0B,GALhBM,EAAA5hF,KAAA,GAMyB8P,QAAQqD,IAAI,CACnD7e,EAAK6rB,oBAAoB2rB,EAAkBv6C,KAAM,qBACjD+C,EAAKomC,0BAA0BoR,EAAkBv6C,KAAM,oBAAqB,GAAI,GAAI6gB,EAAckvE,KARpF,WAAAC,EAAAK,EAAA7+E,KAAAy+E,EAAAzyF,OAAAsyB,EAAA,EAAAtyB,CAAAwyF,EAAA,GAMXtgF,EANWugF,EAAA,GAMCC,EANDD,EAAA,IAWZvgF,IAAcwgF,EAXF,CAAAG,EAAA5hF,KAAA,gBAaR0hF,EAAmBptF,EAAK+L,MAAM/L,EAAK8P,gBAAgB,CAAC,UAAW,mBAAmBiO,IAAIivE,GACtFK,EAAWrtF,EAAK+L,MAAMY,GAAYoR,IAAIovE,GAAgB3gF,MAAM,GAAGzE,MAAMqlF,GAd7DE,EAAAnxE,OAAA,SAePnc,EAAK0jC,QAAQ2pD,GAAUtlF,MAAM,MAftB,eAAAulF,EAAAnxE,OAAA,SAmBb,MAnBa,yBAAAmxE,EAAAzgF,SAAAkgF,EAAAjyF,SAtwNHA,KA2xNnByyF,oBA3xNmB9yF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2xNG,SAAAqiF,IAAA,IAAAj2C,EAAA,OAAAhsB,EAAAtwB,EAAAsQ,KAAA,SAAAkiF,GAAA,cAAAA,EAAAhiF,KAAAgiF,EAAA/hF,MAAA,cAAA+hF,EAAA/hF,KAAA,EACY1L,EAAK0tF,uBADjB,YACdn2C,EADck2C,EAAAh/E,MAAA,CAAAg/E,EAAA/hF,KAAA,eAAA+hF,EAAA/hF,KAAA,EAGL1L,EAAKojE,oBAAoB7rB,EAAkBt6C,MAHtC,cAAAwwF,EAAAtxE,OAAA,SAAAsxE,EAAAh/E,MAAA,cAAAg/E,EAAAtxE,OAAA,SAKb,MALa,wBAAAsxE,EAAA5gF,SAAA2gF,EAAA1yF,SA3xNHA,KAkyNnB22E,qBAlyNmBh3E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAkyNI,SAAAwiF,IAAA,IAAAhjF,EAAA8yE,EAAAlmC,EAAAq2C,EAAA5gF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAsiF,GAAA,cAAAA,EAAApiF,KAAAoiF,EAAAniF,MAAA,cAAOf,EAAPijF,EAAA9uF,OAAA,QAAAmqB,IAAA2kE,EAAA,GAAAA,EAAA,GAAiB,KAAMnQ,IAAvBmQ,EAAA9uF,OAAA,QAAAmqB,IAAA2kE,EAAA,KAAAA,EAAA,GAAAC,EAAAniF,KAAA,EACW1L,EAAK0tF,uBADhB,YACfn2C,EADes2C,EAAAp/E,MAAA,CAAAo/E,EAAAniF,KAAA,gBAGnBf,EAAUA,GAAoB3K,EAAKjF,MAAM4P,QAHtBkjF,EAAAniF,KAAA,EAIN1L,EAAKwrB,gBAAgB+rB,EAAkBt6C,KAAM0N,EAAS8yE,GAJhD,cAAAoQ,EAAA1xE,OAAA,SAAA0xE,EAAAp/E,MAAA,eAAAo/E,EAAA1xE,OAAA,SAMd,MANc,yBAAA0xE,EAAAhhF,SAAA8gF,EAAA7yF,SAlyNJA,KA0yNnB2gD,mBA1yNmBhhD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0yNE,SAAA2iF,IAAA,IAAAhwE,EAAA2/D,EAAA3oD,EAAA4I,EAAA6Z,EAAAw2C,EAAA/gF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAyiF,GAAA,cAAAA,EAAAviF,KAAAuiF,EAAAtiF,MAAA,cAAOoS,EAAPiwE,EAAAjvF,OAAA,QAAAmqB,IAAA8kE,EAAA,GAAAA,EAAA,GAAqB,SAAUtQ,IAA/BsQ,EAAAjvF,OAAA,QAAAmqB,IAAA8kE,EAAA,KAAAA,EAAA,GAAAC,EAAAtiF,KAAA,EACa1L,EAAKosF,0BADlB,cACbt3D,EADak5D,EAAAv/E,KAAAu/E,EAAAtiF,KAAA,EAES1L,EAAKomC,0BAA0BtR,EAAkB73B,KAAM,oBAAqB,GAAI,GAAI6gB,GAF7F,YAEf4f,EAFeswD,EAAAv/E,MAAA,CAAAu/E,EAAAtiF,KAAA,gBAIjBgyB,EAAkB19B,EAAK+L,MAAM2xB,GACzB+/C,IACIlmC,EAAoBv3C,EAAK8P,gBAAgB,CAAC,QAAS,iBACzD4tB,EAAkB19B,EAAKuP,iBAAiBmuB,EAAiB6Z,EAAkB94C,WAP5DuvF,EAAA7xE,OAAA,SASVuhB,GATU,eAAAswD,EAAA7xE,OAAA,SAWZ,MAXY,yBAAA6xE,EAAAnhF,SAAAihF,EAAAhzF,SA1yNFA,KAuzNnB62E,6BAvzNmB,eAAAsc,EAAAxzF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAuzNY,SAAA+iF,EAAOvjF,GAAP,IAAAwjF,EAAAC,EAAA1wD,EAAAqwC,EAAA,OAAAxiD,EAAAtwB,EAAAsQ,KAAA,SAAA8iF,GAAA,cAAAA,EAAA5iF,KAAA4iF,EAAA3iF,MAAA,cAAA2iF,EAAA3iF,KAAA,EACoB8P,QAAQqD,IAAI,CAC3D7e,EAAKy7C,mBAAmB,UACxBz7C,EAAKyxE,qBAAqB9mE,KAHC,UAAAwjF,EAAAE,EAAA5/E,KAAA2/E,EAAA3zF,OAAAsyB,EAAA,EAAAtyB,CAAA0zF,EAAA,GACxBzwD,EADwB0wD,EAAA,KACPrgB,EADOqgB,EAAA,MAKJ1wD,EALI,CAAA2wD,EAAA3iF,KAAA,eAAA2iF,EAAAlyE,OAAA,SAMpBnc,EAAK+L,MAAMgiE,GAAmBhmE,MAAM21B,IANhB,cAAA2wD,EAAAlyE,OAAA,SAQtB,MARsB,wBAAAkyE,EAAAxhF,SAAAqhF,EAAApzF,SAvzNZ,gBAAAwzF,GAAA,OAAAL,EAAAlhF,MAAAjS,KAAAkS,YAAA,GAAAlS,KAi0NnBsxF,wBAj0NmB3xF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAi0NO,SAAAojF,IAAA,IAAAC,EAAA,OAAAjjE,EAAAtwB,EAAAsQ,KAAA,SAAAkjF,GAAA,cAAAA,EAAAhjF,KAAAgjF,EAAA/iF,MAAA,YAClB8iF,EAAsBxuF,EAAK8P,gBAAgB,CAAC,QAAS,qBADnC,CAAA2+E,EAAA/iF,KAAA,WAGK1L,EAAKiyB,kBAAkBu8D,EAAoBvxF,QACzCuxF,EAAoBnsD,IAJ3B,CAAAosD,EAAA/iF,KAAA,eAAA+iF,EAAA/iF,KAAA,EAKS1L,EAAKjF,MAAMqnC,aAAaosD,EAAoBvxF,KAAMuxF,EAAoB7mF,QAAS6mF,EAAoBnsD,KAL5G,OAAAosD,EAAAhgF,KAAA,cAAAggF,EAAAtyE,OAAA,SAQjBqyE,GARiB,wBAAAC,EAAA5hF,SAAA0hF,EAAAzzF,SAj0NPA,KA20NnB4zF,oBA30NmBj0F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA20NG,SAAAwjF,IAAA,IAAAC,EAAA,OAAArjE,EAAAtwB,EAAAsQ,KAAA,SAAAsjF,GAAA,cAAAA,EAAApjF,KAAAojF,EAAAnjF,MAAA,YACdkjF,EAAkB5uF,EAAK8P,gBAAgB,CAAC,QAAS,iBADnC,CAAA++E,EAAAnjF,KAAA,WAGK1L,EAAKiyB,kBAAkB28D,EAAgB3xF,QACrC2xF,EAAgBvsD,IAJvB,CAAAwsD,EAAAnjF,KAAA,eAAAmjF,EAAAnjF,KAAA,EAKS1L,EAAKjF,MAAMqnC,aAAawsD,EAAgB3xF,KAAM2xF,EAAgBjnF,QAASinF,EAAgBvsD,KALhG,OAAAwsD,EAAApgF,KAAA,cAAAogF,EAAA1yE,OAAA,SAQbyyE,GARa,wBAAAC,EAAAhiF,SAAA8hF,EAAA7zF,SA30NHA,KAq1NnB4yF,qBAr1NmBjzF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAq1NI,SAAA2jF,IAAA,IAAAC,EAAA,OAAAxjE,EAAAtwB,EAAAsQ,KAAA,SAAAyjF,GAAA,cAAAA,EAAAvjF,KAAAujF,EAAAtjF,MAAA,YACfqjF,EAAmB/uF,EAAK8P,gBAAgB,CAAC,QAAS,kBADnC,CAAAk/E,EAAAtjF,KAAA,WAGK1L,EAAKiyB,kBAAkB88D,EAAiB9xF,QACtC8xF,EAAiB1sD,IAJxB,CAAA2sD,EAAAtjF,KAAA,eAAAsjF,EAAAtjF,KAAA,EAKS1L,EAAKjF,MAAMqnC,aAAa2sD,EAAiB9xF,KAAM8xF,EAAiBpnF,QAASonF,EAAiB1sD,KALnG,OAAA2sD,EAAAvgF,KAAA,cAAAugF,EAAA7yE,OAAA,SAQd4yE,GARc,wBAAAC,EAAAniF,SAAAiiF,EAAAh0F,SAr1NJA,KA+1NnBm0F,qBA/1NmBx0F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+1NI,SAAA+jF,IAAA,IAAAC,EAAA,OAAA5jE,EAAAtwB,EAAAsQ,KAAA,SAAA6jF,GAAA,cAAAA,EAAA3jF,KAAA2jF,EAAA1jF,MAAA,YACfyjF,EAAwBnvF,EAAK8P,gBAAgB,CAAC,QAAS,uBADxC,CAAAs/E,EAAA1jF,KAAA,WAGK1L,EAAKiyB,kBAAkBk9D,EAAsBlyF,QAC3CkyF,EAAsB9sD,IAJ7B,CAAA+sD,EAAA1jF,KAAA,eAAA0jF,EAAA1jF,KAAA,EAKS1L,EAAKjF,MAAMqnC,aAAa+sD,EAAsBlyF,KAAMkyF,EAAsBxnF,QAASwnF,EAAsB9sD,KALlH,OAAA+sD,EAAA3gF,KAAA,cAAA2gF,EAAAjzE,OAAA,SAQdgzE,GARc,wBAAAC,EAAAviF,SAAAqiF,EAAAp0F,SA/1NJA,KAy2NnBu0F,0BAz2NmB50F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAy2NS,SAAAmkF,IAAA,IAAA3kF,EAAAojE,EAAAwhB,EAAA1gF,EAAA2oC,EAAA2C,EAAAq1C,EAAAC,EAAAC,EAAAC,EAAA3iF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAqkF,GAAA,cAAAA,EAAAnkF,KAAAmkF,EAAAlkF,MAAA,UAAOf,EAAPglF,EAAA7wF,OAAA,QAAAmqB,IAAA0mE,EAAA,GAAAA,EAAA,GAAiB,KAAM5hB,EAAvB4hB,EAAA7wF,OAAA,QAAAmqB,IAAA0mE,EAAA,GAAAA,EAAA,GAA2C,KAAMJ,EAAjDI,EAAA7wF,OAAA,QAAAmqB,IAAA0mE,EAAA,GAAAA,EAAA,GAAgE,MACrFhlF,GAAW3K,EAAKjF,MAAM4P,UACzBA,EAAU3K,EAAKjF,MAAM4P,SAGlBA,EALqB,CAAAilF,EAAAlkF,KAAA,eAAAkkF,EAAAzzE,OAAA,SAMjB,MANiB,cASpBtN,EAAiB,GATG+gF,EAAAlkF,KAAA,EAUM1L,EAAKivF,uBAVX,cAUpBz3C,EAVoBo4C,EAAAnhF,KAWpB0rC,EAAuBn6C,EAAK8P,gBAAgB,CAAC,QAAS,oBAXlC8/E,EAAAlkF,KAAA,GAaK1L,EAAKutF,sBAbV,WAapBiC,EAboBI,EAAAnhF,KAcrBs/D,EAdqB,CAAA6hB,EAAAlkF,KAAA,gBAAAkkF,EAAAlkF,KAAA,GAeE1L,EAAKyxE,qBAAqB9mE,GAAS,GAfrC,QAexBojE,EAfwB6hB,EAAAnhF,KAAA,YAkBtBs/D,IAAqByhB,EAlBC,CAAAI,EAAAlkF,KAAA,gBAmBlB+jF,EAAkBzvF,EAAK+L,MAAMgiE,GAAmBhwD,IAAI/d,EAAK+L,MAAMyjF,IAC/DE,EAAUj1F,OAAOoE,KAAKs7C,GAAsBr7C,OAE9CywF,IACFA,EAAevvF,EAAK+L,MAAMwjF,GAAcxxE,IAAI2xE,IAvBtBE,EAAAlkF,KAAA,GA4BlB1L,EAAK+K,aAAatQ,OAAOoE,KAAKs7C,GAA9B,eAAA01C,EAAAp1F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAqD,SAAA2kF,EAAOhkF,GAAP,IAAA+rC,EAAAk4C,EAAAC,EAAArhF,EAAA,OAAA4c,EAAAtwB,EAAAsQ,KAAA,SAAA0kF,GAAA,cAAAA,EAAAxkF,KAAAwkF,EAAAvkF,MAAA,cACnDmsC,EAAmBsC,EAAqBruC,GACxCikF,EAAYl4C,EAAiBq4C,gBAAgBH,UAFME,EAAAvkF,KAAA,EAG3B1L,EAAK6rB,oBAAoB2rB,EAAkBv6C,KAAM,WAAY,CAAC8yF,IAHnC,QAGnDC,EAHmDC,EAAAxhF,QAKnDE,EAAmB3O,EAAK+L,MAAMikF,GAAiBjoF,MAAM0nF,GACrDF,IAEF5gF,EAAmBA,EAAiBnC,MAAMmC,EAAiB5G,MAAMwnF,KAEnE1gF,EAAekhF,GAAa/vF,EAAK2uD,aAAahgD,IAVS,wBAAAshF,EAAApjF,SAAAijF,EAAAh1F,SAArD,gBAAAq1F,GAAA,OAAAN,EAAA9iF,MAAAjS,KAAAkS,YAAA,IA5BkB,eAAA4iF,EAAAzzE,OAAA,SA2CnB1hB,OAAOkR,OAAOkD,IA3CK,yBAAA+gF,EAAA/iF,SAAAyiF,EAAAx0F,SAz2NTA,KAw5NnBs1F,sBAx5NmB31F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAw5NK,SAAAklF,IAAA,IAAA1lF,EAAAojE,EAAA0P,EAAA6S,EAAAzhF,EAAApE,EAAA+sC,EAAA2C,EAAAq1C,EAAAC,EAAAc,EAAAvjF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAilF,GAAA,cAAAA,EAAA/kF,KAAA+kF,EAAA9kF,MAAA,UAAOf,EAAP4lF,EAAAzxF,OAAA,QAAAmqB,IAAAsnE,EAAA,GAAAA,EAAA,GAAiB,KAAMxiB,EAAvBwiB,EAAAzxF,OAAA,QAAAmqB,IAAAsnE,EAAA,GAAAA,EAAA,GAA2C,KAAM9S,EAAjD8S,EAAAzxF,OAAA,QAAAmqB,IAAAsnE,EAAA,IAAAA,EAAA,GAAsED,EAAtEC,EAAAzxF,OAAA,QAAAmqB,IAAAsnE,EAAA,IAAAA,EAAA,IAEjB5lF,GAAW3K,EAAKjF,MAAM4P,UACzBA,EAAU3K,EAAKjF,MAAM4P,SAGlBA,EANiB,CAAA6lF,EAAA9kF,KAAA,eAAA8kF,EAAAr0E,OAAA,SAOb,MAPa,cAUhBtN,EAAiB,GACjBpE,EAAkBzK,EAAKu9B,0BAXPizD,EAAA9kF,KAAA,GAYU1L,EAAKivF,uBAZf,eAYhBz3C,EAZgBg5C,EAAA/hF,KAahB0rC,EAAuBn6C,EAAK8P,gBAAgB,CAAC,QAAS,oBAbtC0gF,EAAA9kF,KAAA,GAeS1L,EAAKutF,sBAfd,WAehBiC,EAfgBgB,EAAA/hF,KAgBjBs/D,EAhBiB,CAAAyiB,EAAA9kF,KAAA,gBAAA8kF,EAAA9kF,KAAA,GAiBM1L,EAAKyxE,qBAAqB9mE,GAAS,GAjBzC,QAiBpBojE,EAjBoByiB,EAAA/hF,KAAA,YAoBlBs/D,IAAqByhB,EApBH,CAAAgB,EAAA9kF,KAAA,gBAqBd+jF,EAAkBzvF,EAAK+L,MAAMgiE,GAAmBhwD,IAAI/d,EAAK+L,MAAMyjF,IArBjDgB,EAAA9kF,KAAA,GAuBd1L,EAAK+K,aAAatQ,OAAOoE,KAAKs7C,GAA9B,eAAAs2C,EAAAh2F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAqD,SAAAulF,EAAO5kF,GAAP,IAAA+rC,EAAAk4C,EAAAvrF,EAAAmsF,EAAAC,EAAAC,EAAAliF,EAAAmiF,EAAAz3D,EAAA,OAAA9N,EAAAtwB,EAAAsQ,KAAA,SAAAwlF,GAAA,cAAAA,EAAAtlF,KAAAslF,EAAArlF,MAAA,cACnDmsC,EAAmBsC,EAAqBruC,GACxCikF,EAAYl4C,EAAiBq4C,gBAAgBH,UAC7CvrF,EAAciG,EAAgBotC,EAAiB9gB,WAHIg6D,EAAArlF,KAAA,EAO/C8P,QAAQqD,IAAI,CACpB7e,EAAK67B,kBAAkBr3B,GACvBxE,EAAK6rB,oBAAoB2rB,EAAkBv6C,KAAM,WAAY,CAAC8yF,MATP,OAAAY,EAAAI,EAAAtiF,KAAAmiF,EAAAn2F,OAAAsyB,EAAA,EAAAtyB,CAAAk2F,EAAA,GAKvDE,EALuDD,EAAA,GAMvDjiF,EANuDiiF,EAAA,GAYnDE,EAAmB9wF,EAAK+L,MAAM4C,GAAkB5G,MAAM/H,EAAK+L,MAAM8kF,IACnEx3D,EAAey3D,EAAiB/oF,MAAM0nF,GACtChS,IACFpkD,EAAer5B,EAAKuP,iBAAiB8pB,EAAc,KAGrDxqB,EAAegpC,EAAiB9gB,WAAau5D,EAAetwF,EAAK2uD,aAAat1B,GAAgBA,EAlBrC,yBAAA03D,EAAAlkF,SAAA6jF,EAAA51F,SAArD,gBAAAk2F,GAAA,OAAAP,EAAA1jF,MAAAjS,KAAAkS,YAAA,IAvBc,eAAAwjF,EAAAr0E,OAAA,SA6Cfm0E,EAAe71F,OAAOkR,OAAOkD,GAAkBA,GA7ChC,yBAAA2hF,EAAA3jF,SAAAwjF,EAAAv1F,SAx5NLA,KAy8NnBm2F,gBAz8NmB,eAAAC,EAAAz2F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAy8ND,SAAAgmF,EAAOrlF,EAAO6e,GAAd,IAAAzF,EAAA8mE,EAAAvhF,EAAA0vC,EAAAi3C,EAAApkF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8lF,GAAA,cAAAA,EAAA5lF,KAAA4lF,EAAA3lF,MAAA,cAAsBwZ,EAAtBksE,EAAAtyF,OAAA,QAAAmqB,IAAAmoE,EAAA,IAAAA,EAAA,GACVpF,EAAU,GACVvhF,EAAkBzK,EAAKu9B,0BACvB4c,EAAuBn6C,EAAK8P,gBAAgB,CAAC,QAAS,oBAH5CuhF,EAAA3lF,KAAA,EAKV1L,EAAK+K,aAAatQ,OAAOoE,KAAKs7C,GAA9B,eAAAm3C,EAAA72F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAqD,SAAAomF,EAAO97C,GAAP,IAAAoC,EAAAq4C,EAAAH,EAAAvrF,EAAAqsF,EAAA,OAAAtlE,EAAAtwB,EAAAsQ,KAAA,SAAAimF,GAAA,cAAAA,EAAA/lF,KAAA+lF,EAAA9lF,MAAA,UACnDmsC,EAAmBsC,EAAqB1E,GACxCy6C,EAAkBr4C,EAAiBq4C,gBACnCH,EAAYG,EAAgBH,YAC9Bt6C,IAAc3pC,GAAShE,WAAW6iB,GAAU,GAJS,CAAA6mE,EAAA9lF,KAAA,YAKjDlH,EAAciG,EAAgBotC,EAAiB9gB,WACrDpM,EAAS3qB,EAAKuP,iBAAiBob,EAAQ,IAClCzF,EAPkD,CAAAssE,EAAA9lF,KAAA,gBAAA8lF,EAAA9lF,KAAA,EAQxB1L,EAAK67B,kBAAkBr3B,GARC,OAQ/CqsF,EAR+CW,EAAA/iF,KASrDkc,EAASA,EAAO5M,IAAI8yE,GATiC,QAWvDlmE,EAAS3qB,EAAK8uD,qBAAqBnkC,EAAQktB,EAAiBp5C,UAC5DutF,EAAQ+D,GAAaplE,EAZkC6mE,EAAA9lF,KAAA,iBAcvDsgF,EAAQ+D,GAAa,EAdkC,yBAAAyB,EAAA3kF,SAAA0kF,EAAAz2F,SAArD,gBAAA22F,GAAA,OAAAH,EAAAvkF,MAAAjS,KAAAkS,YAAA,IALU,cAAAqkF,EAAAl1E,OAAA,SAuBT1hB,OAAOkR,OAAOqgF,IAvBL,wBAAAqF,EAAAxkF,SAAAskF,EAAAr2F,SAz8NC,gBAAA42F,EAAAC,GAAA,OAAAT,EAAAnkF,MAAAjS,KAAAkS,YAAA,GAAAlS,KAk+NnB82F,oBAl+NmB,eAAAC,EAAAp3F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAk+NG,SAAA2mF,EAAO9F,GAAP,IAAA9mE,EAAA4P,EAAAi9D,EAAA/kF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAymF,GAAA,cAAAA,EAAAvmF,KAAAumF,EAAAtmF,MAAA,cAAgBwZ,IAAhB6sE,EAAAjzF,OAAA,QAAAmqB,IAAA8oE,EAAA,KAAAA,EAAA,GAAAC,EAAAtmF,KAAA,EACY1L,EAAKivF,uBADjB,YACdn6D,EADck9D,EAAAvjF,MAAA,CAAAujF,EAAAtmF,KAAA,eAAAsmF,EAAAtmF,KAAA,EAGL1L,EAAK6rB,oBAAoBiJ,EAAkB73B,KAAM,oBAAqB,CAAC+uF,EAAS9mE,IAH3E,cAAA8sE,EAAA71E,OAAA,SAAA61E,EAAAvjF,MAAA,cAAAujF,EAAA71E,OAAA,SAKb,MALa,wBAAA61E,EAAAnlF,SAAAilF,EAAAh3F,SAl+NH,gBAAAm3F,GAAA,OAAAJ,EAAA9kF,MAAAjS,KAAAkS,YAAA,GAAAlS,KAy+NnBo3F,iBAz+NmB,eAAAC,EAAA13F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAy+NA,SAAAinF,EAAOtmF,EAAO6e,GAAd,IAAAzF,EAAAmtE,EAAAx0D,EAAAy0D,EAAA5C,EAAA1D,EAAAuG,EAAAC,EAAA1pB,EAAAx8D,EAAAmmF,EAAAC,EAAA1lF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAonF,GAAA,cAAAA,EAAAlnF,KAAAknF,EAAAjnF,MAAA,cAAsBwZ,IAAtBwtE,EAAA5zF,OAAA,QAAAmqB,IAAAypE,EAAA,KAAAA,EAAA,GAAsCL,EAAtCK,EAAA5zF,OAAA,QAAAmqB,IAAAypE,EAAA,GAAAA,EAAA,GAAuD,KACpE70D,EAAW,KADE80D,EAAAjnF,KAAA,EAEa1L,EAAKosF,0BAFlB,YAEXkG,EAFWK,EAAAlkF,MAAA,CAAAkkF,EAAAjnF,KAAA,YAKTgkF,EAAU1vF,EAAK8P,gBAAgB,CAAC,QAAS,SAAU,aAEzD6a,EAAS3qB,EAAK+L,MAAM4e,MACLA,EAAOvsB,UAAWusB,EAAOuC,IAAI,GAR7B,CAAAylE,EAAAjnF,KAAA,gBAAAinF,EAAAx2E,OAAA,SASN,MATM,YAYX6vE,EAAUqG,IACErG,EAAQltF,SAAW4wF,EAbpB,CAAAiD,EAAAjnF,KAAA,gBAAAinF,EAAAjnF,KAAA,GAcG1L,EAAKixF,gBAAgBnlF,EAAO6e,GAd/B,QAcbqhE,EAda2G,EAAAlkF,KAAA,eAAAkkF,EAAAjnF,KAAA,GAoBL8P,QAAQqD,IAAI,CACpB7e,EAAK6rB,oBAAoBymE,EAAgBr1F,KAAM,qBAC/C+C,EAAK6rB,oBAAoBymE,EAAgBr1F,KAAM,oBAAqB,CAAC+uF,EAAS9mE,MAtBjE,WAAAqtE,EAAAI,EAAAlkF,KAAA+jF,EAAA/3F,OAAAsyB,EAAA,EAAAtyB,CAAA83F,EAAA,GAkBbzpB,EAlBa0pB,EAAA,GAmBblmF,EAnBakmF,EAAA,IAyBX1pB,IAAgBx8D,EAzBL,CAAAqmF,EAAAjnF,KAAA,gBA0Bbif,EAAS3qB,EAAKuP,iBAAiBob,EAAQ,IACvCm+C,EAAe9oE,EAAKuP,iBAAiBu5D,EAAc,IACnDx8D,EAActM,EAAKuP,iBAAiBjD,EAAa,IAC3CmmF,EAAKnmF,EAAYvE,MAAM+gE,GAGzBupB,IAAmBntE,IACrByF,EAASA,EAAO5iB,MAAM+gE,IAItBjrC,EADE3Y,EACSutE,EAAG10E,IAAI4M,GAAQne,MAAM,GAAGzE,OAAO,GAE/B4iB,EAAO5M,IAAI00E,GAAIjmF,MAAM,GAAGzE,OAAO,GAvC/B4qF,EAAAx2E,OAAA,SA4CN0hB,GA5CM,eAAA80D,EAAAx2E,OAAA,SA+CV,MA/CU,yBAAAw2E,EAAA9lF,SAAAulF,EAAAt3F,SAz+NA,gBAAA83F,EAAAC,GAAA,OAAAV,EAAAplF,MAAAjS,KAAAkS,YAAA,GAAAlS,KA0hOnBs3E,uBA1hOmB,eAAA0gB,EAAAr4F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0hOM,SAAA4nF,EAAOvuF,GAAP,IAAAwuF,EAAAC,EAAA9mE,EAAA/R,EAAA8T,EAAAglE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnnE,EAAAonE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhnF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA0oF,GAAA,cAAAA,EAAAxoF,KAAAwoF,EAAAvoF,MAAA,UAAoBsnF,EAApBgB,EAAAl1F,OAAA,QAAAmqB,IAAA+qE,EAAA,GAAAA,EAAA,GAAuC,KAAMf,IAA7Ce,EAAAl1F,OAAA,QAAAmqB,IAAA+qE,EAAA,KAAAA,EAAA,GAEjB7nE,EAFiB,0BAAA1qB,OAEyB+C,EAAYqoB,KAAK/gB,MAF1C,KAAArK,OAEmDuxF,EAFnD,KAAAvxF,OAEuEwxF,KACxF74E,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAJnB,CAAA61F,EAAAvoF,KAAA,eAAAuoF,EAAA93E,OAAA,SAKdnc,EAAK+L,MAAMqO,IALG,UAQjB8T,EAAmBluB,EAAKuuB,uBAE1B2kE,EAAmBlzF,EAAK+L,MAAM,GAC5BonF,EAAqBnzF,EAAK8P,gBAAgB,CAAC,YAAa,YACxDsjF,EAAe5uF,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,OAAIA,EAAEY,OAASk2F,EAAmB36D,WAG7E66D,EAAiBrzF,EAAK+qB,aAAa,CAAC,iBAAkBmD,GAAmBilE,IAAuB,GAEjGC,IAAgBC,EAAerkE,SAASxqB,EAAYqoB,KAAK/gB,OAjBvC,CAAAmoF,EAAAvoF,KAAA,gBAAAuoF,EAAA93E,OAAA,SAkBd+2E,GAlBc,eAAAe,EAAAvoF,KAAA,GAqBwB1L,EAAK6rB,oBAAoBunE,EAAatnF,MAAO,2BArBrE,WAqBjBwnF,EArBiBW,EAAAxlF,KAAA,CAAAwlF,EAAAvoF,KAAA,gBAAAuoF,EAAA93E,OAAA,SAwBd+2E,GAxBc,eA2BjBK,EA3BiB,6BAAA9xF,OA2B6C6xF,GA3B7CW,EAAAvoF,KAAA,GA4BjB1L,EAAKjF,MAAMqnC,aAAamxD,EAAgCD,EAAkCY,GA5BzE,eAAAD,EAAAvoF,KAAA,GAkCb8P,QAAQqD,IAAI,CACpB7e,EAAKojE,oBAAoBgwB,EAAatnF,OACtC9L,EAAKuE,mBAAmBC,GAAa,GAAO,GAC5CxE,EAAK6rB,oBAAoB0nE,EAAgC,SAAU,CAACH,EAAazrF,YArC5D,WAAA6rF,EAAAS,EAAAxlF,KAAAglF,EAAAh5F,OAAAsyB,EAAA,EAAAtyB,CAAA+4F,EAAA,GA+BrBE,EA/BqBD,EAAA,GAgCrBlnE,EAhCqBknE,EAAA,KAiCrBE,EAjCqBF,EAAA,MA0CNlnE,EA1CM,CAAA0nE,EAAAvoF,KAAA,cA4CfkoF,EAAqBrnE,EAAgBloB,yBAAyB+uF,EAAazrF,QAAQC,kBAE/DgsF,EAAmBl0B,IAAI,MA9C5B,CAAAu0B,EAAAvoF,KAAA,YA+CdsnF,EA/Cc,CAAAiB,EAAAvoF,KAAA,gBAAAuoF,EAAAvoF,KAAA,GAgDQ1L,EAAK6rB,oBAAoBunE,EAAatnF,MAAO,YAAa,CAACtH,EAAYqoB,KAAKllB,UAhDpF,QAgDjBqrF,EAhDiBiB,EAAAxlF,KAAA,WAmDbolF,EAAY7zF,EAAK+L,MAAM4nF,EAAUQ,mBACvCnB,EAAmBhzF,EAAK+L,MAAMinF,GAC9BU,EAAoB1zF,EAAK+L,MAAM2nF,GACzBI,EAAiB9zF,EAAK8P,gBAAgB,CAAC,UAAW,mBAElDikF,EAAgBf,EAAiBj1E,IAAI21E,GAC3CR,EAAmBW,EAAU9rF,MAAMgsF,GAE/Bd,IACFC,EAAmBA,EAAiBn1E,IAAI,MAAMhW,MAAM+rF,IAGjD9zF,EAAK+L,MAAMmnF,GAAkB90F,QA/Df,CAAA61F,EAAAvoF,KAAA,gBAAAuoF,EAAA93E,OAAA,SAgEVnc,EAAKytB,8BAA8BtB,EAAe+mE,IAhExC,eAAAe,EAAA93E,OAAA,SAqEhB+2E,GArEgB,yBAAAe,EAAApnF,SAAAkmF,EAAAj4F,SA1hON,gBAAAs5F,GAAA,OAAAtB,EAAA/lF,MAAAjS,KAAAkS,YAAA,GAAAlS,KAimOnBi3E,2BAjmOmBt3E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAimOU,SAAAkpF,IAAA,IAAA1pF,EAAAF,EAAA0oF,EAAA/oE,EAAAkqE,EAAAtnF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAgpF,GAAA,cAAAA,EAAA9oF,KAAA8oF,EAAA7oF,MAAA,UAAOf,EAAP2pF,EAAAx1F,OAAA,QAAAmqB,IAAAqrE,EAAA,GAAAA,EAAA,GAAiB,KAAM7pF,EAAvB6pF,EAAAx1F,OAAA,QAAAmqB,IAAAqrE,EAAA,GAAAA,EAAA,GAAyC,KAC/D3pF,IACHA,EAAU3K,EAAKjF,MAAM4P,UAElBF,GAAmBzK,EAAKjF,MAAMmT,mBACjCzD,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBtuB,EAAKjF,MAAMmT,mBAGzDvD,GAAYF,EARU,CAAA8pF,EAAA7oF,KAAA,eAAA6oF,EAAAp4E,OAAA,UASlB,GATkB,cAYrBg3E,EAAqBnzF,EAAK8P,gBAAgB,CAAC,YAAa,YAE1Dsa,EAASpqB,EAAK+L,MAAM,GAdGwoF,EAAA7oF,KAAA,GAerB1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAA+pF,EAAA/5F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAspF,EAAO3oF,GAAP,IAAAtH,EAAAkwF,EAAAC,EAAA9lE,EAAAqkE,EAAA,OAAA3nE,EAAAtwB,EAAAsQ,KAAA,SAAAqpF,GAAA,cAAAA,EAAAnpF,KAAAmpF,EAAAlpF,MAAA,UAC9ClH,EAAciG,EAAgBqB,IACjBtH,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,OAAKA,EAAEY,OAASk2F,EAAmB36D,WAF9B,CAAAo8D,EAAAlpF,KAAA,gBAAAkpF,EAAAlpF,KAAA,EAOxC8P,QAAQqD,IAAI,CACpB7e,EAAKivB,iBAAiBtkB,EAASnG,GAAa,GAC5CxE,EAAKoyE,uBAAuB5tE,EAAa,MAAM,KATC,OAAAkwF,EAAAE,EAAAnmF,KAAAkmF,EAAAl6F,OAAAsyB,EAAA,EAAAtyB,CAAAi6F,EAAA,GAKhD7lE,EALgD8lE,EAAA,IAMhDzB,EANgDyB,EAAA,KAY1B9lE,IAAkB7uB,EAAK+L,MAAMmnF,GAAkB90F,UAAY4B,EAAK+L,MAAM8iB,GAAezwB,UAC3GgsB,EAASA,EAAO7d,KAAK2mF,EAAiBnrF,MAAM8mB,KAbI,yBAAA+lE,EAAA/nF,SAAA4nF,EAAA35F,SAAhD,gBAAA+5F,GAAA,OAAAL,EAAAznF,MAAAjS,KAAAkS,YAAA,IAfqB,eAAAunF,EAAAp4E,OAAA,SAiCpBiO,GAjCoB,yBAAAmqE,EAAA1nF,SAAAwnF,EAAAv5F,SAjmOVA,KAooOnBg6F,aApoOmB,eAAAC,EAAAt6F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAooOJ,SAAA6pF,EAAOlpF,EAAOtH,GAAd,IAAAywF,EAAAC,EAAA/oE,EAAA/R,EAAA+6E,EAAAhwD,EAAA3Y,EAAA4oE,EAAAC,EAAA9oE,EAAA+oE,EAAAtoF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAgqF,GAAA,cAAAA,EAAA9pF,KAAA8pF,EAAA7pF,MAAA,UAA2BupF,EAA3BK,EAAAx2F,OAAA,QAAAmqB,IAAAqsE,EAAA,GAAAA,EAAA,GAAiD,MACxDJ,EAAoBl1F,EAAK8P,gBAAgB,CAAC,YAAa,YACtC8c,QAFV,CAAA2oE,EAAA7pF,KAAA,eAAA6pF,EAAAp5E,OAAA,UAGJ,GAHI,UAMPgQ,EANO,gBAAA1qB,OAMyB+C,EAAYqoB,KAAK/gB,MAN1C,KAAArK,OAMmDwzF,KAC1D76E,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAR7B,CAAAm3F,EAAA7pF,KAAA,eAAA6pF,EAAAp5E,OAAA,SASJnc,EAAK+L,MAAMqO,IATP,cAYT+6E,EAAYn1F,EAAK+L,MAAM,GAZdwpF,EAAA7pF,KAAA,GAamB1L,EAAKoyE,uBAAuB5tE,GAb/C,aAaP2gC,EAbOowD,EAAA9mF,QAeYzO,EAAK+L,MAAMo5B,GAAmBx1B,GAAG,GAf7C,CAAA4lF,EAAA7pF,KAAA,YAkBNupF,EAlBM,CAAAM,EAAA7pF,KAAA,gBAmBH8gB,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UApBhC8xD,EAAA9pF,KAAA,GAuBD2pF,EAAkB,CACtBztF,QAASutF,EAAkBhK,iBAAmBgK,EAAkBvtF,SAxB3D4tF,EAAA7pF,KAAA,GA0BqB1L,EAAKgtB,yBAAyBR,EAAgB4oE,GA1BnE,QA0BPH,EA1BOM,EAAA9mF,KAAA8mF,EAAA7pF,KAAA,iBAAA6pF,EAAA9pF,KAAA,GAAA8pF,EAAAtoE,GAAAsoE,EAAA,kBA8BJN,IAAuBA,EAAoB72F,UAC9C62F,EAAsBj1F,EAAK+L,MAAM,IA/B1B,eAmCLspF,EAAcr1F,EAAK+L,MAAMkpF,GAAqBltF,MAAMo9B,GAnC/CowD,EAAA7pF,KAAA,GAoCmB1L,EAAKuE,mBAAmBC,GAAa,GAAO,GApC/D,SAoCL+nB,EApCKgpE,EAAA9mF,QAyCT0mF,EAAYE,EAAYt3E,IAAIwO,EAAgBg8D,0BAA0BxgF,MAAM,KAIvE/H,EAAK+L,MAAMopF,GAAW/2F,SACzB4B,EAAKytB,8BAA8BtB,EAAegpE,IA9C3C,eAAAI,EAAAp5E,OAAA,SAmDNg5E,GAnDM,yBAAAI,EAAA1oF,SAAAmoF,EAAAl6F,KAAA,cApoOI,gBAAA06F,EAAAC,GAAA,OAAAV,EAAAhoF,MAAAjS,KAAAkS,YAAA,GAAAlS,KAyrOnB46F,cAzrOmB,eAAAC,EAAAl7F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAyrOH,SAAAyqF,EAAO9pF,EAAOtH,GAAd,IAAAqxF,EAAA1C,EAAAhnE,EAAA/R,EAAA07E,EAAA5C,EAAA1mE,EAAA4oE,EAAAW,EAAAxpE,EAAAypE,EAAAhpF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA0qF,GAAA,cAAAA,EAAAxqF,KAAAwqF,EAAAvqF,MAAA,UAA2BmqF,EAA3BG,EAAAl3F,OAAA,QAAAmqB,IAAA+sE,EAAA,GAAAA,EAAA,GAAgD,MACxD7C,EAAqBnzF,EAAK8P,gBAAgB,CAAC,YAAa,aACtC8c,QAFV,CAAAqpE,EAAAvqF,KAAA,eAAAuqF,EAAA95E,OAAA,UAGL,GAHK,UAMRgQ,EANQ,iBAAA1qB,OAMyB+C,EAAYqoB,KAAK/gB,MAN1C,KAAArK,OAMmDo0F,KAC3Dz7E,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAR5B,CAAA63F,EAAAvqF,KAAA,eAAAuqF,EAAA95E,OAAA,SASLnc,EAAK+L,MAAMqO,IATN,cAYV07E,EAAa91F,EAAK+L,MAAM,GAZdkqF,EAAAvqF,KAAA,GAaiB1L,EAAKoyE,uBAAuB5tE,GAb7C,aAaR0uF,EAbQ+C,EAAAxnF,QAeUzO,EAAK+L,MAAMmnF,GAAkBvjF,GAAG,GAf1C,CAAAsmF,EAAAvqF,KAAA,YAkBPmqF,EAlBO,CAAAI,EAAAvqF,KAAA,gBAmBJ8gB,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UApB/BwyD,EAAAxqF,KAAA,GAuBF2pF,EAAkB,CACtBztF,QAASwrF,EAAmBjI,iBAAmBiI,EAAmBxrF,SAxB5DsuF,EAAAvqF,KAAA,GA0BmB1L,EAAKgtB,yBAAyBR,EAAgB4oE,GA1BjE,QA0BRS,EA1BQI,EAAAxnF,KAAAwnF,EAAAvqF,KAAA,iBAAAuqF,EAAAxqF,KAAA,GAAAwqF,EAAAhpE,GAAAgpE,EAAA,kBA8BLJ,IAAsBA,EAAmBz3F,UAC5Cy3F,EAAqB71F,EAAK+L,MAAM,IA/BxB,eAmCNgqF,EAAe/1F,EAAK+L,MAAM8pF,GAAoB9tF,MAAMmrF,GAnC9C+C,EAAAvqF,KAAA,GAqCkB1L,EAAKuE,mBAAmBC,GAAa,GAAO,GArC9D,SAqCN+nB,EArCM0pE,EAAAxnF,QAwCVqnF,EAAaC,EAAah4E,IAAIwO,EAAgBg8D,0BAA0BxgF,MAAM,KAIzE/H,EAAK+L,MAAM+pF,GAAY13F,SAC1B4B,EAAKytB,8BAA8BtB,EAAe2pE,IA7C1C,eAAAG,EAAA95E,OAAA,SAkDP25E,GAlDO,yBAAAG,EAAAppF,SAAA+oF,EAAA96F,KAAA,cAzrOG,gBAAAo7F,EAAAC,GAAA,OAAAR,EAAA5oF,MAAAjS,KAAAkS,YAAA,GAAAlS,KA6uOnBs7F,WA7uOmB,eAAAC,EAAA57F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6uON,SAAAmrF,EAAOxqF,EAAOtH,GAAd,IAAA+xF,EAAAC,EAAAC,EAAAtqE,EAAA/R,EAAAs8E,EAAAC,EAAAnqE,EAAAoqE,EAAArqE,EAAAsqE,EAAA7pF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAurF,GAAA,cAAAA,EAAArrF,KAAAqrF,EAAAprF,MAAA,UAA2B6qF,EAA3BM,EAAA/3F,OAAA,QAAAmqB,IAAA4tE,EAAA,GAAAA,EAAA,GAA8C,KAAML,EAApDK,EAAA/3F,OAAA,QAAAmqB,IAAA4tE,EAAA,GAAAA,EAAA,GAAyE,MAC9EJ,EAAkBz2F,EAAK8P,gBAAgB,CAAC,YAAa,UACtC8c,QAFV,CAAAkqE,EAAAprF,KAAA,eAAAorF,EAAA36E,OAAA,UAGF,GAHE,UAMLgQ,EANK,cAAA1qB,OAMyB+C,EAAYqoB,KAAK/gB,MAN1C,KAAArK,OAMmD80F,EANnD,KAAA90F,OAMuE+0F,KAC5Ep8E,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAR/B,CAAA04F,EAAAprF,KAAA,eAAAorF,EAAA36E,OAAA,SASFnc,EAAK+L,MAAMqO,IATT,cAYPs8E,EAAU12F,EAAK+L,MAAM,GAZd+qF,EAAAprF,KAAA,GAaoB1L,EAAKmyE,oBAAoB3tE,EAAa+xF,GAb1D,aAaLI,EAbKG,EAAAroF,MAAA,CAAAqoF,EAAAprF,KAAA,YAiBH8gB,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UAIpC+yD,EAtBI,CAAAM,EAAAprF,KAAA,gBAAAorF,EAAArrF,KAAA,GAAAqrF,EAAAprF,KAAA,GAwBsB1L,EAAKgtB,yBAAyBR,EAAgBiqE,GAxBpE,QAwBLD,EAxBKM,EAAAroF,KAAAqoF,EAAAprF,KAAA,iBAAAorF,EAAArrF,KAAA,GAAAqrF,EAAA7pE,GAAA6pE,EAAA,kBA4BFN,IAAsBA,EAAmBp4F,UAC5Co4F,EAAqBx2F,EAAK+L,MAAM,IA7B3B,eAiCH6qF,EAAY52F,EAAK+L,MAAMyqF,GAAoBzuF,MAAM4uF,GAjC9CG,EAAAprF,KAAA,GAmCqB1L,EAAKuE,mBAAmBC,GAAa,GAAO,GAnCjE,QAmCH+nB,EAnCGuqE,EAAAroF,KAqCTujB,QAAQqc,IAAI,aAAc7pC,EAAYqoB,KAAK/gB,MAAO0qF,EAAmBxuF,QAAQ,GAAI2uF,EAAiB3uF,QAAQ,GAAI4uF,EAAU5uF,QAAQ,GAAIukB,EAAgBg8D,yBAAyBvgF,QAAQ,IAEjLukB,IACFmqE,EAAUE,EAAU74E,IAAIwO,EAAgBg8D,0BAA0BxgF,MAAM,KACnE/H,EAAK+L,MAAM2qF,GAASt4F,SACvB4B,EAAKytB,8BAA8BtB,EAAeuqE,IA1C7C,eAAAI,EAAA36E,OAAA,SA+CJu6E,GA/CI,yBAAAI,EAAAjqF,SAAAypF,EAAAx7F,KAAA,cA7uOM,gBAAAi8F,EAAAC,GAAA,OAAAX,EAAAtpF,MAAAjS,KAAAkS,YAAA,GAAAlS,KA8xOnBm8F,aA9xOmB,eAAAC,EAAAz8F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA8xOJ,SAAAgsF,EAAOC,GAAP,IAAAC,EAAA,OAAA9rE,EAAAtwB,EAAAsQ,KAAA,SAAA+rF,GAAA,cAAAA,EAAA7rF,KAAA6rF,EAAA5rF,MAAA,cAAA4rF,EAAA5rF,KAAA,EACS1L,EAAKomC,0BAA0B,cAAe,mBAAoB,CAACgxD,IAD5E,YACTC,EADSC,EAAA7oF,MAAA,CAAA6oF,EAAA5rF,KAAA,eAAA4rF,EAAAn7E,OAAA,SAGJnc,EAAK+L,MAAMsrF,IAHP,cAAAC,EAAAn7E,OAAA,SAKN,MALM,wBAAAm7E,EAAAzqF,SAAAsqF,EAAAr8F,SA9xOI,gBAAAy8F,GAAA,OAAAL,EAAAnqF,MAAAjS,KAAAkS,YAAA,GAAAlS,KAqyOnBq3E,oBAryOmB,eAAAqlB,EAAA/8F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAqyOG,SAAAssF,EAAOjzF,GAAP,IAAA+xF,EAAAtD,EAAA9mE,EAAA/R,EAAAs9E,EAAAnrE,EAAAorE,EAAAC,EAAAC,EAAAR,EAAAS,EAAAlqE,EAAAmqE,EAAApB,EAAAqB,EAAAhrF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA0sF,GAAA,cAAAA,EAAAxsF,KAAAwsF,EAAAvsF,MAAA,UAAoB6qF,EAApByB,EAAAl5F,OAAA,QAAAmqB,IAAA+uE,EAAA,GAAAA,EAAA,GAAuC,KAAM/E,IAA7C+E,EAAAl5F,OAAA,QAAAmqB,IAAA+uE,EAAA,KAAAA,EAAA,GAEd7rE,EAFc,uBAAA1qB,OAEyB+C,EAAYqoB,KAAK/gB,MAF1C,KAAArK,OAEmD80F,EAFnD,KAAA90F,OAEuEwxF,KACrF74E,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAJtB,CAAA65F,EAAAvsF,KAAA,eAAAusF,EAAA97E,OAAA,SAKXnc,EAAK+L,MAAMqO,IALA,YAQds9E,EAAalzF,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,MAAgB,aAAXA,EAAEY,QARlC,CAAAg7F,EAAAvsF,KAAA,gBAAAusF,EAAAvsF,KAAA,GAYY1L,EAAKuE,mBAAmBC,GAAa,GAAO,GAZxD,WAYZ+nB,EAZY0rE,EAAAxpF,OAaZkpF,EAAyBprE,EAAgBloB,yBAAyBqzF,EAAW/vF,QAAQC,kBAG7D+vF,EAAuBj4B,IAAI,MAhBvC,CAAAu4B,EAAAvsF,KAAA,gBAAAusF,EAAAvsF,KAAA,GAsBN8P,QAAQqD,IAAI,CACpB7e,EAAKi3F,aAAaS,EAAW/vF,SAC7B3H,EAAKojE,oBAAoBs0B,EAAW5rF,SAxBtB,WAAA8rF,EAAAK,EAAAxpF,KAAAopF,EAAAp9F,OAAAsyB,EAAA,EAAAtyB,CAAAm9F,EAAA,GAoBdP,EApBcQ,EAAA,GAqBdC,EArBcD,EAAA,IA2BZR,IAAaS,EA3BD,CAAAG,EAAAvsF,KAAA,YA8BT6qF,EA9BS,CAAA0B,EAAAvsF,KAAA,gBAAAusF,EAAAvsF,KAAA,GA+Ba1L,EAAK65B,mBAAmB69D,EAAW5rF,MAAOtH,EAAYqoB,KAAKllB,SA/BxE,QA+BZ4uF,EA/BY0B,EAAAxpF,KAAA,YAkCV8nF,EAlCU,CAAA0B,EAAAvsF,KAAA,YAqCNkiB,EAAgB5tB,EAAK8P,gBAAgB,CAAC,UAAW,kBAGjDioF,EAAoB/3F,EAAK+L,MAAMwqF,GAAkBx4E,IAAI/d,EAAK+L,MAAM+rF,IAClEnB,EAAmB32F,EAAK+L,MAAMsrF,GAAWtvF,MAAMgwF,GAE/C9E,IACF0D,EAAmB32F,EAAKuP,iBAAiBonF,EAAkB,IAAI5uF,MAAM6lB,IAGlE5tB,EAAK+L,MAAM4qF,GAAkBv4F,QA/CtB,CAAA65F,EAAAvsF,KAAA,gBAAAusF,EAAA97E,OAAA,SAgDHnc,EAAKytB,8BAA8BtB,EAAewqE,IAhD/C,eAAAsB,EAAA97E,OAAA,SAuDb,MAvDa,yBAAA87E,EAAAprF,SAAA4qF,EAAA38F,SAryOH,gBAAAo9F,GAAA,OAAAV,EAAAzqF,MAAAjS,KAAAkS,YAAA,GAAAlS,KA81OnBg3E,wBA91OmBr3E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA81OO,SAAAgtF,IAAA,IAAAxtF,EAAAF,EAAA2f,EAAAguE,EAAAprF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8sF,GAAA,cAAAA,EAAA5sF,KAAA4sF,EAAA3sF,MAAA,UAAOf,EAAPytF,EAAAt5F,OAAA,QAAAmqB,IAAAmvE,EAAA,GAAAA,EAAA,GAAiB,KAAM3tF,EAAvB2tF,EAAAt5F,OAAA,QAAAmqB,IAAAmvE,EAAA,GAAAA,EAAA,GAAyC,KAC5DztF,IACHA,EAAU3K,EAAKjF,MAAM4P,UAElBF,GAAmBzK,EAAKjF,MAAMmT,mBACjCzD,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBtuB,EAAKjF,MAAMmT,mBAGzDvD,GAAYF,EARO,CAAA4tF,EAAA3sF,KAAA,eAAA2sF,EAAAl8E,OAAA,UASf,GATe,cAYpBiO,EAASpqB,EAAK+L,MAAM,GAZAssF,EAAA3sF,KAAA,EAalB1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAA6tF,EAAA79F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAotF,EAAOzsF,GAAP,IAAAtH,EAAAg0F,EAAAC,EAAA5pE,EAAA8nE,EAAA,OAAAprE,EAAAtwB,EAAAsQ,KAAA,SAAAmtF,GAAA,cAAAA,EAAAjtF,KAAAitF,EAAAhtF,MAAA,UAC9ClH,EAAciG,EAAgBqB,IACjBtH,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,MAAgB,aAAXA,EAAEY,OAFF,CAAAy7F,EAAAhtF,KAAA,gBAAAgtF,EAAAhtF,KAAA,EAOxC8P,QAAQqD,IAAI,CACpB7e,EAAKivB,iBAAiBtkB,EAASnG,GAAa,GAC5CxE,EAAKmyE,oBAAoB3tE,EAAa,MAAM,KATI,OAAAg0F,EAAAE,EAAAjqF,KAAAgqF,EAAAh+F,OAAAsyB,EAAA,EAAAtyB,CAAA+9F,EAAA,GAKhD3pE,EALgD4pE,EAAA,IAMhD9B,EANgD8B,EAAA,KAY1B5pE,IACtBzE,EAASA,EAAO7d,KAAKoqF,EAAiB5uF,MAAM8mB,KAbI,yBAAA6pE,EAAA7rF,SAAA0rF,EAAAz9F,SAAhD,gBAAA69F,GAAA,OAAAL,EAAAvrF,MAAAjS,KAAAkS,YAAA,IAbkB,cAAAqrF,EAAAl8E,OAAA,SA+BjBiO,GA/BiB,yBAAAiuE,EAAAxrF,SAAAsrF,EAAAr9F,SA91OPA,KA+3OnBw3E,cA/3OmB73E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+3OH,SAAAytF,IAAA,IAAAnuF,EAAA2f,EAAAjmB,EAAA00F,EAAA7rF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAutF,GAAA,cAAAA,EAAArtF,KAAAqtF,EAAAptF,MAAA,eAAOjB,EAAPouF,EAAA/5F,OAAA,QAAAmqB,IAAA4vE,EAAA,GAAAA,EAAA,GAAyB,OACf74F,EAAKjF,MAAMmT,mBACjCzD,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBtuB,EAAKjF,MAAMmT,mBAE1Dkc,EAASpqB,EAAK+L,MAAM,GACpB5H,EAAkBnE,EAAK+L,MAAM,GALnB+sF,EAAAptF,KAAA,EAMR1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAAsuF,EAAAt+F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAA6tF,EAAOltF,GAAP,IAAAtH,EAAAy0F,EAAAC,EAAAC,EAAA5sE,EAAA,OAAAhB,EAAAtwB,EAAAsQ,KAAA,SAAA6tF,GAAA,cAAAA,EAAA3tF,KAAA2tF,EAAA1tF,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgBstF,EAAA1tF,KAAA,EAEX8P,QAAQqD,IAAI,CACnD7e,EAAKo2F,WAAWtqF,EAAOtH,GACvBxE,EAAKuE,mBAAmBC,GAAa,GAAO,KAJM,OAAAy0F,EAAAG,EAAA3qF,KAAAyqF,EAAAz+F,OAAAsyB,EAAA,EAAAtyB,CAAAw+F,EAAA,GAE7CE,EAF6CD,EAAA,GAEpC3sE,EAFoC2sE,EAAA,GAOhDC,GAAW5sE,IACbnC,EAASA,EAAO7d,KAAK4sF,EAAQpxF,MAAMwkB,EAAgBpoB,kBACnDA,EAAkBA,EAAgBoI,KAAKggB,EAAgBpoB,kBATL,wBAAAi1F,EAAAvsF,SAAAmsF,EAAAl+F,SAAhD,gBAAAu+F,GAAA,OAAAN,EAAAhsF,MAAAjS,KAAAkS,YAAA,IANQ,cAoBdod,EAASA,EAAOrM,IAAI5Z,GApBN20F,EAAA38E,OAAA,SAsBPiO,GAtBO,wBAAA0uE,EAAAjsF,SAAA+rF,EAAA99F,SA/3OGA,KAu5OnBw+F,aAv5OmB7+F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAu5OJ,SAAAouF,IAAA,IAAAC,EAAAlrE,EAAA,OAAA/C,EAAAtwB,EAAAsQ,KAAA,SAAAkuF,GAAA,cAAAA,EAAAhuF,KAAAguF,EAAA/tF,MAAA,cAGb4lB,MAAMooE,UAAUC,IAAM,WACpB,OAAO7+F,KAAK0kC,OAAO,SAAUo6D,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG5DvoE,MAAMooE,UAAUnpF,IAAM,WACpB,OAAOrE,KAAKqE,IAAIxD,MAAM,KAAMjS,OAG9Bw2B,MAAMooE,UAAUI,IAAM,WACpB,OAAOh/F,KAAK6+F,MAAQ7+F,KAAKgE,QAGrB06F,EAAM,GACNlrE,EAAsBtuB,EAAKjF,MAAMuzB,oBAhB1BmrE,EAAA/tF,KAAA,EAiBP1L,EAAK+K,aAAatQ,OAAOoE,KAAKyvB,GAA9B,eAAAyrE,EAAAt/F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAoD,SAAA6uF,EAAOp+D,GAAP,IAAAnxB,EAAAwD,EAAA,OAAAsd,EAAAtwB,EAAAsQ,KAAA,SAAA0uF,GAAA,cAAAA,EAAAxuF,KAAAwuF,EAAAvuF,MAAA,cAClDjB,EAAkB6jB,EAAoBsN,GACtC3tB,EAAsB,SAAb2tB,EAFyCq+D,EAAAvuF,KAAA,EAGlD1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAAyvF,EAAAz/F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAgvF,EAAOruF,GAAP,IAAAtH,EAAA41F,EAAAC,EAAA/yF,EAAAgzF,EAAAC,EAAAC,EAAAC,EAAA,OAAAlvE,EAAAtwB,EAAAsQ,KAAA,SAAAmvF,GAAA,cAAAA,EAAAjvF,KAAAivF,EAAAhvF,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgB4uF,EAAAhvF,KAAA,EAEhC1L,EAAKwO,gBAAgBhK,EAAYmD,QAASsG,EAAQ,KAAM,MAAM,EAAO,KAAM,OAF3C,OAE9CmsF,EAF8CM,EAAAjsF,KAG9C4rF,EAAS,GACX/yF,EAAY,KACVgzF,EAAO,GACPC,EAAS,GACTC,EAAW,GAEXC,EAAUL,EAAMA,EAAMt7F,OAAS,GAErCs7F,EAAMr7F,QAAQ,SAAAg5C,GACPzwC,IACH+yF,EAAOpyF,KAAK,SACZoyF,EAAOpyF,KAAK,QAGZX,EAAY,GACZmzF,EAAQE,cAAc57F,QAAQ,SAAA67F,GAC5B,IAAMC,EAAgBr2F,EAAY8C,UAAU0S,KAAK,SAAA8gF,GAAE,OAAKA,EAAGnzF,QAAQC,gBAAkBgzF,EAAGlzF,aAAaE,gBACjGizF,GACFvzF,EAAUW,KAAK4yF,KAKnBR,EAAOpyF,KAAK,YACZoyF,EAAOpyF,KAAK,cAEZsyF,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnBlzF,EAAUvI,QAAQ,SAAA1C,GAChBg+F,EAAOpyF,KAAK,OAAS5L,EAAEY,MACvBo9F,EAAOpyF,KAAK,SAAW5L,EAAEY,MAEzBs9F,EAAOl+F,EAAEY,MAAQ,GACjBu9F,EAASn+F,EAAEY,MAAQ,KAGrBq9F,EAAKryF,KAAKoyF,EAAOhyF,KAAK,OAGxB,IAAMsI,EAAO+gB,IAAqB,IAAdqmB,EAAE7oC,WAAkBoB,OAAO,cACzCu0D,EAAO7kE,EAAK+L,MAAMgsC,EAAEgjD,UAAUh9E,IAAI,MAAM/V,QAAQ,GAChDgzF,EAAQlzF,WAAWiwC,EAAEkjD,WAErBC,EAAM,GACZA,EAAIjzF,KAAJ,GAAAxG,OAAYqK,EAAZ,KAAArK,OAAqBm6B,IACrBs/D,EAAIjzF,KAAK0I,GACTuqF,EAAIjzF,KAAK48D,GACTq2B,EAAIjzF,KAAK+yF,GAELrqF,GAAQ,eACV4pF,EAAM,KAAStyF,KAAKH,WAAW+8D,IAC/B21B,EAAQ,KAASvyF,KAAKH,WAAWkzF,KAGnC1zF,EAAUvI,QAAQ,SAAAo8F,GAChB,IAAMC,EAAQrjD,EAAE4iD,cAAc3gF,KAAK,SAAA3d,GAAC,OAAKA,EAAEqL,aAAaE,gBAAkBuzF,EAAMxzF,QAAQC,gBACpFyzF,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAO,CAGT,GAFAE,EAAUt7F,EAAK+L,MAAMqvF,EAAMG,WAAWn9F,QAAwC,UAA9B0J,WAAWszF,EAAMG,WACjEF,EAASr7F,EAAK+L,MAAMqvF,EAAMv2B,MAAMzmE,QAA6C,UAAnC4B,EAAK+L,MAAMqvF,EAAMv2B,MAAM9mD,IAAI,MAClB,qBAAxCq9E,EAAK,GAAA35F,OAAI05F,EAAMl+F,KAAV,kBAAgD,CAC9D,IAAMu+F,EAAiBx7F,EAAK+L,MAAMqvF,EAAK,GAAA35F,OAAI05F,EAAMl+F,KAAV,mBAAgC8gB,IAAI,MACtEy9E,EAAep9F,UAClBi9F,EAAQA,EAAM9uF,KAAKivF,IAInB7qF,GAAQ,eACLvS,MAAM0J,WAAWuzF,KACpBd,EAAOY,EAAMl+F,MAAMgL,KAAKH,WAAWuzF,IAEhCj9F,MAAM0J,WAAWwzF,KACpBd,EAASW,EAAMl+F,MAAMgL,KAAKH,WAAWwzF,KAK3CJ,EAAIjzF,KAAKozF,GACTH,EAAIjzF,KAAKqzF,KAGXhB,EAAKryF,KAAKizF,EAAI7yF,KAAK,QAGrB5N,OAAOoE,KAAK07F,GAAQx7F,QAAQ,SAAA1C,GAC1B,IAAMo/F,EAAUlB,EAAOl+F,GAAGs9F,MAAQY,EAAOl+F,GAAGyC,OAC5CkB,EAAKwd,UAAL,GAAA/b,OAAkBqK,EAAlB,KAAArK,OAA2Bm6B,EAA3B,KAAAn6B,OAAuCpF,EAAvC,iBAAAoF,OAAwDg6F,MAG1DhhG,OAAOoE,KAAK27F,GAAUz7F,QAAQ,SAAA1C,GAC5B,IAAMq/F,EAAWlB,EAASn+F,GAAGs9F,MAAQa,EAASn+F,GAAGyC,OACjDkB,EAAKwd,UAAL,GAAA/b,OAAkBqK,EAAlB,KAAArK,OAA2Bm6B,EAA3B,KAAAn6B,OAAuCpF,EAAvC,kBAAAoF,OAAyDi6F,MAO3DlC,EAAIvxF,KAAKqyF,EAAKjyF,KAAK,OAvGiC,yBAAAqyF,EAAA7tF,SAAAstF,EAAAr/F,SAAhD,gBAAA6gG,GAAA,OAAAzB,EAAAntF,MAAAjS,KAAAkS,YAAA,IAHkD,wBAAAitF,EAAAptF,SAAAmtF,EAAAl/F,SAApD,gBAAA8gG,GAAA,OAAA7B,EAAAhtF,MAAAjS,KAAAkS,YAAA,IAjBO,OA+HbhN,EAAKwd,UAAUg8E,EAAInxF,KAAK,OA/HX,wBAAAoxF,EAAA5sF,SAAA0sF,EAAAz+F,SAv5OIA,KAwhPnB82E,gBAxhPmBn3E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAwhPD,SAAA0wF,IAAA,IAAAj5D,EAAAn4B,EAAAqxF,EAAA1xE,EAAA2xE,EAAA/uF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAywF,GAAA,cAAAA,EAAAvwF,KAAAuwF,EAAAtwF,MAAA,cAAOk3B,EAAPm5D,EAAAj9F,OAAA,QAAAmqB,IAAA8yE,EAAA,GAAAA,EAAA,GAAkB,KAAMtxF,EAAxBsxF,EAAAj9F,OAAA,QAAAmqB,IAAA8yE,EAAA,GAAAA,EAAA,GAA0C,KAAMD,EAAhDC,EAAAj9F,OAAA,QAAAmqB,IAAA8yE,EAAA,GAAAA,EAAA,GAA+D,KAC3E3xE,EAASpqB,EAAK+L,MAAM,GAEnBtB,IACHA,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBtuB,EAAKjF,MAAMmT,mBAJ9C8tF,EAAAtwF,KAAA,EAOV1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAAwxF,EAAAxhG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAA+wF,EAAOpwF,GAAP,IAAAtH,EAAA4F,EAAA+xF,EAAA,OAAA5wE,EAAAtwB,EAAAsQ,KAAA,SAAA6wF,GAAA,cAAAA,EAAA3wF,KAAA2wF,EAAA1wF,MAAA,cAC9ClH,EAAciG,EAAgBqB,GAC9B1B,EAAgBw4B,EAAW,CAACA,GAAY,KAFMw5D,EAAA1wF,KAAA,EAGrB1L,EAAK0oF,qBAAqBlkF,EAAYqoB,KAAKllB,QAASm0F,EAAc1xF,GAH7C,QAG9C+xF,EAH8CC,EAAA3tF,OAI5B0tF,EAAiB91D,QACvCjc,EAASA,EAAO7d,KAAK4vF,EAAiB91D,QALY,wBAAA+1D,EAAAvvF,SAAAqvF,EAAAphG,SAAhD,gBAAAuhG,GAAA,OAAAJ,EAAAlvF,MAAAjS,KAAAkS,YAAA,IAPU,cAAAgvF,EAAA7/E,OAAA,SAeTiO,GAfS,wBAAA4xE,EAAAnvF,SAAAgvF,EAAA/gG,SAxhPCA,KAyiPnBk3E,gBAAkB,WAMhB,OALKhyE,EAAKmwB,aAGRnwB,EAAKmwB,aAAaryB,SAASkC,EAAKjF,OAFhCiF,EAAKmwB,aAAe,IAAIjF,EAAalrB,EAAKjF,OAIrCiF,EAAKmwB,cA/iPKr1B,KAijPnBwhG,oBAAsB,WACpB,IAAMlyE,EAAS,GACT3f,EAAkBzK,EAAKjF,MAAM0P,gBASnC,OAPAhQ,OAAOoE,KAAK4L,GAAiB1L,QAAQ,SAAA+M,GACnC,IAAMywF,EAAiBv8F,EAAKw8F,kBAAkB/xF,EAAgBqB,IAC9DrR,OAAOoE,KAAK09F,GAAgBx9F,QAAQ,SAAA6jC,GAClCxY,EAAOwY,GAAY25D,EAAe35D,OAI/BxY,GA5jPUtvB,KA8jPnB0hG,kBAAoB,SAACh4F,GACnB,IAAM4lB,EAAS,GACT8D,EAAmBluB,EAAKuuB,uBACxB09C,EAAYjsE,EAAK8P,gBAAgB,CAAC,cAiBxC,OAhBArV,OAAOoE,KAAKotE,GAAWltE,QAAQ,SAAA6jC,GAC7B,IAAMI,EAAiBipC,EAAUrpC,GAC3BywD,EAAiBrzF,EAAK+qB,aAAa,CAAC,iBAAkBmD,GAAmB8U,IAAmB,IAC7FA,EAAepW,SAAWymE,EAAerkE,SAASxqB,EAAYqoB,KAAK/gB,QAAWk3B,EAAemlB,oBAAsBnlB,EAAemlB,kBAAkBn5B,SAASd,KAIlI,SAA5B8U,EAAexK,SACjBpO,EAAOwY,GAAYI,EAEGx+B,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,OAAKA,EAAEuwB,SAAWvwB,EAAEY,KAAK2K,gBAAkBo7B,EAAexK,SAAS5wB,kBAEnHwiB,EAAOwY,GAAYI,MAIlB5Y,GAllPUtvB,KAolPnBq0B,qBAAuB,SAACstE,GAA6C,IAAtCpwC,EAAsCr/C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAA1B,MAAO0vF,EAAmB1vF,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAZ,QACjD4gB,EAAgB5tB,EAAK+L,MAAM/L,EAAK8P,gBAAgB,CAAC,UAAW,mBAC5DgkF,EAAiB9zF,EAAK+L,MAAM/L,EAAK8P,gBAAgB,CAAC,UAAW,oBAC7D6sF,EAAc,CAClBxuC,IAAO,CACLyuC,MAAShvE,EAAc7P,IAAI,YAC3B8+E,OAAU/I,EAAe/1E,IAAI,aAE/BqwC,KAAQ,CACNwuC,MAAShvE,EAAc7P,IAAI,SAC3B8+E,OAAU/I,EAAe/1E,IAAI,UAE/B++E,MAAS,CACPF,MAAShvE,EAAc7P,IAAI,IAC3B8+E,OAAU/I,EAAe/1E,IAAI,KAE/Bg/E,KAAQ,CACNH,MAAShvE,EAAc7P,IAAI,GAC3B8+E,OAAU/I,EAAe/1E,IAAI,KAIjC,OADA0+E,EAAQz8F,EAAK+L,MAAM0wF,MACLA,EAAMr+F,QACXq+F,EAAM10F,MAAM40F,EAAYtwC,GAAWqwC,IAErC,MA7mPU5hG,KA+mPnBkiG,kCA/mPmB,eAAAC,EAAAxiG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+mPiB,SAAA+xF,EAAOvyF,GAAP,IAAAnG,EAAA4F,EAAA+yF,EAAAlxB,EAAAmxB,EAAApwF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8xF,GAAA,cAAAA,EAAA5xF,KAAA4xF,EAAA3xF,MAAA,cAAgBlH,EAAhB44F,EAAAt+F,OAAA,QAAAmqB,IAAAm0E,EAAA,GAAAA,EAAA,GAA8B,KAAMhzF,EAApCgzF,EAAAt+F,OAAA,QAAAmqB,IAAAm0E,EAAA,GAAAA,EAAA,GAAoD,KAChFD,EAA4B,GAC5BlxB,EAAYjsE,EAAK8P,gBAAgB,CAAC,cAFNutF,EAAA3xF,KAAA,EAI5B1L,EAAK+K,aAAatQ,OAAOoE,KAAKotE,GAA9B,eAAAqxB,EAAA7iG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA0C,SAAAoyF,EAAO36D,GAAP,IAAAI,EAAAv4B,EAAA2f,EAAA+F,EAAA,OAAA5E,EAAAtwB,EAAAsQ,KAAA,SAAAiyF,GAAA,cAAAA,EAAA/xF,KAAA+xF,EAAA9xF,MAAA,WAC1CtB,GAAkBA,EAAc4kB,SAAS4T,GADC,CAAA46D,EAAA9xF,KAAA,eAAA8xF,EAAArhF,OAAA,qBAKxC6mB,EAAiBipC,EAAUrpC,IAEbhW,QAP0B,CAAA4wE,EAAA9xF,KAAA,eAAA8xF,EAAArhF,OAAA,kBAWxC1R,EAAkB,IACRjG,EAAYsH,OAAStH,EAEjC4lB,EAAS,KAdiCozE,EAAAvwE,GAetC2V,EAfsC46D,EAAA9xF,KAgBvC,SAhBuC8xF,EAAAvwE,GAAA,GAmBvC,SAnBuCuwE,EAAAvwE,GAAA,2BAAAuwE,EAAA9xF,KAAA,GAiB3B1L,EAAK8xE,wBAAwBnnE,EAASF,GAjBX,eAiB1C2f,EAjB0CozE,EAAA/uF,KAAA+uF,EAAArhF,OAAA,2BAoBpCgU,EAAenwB,EAAKgyE,kBApBgBwrB,EAAA9xF,KAAA,GAqB3BykB,EAAapC,oBAAoBpjB,EAASF,GArBf,eAqB1C2f,EArB0CozE,EAAA/uF,KAAA+uF,EAAArhF,OAAA,2BAAAqhF,EAAArhF,OAAA,oBA2B1CiO,IACFA,EAASA,EAAOrM,IAAI,MAChBilB,EAAe5T,wBACjBhF,EAASpqB,EAAKmvB,qBAAqB/E,EAAQ4Y,EAAe5T,sBAAuB4T,EAAeivC,mBAElGkrB,EAA0Bv6D,GAAYxY,GAhCM,yBAAAozE,EAAA3wF,SAAA0wF,EAAAziG,SAA1C,gBAAA2iG,GAAA,OAAAH,EAAAvwF,MAAAjS,KAAAkS,YAAA,IAJ4B,cAAAqwF,EAAAlhF,OAAA,SAwC3BghF,GAxC2B,wBAAAE,EAAAxwF,SAAAqwF,EAAApiG,SA/mPjB,gBAAA4iG,GAAA,OAAAT,EAAAlwF,MAAAjS,KAAAkS,YAAA,GAAAlS,KAypPnB6iG,8BAzpPmB,eAAAC,EAAAnjG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAypPa,SAAA0yF,EAAOr5F,GAAP,IAAAs5F,EAAAvB,EAAAwB,EAAA/wF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAyyF,GAAA,cAAAA,EAAAvyF,KAAAuyF,EAAAtyF,MAAA,cAAAqyF,EAAAj/F,OAAA,QAAAmqB,IAAA80E,EAAA,GAAAA,EAAA,GAAoC,KAC5DD,EAAwB,GACxBvB,EAAiBv8F,EAAKw8F,kBAAkBh4F,GAFhBw5F,EAAAtyF,KAAA,EAIxB1L,EAAK+K,aAAatQ,OAAOoE,KAAK09F,GAA9B,eAAA0B,EAAAxjG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+C,SAAA+yF,EAAOt7D,GAAP,IAAAu7D,EAAAn7D,EAAA7S,EAAA,OAAA5E,EAAAtwB,EAAAsQ,KAAA,SAAA6yF,GAAA,cAAAA,EAAA3yF,KAAA2yF,EAAA1yF,MAAA,OAC/CyyF,EAAW,KACTn7D,EAAiBu5D,EAAe35D,GAFaw7D,EAAAnxE,GAI3C2V,EAJ2Cw7D,EAAA1yF,KAK5C,SAL4C0yF,EAAAnxE,GAAA,EAQ5C,WAR4CmxE,EAAAnxE,GAAA,EAS5C,YAT4CmxE,EAAAnxE,GAAA,EAY5C,SAZ4CmxE,EAAAnxE,GAAA,0BAAAmxE,EAAA1yF,KAAA,EAM9B1L,EAAKmyE,oBAAoB3tE,EAAa,MAAM,GANd,cAM/C25F,EAN+CC,EAAA3vF,KAAA2vF,EAAAjiF,OAAA,0BAAAiiF,EAAA1yF,KAAA,GAU9B1L,EAAKoyE,uBAAuB5tE,EAAa,MAAM,GAVjB,eAU/C25F,EAV+CC,EAAA3vF,KAAA2vF,EAAAjiF,OAAA,2BAazCgU,EAAenwB,EAAKgyE,kBAbqBosB,EAAA1yF,KAAA,GAc9BykB,EAAa9C,SAAS7oB,EAAYqoB,KAAKllB,SAdT,eAc/Cw2F,EAd+CC,EAAA3vF,KAAA2vF,EAAAjiF,OAAA,2BAAAiiF,EAAAjiF,OAAA,oBAoB/CgiF,IACFA,EAAWA,EAASpgF,IAAI,MACpBilB,EAAe5T,uBAAyB4T,EAAeivC,mBACzDksB,EAAWn+F,EAAKmvB,qBAAqBgvE,EAAUn7D,EAAe5T,sBAAuB4T,EAAeivC,mBAEtG6rB,EAAsBl7D,GAAYu7D,GAzBe,yBAAAC,EAAAvxF,SAAAqxF,EAAApjG,SAA/C,gBAAAujG,GAAA,OAAAJ,EAAAlxF,MAAAjS,KAAAkS,YAAA,IAJwB,cAAAgxF,EAAA7hF,OAAA,SAiCvB2hF,GAjCuB,wBAAAE,EAAAnxF,SAAAgxF,EAAA/iG,SAzpPb,gBAAAwjG,GAAA,OAAAV,EAAA7wF,MAAAjS,KAAAkS,YAAA,GAAAlS,KA4rPnByjG,iBA5rPmB,eAAAC,EAAA/jG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA4rPA,SAAAszF,EAAO3yF,EAAOtH,GAAd,IAAA4F,EAAA6hE,EAAAyyB,EAAAC,EAAA3xF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAqzF,GAAA,cAAAA,EAAAnzF,KAAAmzF,EAAAlzF,MAAA,cAA2BtB,EAA3Bu0F,EAAA7/F,OAAA,QAAAmqB,IAAA01E,EAAA,GAAAA,EAAA,GAA2C,KACtD1yB,EAAYjsE,EAAK8P,gBAAgB,CAAC,cAClC4uF,EAAgB,GAFLE,EAAAlzF,KAAA,EAIX1L,EAAK+K,aAAatQ,OAAOoE,KAAKotE,GAA9B,eAAA4yB,EAAApkG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA0C,SAAA2zF,EAAOl8D,GAAP,IAAAI,EAAA5Y,EAAAmC,EAAAwyE,EAAAC,EAAA5L,EAAAQ,EAAAqL,EAAAC,EAAAC,EAAAxH,EAAAxnE,EAAA,OAAA5E,EAAAtwB,EAAAsQ,KAAA,SAAA6zF,GAAA,cAAAA,EAAA3zF,KAAA2zF,EAAA1zF,MAAA,WAE1CtB,GAAkBA,EAAc4kB,SAAS4T,GAFC,CAAAw8D,EAAA1zF,KAAA,eAAA0zF,EAAAjjF,OAAA,qBAMxC6mB,EAAiBipC,EAAUrpC,IAEbhW,UAA6C,IAAlCoW,EAAeq8D,eARA,CAAAD,EAAA1zF,KAAA,eAAA0zF,EAAAjjF,OAAA,iBAY1CiO,EAAS,KACTmC,EAAkB,KAbwB6yE,EAAAnyE,GAetC2V,EAfsCw8D,EAAA1zF,KAgBvC,WAhBuC0zF,EAAAnyE,GAAA,GAiBvC,YAjBuCmyE,EAAAnyE,GAAA,GAuCvC,SAvCuCmyE,EAAAnyE,GAAA,GA6DvC,SA7DuCmyE,EAAAnyE,GAAA,oBAAAmyE,EAAA/rD,GAkBlCrQ,EAAeq8D,eAlBmBD,EAAA1zF,MAAA0zF,EAAA/rD,GAAA,yBAAA+rD,EAAA1zF,KAAA,GAqBJ8P,QAAQqD,IAAI,CAC5C7e,EAAK01F,cAAc5pF,EAAOtH,GAC1BxE,EAAKuE,mBAAmBC,GAAa,GAAO,KAvBR,eAAAu6F,EAAAK,EAAA3wF,KAAAuwF,EAAAvkG,OAAAsyB,EAAA,EAAAtyB,CAAAskG,EAAA,GAqBrC30E,EArBqC40E,EAAA,IAqB7BzyE,EArB6ByyE,EAAA,MA4B9B5L,EAAe5uF,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,OAAKA,EAAEY,OAAS+lC,EAAexK,aAE1EjM,EAAgBloB,yBAAyB+uF,EAAazrF,QAAQC,iBAC1DgsF,EAAqBrnE,EAAgBloB,yBAAyB+uF,EAAazrF,QAAQC,eACzFwiB,EAASA,EAAOriB,MAAM6rF,IAhCUwL,EAAAjjF,OAAA,2BAAAijF,EAAAjjF,OAAA,oBAAAijF,EAAApjD,GAwClChZ,EAAeq8D,eAxCmBD,EAAA1zF,MAAA0zF,EAAApjD,GAAA,yBAAAojD,EAAA1zF,KAAA,GA2CJ8P,QAAQqD,IAAI,CAC5C7e,EAAKo2F,WAAWtqF,EAAOtH,GACvBxE,EAAKuE,mBAAmBC,GAAa,GAAO,KA7CR,eAAAy6F,EAAAG,EAAA3wF,KAAAywF,EAAAzkG,OAAAsyB,EAAA,EAAAtyB,CAAAwkG,EAAA,GA2CrC70E,EA3CqC80E,EAAA,IA2C7B3yE,EA3C6B2yE,EAAA,MAkD9BC,EAAe36F,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,MAAgB,aAAXA,EAAEY,SAElDsvB,EAAgBloB,yBAAyB86F,EAAax3F,QAAQC,iBAC1D+vF,EAAyBprE,EAAgBloB,yBAAyB86F,EAAax3F,QAAQC,eAC7FwiB,EAASA,EAAOriB,MAAM4vF,IAtDUyH,EAAAjjF,OAAA,2BAAAijF,EAAAjjF,OAAA,oBA8DpCgU,EAAenwB,EAAKgyE,kBA9DgBotB,EAAAltB,GA+DlClvC,EAAeq8D,eA/DmBD,EAAA1zF,KAgEnC,QAhEmC0zF,EAAAltB,GAAA,GAmEnC,iBAnEmCktB,EAAAltB,GAAA,GA0EnC,qBA1EmCktB,EAAAltB,GAAA,2BAAAktB,EAAA1zF,KAAA,GAiEvBykB,EAAanE,OAAOlgB,EAAOtH,GAjEJ,eAiEtC4lB,EAjEsCg1E,EAAA3wF,KAAA2wF,EAAAjjF,OAAA,2BAAAijF,EAAA1zF,KAAA,GAoEvBykB,EAAa9C,SAAS7oB,EAAYqoB,KAAKllB,SApEhB,eAoEtCyiB,EApEsCg1E,EAAA3wF,QAsEpC2b,EAASpqB,EAAKuP,iBAAiB6a,EAAQ,IACvCA,EAASpqB,EAAKmvB,qBAAqB/E,EAAQ4Y,EAAe5T,sBAAuB4T,EAAeivC,mBAvE5DmtB,EAAAjjF,OAAA,2BAAAijF,EAAA1zF,KAAA,GA2EvBykB,EAAapC,oBAAoBvpB,GA3EV,eA2EtC4lB,EA3EsCg1E,EAAA3wF,KAAA2wF,EAAAjjF,OAAA,2BAAAijF,EAAAjjF,OAAA,mCAAAijF,EAAAjjF,OAAA,oBAqF/B,OAAXiO,GAAmBpqB,EAAK+L,MAAMqe,GAAQza,GAAG,KAC3C+uF,EAAc97D,GAAYxY,GAtFkB,yBAAAg1E,EAAAvyF,SAAAiyF,EAAAhkG,SAA1C,gBAAAwkG,GAAA,OAAAT,EAAA9xF,MAAAjS,KAAAkS,YAAA,IAJW,cAAA4xF,EAAAziF,OAAA,SA8FVuiF,GA9FU,wBAAAE,EAAA/xF,SAAA4xF,EAAA3jG,SA5rPA,gBAAAykG,EAAAC,GAAA,OAAAhB,EAAAzxF,MAAAjS,KAAAkS,YAAA,GAAAlS,KA4xPnB4tF,qBA5xPmBjuF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA4xPI,SAAAs0F,IAAA,IAAA93F,EAAAm0F,EAAA1xF,EAAA+hB,EAAA/R,EAAA6xD,EAAAmc,EAAAsX,EAAA1yF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAo0F,GAAA,cAAAA,EAAAl0F,KAAAk0F,EAAAj0F,MAAA,UAAO/D,EAAP+3F,EAAA5gG,OAAA,QAAAmqB,IAAAy2E,EAAA,GAAAA,EAAA,GAAiB,KAAM5D,EAAvB4D,EAAA5gG,OAAA,QAAAmqB,IAAAy2E,EAAA,GAAAA,EAAA,GAAsC,MAAOt1F,EAA7Cs1F,EAAA5gG,OAAA,QAAAmqB,IAAAy2E,EAAA,GAAAA,EAAA,GAA6D,KAC7E/3F,IACHA,EAAU3H,EAAKjF,MAAMyJ,YAAYqoB,KAAKllB,SAGlCwkB,EALe,wBAAA1qB,OAKyBkG,EALzB,KAAAlG,OAKoCq6F,EALpC,KAAAr6F,OAKoDyI,KAAKC,UAAUC,IAErE,QADbgQ,EAAapa,EAAKmtC,cAAchhB,IANjB,CAAAwzE,EAAAj0F,KAAA,eAAAi0F,EAAAxjF,OAAA,SAQZ/B,GARY,cAWf6xD,EAAYjsE,EAAK8P,gBAAgB,CAAC,cAClCs4E,EAAoB,GAZLuX,EAAAj0F,KAAA,GAcf1L,EAAK+K,aAAatQ,OAAOoE,KAAKotE,GAA9B,eAAA2zB,EAAAnlG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA0C,SAAA00F,EAAO/zF,GAAP,IAAAk3B,EAAAoyD,EAAA0K,EAAA73D,EAAA83D,EAAA1mE,EAAA,OAAA9N,EAAAtwB,EAAAsQ,KAAA,SAAAy0F,GAAA,cAAAA,EAAAv0F,KAAAu0F,EAAAt0F,MAAA,WAE1CtB,GAAkBA,EAAc4kB,SAASljB,GAFC,CAAAk0F,EAAAt0F,KAAA,eAAAs0F,EAAA7jF,OAAA,qBAMxC6mB,EAAiBipC,EAAUngE,IAEb8gB,QAR0B,CAAAozE,EAAAt0F,KAAA,eAAAs0F,EAAA7jF,OAAA,wBAYxCi5E,EAAkB,CACtBztF,QAASq7B,EAAekoD,iBAAmBloD,EAAer7B,SAbdq4F,EAAAt0F,KAAA,EAiBlB1L,EAAKmgF,mBAAmBr0E,EAAOnE,GAjBb,YAiB1Cm4F,EAjB0CE,EAAAvxF,MAAA,CAAAuxF,EAAAt0F,KAAA,YAqBxCu8B,EAAsB,MACtB6zD,EAtBwC,CAAAkE,EAAAt0F,KAAA,gBAuBpCq0F,EAAkB//F,EAAK8P,gBAAgB,CAAC,QAAS,SAAUgsF,EAAa/rF,gBAvBpCiwF,EAAAv0F,KAAA,GAAAu0F,EAAAt0F,KAAA,GAyBZ1L,EAAKgtB,yBAAyB+yE,EAAiB3K,GAzBnC,QAyBxCntD,EAzBwC+3D,EAAAvxF,KAAAuxF,EAAAt0F,KAAA,iBAAAs0F,EAAAv0F,KAAA,GAAAu0F,EAAA/yE,GAAA+yE,EAAA,UA2BxC/3D,EAAsBjoC,EAAK+L,MAAM,GA3BO,QA+BtCstB,EAAer5B,EAAKuP,iBAAiBuwF,EAAiB7zB,EAAUngE,GAAOrN,SAAUwpC,GAGvFmgD,EAAkBt8E,GAASutB,EAGtB+uD,EAAkB/hD,QACrB+hD,EAAkB/hD,MAAQrmC,EAAK+L,MAAM,IAIvCq8E,EAAkB/hD,MAAQ+hD,EAAkB/hD,MAAM95B,KAAK67E,EAAkBt8E,IA1C7B,yBAAAk0F,EAAAnzF,SAAAgzF,EAAA/kG,KAAA,cAA1C,gBAAAmlG,GAAA,OAAAL,EAAA7yF,MAAAjS,KAAAkS,YAAA,IAde,eAAA2yF,EAAAxjF,OAAA,SA4Ddnc,EAAKqa,cAAc8R,EAAei8D,IA5DpB,yBAAAuX,EAAA9yF,SAAA4yF,EAAA3kG,SA5xPJA,KA01PnBolG,aAAe,SAACp0F,GACd,IAAKA,EACH,OAAO,KAET,IAAMq0F,EAAmBngG,EAAK8P,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,gBACtE,OAAOowF,GAAoBA,EAAiBjjG,KAAOijG,EAAiBjjG,KAA7D,iBAAAuE,OAAqFqK,EAArF,SA/1PUhR,KAi2PnB0oC,eAAiB,SAAC13B,GAChB,OAAO9L,EAAK8P,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,iBAl2PnCjV,KAo2PnBkrE,wBAA0B,SAACr+D,GACzB,IAAKA,EACH,OAAO,EAET,IAAMy4F,EAAgBpgG,EAAK8P,gBAAgB,CAAC,QAAQ,WAChDuwF,EAAa5lG,OAAOoE,KAAKuhG,GAAepmF,KAAK,SAAAlO,GAC/C,IAAMtH,EAAc47F,EAAct0F,GAClC,OAAOtH,EAAYooB,SAAWpoB,EAAYmD,SAAWnD,EAAYmD,QAAQC,gBAAkBD,EAAQC,gBAEjG04F,EAAmB,KAOvB,OANID,GACFC,EAAmBF,EAAcC,IAChBv0F,MAAQu0F,EAEzBC,EAAmBtgG,EAAKugG,2BAA2B54F,GAE9C24F,GAp3PUxlG,KAs3PnBylG,2BAA6B,SAAC54F,GAC5B,IAAKA,EACH,OAAO,EAET,IAAMskE,EAAYjsE,EAAK8P,gBAAgB,CAAC,cACxC,OAAOrV,OAAOkR,OAAOsgE,GAAWjyD,KAAK,SAAAxV,GAAW,OAAKA,EAAYooB,SAAWpoB,EAAYmD,SAAWnD,EAAYmD,QAAQC,gBAAkBD,EAAQC,iBA33PhI9M,KA63PnBi4E,6BA73PmBt4E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA63PY,SAAAq1F,IAAA,IAAA71F,EAAAF,EAAAqxF,EAAA2E,EAAAt0E,EAAA/R,EAAAsmF,EAAAC,EAAAC,EAAA5zF,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAs1F,GAAA,cAAAA,EAAAp1F,KAAAo1F,EAAAn1F,MAAA,UAAOf,EAAPi2F,EAAA9hG,OAAA,QAAAmqB,IAAA23E,EAAA,GAAAA,EAAA,GAAiB,KAAMn2F,EAAvBm2F,EAAA9hG,OAAA,QAAAmqB,IAAA23E,EAAA,GAAAA,EAAA,GAAyC,KAAM9E,EAA/C8E,EAAA9hG,OAAA,QAAAmqB,IAAA23E,EAAA,GAAAA,EAAA,GAA8D,KAAMH,IAApEG,EAAA9hG,OAAA,QAAAmqB,IAAA23E,EAAA,KAAAA,EAAA,GAGvBz0E,EAHuB,6BAAA1qB,OAGsBkJ,EAHtB,KAAAlJ,OAGiCgJ,EAAkBP,KAAKC,UAAU1P,OAAOoE,KAAK4L,IAAoB,OAHlG,KAAAhJ,OAG4Gq6F,EAH5G,KAAAr6F,OAG4Hg/F,KACnJrmF,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QALb,CAAAyiG,EAAAn1F,KAAA,eAAAm1F,EAAA1kF,OAAA,SAMpBnc,EAAK+L,MAAMqO,IANS,cAAAymF,EAAAn1F,KAAA,GASO1L,EAAK8gG,yBAAyBn2F,EAASF,EAAiBqxF,EAAc,KAAM2E,GATnF,aASvBC,EATuBG,EAAApyF,MAAA,CAAAoyF,EAAAn1F,KAAA,gBAWrBi1F,EAAoBlmG,OAAOkR,OAAO+0F,GAAuBlhE,OAAO,SAACC,EAAKshE,GAE1E,OADAthE,EAAMA,EAAIlzB,KAAKvM,EAAK+L,MAAMg1F,KAEzB/gG,EAAK+L,MAAM,IAda80F,EAAA1kF,OAAA,SAgBpBnc,EAAKytB,8BAA8BtB,EAAew0E,IAhB9B,eAAAE,EAAA1kF,OAAA,SAkBtBnc,EAAK+L,MAAM,IAlBW,yBAAA80F,EAAAh0F,SAAA2zF,EAAA1lG,SA73PZA,KAi5PnBkmG,oBAj5PmB,eAAAC,EAAAxmG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAi5PG,SAAA+1F,EAAOv2F,EAASnG,GAAhB,IAAA4lB,EAAA+2E,EAAA,OAAA51E,EAAAtwB,EAAAsQ,KAAA,SAAA61F,GAAA,cAAAA,EAAA31F,KAAA21F,EAAA11F,MAAA,cACff,IACHA,EAAU3K,EAAKjF,MAAM4P,SAEjByf,EAAS,GAJKg3E,EAAA11F,KAAA,EAKW1L,EAAKqhG,wBAAwB78F,EAAYqoB,KAAK/gB,MAAOnB,GALhE,YAKdw2F,EALcC,EAAA3yF,MAAA,CAAA2yF,EAAA11F,KAAA,eAAA01F,EAAA11F,KAAA,EAOZ1L,EAAK+K,aAAao2F,EAAlB,eAAAG,EAAA7mG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAoC,SAAAo2F,EAAOR,EAAgBS,GAAvB,IAAAC,EAAAz+D,EAAA,OAAAzX,EAAAtwB,EAAAsQ,KAAA,SAAAm2F,GAAA,cAAAA,EAAAj2F,KAAAi2F,EAAAh2F,MAAA,cAAAg2F,EAAAh2F,KAAA,EAEV1L,EAAK2hG,yBAAyBn9F,EAAYqoB,KAAK/gB,MAAO01F,GAF5C,QAElCC,EAFkCC,EAAAjzF,QAKhCu0B,EAAiBhjC,EAAKugG,2BAA2BkB,MAErDr3E,EAAO4Y,EAAel3B,OAAS01F,GAPK,wBAAAE,EAAA70F,SAAA00F,EAAAzmG,SAApC,gBAAA8mG,EAAAC,GAAA,OAAAP,EAAAv0F,MAAAjS,KAAAkS,YAAA,IAPY,cAAAo0F,EAAAjlF,OAAA,SAoBbiO,GApBa,wBAAAg3E,EAAAv0F,SAAAq0F,EAAApmG,SAj5PH,gBAAAgnG,EAAAC,GAAA,OAAAd,EAAAl0F,MAAAjS,KAAAkS,YAAA,GAAAlS,KAu6PnB6mG,yBAv6PmB,eAAAK,EAAAvnG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAu6PQ,SAAA82F,EAAOn2F,EAAO01F,GAAd,IAAAr1E,EAAA/R,EAAAqnF,EAAA,OAAAl2E,EAAAtwB,EAAAsQ,KAAA,SAAA22F,GAAA,cAAAA,EAAAz2F,KAAAy2F,EAAAx2F,MAAA,UACnBygB,EADmB,0BAAA1qB,OACuBqK,EADvB,KAAArK,OACgC+/F,KACnDpnF,EAAapa,EAAKwtB,8BAA8BrB,IAF7B,CAAA+1E,EAAAx2F,KAAA,eAAAw2F,EAAA/lF,OAAA,SAKhB/B,GALgB,cAAA8nF,EAAAx2F,KAAA,EAQK1L,EAAK6rB,oBAAoB/f,EAAO,YAAa,CAAC01F,IARnD,cAQnBC,EARmBS,EAAAzzF,KAAAyzF,EAAA/lF,OAAA,SASlBnc,EAAKytB,8BAA8BtB,EAAes1E,EAAiB,OATjD,wBAAAS,EAAAr1F,SAAAo1F,EAAAnnG,SAv6PR,gBAAAqnG,EAAAC,GAAA,OAAAJ,EAAAj1F,MAAAjS,KAAAkS,YAAA,GAAAlS,KAk7PnBumG,wBAl7PmB,eAAAgB,EAAA5nG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAk7PO,SAAAm3F,EAAOx2F,EAAOnB,GAAd,IAAAwhB,EAAA/R,EAAAqnF,EAAA,OAAAl2E,EAAAtwB,EAAAsQ,KAAA,SAAAg3F,GAAA,cAAAA,EAAA92F,KAAA82F,EAAA72F,MAAA,UAClBygB,EADkB,sBAAA1qB,OACoBqK,EADpB,KAAArK,OAC6BkJ,KAC/CyP,EAAapa,EAAKwtB,8BAA8BrB,IAF9B,CAAAo2E,EAAA72F,KAAA,eAAA62F,EAAApmF,OAAA,SAIf/B,GAJe,cAAAmoF,EAAA72F,KAAA,EAOM1L,EAAK6rB,oBAAoB/f,EAAO,sBAAuB,CAACnB,IAP9D,cAOlB82F,EAPkBc,EAAA9zF,KAAA8zF,EAAApmF,OAAA,SAQjBnc,EAAKytB,8BAA8BtB,EAAes1E,IARjC,wBAAAc,EAAA11F,SAAAy1F,EAAAxnG,SAl7PP,gBAAA0nG,EAAAC,GAAA,OAAAJ,EAAAt1F,MAAAjS,KAAAkS,YAAA,GAAAlS,KA47PnBgmG,yBA57PmBrmG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA47PQ,SAAAu3F,IAAA,IAAA/3F,EAAAF,EAAAqxF,EAAA6G,EAAAlC,EAAAr2E,EAAAw4E,EAAA51F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAs3F,GAAA,cAAAA,EAAAp3F,KAAAo3F,EAAAn3F,MAAA,cAAOf,EAAPi4F,EAAA9jG,OAAA,QAAAmqB,IAAA25E,EAAA,GAAAA,EAAA,GAAiB,KAAMn4F,EAAvBm4F,EAAA9jG,OAAA,QAAAmqB,IAAA25E,EAAA,GAAAA,EAAA,GAAyC,KAAM9G,EAA/C8G,EAAA9jG,OAAA,QAAAmqB,IAAA25E,EAAA,GAAAA,EAAA,GAA8D,KAAMD,EAApEC,EAAA9jG,OAAA,QAAAmqB,IAAA25E,EAAA,GAAAA,EAAA,GAA2F,KAAMnC,EAAjGmC,EAAA9jG,OAAA,QAAAmqB,IAAA25E,EAAA,IAAAA,EAAA,GACpBj4F,IACHA,EAAU3K,EAAKjF,MAAM4P,UAElBF,GAAmBzK,EAAKjF,MAAMuzB,qBAAuBtuB,EAAKjF,MAAMmT,mBACnEzD,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBtuB,EAAKjF,MAAMmT,mBAGxDkc,EAAS,GARUy4E,EAAAn3F,KAAA,GAUnB1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAAq4F,EAAAroG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAA43F,EAAOj3F,GAAP,IAAAyiD,EAAA4yC,EAAA,OAAA51E,EAAAtwB,EAAAsQ,KAAA,SAAAy3F,GAAA,cAAAA,EAAAv3F,KAAAu3F,EAAAt3F,MAAA,cAC9C6iD,EAAkB9jD,EAAgBqB,GAAO+gB,KADKm2E,EAAAt3F,KAAA,EAIrB1L,EAAKqhG,wBAAwB9yC,EAAgBziD,MAAOnB,GAJ/B,YAI9Cw2F,EAJ8C6B,EAAAv0F,MAAA,CAAAu0F,EAAAt3F,KAAA,eAAAs3F,EAAAt3F,KAAA,EAS5C1L,EAAK+K,aAAao2F,EAAlB,eAAA8B,EAAAxoG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAoC,SAAA+3F,EAAOnC,EAAgBS,GAAvB,IAAAC,EAAAz+D,EAAAiF,EAAA83D,EAAA,OAAAx0E,EAAAtwB,EAAAsQ,KAAA,SAAA43F,GAAA,cAAAA,EAAA13F,KAAA03F,EAAAz3F,MAAA,cACxCq1F,EAAiB/gG,EAAK+L,MAAMg1F,GADYoC,EAAAz3F,KAAA,EAGV1L,EAAK2hG,yBAAyBpzC,EAAgBziD,MAAO01F,GAH3C,YAGlCC,EAHkC0B,EAAA10F,MAAA,CAAA00F,EAAAz3F,KAAA,cAQhCs3B,EAAiB2/D,GAA8C3iG,EAAKugG,2BAA2BkB,KAE7EhB,IAAoBz9D,EAAe1oB,cAAgB0oB,EAAer7B,SAAWq7B,EAAer7B,QAAQC,gBAAkB65F,EAAgB75F,cAVxH,CAAAu7F,EAAAz3F,KAAA,YAahCu8B,EAAsB,MACtB6zD,EAdgC,CAAAqH,EAAAz3F,KAAA,cAe5Bq0F,EAAkB//F,EAAK8P,gBAAgB,CAAC,QAAS,SAAUgsF,EAAa/rF,iBAf5C,CAAAozF,EAAAz3F,KAAA,gBAAAy3F,EAAA13F,KAAA,GAAA03F,EAAAz3F,KAAA,GAkBF1L,EAAKgtB,yBAAyB+yE,EAAiB/8D,GAlB7C,QAkB9BiF,EAlB8Bk7D,EAAA10F,KAAA00F,EAAAz3F,KAAA,iBAAAy3F,EAAA13F,KAAA,GAAA03F,EAAAl2E,GAAAk2E,EAAA,kBAyBpCpC,EAAiB/gG,EAAKuP,iBAAiBwxF,EAAgB/9D,EAAevkC,SAAUwpC,GAK3E7d,EAAO4Y,EAAel3B,SACzBse,EAAO4Y,EAAel3B,OAAS9L,EAAK+L,MAAM,IAI5Cqe,EAAO4Y,EAAel3B,OAASse,EAAO4Y,EAAel3B,OAAOS,KAAKw0F,GAnC7B,yBAAAoC,EAAAt2F,SAAAq2F,EAAApoG,KAAA,cAApC,gBAAAsoG,EAAAC,GAAA,OAAAJ,EAAAl2F,MAAAjS,KAAAkS,YAAA,IAT4C,wBAAAg2F,EAAAn2F,SAAAk2F,EAAAjoG,SAAhD,gBAAAwoG,GAAA,OAAAR,EAAA/1F,MAAAjS,KAAAkS,YAAA,IAVmB,eAAA61F,EAAA1mF,OAAA,SA6DlBiO,GA7DkB,yBAAAy4E,EAAAh2F,SAAA61F,EAAA5nG,SA57PRA,KA2/PnByoG,aA3/PmB9oG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA2/PJ,SAAAq4F,IAAA,IAAAh/F,EAAAwvE,EAAAyvB,EAAAz2F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAm4F,GAAA,cAAAA,EAAAj4F,KAAAi4F,EAAAh4F,MAAA,eAAOlH,EAAPi/F,EAAA3kG,OAAA,QAAAmqB,IAAAw6E,EAAA,GAAAA,EAAA,GAAqB,OACdzjG,EAAKjF,MAAMyJ,cAC7BA,EAAcxE,EAAKjF,MAAMyJ,aAFdk/F,EAAAh4F,KAAA,EAIK1L,EAAKomC,0BAA0B5hC,EAAYqoB,KAAK/gB,MAAO,MAAO,GAAI,GAAI,SAAU,MAJrF,YAIPkoE,EAJO0vB,EAAAj1F,MAAA,CAAAi1F,EAAAh4F,KAAA,eAAAg4F,EAAAvnF,OAAA,SAMJnc,EAAK+L,MAAMioE,GAAKj2D,IAAI/d,EAAK+L,MAAM,OAN3B,cAAA23F,EAAAvnF,OAAA,SAQN,MARM,wBAAAunF,EAAA72F,SAAA22F,EAAA1oG,SA3/PIA,KAqgQnB63E,iBArgQmBl4E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAqgQA,SAAAw4F,IAAA,IAAAn/F,EAAAmG,EAAAi5F,EAAAC,EAAAC,EAAAx4F,EAAAylE,EAAAgzB,EAAAC,EAAAC,EAAAj3F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA24F,GAAA,cAAAA,EAAAz4F,KAAAy4F,EAAAx4F,MAAA,UAAOlH,EAAPy/F,EAAAnlG,OAAA,QAAAmqB,IAAAg7E,EAAA,GAAAA,EAAA,GAAqB,KAAMt5F,EAA3Bs5F,EAAAnlG,OAAA,QAAAmqB,IAAAg7E,EAAA,GAAAA,EAAA,GAAqC,MACjDz/F,GAAexE,EAAKjF,MAAMyJ,cAC7BA,EAAcxE,EAAKjF,MAAMyJ,cAEtBmG,GAAW3K,EAAKjF,MAAM4P,UACzBA,EAAU3K,EAAKjF,MAAM4P,SAGlBA,GAAYnG,EARA,CAAA0/F,EAAAx4F,KAAA,eAAAw4F,EAAA/nF,OAAA,SASR,MATQ,cAAA+nF,EAAAx4F,KAAA,EAgBP8P,QAAQqD,IAAI,CACpB7e,EAAKujG,aAAa/+F,GAClBxE,EAAKmtE,eAAe,aAAc3oE,EAAYsH,MAAOtH,EAAamG,GAClE3K,EAAKmtE,eAAe,oBAAqB3oE,EAAYsH,MAAOtH,EAAamG,KAnB1D,UAAAi5F,EAAAM,EAAAz1F,KAAAo1F,EAAAppG,OAAAsyB,EAAA,EAAAtyB,CAAAmpG,EAAA,GAafE,EAbeD,EAAA,GAcfv4F,EAdeu4F,EAAA,GAef9yB,EAfe8yB,EAAA,KAsBbC,GAAiBx4F,GAAcylE,GAtBlB,CAAAmzB,EAAAx4F,KAAA,gBAuBTq4F,EAAOhzB,EAAkBvkE,MAAMlB,GAC/B04F,EAAOD,EAAKh8F,MAAM+7F,GAxBTI,EAAA/nF,OAAA,SA4BR6nF,GA5BQ,eAAAE,EAAA/nF,OAAA,SA+BV,MA/BU,yBAAA+nF,EAAAr3F,SAAA82F,EAAA7oG,SArgQAA,KAsiQnBg4E,uBAtiQmB,eAAAqxB,EAAA1pG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAsiQM,SAAAi5F,EAAOphE,GAAP,IAAAr4B,EAAAF,EAAAqxF,EAAA4E,EAAA2D,EAAAr3F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA+4F,GAAA,cAAAA,EAAA74F,KAAA64F,EAAA54F,MAAA,cAAuBf,EAAvB05F,EAAAvlG,OAAA,QAAAmqB,IAAAo7E,EAAA,GAAAA,EAAA,GAAiC,KAAM55F,EAAvC45F,EAAAvlG,OAAA,QAAAmqB,IAAAo7E,EAAA,GAAAA,EAAA,GAAyD,KAAMvI,EAA/DuI,EAAAvlG,OAAA,QAAAmqB,IAAAo7E,EAAA,GAAAA,EAAA,GAA8E,KAA9EC,EAAA54F,KAAA,EACa1L,EAAK8gG,yBAAyBn2F,EAASF,EAAiBqxF,EAAc94D,GADnF,cACjB09D,EADiB4D,EAAA71F,KAAA61F,EAAAnoF,OAAA,SAEhBukF,GAAyBA,EAAsB19D,EAAel3B,OAAS40F,EAAsB19D,EAAel3B,OAAS9L,EAAK+L,MAAM,IAFhH,wBAAAu4F,EAAAz3F,SAAAu3F,EAAAtpG,SAtiQN,gBAAAypG,GAAA,OAAAJ,EAAAp3F,MAAAjS,KAAAkS,YAAA,GAAAlS,KA0iQnB0pG,YA1iQmB/pG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA0iQL,SAAAs5F,IAAA,IAAAC,EAAA,OAAAn5E,EAAAtwB,EAAAsQ,KAAA,SAAAo5F,GAAA,cAAAA,EAAAl5F,KAAAk5F,EAAAj5F,MAAA,cAAAi5F,EAAAj5F,KAAA,EACY1L,EAAK4kG,eADjB,cACNF,EADMC,EAAAl2F,KAAAk2F,EAAAxoF,OAAA,SAEL1hB,OAAOkR,OAAO+4F,GAAWllE,OAAO,SAACqlE,EAAUC,GAChD,IAAMC,EAAW/kG,EAAK+L,MAAM+4F,EAAUD,UAItC,OAHIE,IAAaA,EAAS3mG,UACxBymG,EAAWA,EAASt4F,KAAKw4F,IAEpBF,GACN7kG,EAAK+L,MAAM,KARF,wBAAA44F,EAAA93F,SAAA43F,EAAA3pG,SA1iQKA,KAojQnB8pG,aApjQmBnqG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAojQJ,SAAA65F,IAAA,IAAA56E,EAAAoC,EAAA,OAAAjB,EAAAtwB,EAAAsQ,KAAA,SAAA05F,GAAA,cAAAA,EAAAx5F,KAAAw5F,EAAAv5F,MAAA,cACP0e,EAAS,GACToC,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UAH5BwhE,EAAAv5F,KAAA,EAKP1L,EAAK+K,aAAatQ,OAAOoE,KAAKmB,EAAKjF,MAAMuzB,qBAAzC,eAAA42E,EAAAzqG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+D,SAAAg6F,EAAOvpE,GAAP,IAAA3tB,EAAAxD,EAAA,OAAA8gB,EAAAtwB,EAAAsQ,KAAA,SAAA65F,GAAA,cAAAA,EAAA35F,KAAA25F,EAAA15F,MAAA,cAC7DuC,EAAsB,SAAb2tB,EACTnxB,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBsN,GAFYwpE,EAAA15F,KAAA,EAG7D1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAA46F,EAAA5qG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAm6F,EAAOx5F,GAAP,IAAAi5F,EAAAF,EAAAU,EAAA/gG,EAAAghG,EAAAC,EAAAC,EAAA/4F,EAAAk8D,EAAAoD,EAAA05B,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAx6E,EAAAtwB,EAAAsQ,KAAA,SAAAy6F,GAAA,cAAAA,EAAAv6F,KAAAu6F,EAAAt6F,MAAA,cAEhDq5F,EAAW/kG,EAAK+L,MAAM,GACtB84F,EAAW7kG,EAAK+L,MAAM,GACtBw5F,EAAcvlG,EAAK+L,MAAM,GACvBvH,EAAciG,EAAgBqB,GAC9B05F,EAAgBhhG,EAAYqoB,KAAK/gB,MAEvCse,EAAOo7E,GAAiB,CACtBT,WACAF,WACAU,cACAt5B,UAAW,IAZuC+5B,EAAAt6F,KAAA,EAkB1C8P,QAAQqD,IAAI,CACpB7e,EAAK67B,kBAAkBr3B,GACvBxE,EAAKozE,mBAAmBoyB,KApB0B,cAAAC,EAAAO,EAAAv3F,KAAAi3F,EAAAjrG,OAAAsyB,EAAA,EAAAtyB,CAAAgrG,EAAA,GAgBlD94F,EAhBkD+4F,EAAA,GAiBlD78B,EAjBkD68B,EAAA,GAuBpDX,EAAW/kG,EAAKuP,iBAAiBs5D,EAAa,IAAI9gE,MAAM4E,GAvBJq5F,EAAAt6F,KAAA,GAwBnC1L,EAAKmtB,oBAAoB43E,EAAUj5F,EAAOtH,EAAayJ,GAxBpB,WAwBpD82F,EAxBoDiB,EAAAv3F,KA0BpD2b,EAAOo7E,GAAeT,SAAWA,EACjCF,EAAWA,EAASt4F,KAAKw4F,KAGnB94B,EAAYjsE,EAAKw8F,kBAAkBh4F,IA9BW,CAAAwhG,EAAAt6F,KAAA,gBAAAs6F,EAAAt6F,KAAA,GAgC5C1L,EAAK+K,aAAatQ,OAAOoE,KAAKotE,GAAWrgE,OAAO,SAAAg3B,GAAQ,OAAKqpC,EAAUrpC,GAAUqjE,UAAjF,eAAAC,EAAAzrG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA4F,SAAAg7F,EAAOvjE,GAAP,IAAAI,EAAAojE,EAAAC,EAAAvG,EAAAwG,EAAAC,EAAA,OAAAh7E,EAAAtwB,EAAAsQ,KAAA,SAAAi7F,GAAA,cAAAA,EAAA/6F,KAAA+6F,EAAA96F,MAAA,cAC1Fs3B,EAAiBipC,EAAUrpC,GAD+D4jE,EAAA96F,KAAA,EAKtF8P,QAAQqD,IAAI,CACpB7e,EAAKmgF,mBAAmBv9C,EAAUp+B,EAAYqoB,KAAKllB,SACnD3H,EAAKgtB,yBAAyBR,EAAgBwW,KAPgD,OAAAojE,EAAAI,EAAA/3F,KAAA43F,EAAA5rG,OAAAsyB,EAAA,EAAAtyB,CAAA2rG,EAAA,GAG9FtG,EAH8FuG,EAAA,GAI9FC,EAJ8FD,EAAA,GAU5FvG,GAAmBwG,IACfC,EAA2BvmG,EAAKuP,iBAAiBuwF,EAAiB98D,EAAevkC,UAAUsJ,MAAM/H,EAAK+L,MAAMu6F,OACjFC,EAAyBnoG,UACxDymG,EAAWA,EAASt4F,KAAKg6F,GACzBn8E,EAAOo7E,GAAev5B,UAAUrpC,GAAY2jE,GAdgD,wBAAAC,EAAA35F,SAAAs5F,EAAArrG,SAA5F,gBAAA2rG,GAAA,OAAAP,EAAAn5F,MAAAjS,KAAAkS,YAAA,IAhC4C,YAqDhDxI,EAAYqwB,YAAarwB,EAAYqwB,UAAUmrB,YArDC,CAAAgmD,EAAAt6F,KAAA,gBAsD5Ci6F,EAAiBlrG,OAAOC,OAAO,GAAI8J,IAC1B8C,UAAY7M,OAAOkR,OAAOnH,EAAY8C,WACrDq+F,EAAe94E,KAAOpyB,OAAOC,OAAO,GAAI8J,EAAYqwB,UAAUmrB,aAG1D2lD,EAAe9wE,UAAU6xE,cAC3Bf,EAAe9wE,UAAU6xE,aAAa3nG,QAAQ,SAAA4nG,GAC5C,IAAM9L,EAAgB8K,EAAer+F,UAAU0S,KAAK,SAAA3d,GAAC,OAAKA,EAAEY,OAAS0pG,EAAY1pG,OACjF,GAAI49F,EAAe,CACjB,IAAM+L,EAAcjB,EAAer+F,UAAUwP,QAAQ+jF,GACrD8K,EAAer+F,UAAUs/F,GAAeD,KAhEIX,EAAAt6F,KAAA,GAwExC8P,QAAQqD,IAAI,CACpB7e,EAAK67B,kBAAkB8pE,GACvB3lG,EAAKozE,mBAAmBuyB,EAAe94E,KAAK5vB,QA1EI,WAAA2oG,EAAAI,EAAAv3F,KAAAo3F,EAAAprG,OAAAsyB,EAAA,EAAAtyB,CAAAmrG,EAAA,GAsEhDE,EAtEgDD,EAAA,GAuEhDE,EAvEgDF,EAAA,IA6E9CC,IAAiBC,EA7E6B,CAAAC,EAAAt6F,KAAA,gBA8EhD65F,EAAcvlG,EAAKuP,iBAAiBw2F,EAAgB,IAAIh+F,MAAM+9F,GA9EdE,EAAAt6F,KAAA,GA+E5B1L,EAAKmtB,oBAAoBo4E,EAAaz5F,EAAO65F,EAAgB13F,GA/EjC,SA+EhDs3F,EA/EgDS,EAAAv3F,QAgF5B82F,EAAYnnG,UAC9BgsB,EAAOo7E,GAAeD,YAAcA,EACpCV,EAAWA,EAASt4F,KAAKg5F,IAlFqB,QAuFpDn7E,EAAOo7E,GAAeX,SAAWA,EAvFmB,yBAAAmB,EAAAn5F,SAAAy4F,EAAAxqG,SAAhD,gBAAA+rG,GAAA,OAAAxB,EAAAt4F,MAAAjS,KAAAkS,YAAA,IAH6D,wBAAAo4F,EAAAv4F,SAAAs4F,EAAArqG,SAA/D,gBAAAgsG,GAAA,OAAA5B,EAAAn4F,MAAAjS,KAAAkS,YAAA,IALO,cAAAi4F,EAAA9oF,OAAA,SAmGNiO,GAnGM,wBAAA66E,EAAAp4F,SAAAm4F,EAAAlqG,SApjQIA,KAypQnBisG,sBAzpQmBtsG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAypQK,SAAA67F,IAAA,IAAA76E,EAAA/R,EAAA8X,EAAA+xB,EAAA6H,EAAAm7C,EAAAC,EAAA,OAAA37E,EAAAtwB,EAAAsQ,KAAA,SAAA47F,GAAA,cAAAA,EAAA17F,KAAA07F,EAAAz7F,MAAA,UAChBygB,EADgB,uBAEhB/R,EAAapa,EAAKwtB,8BAA8BrB,IAFhC,CAAAg7E,EAAAz7F,KAAA,eAAAy7F,EAAAhrF,OAAA,SAIb/B,GAJa,cAOhB8X,EAAYlyB,EAAKuuB,uBACjB01B,EAASjkD,EAAK8P,gBAAgB,CAAC,QAAS,WACxCg8C,EAAe9rD,EAAK8P,gBAAgB,CAAC,QAAS,aAT9Bq3F,EAAAz7F,KAAA,EAUS1L,EAAK0xC,YAAYoa,EAAapZ,SAASxgB,IAAY,EAAO+xB,GAVnE,aAUhBgjD,EAVgBE,EAAA14F,OAYEw4F,EAAiB/hG,MAAQ+hG,EAAiB/hG,KAAKqqC,OAAS03D,EAAiB/hG,KAAKqqC,MAAMzwC,OAAS,GAZ/F,CAAAqoG,EAAAz7F,KAAA,gBAadw7F,EAAaD,EAAiB/hG,KAAKqqC,MAAM,GAb3B43D,EAAAhrF,OAAA,SAcbnc,EAAKytB,8BAA8BtB,EAAe+6E,EAAYp7C,EAAa30B,MAd9D,eAAAgwE,EAAAhrF,OAAA,SAiBf,MAjBe,yBAAAgrF,EAAAt6F,SAAAm6F,EAAAlsG,SAzpQLA,KA4qQnByT,yBAA2B,SAACzC,EAAO8vB,GACjC,IAAM1J,EAAYlyB,EAAKuuB,uBACjB/pB,EAAcxE,EAAK+qB,aAAa,CAACmH,EAAW0J,EAAU9vB,GAAQrB,KACpE,OAAOjG,EAAcA,EAAYmD,QAAU,MA/qQ1B7M,KAirQnBssG,0BAjrQmB3sG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAirQS,SAAAk8F,IAAA,IAAArvE,EAAAC,EAAAqvE,EAAAC,EAAAv6F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAi8F,GAAA,cAAAA,EAAA/7F,KAAA+7F,EAAA97F,MAAA,cAAOssB,EAAPuvE,EAAAzoG,OAAA,QAAAmqB,IAAAs+E,EAAA,GAAAA,EAAA,GAAkB,KACxCtvE,EAASj4B,EAAK+L,MAAM,GACpBu7F,EAAWtnG,EAAK+L,MAAM,GACrBisB,GAAaA,EAASl5B,SACzBk5B,EAAWv9B,OAAOoE,KAAKmB,EAAK8P,gBAAgB,CAAC,eAJrB03F,EAAA97F,KAAA,EAMpB1L,EAAK+K,aAAatQ,OAAOoE,KAAKmB,EAAKjF,MAAM+8B,mBAAzC,eAAA2vE,EAAAhtG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA6D,SAAAu8F,EAAOlvE,GAAP,IAAAC,EAAA,OAAAlN,EAAAtwB,EAAAsQ,KAAA,SAAAo8F,GAAA,cAAAA,EAAAl8F,KAAAk8F,EAAAj8F,MAAA,cAC3D+sB,EAAiBz4B,EAAKjF,MAAM+8B,kBAAkBU,GADamvE,EAAAj8F,KAAA,EAE3D1L,EAAK+K,aAAatQ,OAAOoE,KAAK45B,GAA9B,eAAAmvE,EAAAntG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+C,SAAA08F,EAAO/7F,GAAP,IAAAtH,EAAA,OAAA+mB,EAAAtwB,EAAAsQ,KAAA,SAAAu8F,GAAA,cAAAA,EAAAr8F,KAAAq8F,EAAAp8F,MAAA,cAC7ClH,EAAci0B,EAAe3sB,GADgBg8F,EAAAp8F,KAAA,EAE7C1L,EAAK+K,aAAaitB,EAAlB,eAAA+vE,EAAAttG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA4B,SAAA68F,EAAOpvE,GAAP,IAAAC,EAAAovE,EAAAC,EAAAzuE,EAAAL,EAAA,OAAA7N,EAAAtwB,EAAAsQ,KAAA,SAAA48F,GAAA,cAAAA,EAAA18F,KAAA08F,EAAAz8F,MAAA,cAC1BmtB,EAAgBr0B,EAAYo0B,GADFuvE,EAAAz8F,KAAA,EAKtB8P,QAAQqD,IAAI,CACpB7e,EAAKw6B,oBAAoB,aAAc,GAAIhC,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAe,MACjG74B,EAAKw6B,oBAAoB,uBAAwB,GAAIhC,EAAU1sB,EAAO8sB,EAASp0B,EAAaq0B,EAAe,QAP7E,OAAAovE,EAAAE,EAAA15F,KAAAy5F,EAAAztG,OAAAsyB,EAAA,EAAAtyB,CAAAwtG,EAAA,GAG9BxuE,EAH8ByuE,EAAA,GAI9B9uE,EAJ8B8uE,EAAA,GAUhCjwE,EAASA,EAAO1rB,KAAKvM,EAAK+L,MAAM0tB,GAAY1xB,MAAM/H,EAAK+L,MAAMqtB,KAC7DkuE,EAAWA,EAAS/6F,KAAKvM,EAAK+L,MAAMqtB,IAXJ,wBAAA+uE,EAAAt7F,SAAAm7F,EAAAltG,SAA5B,gBAAAstG,GAAA,OAAAL,EAAAh7F,MAAAjS,KAAAkS,YAAA,IAF6C,wBAAA86F,EAAAj7F,SAAAg7F,EAAA/sG,SAA/C,gBAAAutG,GAAA,OAAAT,EAAA76F,MAAAjS,KAAAkS,YAAA,IAF2D,wBAAA26F,EAAA96F,SAAA66F,EAAA5sG,SAA7D,gBAAAwtG,GAAA,OAAAb,EAAA16F,MAAAjS,KAAAkS,YAAA,IANoB,cA4B1BirB,EAASA,EAAOla,IAAIupF,GA5BME,EAAArrF,OAAA,SAgCnB,CACL8b,SACAqvE,aAlCwB,wBAAAE,EAAA36F,SAAAw6F,EAAAvsG,SAjrQTA,KAstQnBytG,mBAttQmB9tG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAstQE,SAAAq9F,IAAA,IAAAC,EAAAv2E,EAAA+xB,EAAA6H,EAAA48C,EAAAzwE,EAAAqvE,EAAAqB,EAAAC,EAAA57F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAs9F,GAAA,cAAAA,EAAAp9F,KAAAo9F,EAAAn9F,MAAA,eAAAk9F,EAAA9pG,OAAA,QAAAmqB,IAAA2/E,EAAA,KAAAA,EAAA,GAA4BH,EAA5BG,EAAA9pG,OAAA,QAAAmqB,IAAA2/E,EAAA,IAAAA,EAAA,GACb12E,EAAYlyB,EAAKuuB,uBACjB01B,EAASjkD,EAAK8P,gBAAgB,CAAC,QAAS,WACxCg8C,EAAe9rD,EAAK8P,gBAAgB,CAAC,QAAS,SAChD44F,EAAa,CAACx2E,GACdu2E,IACFC,EAAajuG,OAAOoE,KAAKitD,EAAapZ,WAGpCza,EAASj4B,EAAK+L,MAAM,GACpBu7F,EAAWtnG,EAAK+L,MAAM,GAVP88F,EAAAn9F,KAAA,GAYb1L,EAAK+K,aAAa29F,EAAlB,eAAAI,EAAAruG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA8B,SAAA49F,EAAO72E,GAAP,IAAAy2E,EAAA,OAAAp9E,EAAAtwB,EAAAsQ,KAAA,SAAAy9F,GAAA,cAAAA,EAAAv9F,KAAAu9F,EAAAt9F,MAAA,cAC9Bi9F,EAAO,KADuBK,EAAAv9F,KAAA,EAAAu9F,EAAAt9F,KAAA,EAGnB1L,EAAKstC,kBAAkBwe,EAAapZ,SAASxgB,GAAY45B,EAAa30B,KAAK,GAAM,EAAO8sB,GAHrE,OAGhC0kD,EAHgCK,EAAAv6F,KAAAu6F,EAAAt9F,KAAA,eAAAs9F,EAAAv9F,KAAA,EAAAu9F,EAAA/7E,GAAA+7E,EAAA,gBAQ9BL,IACF1wE,EAASA,EAAO1rB,KAAKvM,EAAK+L,MAAM48F,EAAK1wE,QAAQlwB,MAAM/H,EAAK+L,MAAM48F,EAAK9D,YACnEyC,EAAWA,EAAS/6F,KAAKvM,EAAK+L,MAAM48F,EAAK9D,YAVT,yBAAAmE,EAAAn8F,SAAAk8F,EAAAjuG,KAAA,YAA9B,gBAAAmuG,GAAA,OAAAH,EAAA/7F,MAAAjS,KAAAkS,YAAA,IAZa,WA0Bds6F,IAAYtnG,EAAK+L,MAAMu7F,GAAUlpG,UAAW4B,EAAK+L,MAAMu7F,GAAUp6E,IAAI,GA1BvD,CAAA27E,EAAAn9F,KAAA,gBA2BjBusB,EAASj4B,EAAK+L,MAAM,GACpBu7F,EAAWtnG,EAAK+L,MAAM,GA5BL88F,EAAAn9F,KAAA,GA6BA1L,EAAKkpG,2BA7BL,SA6BbP,EA7BaE,EAAAp6F,QA+BfwpB,EAASA,EAAO1rB,KAAKvM,EAAK+L,MAAM48F,EAAK1wE,QAAQlwB,MAAM/H,EAAK+L,MAAM48F,EAAK9D,YACnEyC,EAAWA,EAAS/6F,KAAKvM,EAAK+L,MAAM48F,EAAK9D,YAhC1B,eAoCnB5sE,EAASA,EAAOla,IAAIupF,GApCDuB,EAAA1sF,OAAA,SAsCZ,CACL8b,SACAqvE,aAxCiB,yBAAAuB,EAAAh8F,SAAA27F,EAAA1tG,SAttQFA,KAiwQnBouG,yBAjwQmBzuG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAiwQQ,SAAAg+F,IAAA,IAAA9hC,EAAAn1C,EAAA/F,EAAA/R,EAAAgvF,EAAAnxE,EAAAqvE,EAAA96E,EAAApC,EAAAi/E,EAAAr8F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA+9F,GAAA,cAAAA,EAAA79F,KAAA69F,EAAA59F,MAAA,UAAO27D,IAAPgiC,EAAAvqG,OAAA,QAAAmqB,IAAAogF,EAAA,KAAAA,EAAA,GAEzBn3E,GAFqDA,EAA5Bm3E,EAAAvqG,OAAA,QAAAmqB,IAAAogF,EAAA,GAAAA,EAAA,GAAwC,OAExCrpG,EAAKuuB,uBAGxBpC,EALmB,sBAAA1qB,OAKmB4lE,EALnB,KAAA5lE,OAKmCywB,KACtD9X,EAAapa,EAAKwtB,8BAA8BrB,MACnC/R,EAAWgvF,QAAWppG,EAAK+L,MAAMqO,EAAWgvF,QAAQhrG,UAAagc,EAAW6d,QAAWj4B,EAAK+L,MAAMqO,EAAW6d,QAAQ75B,UAAagc,EAAWktF,UAAatnG,EAAK+L,MAAMqO,EAAWktF,UAAUlpG,QAPpL,CAAAkrG,EAAA59F,KAAA,eAAA49F,EAAAntF,OAAA,SAQhB,CACLitF,OAAQppG,EAAK+L,MAAMqO,EAAWgvF,QAC9BnxE,OAAQj4B,EAAK+L,MAAMqO,EAAW6d,QAC9BqvE,SAAUtnG,EAAK+L,MAAMqO,EAAWktF,YAXX,cAerB8B,EAASppG,EAAK+L,MAAM,GACpBksB,EAASj4B,EAAK+L,MAAM,GACpBu7F,EAAWtnG,EAAK+L,MAAM,GACpBygB,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UAnBhB6lE,EAAA59F,KAAA,GAsBnB1L,EAAK+K,aAAatQ,OAAOoE,KAAKmB,EAAKjF,MAAMwuG,6BAAzC,eAAAC,EAAA/uG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAuE,SAAAs+F,EAAOv3E,GAAP,IAAAm5B,EAAA,OAAA9/B,EAAAtwB,EAAAsQ,KAAA,SAAAm+F,GAAA,cAAAA,EAAAj+F,KAAAi+F,EAAAh+F,MAAA,cACrE2/C,EAAarrD,EAAKjF,MAAMwuG,4BAA4Br3E,GADiBw3E,EAAAh+F,KAAA,EAErE1L,EAAK+K,aAAatQ,OAAOoE,KAAKwsD,GAA9B,eAAAs+C,EAAAlvG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA2C,SAAAy+F,EAAOhuE,GAAP,IAAA3tB,EAAAxD,EAAA,OAAA8gB,EAAAtwB,EAAAsQ,KAAA,SAAAs+F,GAAA,cAAAA,EAAAp+F,KAAAo+F,EAAAn+F,MAAA,cACzCuC,EAAsB,SAAb2tB,EACTnxB,EAAkB4gD,EAAWzvB,GAFYiuE,EAAAn+F,KAAA,EAGzC1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAAq/F,EAAArvG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAA4+F,EAAOj+F,GAAP,IAAAtH,EAAA+nB,EAAAwP,EAAAiuE,EAAA/9B,EAAA05B,EAAAsE,EAAAC,EAAA,OAAA3+E,EAAAtwB,EAAAsQ,KAAA,SAAA4+F,GAAA,cAAAA,EAAA1+F,KAAA0+F,EAAAz+F,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgBq+F,EAAAz+F,KAAA,EAEtB1L,EAAKuE,mBAAmBC,GAAa,EAAO6iE,GAFtB,cAE9C96C,EAF8C49E,EAAA17F,KAAA07F,EAAAz+F,KAAA,EAG5B1L,EAAKo8B,aAAa53B,EAAa+nB,EAAiB86C,GAHpB,UAG9CtrC,EAH8CouE,EAAA17F,MAIhD8d,IAAmBA,EAAgBa,2BAA8Bb,EAAgBa,0BAA0BhvB,QAJ3D,CAAA+rG,EAAAz+F,KAAA,gBAAAy+F,EAAAz+F,KAAA,GAK3B1L,EAAKmtB,oBAAoBZ,EAAgBa,0BAA2BthB,EAAOtH,EAAayJ,GAL7D,QAK5C+7F,EAL4CG,EAAA17F,KAMlD64F,EAAWA,EAAS/6F,KAAKy9F,GAErBjuE,GAAaA,EAAU8xB,SAAW9xB,EAAU8xB,OAAOzvD,UACrDgrG,EAASA,EAAO78F,KAAKy9F,EAASjiG,MAAMg0B,EAAU8xB,SAC9C51B,EAASA,EAAO1rB,KAAKy9F,EAASjiG,MAAMg0B,EAAUO,UAVE,aAe9C2vC,EAAYjsE,EAAKw8F,kBAAkBh4F,IAfW,CAAA2lG,EAAAz+F,KAAA,gBAAAy+F,EAAAz+F,KAAA,GAiB5C1L,EAAK+K,aAAatQ,OAAOoE,KAAKotE,GAAWrgE,OAAO,SAAAg3B,GAAQ,OAAKqpC,EAAUrpC,GAAUqjE,UAAjF,eAAAmE,EAAA3vG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA4F,SAAAk/F,EAAOznE,GAAP,IAAAI,EAAAsnE,EAAAC,EAAAlxE,EAAA4O,EAAA1O,EAAA,OAAAhO,EAAAtwB,EAAAsQ,KAAA,SAAAi/F,GAAA,cAAAA,EAAA/+F,KAAA++F,EAAA9+F,MAAA,cAC1Fs3B,EAAiBipC,EAAUrpC,GAD+D4nE,EAAA9+F,KAAA,EAKtF8P,QAAQqD,IAAI,CACpB7e,EAAKmgF,mBAAmBv9C,EAAUp+B,EAAYqoB,KAAKllB,SACnD3H,EAAKgtB,yBAAyBR,EAAgBwW,KAPgD,OAAAsnE,EAAAE,EAAA/7F,KAAA87F,EAAA9vG,OAAAsyB,EAAA,EAAAtyB,CAAA6vG,EAAA,GAG9FjxE,EAH8FkxE,EAAA,GAI9FtiE,EAJ8FsiE,EAAA,GAU5FlxE,GAAgB4O,IACZ1O,EAAwBv5B,EAAKuP,iBAAiB8pB,EAAc2J,EAAevkC,UAAUsJ,MAAM/H,EAAK+L,MAAMk8B,OAC9E1O,EAAsBn7B,UAElDkpG,EAAWA,EAAS/6F,KAAKgtB,IAdmE,wBAAAixE,EAAA39F,SAAAw9F,EAAAvvG,SAA5F,gBAAA2vG,GAAA,OAAAL,EAAAr9F,MAAAjS,KAAAkS,YAAA,IAjB4C,YAsChDxI,EAAYqwB,YAAarwB,EAAYqwB,UAAUmrB,YAtCC,CAAAmqD,EAAAz+F,KAAA,gBAuC5Ci6F,EAAiBlrG,OAAOC,OAAO,GAAI8J,IAC1B8C,UAAY7M,OAAOkR,OAAOnH,EAAY8C,WACrDq+F,EAAe94E,KAAOpyB,OAAOC,OAAO,GAAI8J,EAAYqwB,UAAUmrB,aAG1D2lD,EAAe9wE,UAAU6xE,cAC3Bf,EAAe9wE,UAAU6xE,aAAa3nG,QAAQ,SAAA4nG,GAC5C,IAAM9L,EAAgB8K,EAAer+F,UAAU0S,KAAK,SAAA3d,GAAC,OAAKA,EAAEY,OAAS0pG,EAAY1pG,OACjF,GAAI49F,EAAe,CACjB,IAAM+L,EAAcjB,EAAer+F,UAAUwP,QAAQ+jF,GACrD8K,EAAer+F,UAAUs/F,GAAeD,KAjDIwD,EAAAz+F,KAAA,GAsDjB1L,EAAKuE,mBAAmBohG,GAAgB,GAAO,GAtD9B,aAsD5CsE,EAtD4CE,EAAA17F,QAuDxBw7F,EAAmB9lG,iBAAoB8lG,EAAmB9lG,gBAAgB/F,QAvDlD,CAAA+rG,EAAAz+F,KAAA,gBAAAy+F,EAAAz+F,KAAA,GAwDV1L,EAAKmtB,oBAAoB88E,EAAmB9lG,gBAAiB2H,EAAO65F,EAAgB13F,GAxD1E,QAwD1Ci8F,EAxD0CC,EAAA17F,KAyDhD64F,EAAWA,EAAS/6F,KAAK29F,GAzDuB,yBAAAC,EAAAt9F,SAAAk9F,EAAAjvG,SAAhD,gBAAA4vG,GAAA,OAAAZ,EAAA/8F,MAAAjS,KAAAkS,YAAA,IAHyC,wBAAA68F,EAAAh9F,SAAA+8F,EAAA9uG,SAA3C,gBAAA6vG,GAAA,OAAAhB,EAAA58F,MAAAjS,KAAAkS,YAAA,IAFqE,wBAAA08F,EAAA78F,SAAA48F,EAAA3uG,SAAvE,gBAAA8vG,GAAA,OAAApB,EAAAz8F,MAAAjS,KAAAkS,YAAA,IAtBmB,eA4FzBo8F,EAASA,EAAOrrF,IAAIupF,GACpBrvE,EAASA,EAAOla,IAAIupF,GAEdl9E,EAAS,CACbg/E,SACAnxE,SACAqvE,YAlGuBgC,EAAAntF,OAAA,SAqGlBnc,EAAKytB,8BAA8BtB,EAAe/B,IArGhC,yBAAAk/E,EAAAz8F,SAAAs8F,EAAAruG,SAjwQRA,KAw2QnB+vG,YAx2QmB,eAAAC,EAAArwG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAw2QL,SAAA4/F,EAAOvmG,GAAP,IAAAu3B,EAAA,OAAAxQ,EAAAtwB,EAAAsQ,KAAA,SAAAy/F,GAAA,cAAAA,EAAAv/F,KAAAu/F,EAAAt/F,MAAA,cAAAs/F,EAAAt/F,KAAA,EACY1L,EAAKo8B,aAAa53B,GAD9B,YACNu3B,EADMivE,EAAAv8F,OAE0B,OAArBstB,EAAUO,OAFf,CAAA0uE,EAAAt/F,KAAA,eAAAs/F,EAAA7uF,OAAA,SAGH4f,EAAUO,QAHP,cAAA0uE,EAAA7uF,OAAA,SAKL,MALK,wBAAA6uF,EAAAn+F,SAAAk+F,EAAAjwG,SAx2QK,gBAAAmwG,GAAA,OAAAH,EAAA/9F,MAAAjS,KAAAkS,YAAA,GAAAlS,KA+2QnBowG,mBA/2QmBzwG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA+2QE,SAAAggG,IAAA,IAAAj9F,EAAAktB,EAAAgwE,EAAAp+F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8/F,GAAA,cAAAA,EAAA5/F,KAAA4/F,EAAA3/F,MAAA,UAAOwC,EAAPk9F,EAAAtsG,OAAA,QAAAmqB,IAAAmiF,EAAA,GAAAA,EAAA,GAA0B,KAExCprG,EAAKjF,MAAMuzB,qBAAwBtuB,EAAKjF,MAAM4P,QAFhC,CAAA0gG,EAAA3/F,KAAA,eAAA2/F,EAAAlvF,OAAA,UAGV,GAHU,cAMbif,EAAkB,GANLiwE,EAAA3/F,KAAA,EAQb1L,EAAK+K,aAAatQ,OAAOoE,KAAKmB,EAAKjF,MAAMuzB,qBAAzC,eAAAg9E,EAAA7wG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA+D,SAAAogG,EAAO3vE,GAAP,IAAAnxB,EAAA,OAAA8gB,EAAAtwB,EAAAsQ,KAAA,SAAAigG,GAAA,cAAAA,EAAA//F,KAAA+/F,EAAA9/F,MAAA,WAC/DwC,GAAoBA,IAAqB0tB,EADsB,CAAA4vE,EAAA9/F,KAAA,eAAA8/F,EAAArvF,OAAA,wBAI7D1R,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBsN,GAJY4vE,EAAA9/F,KAAA,EAK7D1L,EAAK+K,aAAatQ,OAAOoE,KAAK4L,GAA9B,eAAAghG,EAAAhxG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAugG,EAAO5/F,GAAP,IAAAtH,EAAAmnG,EAAAnwE,EAAAC,EAAAC,EAAA,OAAAnQ,EAAAtwB,EAAAsQ,KAAA,SAAAqgG,GAAA,cAAAA,EAAAngG,KAAAmgG,EAAAlgG,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgB8/F,EAAAlgG,KAAA,EAK1C1L,EAAK27B,eAAen3B,EAAaxE,EAAKjF,MAAM4P,SALF,OAAAghG,EAAAC,EAAAn9F,KAGlD+sB,EAHkDmwE,EAGlDnwE,iBACAC,EAJkDkwE,EAIlDlwE,4BAGED,IACIE,EAAWxtB,EAAmBpC,EAAQtH,EAAYqoB,KAAK/gB,MAC7DsvB,EAAgBM,GAAY,CAC1B5vB,QACA8vB,WACAp3B,cACAi3B,gCAbgD,wBAAAmwE,EAAA/+F,SAAA6+F,EAAA5wG,SAAhD,gBAAA+wG,GAAA,OAAAJ,EAAA1+F,MAAAjS,KAAAkS,YAAA,IAL6D,wBAAAw+F,EAAA3+F,SAAA0+F,EAAAzwG,SAA/D,gBAAAgxG,GAAA,OAAAR,EAAAv+F,MAAAjS,KAAAkS,YAAA,IARa,cAAAq+F,EAAAlvF,OAAA,SAgCZif,GAhCY,wBAAAiwE,EAAAx+F,SAAAs+F,EAAArwG,SA/2QFA,KAo5QnBixG,2BAp5QmBtxG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAo5QU,SAAA6gG,IAAA,IAAAxzE,EAAAyzE,EAAAC,EAAAC,EAAAC,EAAAp/F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8gG,GAAA,cAAAA,EAAA5gG,KAAA4gG,EAAA3gG,MAAA,UAAO8sB,EAAP4zE,EAAAttG,OAAA,QAAAmqB,IAAAmjF,EAAA,GAAAA,EAAA,GAAkB,KACxCpsG,EAAKjF,MAAM4P,QADW,CAAA0hG,EAAA3gG,KAAA,eAAA2gG,EAAAlwF,OAAA,UAElB,GAFkB,UAIrB8vF,EAAgB,GAChBC,EAAkBlsG,EAAK+L,MAAM,GAAGgS,IAAI,OACpCouF,EAAkBnsG,EAAK8P,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,qBANvD,CAAAu8F,EAAA3gG,KAAA,eAAA2gG,EAAA3gG,KAAA,EAQnB1L,EAAK+K,aAAatQ,OAAOoE,KAAKstG,GAA9B,eAAAG,EAAA7xG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAohG,EAAOzgG,GAAP,IAAAtH,EAAAgnD,EAAAnyB,EAAA,OAAA9N,EAAAtwB,EAAAsQ,KAAA,SAAAihG,GAAA,cAAAA,EAAA/gG,KAAA+gG,EAAA9gG,MAAA,UAC9ClH,EAAc2nG,EAAgBrgG,GACnB,OAAb0sB,GAAqBh0B,EAAYg0B,SAAS5wB,gBAAkB4wB,EAAS5wB,cAFrB,CAAA4kG,EAAA9gG,KAAA,eAAA8gG,EAAArwF,OAAA,qBAKhDqvC,EAAgBxrD,EAAKiyB,kBAAkBztB,EAAYsH,UACjCtH,EAAY69B,IANkB,CAAAmqE,EAAA9gG,KAAA,eAAA8gG,EAAA9gG,KAAA,EAO5B1L,EAAKjF,MAAMqnC,aAAa59B,EAAYsH,MAAOtH,EAAYmD,QAASnD,EAAY69B,KAPhD,OAOlDmpB,EAPkDghD,EAAA/9F,KAAA,WAShD+8C,EATgD,CAAAghD,EAAA9gG,KAAA,gBAAA8gG,EAAA9gG,KAAA,GAUvB1L,EAAKwrB,gBAAgBhnB,EAAYsH,MAAO9L,EAAKjF,MAAM4P,SAV5B,SAU5C0uB,EAV4CmzE,EAAA/9F,OAW9B4qB,EAAaqmC,IAAIwsC,KACnCD,EAAcngG,GAAS,CACrBtH,cACAkI,QAAS2sB,IAdqC,yBAAAmzE,EAAA3/F,SAAA0/F,EAAAzxG,SAAhD,gBAAA2xG,GAAA,OAAAH,EAAAv/F,MAAAjS,KAAAkS,YAAA,IARmB,cAAAq/F,EAAAlwF,OAAA,SA6BpB8vF,GA7BoB,yBAAAI,EAAAx/F,SAAAm/F,EAAAlxG,SAp5QVA,KAm7QnB4xG,4BAA8B,SAAC5gG,GAC7B,OAAO9L,EAAK8P,gBAAgB,CAAC,QAAS,SAAUhE,EAAMiE,cAAe,yBAp7QpDjV,KAs7QnB2/B,2BAt7QmB,eAAAkyE,EAAAlyG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAs7QU,SAAAyhG,EAAOvzE,EAAc70B,GAArB,IAAAsZ,EAAAlO,EAAAi9F,EAAA7/F,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAuhG,GAAA,cAAAA,EAAArhG,KAAAqhG,EAAAphG,MAAA,UAAkCoS,EAAlC+uF,EAAA/tG,OAAA,QAAAmqB,IAAA4jF,EAAA,GAAAA,EAAA,GAA8C,SAEzExzE,EAAer5B,EAAK+L,MAAMstB,GAEEr5B,EAAK0sG,4BAA4BloG,EAAYsH,OAJ9C,CAAAghG,EAAAphG,KAAA,eAAAohG,EAAA3wF,OAAA,SAMlBkd,GANkB,WAQvBA,EAAa1pB,GAAG,GARO,CAAAm9F,EAAAphG,KAAA,gBAAAohG,EAAAphG,KAAA,EASY1L,EAAK+6B,8BAA8Bv2B,EAAYsZ,GAT3D,QASnBlO,EATmBk9F,EAAAr+F,QAWvB4qB,EAAeA,EAAatxB,MAAM6H,IAXX,eAAAk9F,EAAA3wF,OAAA,SAcpBkd,GAdoB,yBAAAyzE,EAAAjgG,SAAA+/F,EAAA9xG,SAt7QV,gBAAAiyG,EAAAC,GAAA,OAAAL,EAAA5/F,MAAAjS,KAAAkS,YAAA,GAAAlS,KAy8QnBqyB,oBAz8QmB,eAAA8/E,EAAAxyG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAy8QG,SAAA+hG,EAAO7zE,EAAcvtB,EAAOtH,GAA5B,IAAAyJ,EAAA2B,EAAAu9F,EAAAngG,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA6hG,GAAA,cAAAA,EAAA3hG,KAAA2hG,EAAA1hG,MAAA,UAAyCuC,EAAzCk/F,EAAAruG,OAAA,QAAAmqB,IAAAkkF,EAAA,IAAAA,EAAA,KAEpB9zE,EAAer5B,EAAK+L,MAAMstB,IACT1pB,GAAG,GAHA,CAAAy9F,EAAA1hG,KAAA,eAAA0hG,EAAA1hG,KAAA,EAImB1L,EAAKyoF,uBAAuBjkF,EAAayJ,GAJ5D,QAIZ2B,EAJYw9F,EAAA3+F,QAOhB4qB,EAAeA,EAAatxB,MAAM6H,IAPlB,cAAAw9F,EAAAjxF,OAAA,SAUbkd,GAVa,wBAAA+zE,EAAAvgG,SAAAqgG,EAAApyG,SAz8QH,gBAAAuyG,EAAAC,EAAAC,GAAA,OAAAN,EAAAlgG,MAAAjS,KAAAkS,YAAA,GAAAlS,KAq9QnB0yG,eAr9QmB,eAAAC,EAAAhzG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAq9QF,SAAAuiG,EAAO/lG,EAASsG,GAAhB,IAAAyzC,EAAAC,EAAAgsD,EAAAhqE,EAAAiqE,EAAA5gG,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAsiG,GAAA,cAAAA,EAAApiG,KAAAoiG,EAAAniG,MAAA,cAAwBg2C,EAAxBksD,EAAA9uG,OAAA,QAAAmqB,IAAA2kF,EAAA,GAAAA,EAAA,GAAyC,KAAMjsD,EAA/CisD,EAAA9uG,OAAA,QAAAmqB,IAAA2kF,EAAA,GAAAA,EAAA,GAA8D,KAA9DC,EAAAniG,KAAA,EACU1L,EAAKwO,gBAAgB7G,EAASsG,EAAQyzC,EAAgBC,GAAc,EAAM,MADpF,YACTgsD,EADSE,EAAAp/F,QAEGk/F,EAAW7uG,OAFd,CAAA+uG,EAAAniG,KAAA,eAGPi4B,EAAMgqE,EAAWnuE,OAAO,SAACm6D,EAAK5hD,GAClC,IAAMgjD,EAAW/6F,EAAKuP,iBAAiBwoC,EAAEgjD,SAAU,IACnD,OAAOpB,EAAIptF,KAAKwuF,IACf/6F,EAAK+L,MAAM,IAND8hG,EAAA1xF,OAAA,SASNwnB,EAAI5lB,IAAI4vF,EAAW7uG,SATb,cAAA+uG,EAAA1xF,OAAA,SAYRnc,EAAK+L,MAAM,IAZH,wBAAA8hG,EAAAhhG,SAAA6gG,EAAA5yG,SAr9QE,gBAAAgzG,EAAAC,GAAA,OAAAN,EAAA1gG,MAAAjS,KAAAkS,YAAA,GAAAlS,KAm+QnBigC,8BAn+QmB,eAAAizE,EAAAvzG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAm+Qa,SAAA8iG,EAAOzpG,GAAP,IAAAsZ,EAAA0O,EAAA0hF,EAAAC,EAAArjB,EAAA76E,EAAAm+F,EAAAphG,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8iG,GAAA,cAAAA,EAAA5iG,KAAA4iG,EAAA3iG,MAAA,cAAoBoS,EAApBswF,EAAAtvG,OAAA,QAAAmqB,IAAAmlF,EAAA,GAAAA,EAAA,GAAgC,SACxD5hF,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,WAEnCyqE,EAAmB1pG,EAAYsH,MAAQ9L,EAAK8P,gBAAgB,CAAC,QAAS,SAAUtL,EAAYsH,MAAMiE,gBAAkB,MAGrGu+F,sBACnB9hF,EAAe7kB,QAAUumG,EAAiBI,qBAGtCH,EAAgBD,GAAoB1pG,EAGpCsmF,GAAWojB,EAAiBI,oBAdJD,EAAA3iG,KAAA,EAgBD1L,EAAKgtB,yBAAyBR,EAAgB2hF,EAAerwF,EAAagtE,GAhBzE,UAgBxB76E,EAhBwBo+F,EAAA5/F,KAiBzBzO,EAAK+L,MAAMkE,GAAgB7R,QAjBF,CAAAiwG,EAAA3iG,KAAA,gBAAA2iG,EAAAlyF,OAAA,SAkBrBlM,GAlBqB,eAAAo+F,EAAAlyF,OAAA,SAqBvB,MArBuB,yBAAAkyF,EAAAxhG,SAAAohG,EAAAnzG,SAn+Qb,gBAAAyzG,GAAA,OAAAP,EAAAjhG,MAAAjS,KAAAkS,YAAA,GAAAlS,KA6/QnB2tF,uBA7/QmB,eAAA+lB,EAAA/zG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KA6/QM,SAAAsjG,EAAOjqG,EAAayJ,GAApB,IAAA4B,EAAA6+F,EAAAviF,EAAA/R,EAAAq6D,EAAAk6B,EAAAniF,EAAA2hF,EAAAl+F,EAAA2+F,EAAA5hG,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAsjG,GAAA,cAAAA,EAAApjG,KAAAojG,EAAAnjG,MAAA,UAA4BmE,EAA5B++F,EAAA9vG,OAAA,QAAAmqB,IAAA2lF,EAAA,GAAAA,EAAA,GAAkD,KAAMF,EAAxDE,EAAA9vG,OAAA,QAAAmqB,IAAA2lF,EAAA,GAAAA,EAAA,GAAgE,EAElF/+F,EAFkB,CAAAg/F,EAAAnjG,KAAA,WAGrBmE,EAAsB7P,EAAK0sG,4BAA4BloG,EAAYsH,OAH9C,CAAA+iG,EAAAnjG,KAAA,eAAAmjG,EAAA1yF,OAAA,SAKZnc,EAAK+L,MAAM,IALC,UAUjBogB,EAViB,uBAAA1qB,OAUsB+C,EAAYmD,QAVlC,KAAAlG,OAU6CwM,EAV7C,KAAAxM,OAUuDoO,KACxEuK,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAZnB,CAAAywG,EAAAnjG,KAAA,gBAAAmjG,EAAA1yF,OAAA,SAadnc,EAAK+L,MAAMqO,IAbG,eAAAy0F,EAAAnjG,KAAA,GAgBD1L,EAAKwO,gBAAgBhK,EAAYmD,QAASsG,EAAQ,KAAM,MAAM,EAAO,KAAM,OAAQ,GAhBlF,aAgBnBwmE,EAhBmBo6B,EAAApgG,QAiBNgmE,EAAU31E,OAjBJ,CAAA+vG,EAAAnjG,KAAA,cAkBrB+oE,EAAYA,EAAUzlE,QACJhP,EAAK+L,MAAM0oE,EAAU5kE,IAAsBzR,QAnBxC,CAAAywG,EAAAnjG,KAAA,YAoBbuE,EAAiBjQ,EAAKuP,iBAAiBklE,EAAU5kE,GAAsB,IACxE7P,EAAK+L,MAAMkE,GAAgB7R,QArBb,CAAAywG,EAAAnjG,KAAA,gBAAAmjG,EAAA1yF,OAAA,SAsBVnc,EAAKytB,8BAA8BtB,EAAelc,IAtBxC,eA2BjBuc,EAAiB,CACrB7kB,QAAS3H,EAAKiyB,kBAAkB,OAAOwR,UAEnC0qE,EAAgB3pG,EAAYsH,MAAQ9L,EAAK8P,gBAAgB,CAAC,QAAS,SAAUtL,EAAYsH,MAAMiE,gBAAkBvL,EA9BhGqqG,EAAAnjG,KAAA,GA+BM1L,EAAKgtB,yBAAyBR,EAAgB2hF,GA/BpD,WA+BjBl+F,EA/BiB4+F,EAAApgG,KAgClBzO,EAAK+L,MAAMkE,GAAgB7R,QAhCT,CAAAywG,EAAAnjG,KAAA,gBAAAmjG,EAAA1yF,OAAA,SAiCdnc,EAAKytB,8BAA8BtB,EAAelc,IAjCpC,aAoCnBy+F,EAAQ,GApCW,CAAAG,EAAAnjG,KAAA,gBAAAmjG,EAAAnjG,KAAA,GAqCR1L,EAAKyoF,uBAAuBjkF,EAAayJ,EAAQ4B,EAAqB6+F,EAAQ,GArCtE,eAAAG,EAAA1yF,OAAA,SAAA0yF,EAAApgG,MAAA,eAAAogG,EAAA1yF,OAAA,SAwChBnc,EAAK+L,MAAM,IAxCK,yBAAA8iG,EAAAhiG,SAAA4hG,EAAA3zG,SA7/QN,gBAAAg0G,EAAAC,GAAA,OAAAP,EAAAzhG,MAAAjS,KAAAkS,YAAA,GAAAlS,KAwiRnBk0G,cAxiRmB,eAAAC,EAAAx0G,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAwiRH,SAAA+jG,EAAO1qG,EAAayJ,GAApB,IAAAke,EAAA/R,EAAA8X,EAAAw6B,EAAAzI,EAAAvR,EAAAy8D,EAAAC,EAAA36B,EAAAloD,EAAA8iF,EAAA,OAAA9jF,EAAAtwB,EAAAsQ,KAAA,SAAA+jG,GAAA,cAAAA,EAAA7jG,KAAA6jG,EAAA5jG,MAAA,UAERygB,EAFQ,cAAA1qB,OAEsB+C,EAAYmD,QAFlC,KAAAlG,OAE6CwM,KACrDmM,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAJ5B,CAAAkxG,EAAA5jG,KAAA,eAAA4jG,EAAAnzF,OAAA,SAKLnc,EAAK+L,MAAMqO,IALN,cAQR8X,EAAYlyB,EAAKuuB,uBACjBm+B,EAAU1sD,EAAK8P,gBAAgB,CAAC,QAAS,UACzCm0C,EAASjkD,EAAK8P,gBAAgB,CAAC,QAAS,WACxC4iC,EAXQ,GAAAjxC,OAWMirD,EAAQha,SAASxgB,IAXvBzwB,OAWoC+C,EAAYmD,QAXhD,YAAAlG,OAWkEwM,EAXlE,uBAAAqhG,EAAA5jG,KAAA,GAeJ8P,QAAQqD,IAAI,CACpB7e,EAAKstC,kBAAkBoF,EAAUga,EAAQv1B,KAAK,GAAM,EAAO8sB,GAC3DjkD,EAAKuE,mBAAmBC,GAAa,GAAO,KAjBhC,WAAA2qG,EAAAG,EAAA7gG,KAAA2gG,EAAA30G,OAAAsyB,EAAA,EAAAtyB,CAAA00G,EAAA,GAaZ16B,EAbY26B,EAAA,GAcZ7iF,EAdY6iF,EAAA,GAoBVC,EAAarvG,EAAK+L,MAAM,GAExBwgB,GACF9xB,OAAOoE,KAAK0tB,EAAgBloB,0BAA0BtF,QAAQ,SAAA2I,GAC5D,IAAMihF,EAAyB3oF,EAAK+L,MAAMwgB,EAAgBloB,yBAAyBqD,IACnF,GAAIihF,EAAuBh5E,GAAG,MAAQ,CACpC,IAAI4/F,EAAgB,KAEdhoG,EAAektE,GAAaA,EAAU31E,OAAS,EAAI21E,EAAU,GAAGkmB,cAAc3gF,KAAK,SAAA3d,GAAC,OAAKA,EAAEqL,aAAaE,gBAAkBF,EAAaE,gBAAkB,KAM/J,GALIL,IACFgoG,EAAgBvvG,EAAK+L,MAAMxE,EAAag0F,aAIrCgU,GAAiBvvG,EAAK+L,MAAMwjG,GAAenxG,SAAW4B,EAAK+L,MAAMwjG,GAAeriF,IAAI,GAAI,CAC3F,IAAMuL,EAAiBj0B,EAAY8C,UAAU0S,KAAK,SAAA3d,GAAC,OAAIA,EAAEsL,QAAQC,gBAAkBF,EAAaE,gBAC5F6wB,IACF82E,EAAgBvvG,EAAK+L,MAAM0sB,EAAe8iE,YAIzCgU,EAAcnxG,UACjBixG,EAAaA,EAAW9iG,KAAKgjG,EAAcxnG,MAAM4gF,QAOpD0mB,IAAcA,EAAWjxG,UAAWixG,EAAWniF,IAAI,GAjD1C,CAAAoiF,EAAA5jG,KAAA,gBAAA4jG,EAAA5jG,KAAA,GAkDO1L,EAAKwvG,iBAAiBhrG,EAAayJ,GAlD1C,QAkDZohG,EAlDYC,EAAA7gG,KAAA,eAAA6gG,EAAAnzF,OAAA,SAqDPnc,EAAKytB,8BAA8BtB,EAAekjF,IArD3C,yBAAAC,EAAAziG,SAAAqiG,EAAAp0G,SAxiRG,gBAAA20G,EAAAC,GAAA,OAAAT,EAAAliG,MAAAjS,KAAAkS,YAAA,GAAAlS,KAmmRnB00G,iBAnmRmB,eAAAG,EAAAl1G,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAmmRA,SAAAykG,EAAOprG,EAAayJ,GAApB,IAAAke,EAAA/R,EAAA8X,EAAAw6B,EAAAzI,EAAAvR,EAAAm9D,EAAAp7B,EAAA46B,EAAAngG,EAAAwyC,EAAAzyC,EAAA,OAAAsc,EAAAtwB,EAAAsQ,KAAA,SAAAukG,GAAA,cAAAA,EAAArkG,KAAAqkG,EAAApkG,MAAA,UAEXygB,EAFW,iBAAA1qB,OAEsB+C,EAAYmD,QAFlC,KAAAlG,OAE6CwM,KACxDmM,EAAapa,EAAKwtB,8BAA8BrB,KACnCnsB,EAAK+L,MAAMqO,GAAYhc,QAJzB,CAAA0xG,EAAApkG,KAAA,eAAAokG,EAAA3zF,OAAA,SAKRnc,EAAK+L,MAAMqO,IALH,UAQX8X,EAAYlyB,EAAKuuB,wBACjBm+B,EAAU1sD,EAAK8P,gBAAgB,CAAC,QAAS,YAElC4iC,SAASxgB,GAXL,CAAA49E,EAAApkG,KAAA,eAAAokG,EAAA3zF,OAAA,SAYRnc,EAAK+L,MAAM,IAZH,cAeXk4C,EAASjkD,EAAK8P,gBAAgB,CAAC,QAAS,WACxC4iC,EAhBW,GAAAjxC,OAgBGirD,EAAQha,SAASxgB,IAhBpBzwB,OAgBiC+C,EAAYmD,QAhB7C,YAAAlG,OAgB+DwM,GAhB/D6hG,EAAApkG,KAAA,GAiBE1L,EAAKstC,kBAAkBoF,EAAUga,EAAQv1B,KAAK,GAAM,EAAO8sB,GAjB7D,cAiBb4rD,EAjBaC,EAAArhG,OAmBHohG,EAAO/wG,OAAS,GAnBb,CAAAgxG,EAAApkG,KAAA,cAoBX+oE,EAAYo7B,EAAO71F,KAAK,SAAAkX,GAAC,OAAIA,EAAEvpB,QAAQC,gBAAkBpD,EAAYmD,QAAQC,iBApBlE,CAAAkoG,EAAApkG,KAAA,cAsBT2jG,EAAarvG,EAAK+L,MAAM0oE,EAAUwmB,cACpBoU,EAAW1/F,GAAG,GAvBnB,CAAAmgG,EAAApkG,KAAA,gBAAAokG,EAAA3zF,OAAA,SAyBJnc,EAAKqa,cAAc8R,EAAekjF,IAzB9B,eA4BLngG,EAAY9C,SAASe,KAAKg5B,MAAQ,KAClCub,EAAiBt1C,SAAS8C,GAAc,MA7BnC4gG,EAAApkG,KAAA,GA8BO1L,EAAKwO,gBAAgBhK,EAAYmD,QAASsG,EAAQyzC,EAAgB,MAAM,EAAM,KAAM,QA9B3F,WA8BX+yB,EA9BWq7B,EAAArhG,OAgCLQ,EAAoBwlE,EAAU7oE,OAAO,SAAA5G,GAAC,OAAKhF,EAAK+L,MAAM/G,EAAEi2F,WAAWtrF,GAAG,MACtD7Q,OAjCX,CAAAgxG,EAAApkG,KAAA,YAkCT2jG,EAAarvG,EAAK+L,MAAMkD,EAAkB,GAAGgsF,WACxCj7F,EAAK+L,MAAMsjG,GAAYjxG,QAnCnB,CAAA0xG,EAAApkG,KAAA,gBAAAokG,EAAA3zF,OAAA,SAoCAnc,EAAKytB,8BAA8BtB,EAAekjF,IApClD,eAAAS,EAAA3zF,OAAA,SA2CVnc,EAAK+L,MAAM,IA3CD,yBAAA+jG,EAAAjjG,SAAA+iG,EAAA90G,SAnmRA,gBAAAi1G,EAAAC,GAAA,OAAAL,EAAA5iG,MAAAjS,KAAAkS,YAAA,GAAAlS,KAmpRnBshC,aAnpRmB,eAAA6zE,EAAAx1G,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAmpRJ,SAAA+kG,EAAO1rG,GAAP,IAAA6iE,EAAAkG,EAAAxxC,EAAA7J,EAAA/F,EAAA/R,EAAA+1F,EAAAhgF,EAAAigF,EAAAC,EAAArjG,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA+kG,GAAA,cAAAA,EAAA7kG,KAAA6kG,EAAA5kG,MAAA,UAAA2kG,EAAAvxG,OAAA,QAAAmqB,IAAAonF,EAAA,IAAAA,EAAA,GAA6ChpC,IAA7CgpC,EAAAvxG,OAAA,QAAAmqB,IAAAonF,EAAA,KAAAA,EAAA,GAAkE9iC,EAAlE8iC,EAAAvxG,OAAA,QAAAmqB,IAAAonF,EAAA,IAAAA,EAAA,GAEPt0E,EAAY,CAChB8xB,OAAQ7tD,EAAK+L,MAAM,GACnBuwB,OAAQt8B,EAAK+L,MAAM,IAGhBvH,EAAYqoB,KAPJ,CAAAyjF,EAAA5kG,KAAA,eAAA4kG,EAAAn0F,OAAA,SAQJ4f,GARI,UAWP7J,EAAYlyB,EAAKuuB,uBAGjBpC,EAdO,aAAA1qB,OAcsBywB,EAdtB,KAAAzwB,OAcmC+C,EAAYqoB,KAAKllB,QAdpD,KAAAlG,OAc+D4lE,MACtEjtD,EAAapa,EAAKwtB,8BAA8BrB,KAInC/R,EAAWyzC,QAAU7tD,EAAK+L,MAAMqO,EAAWyzC,QAAQl+C,GAAG,IAAQyK,EAAWkiB,QAAUt8B,EAAK+L,MAAMqO,EAAWkiB,QAAQ3sB,GAAG,IAnB1H,CAAA2gG,EAAA5kG,KAAA,gBAAA4kG,EAAAn0F,OAAA,SAoBJ,CACL0xC,OAAQ7tD,EAAK+L,MAAMqO,EAAWyzC,QAC9BvxB,OAAQt8B,EAAK+L,MAAMqO,EAAWkiB,UAtBrB,eAAAg0E,EAAA5kG,KAAA,GA0BY1L,EAAK6rB,oBAAoBrnB,EAAYqoB,KAAK/gB,MAAO,aA1B7D,WA0BbiwB,EAAU8xB,OA1BGyiD,EAAA7hG,KA2BTstB,EAAU8xB,SACZ9xB,EAAU8xB,OAAS7tD,EAAKuP,iBAAiBwsB,EAAU8xB,OAAQ,MAKzD9xB,EAAU8xB,OAjCD,CAAAyiD,EAAA5kG,KAAA,YAmCXqwB,EAAUO,OAASt8B,EAAK0jC,QAAQ3H,EAAU8xB,OAAO9vC,IAAI,MAAMhW,MAAM,KAG3DooG,EAAsB5iC,GAAevtE,EAAK8P,gBAAgB,CAAC,YAAa,OAAQ,aAC1D9P,EAAK8P,gBAAgB,CAAC,YAAa,OAAQ,cAC5CqgG,EAxChB,CAAAG,EAAA5kG,KAAA,gBAyCHykB,EAAenwB,EAAKgyE,kBAzCjBs+B,EAAA5kG,KAAA,GA0CaykB,EAAanE,OAAOxnB,EAAYsH,MAAOtH,GA1CpD,SA0CH4rG,EA1CGE,EAAA7hG,QA4CPstB,EAAU8xB,OAAS9xB,EAAU8xB,OAAOthD,KAAK6jG,GACzCr0E,EAAUO,OAASP,EAAUO,OAAO/vB,KAAK6jG,IA7ClC,eAmDPpwG,EAAK+L,MAAMgwB,EAAUO,QAAQl+B,UAC/B29B,EAAUO,OAASt8B,EAAK+L,MAAM,IAE5B/L,EAAK+L,MAAMgwB,EAAU8xB,QAAQzvD,UAC/B29B,EAAU8xB,OAAS7tD,EAAK+L,MAAM,IAvDrBukG,EAAAn0F,OAAA,SA4DJnc,EAAKytB,8BAA8BtB,EAAe4P,IA5D9C,eAAAu0E,EAAAn0F,OAAA,SA+DN4f,GA/DM,yBAAAu0E,EAAAzjG,SAAAqjG,EAAAp1G,SAnpRI,gBAAAy1G,GAAA,OAAAN,EAAAljG,MAAAjS,KAAAkS,YAAA,GAAAlS,KAotRnB0D,iBAAmB,SAACgH,GAMlB,IAN8E,IAArD/G,EAAqDuO,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAA1C,EAAGtO,EAAuCsO,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAxB,EAAGrO,EAAqBqO,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAN,EAElEwjG,EAAa1oG,WAAWtC,GAAS,EACnC4zC,EAAWp5C,EAAK+L,MAAMvG,GAAOykD,MAE7BwmD,EAAY,EACTr3D,EAASsmB,IAAI,MAClBtmB,EAAWA,EAASr7B,IAAI,KACxB0yF,IAMF,GAHA/xG,EAAewN,KAAKqE,IAAI,EAAG7R,GAGvB8G,GAAS,IAAM,CACjB,IAAMkrG,EAAcjyG,EAAW26C,EAASu3D,IAAI,GAAG3oG,QAAQtJ,GAAcmhB,OAAO,EAAGphB,GAAY,KAC3F26C,EAAWhtC,SAASgtC,GAAUp7B,YAAc0yF,EAAc,IAAMA,EAAc,SAE9Et3D,EAAWA,EAASpxC,QAAQvJ,GAI9B,GAAI26C,GAAY,GAAMA,EAASt6C,OAAS,EAAKJ,EAC3C06C,EAAWtxC,WAAWsxC,GAAUw3D,YAAYlyG,QACvC,GAAK06C,EAASt6C,OAAS,EAAKH,EAAc,CAC/C,IAAMkyG,EAAalyG,GAAgBy6C,EAASt6C,OAAS,GAErDs6C,GADep5C,EAAK+L,MAAMvG,GAAOykD,MAAMjsC,WAAW2U,QAAQ,IAAK,IAAI9S,OAAQu5B,EAASt6C,OAAS,EAAI+xG,GAWnG,OANIL,IACFp3D,EAAW,IAAMA,GAGnBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAK,KA+BhBq3D,IAtvRrB31G,KAAKgD,SAAS/C,mEA0vRI2R,EAASpE,EAAO7J,EAAUqyG,EAAQC,GAEpDtyG,EAAYL,MAAMK,GAAuB,EAAXA,EAC9BqyG,EAAU1yG,MAAM0yG,GAAmB,GAATA,EAC1BC,EAAuB3yG,MAAM2yG,GAA6C,EAAtBA,EAGpD,IAAMC,GAFNtkG,EAAU5E,WAAWhN,KAAKiR,MAAMW,IAAU1E,QAAQvJ,IAE3Buf,WAAW2U,QAAQ,IAAK,IAAI7zB,OAC/CkyG,EAASF,IACXryG,EAAWyN,KAAKqE,IAAI,EAAG9R,GAAYuyG,EAASF,IAC5CpkG,EAAU5E,WAAWhN,KAAKiR,MAAMW,IAAU1E,QAAQvJ,IAGpD,IAAMwyG,EAAU/kG,KAAKgF,MAAMxE,GACvBwkG,GAAWxkG,EAAU,GAAGkkG,YAAYnyG,GAAUohB,OAAO,EAAGphB,GAG5D,GAFAyyG,GAAWA,EAAW,IAAIC,OAAO1yG,IAAYohB,OAAO,EAAGphB,GAEnDsyG,EAAqB,CACvB,IAAMK,EAAiBF,EAAQrxF,OAAO,EAAGkxF,GACzCG,EAAUA,EAAQrxF,OAAOkxF,GACzB,IAAMM,EAAsBC,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAW5iB,SAAU,OAAQJ,MAAO,OAAQG,WAAY,WAAY0zG,EAApE,IAA8EG,GAC1G,OAAQhzG,MAAMtD,KAAKs1B,QAAQ1jB,IApBR,IAoBqB4kG,EAAAr2G,EAAAC,cAAAo2G,EAAAr2G,EAAAu2G,SAAA,KAAGH,EAAmBC,EAAAr2G,EAAAC,cAAA,SAAOiG,MAAO,CAAE3D,SAAU,QAAU0zG,GAA1D,IAA2EI,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAW5iB,SAAU,CAAC,EAAG,IAAK8K,IAEjJ,OAAQlK,MAAMtD,KAAKs1B,QAAQ1jB,IAtBR,IAsBqB4kG,EAAAr2G,EAAAC,cAAAo2G,EAAAr2G,EAAAu2G,SAAA,KAAGP,EAAQK,EAAAr2G,EAAAC,cAAA,iBAASg2G,GAA2B,MAAV5oG,EAAgB,IAAM,KAAMA,EAAQgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAW5iB,SAAU,CAAC,EAAG,IAAK8K,GAAqB,eAK3JvK,0usBC3yRT0zG,6MAEJnvG,MAAQ,CACNovG,WAAW,+EAGAA,GACX52G,KAAKgI,SAAS,CACZ4uG,+CAIK,IAAAzzG,EAAAnD,KACDQ,EAAaR,KAAKC,MAAMO,WACxBD,EAAWP,KAAKC,MAAMM,WAAaC,EACnCF,EAAgBN,KAAKC,MAAMK,gBAAkBE,EAC7CmI,EAA4C,qBAAzB3I,KAAKC,MAAM0I,WAA4B3I,KAAKC,MAAM0I,UACrEkuG,EAA4C,qBAAzB72G,KAAKC,MAAM42G,WAA4B72G,KAAKC,MAAM42G,UAErEn3G,EAAY,CAChB6B,EAAG,EACHgE,OAAQ,EACRiJ,UAAW,EACXhN,aAAc,EACd0K,YAAa,KACb0B,SAAU,WACVsgB,UAAW,UACXxtB,gBAAiB,UAIfV,KAAKC,MAAMP,WAAaC,OAAOoE,KAAK/D,KAAKC,MAAMP,WAAWsE,QAC5DrE,OAAOoE,KAAK/D,KAAKC,MAAMP,WAAWuE,QAAQ,SAAA1C,GACxC7B,EAAU6B,GAAK4B,EAAKlD,MAAMP,UAAU6B,MAIpChB,GAAaD,GAAiBN,KAAKwH,MAAMovG,aAC3Cl3G,EAAU6F,OAAS,EACnB7F,EAAU8O,UAAY,KACtB9O,EAAUgB,gBAAkB,eAG9B,IAAM8a,EAAY,CAChBC,IAAOq7F,eACPv2G,EAAWkb,IAAOs7F,OAAS,KAC1BpuG,EAA4B,KAAhB8S,IAAOu7F,OACpBH,EAAYp7F,IAAOw7F,QAAU,KAC7Bz2G,EAAaib,IAAOvU,SAAW,KAC/B5G,EAAgBmb,IAAOy7F,YAAc,MAOvC,OAJIl3G,KAAKC,MAAMub,WAAaC,IAAOzb,KAAKC,MAAMub,YAC5CA,EAAUrO,KAAKsO,IAAOzb,KAAKC,MAAMub,YAIjCtb,EAAAC,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,GACMF,EADN,CAEE8b,UAAWA,EACX5V,QAAS5F,KAAKC,MAAMQ,YACpB02G,WAAY,SAACrwG,GAAD,OAAO3D,EAAKi0G,cAAa,IACrCC,YAAa,SAACvwG,GAAD,OAAO3D,EAAKi0G,cAAa,MAGpCp3G,KAAKC,MAAMwmB,OAASzmB,KAAKC,MAAMwmB,MAAMziB,OAAS,GAC9C9D,EAAAC,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEgJ,GAAI,CAAC,EAAG,GACRlD,GAAI,CAAC,EAAG,GACR3E,WAAY,SACZC,cAAe,OACXhB,KAAKC,MAAMq3G,kBAEfp3G,EAAAC,EAAAC,cAACkE,EAAA,EAAQoK,GAAT/O,OAAAC,OAAA,CACE6C,WAAY,EACZC,SAAU,CAAC,EAAG,GACdmG,UAAW,OACXvG,MAAO,YACPi1G,WAAY,WACRv3G,KAAKC,MAAMu3G,YAEdx3G,KAAKC,MAAMwmB,OAGZzmB,KAAKC,MAAMw3G,aAAez3G,KAAKC,MAAMw3G,YAAYzzG,OAAS,GAC1D9D,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEyqB,UAAW,MACXC,QAAShvB,KAAKC,MAAMw3G,aAEpBv3G,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEoB,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,gBAOhBtC,KAAKC,MAAM+I,iBApGQnG,aA0Gb8zG,mLCzGTe,6MAGJ30G,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,kJAIL,OACEmB,EAAAlE,EAAAC,cAACya,EAAA,EAAD,CACEnb,UAASC,OAAA2O,EAAA,EAAA3O,CAAA,CACP4B,EAAE,EACFqH,GAAG,GACA5I,KAAKC,MAAMP,YAGhB2E,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE5M,WAAY,SACZC,cAAe,UAEfqD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACEtL,KAAM,QACNF,KAAM,QACNG,MAAO,aAET+B,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE/E,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,uDAQAxE,EAAAlE,EAAAC,cAACu3G,EAAA,EAAD,CACEryG,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM23G,2BAL1B,oBA/Ce/0G,aA8DV60G,8IC/DTG,6MAGJ90G,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KACD83G,EAAiB93G,KAAKC,MAAM83G,eAC5Bz3G,EAAkD,oBAA3BN,KAAKC,MAAMQ,YACxC,OACE4D,EAAAlE,EAAAC,cAAC43G,EAAA,EAADr4G,OAAAC,OAAA,CACEF,UAAW,CACToO,GAAG,EACHhO,MAAM,EACNC,GAAG,CAAC,EAAE,GACNF,GAAG,CAAC,EAAE,SAERuF,GAAIpF,KAAKC,MAAMg4G,QACXj4G,KAAKC,MAAMi4G,SARjB,CASE18F,UAAWxb,KAAKC,MAAM+Q,MACtB1Q,cAAeA,EACfG,YAAaH,EAAgB,SAAAwG,GAAC,OAAI3D,EAAKlD,MAAMQ,YAAY0C,EAAKlD,QAAS,OAEvEoE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEtD,cAAe,MACfoE,GAAIpF,KAAKC,MAAMk4G,OAGbn4G,KAAKC,MAAMm4G,KAAKtyG,IAAI,SAACuyG,EAAQC,GAC3B,IAAMC,EAAmBF,EAAQE,mBAAoB,EACrD,OAAwB,IAApBF,EAAQG,UAAyC,IAAnBH,EAAQ1zG,QAAoBxB,EAAKlD,MAAM+B,WAAiC,IAAnBq2G,EAAQ1zG,SAAoB4zG,IAAqBp1G,EAAKlD,MAAM+B,SAC1I,KAGPqC,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEiH,IAAG,OAAAF,OAAS2xG,IACRD,EAAQp4G,OAEZoE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZC,cAAe,OACXq3G,EAAQh6F,aAGVg6F,EAAQ9xD,OAAOzgD,IAAI,SAACsZ,EAAUq5F,GAC5B,IAAKr5F,IAAmC,IAAtBA,EAAUo5F,UAA2C,IAArBp5F,EAAUza,QAAoBxB,EAAKlD,MAAM+B,SACzF,OAAO,KAET,IAAM+tB,EAAkB3Q,EAAU24F,eAE9BtoF,EAAarQ,EAAUnf,MAO3B,OAJImf,EAAUs5F,WAAa/4G,OAAOoE,KAAKqb,EAAUs5F,WAAW10G,OAAO,IACjEyrB,EAAatsB,EAAKJ,cAAcm1B,2BAA2BzI,EAAWrQ,EAAUs5F,UAAUv1G,EAAKlD,QAI/FoE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD3E,OAAAC,OAAA,CACEmC,OAAQ,OACRf,cAAe,SACfD,WAAY,aACZE,eAAgB,UACZme,EAAUf,YALhB,CAMEhY,MAAO+Y,EAAU/Y,OAAS,CACxBE,SAAS,UAEXzG,MAAOu4G,EAAQ9xD,OAAOviD,OAAO,EAAI,OAAS,EAC1CoB,GAAE,SAAAuB,OAAW2xG,EAAX,KAAA3xG,OAAuB8xG,EAAvB,KAAA9xG,OAAqCyY,EAAUjd,MACjD0E,IAAG,SAAAF,OAAW2xG,EAAX,KAAA3xG,OAAuB8xG,EAAvB,KAAA9xG,OAAqCyY,EAAUjd,QAGhD4tB,EACE1rB,EAAAlE,EAAAC,cAAC2vB,EAADpwB,OAAAC,OAAA,GACMuD,EAAKlD,MACLwvB,IAGNprB,EAAAlE,EAAAC,cAAC03G,EAADn4G,OAAAC,OAAA,GACMuD,EAAKlD,MADX,CAEEmf,UAAWA,EACXu5F,SAAUN,EAAQp4G,MAClB4Z,SAAQ,SAAAlT,OAAW2xG,EAAX,KAAA3xG,OAAuB8xG,EAAvB,KAAA9xG,OAAqCyY,EAAUjd,yBAlGlEU,aAqHRg1G,8weCzHfrzG,EAAAC,QAAA,CAAkBqyG,eAAA,sCAAAE,OAAA,8BAAAE,YAAA,mCAAAD,QAAA,+BAAA/vG,SAAA,0iVCeZ0xG,6MAEJpxG,MAAQ,CACNqxG,eAAe,KACfC,iBAAiB,GACjBC,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBzvG,cAActE,EAAKjF,MAAMi5G,YAkF3Bn2G,cAAgB,OA+ChBo2G,0DAAsB,SAAA7oG,EAAOxJ,EAAEob,EAASk3F,GAAlB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAv5G,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEdyoG,EAFc,eAAAhmG,EAAA1T,OAAAg6G,EAAA,EAAAh6G,CAAA+5G,EAAAv5G,EAAAkQ,KAEF,SAAA+P,EAAOrP,GAAP,OAAA2oG,EAAAv5G,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,OAEhBwT,OAAOw1F,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,QAAAnzG,OAAUzB,EAAKsC,MAAMgC,cAArB,wBAChBuwG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGXh1G,EAAKjF,MAAMk6G,oBAVK,wBAAA75F,EAAAvO,SAAAqO,EAAApgB,SAFE,gBAAA4T,GAAA,OAAAP,EAAApB,MAAAjS,KAAAkS,YAAA,GAedonG,EAfc,eAAA34F,EAAAhhB,OAAAg6G,EAAA,EAAAh6G,CAAA+5G,EAAAv5G,EAAAkQ,KAeJ,SAAAwQ,EAAO/Z,GAAP,OAAA4yG,EAAAv5G,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cAAAoQ,EAAAK,OAAA,UACP,GADO,wBAAAL,EAAAjP,SAAA8O,EAAA7gB,SAfI,gBAAA4yB,GAAA,OAAAjS,EAAA1O,MAAAjS,KAAAkS,YAAA,GAmBdqnG,EAAkBnsG,IAAcgtG,SAASp4E,UAAU9f,GACnDs3F,EAAaD,GAAmBA,EAAgBc,cAAgBd,EAAgBc,cAAcn1G,EAAKjF,MAAMmN,IAAcgsG,EAAUC,EAAUC,GAAW,KApBxI5oG,EAAAyhB,GAuBZjQ,EAvBYxR,EAAAE,KAAA,qBAyBsB,oBAA3B2oG,EAAgBe,SACnBb,EAAe95G,OAAOC,OAAO,GAAGsF,EAAKsC,OAC3C+xG,EAAgBe,OAAOd,EAAW,KAAKC,EAAarsG,MA3BtCsD,EAAA2Q,OAAA,sBAiChBjU,IAAc8/C,UAAUC,OAAOhI,OAAOrzB,QAjCtB,CAAAphB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkCZ1L,EAAKnC,cAAc2a,yBAAyB,CAChDN,cAAe,MACfG,YAAa,kBACbF,WAAY6E,IArCI,QAwClBhd,EAAKq1G,WAAWzzG,GAxCE4J,EAAAE,KAAA,iBA0ClB1L,EAAKq1G,WAAWzzG,GA1CE,yBAAA4J,EAAAqB,SAAAzB,EAAAtQ,qEA8CtBw6G,OAAS,SAAC1zG,GACRA,EAAEuH,iBAEEnJ,EAAKsC,MAAMwxG,iBACb9zG,EAAK8C,SAAS,CACZgxG,iBAAiB,OAEV9zG,EAAKsC,MAAMqxG,eACpB3zG,EAAK8C,SAAS,CACZ6wG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,OAEV9zG,EAAKsC,MAAMgC,cACpBtE,EAAK8C,SAAS,CACZ6wG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBxvG,cAActE,EAAKjF,MAAMi5G,WAG3Bh0G,EAAKu1G,gBAITA,WAAa,WACXv1G,EAAK8C,SAAS,CACZ6wG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBzvG,cAActE,EAAKjF,MAAMi5G,WAG3Bh0G,EAAKw1G,wBAGPH,WAAa,SAACzzG,GACZ5B,EAAKu1G,aACAv1G,EAAKjF,MAAM06G,YAA+C,oBAA1Bz1G,EAAKjF,MAAMs6G,YAC9Cr1G,EAAKjF,MAAMs6G,gBAIfK,gBAAkB,SAAC14F,GACjB,IAAK9U,IAAcgtG,SAASp4E,UAAU9f,GACpC,OAAO,EAET,IAAI24F,EAAeztG,IAAcgtG,SAASp4E,UAAU9f,GACpD,GAAoC,oBAAzB24F,EAAaC,QAAuB,CAC7C,IAAMC,EAAkBF,EAAaC,QAAQ51G,EAAKsC,OAC9CuzG,GAAmBp7G,OAAOoE,KAAKg3G,GAAiB/2G,SAClD62G,EAAel7G,OAAOC,OAAOi7G,EAAaE,IAG9C,OAAOF,KAGTG,0BAA4B,SAACnC,GAC3B,IAAMoC,EAAgB/1G,EAAKsC,MAAMsxG,iBAAiBD,GAClD,OAAIoC,GAAiBA,EAAc3sD,gBAC1B2sD,EAAc3sD,gBAEhB,QAGT4sD,6BAA+B,SAACrC,EAAervG,GAC7C,IAAMyvG,EAAqB,GAE3Bt5G,OAAOoE,KAAKqJ,IAAcgtG,SAASp4E,WAAWl8B,IAAI,SAACoc,EAASxV,GAC1D,IAAMmuG,EAAeztG,IAAcgtG,SAASp4E,UAAU9f,GAChDi5F,GAAmF,IAA3DN,EAAaO,iBAAiBp/F,QAAQ68F,GAC9DwC,EAAuB7xG,GAAyE,IAAzDqxG,EAAaS,gBAAgBt/F,QAAQxS,IAA6F,IAApEqxG,EAAaS,gBAAgBt/F,QAAQ9W,EAAKjF,MAAMuJ,iBAA4F,IAAnEqxG,EAAaS,gBAAgBt/F,QAAQ5O,IAAc6uB,WAIvO,OAHI4+E,EAAa/oF,SAAWqpF,GAAyBE,GACnDpC,EAAmB9rG,KAAK+U,GAEnBA,IAGT,IAAMq5F,EAAyBr2G,EAAK81G,0BAA0BnC,GAE9D,OAAI0C,GAA0Br2G,EAAKsC,MAAMsxG,iBAAiBD,GAAgB2C,kBAA2E,IAAxDvC,EAAmBj9F,QAAQu/F,GAC/G,CAACA,GAGHtC,KAGTwC,eAAiB,SAAC30G,EAAEkyG,GAKlB,GAJIlyG,GACFA,EAAEuH,kBAGC2qG,IAAqB5rG,IAAcgtG,SAASp4E,UAAUg3E,GACzD,OAAO9zG,EAAK8C,SAAS,CACnBgxG,iBAAiB,OAIrB,IAAM6B,EAAeztG,IAAcgtG,SAASp4E,UAAUg3E,GACtD,GAAI6B,EAAa,CAEf,GAAI31G,EAAKsC,MAAMgC,cAEb,YADAtE,EAAKi0G,oBAAoBryG,EAAEkyG,EAAiB9zG,EAAKsC,OAInD,IAAMk0G,GAAkF,IAAnEb,EAAaS,gBAAgBt/F,QAAQ5O,IAAc6uB,WAClE0/E,GAAqF,IAApEd,EAAaS,gBAAgBt/F,QAAQ9W,EAAKjF,MAAMuJ,eAGjEmG,EAAkB,GACxB,KAAM+rG,GAAgBC,IAAoBA,GASxC,YADAz2G,EAAKi0G,oBAAoBryG,EAAEkyG,EAAiB9zG,EAAKsC,OAP7Ck0G,GACF/rG,EAAgBxC,KAAKC,IAAc6uB,WAEjC0/E,GACFhsG,EAAgBxC,KAAKjI,EAAKjF,MAAMuJ,eAOpCtE,EAAK8C,SAAS,CACZ2H,kBACAqpG,yBAKN4C,aAAe,SAAC90G,EAAE+xG,GAKhB,GAJI/xG,GACFA,EAAEuH,kBAGsE,IAAtE1O,OAAOoE,KAAKmB,EAAKsC,MAAMsxG,kBAAkB98F,QAAQ68F,GAAuB,CAC1E,IAAMI,EAAqB/zG,EAAKg2G,6BAA6BrC,EAAe3zG,EAAKsC,MAAMgC,eAGvFtE,EAAKnC,cAAc2a,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,gBACbF,WAAYw7F,IAGd3zG,EAAK8C,SAAS,CACZixG,qBACAJ,uBAKNgD,YAAc,SAAC/0G,EAAE0C,GACX1C,GACFA,EAAEuH,iBAIJnJ,EAAKnC,cAAc2a,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,eACbF,WAAY7T,IAGdtE,EAAK8C,SAAS,CAAEwB,iBAAhB7J,OAAAg6G,EAAA,EAAAh6G,CAAA+5G,EAAAv5G,EAAAkQ,KAAiC,SAAAiD,IAAA,OAAAomG,EAAAv5G,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,WAC3B1L,EAAKsC,MAAMwxG,iBADgB,CAAAxlG,EAAA5C,KAAA,eAAA4C,EAAA6N,OAAA,SAEtBnc,EAAKi0G,oBAAoBryG,EAAE5B,EAAKsC,MAAMwxG,iBAAiB9zG,EAAKsC,QAFtC,OAI7BtC,EAAK42G,sBAJwB,wBAAAtoG,EAAAzB,SAAAuB,EAAAtT,aASnC+7G,oBAAsB,SAAAhD,GAGhB3rG,IAAc8/C,UAAUC,OAAOhI,OAAOrzB,SAAWinF,GACnD7zG,EAAKnC,cAAc2a,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,iBACbF,WAAY07F,EAAgBruG,QAIhCxF,EAAK8C,SAAS,CACZ+wG,uBAIJiD,sBAAwB,WACtB,IAAMC,EAAqB,GAwB3B,OAvBA/2G,EAAKsC,MAAMyxG,mBAAmBh1G,QAAQ,SAACie,EAASxV,GAC9C,IAAMmuG,EAAe31G,EAAK01G,gBAAgB14F,GACpCi5F,GAA8F,IAAtEN,EAAaO,iBAAiBp/F,QAAQ9W,EAAKsC,MAAMqxG,gBACzEwC,EAAuBn2G,EAAKsC,MAAMgC,eAAoF,IAApEqxG,EAAaS,gBAAgBt/F,QAAQ9W,EAAKsC,MAAMgC,gBAA6F,IAApEqxG,EAAaS,gBAAgBt/F,QAAQ9W,EAAKjF,MAAMuJ,iBAA4F,IAAnEqxG,EAAaS,gBAAgBt/F,QAAQ5O,IAAc6uB,WAGxP4+E,EAAa/oF,SAAYqpF,GAA0BE,GAKxDR,EAAaqB,mBAAmBj4G,QAAQ,SAACk4G,EAAY7sD,GAC9C2sD,EAAmBE,KACtBF,EAAmBE,GAAe,CAChCn6E,UAAU,GACVx0B,MAAMJ,IAAcgvG,UAAUD,GAC9BzxG,MAAMyxG,IAGVF,EAAmBE,GAAan6E,UAAU70B,KAAK+U,OAI5CviB,OAAOkR,OAAOorG,+MAjYhBj8G,KAAKwH,MAAMgC,wDACP,UAIT7J,OAAOoE,KAAKqJ,IAAcgtG,SAASp4E,WAAW/9B,QAAQ,SAACie,EAASxV,GAE9D,IAAMmuG,EAAeztG,IAAcgtG,SAASp4E,UAAU9f,GACtD,GAAI24F,EAAa/oF,SAAW+oF,EAAawB,mBAAwF,IAApExB,EAAaS,gBAAgBt/F,QAAQ7Y,EAAKqE,MAAMgC,iBAA4F,IAAnEqxG,EAAaS,gBAAgBt/F,QAAQ5O,IAAc6uB,YAAmB,CAE1M,IAAMogF,EAAkBxB,EAAawB,gBAErC18G,OAAOoE,KAAKs4G,GAAiBp4G,QAAQ,SAACq1B,EAAIg2B,GAIxC,OAFqBh2B,EAAI6xB,MAAM,KAAKj3C,MAAMpH,eAGxC,IAAK,KACH,IAAMwvG,EAAQ,UAAA31G,OAAaub,EAAb,KAAAvb,OAAyB2oD,EAAzB,KAAA3oD,OAA8BxD,EAAKqE,MAAMgC,eAEvD,IAAKmkB,SAASC,eAAe0uF,GAAU,CACrC,IAAMz4B,EAASl2D,SAASvtB,cAAc,UAChCm8G,EAAuBF,EAAgB/iF,GACvCvxB,EAAWw0G,GAAwBA,EAAqBx0G,SAAWw0G,EAAqBx0G,SAAW,KACnGy0G,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAElGA,GAA8B,oBAAZA,GACpBA,EAAQr5G,EAAKqE,MAAM4F,IAAcytG,GAG/B9yG,GAAgC,oBAAbA,IACjB87E,EAAOE,WACTF,EAAOG,mBAAqB,WACC,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC5CF,EAAOG,mBAAqB,KAC5Bj8E,MAIJ87E,EAAOI,OAASl8E,GAIpB87E,EAAOz+E,GAAKk3G,EACZz4B,EAAOroE,UAAP,UAAA7U,OAA6Bub,GAC7B2hE,EAAO/hF,IAAMw3B,EACbuqD,EAAOyH,OAAQ,EAEXixB,GAAwBA,EAAqBE,cAC/CF,EAAqBE,cAAct4B,YAAYN,GAE/Cl2D,SAAS+uF,KAAKv4B,YAAYN,GAGhC,MACA,IAAK,MACH,IAAM84B,EAAY,cAAAh2G,OAAiBub,EAAjB,KAAAvb,OAA6B2oD,GAE/C,IAAK3hC,SAASC,eAAe+uF,GAAc,CACzC,IAAMt2G,EAAQsnB,SAASvtB,cAAc,QAErCiG,EAAMjB,GAAKu3G,EACXt2G,EAAMsf,IAAM,aACZtf,EAAMuf,KAAO0T,EAEb3L,SAAS+uF,KAAKv4B,YAAY99E,gJAclCrG,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,sDAI1B,IAAAoK,EAAArK,KACd84G,EAAmB,IACI94G,KAAKC,MAAM64G,kBAAoB94G,KAAKC,MAAM64G,iBAAiB90G,OAAShE,KAAKC,MAAM64G,iBAAmBn5G,OAAOoE,KAAKqJ,IAAcgtG,SAASjhE,UAE7Il1C,QAAQ,SAAAs3B,GAC3B,IAAM09E,EAAqB5uG,EAAK6wG,6BAA6B3/E,EAAOlxB,EAAK7C,MAAMgC,eAC/E,GAAIyvG,GAAsBA,EAAmBj1G,OAAO,EAAE,CACpD,IAAM44G,EAAaxvG,IAAcgtG,SAASjhE,QAAQ5d,GAClDqhF,EAAW3D,mBAAqBA,EAChCH,EAAiBv9E,GAAUqhF,KAI/B58G,KAAKgI,SAAS,CACZ8wG,kEAKF94G,KAAKkD,YAELlD,KAAK68G,uBACL78G,KAAK87G,0KAIL97G,KAAKkD,iMAGkByE,mEAEvB3H,KAAKkD,YAEAlD,KAAKC,MAAMi5G,UAAYvxG,EAAUuxG,WAAal5G,KAAKC,MAAMi5G,UAC5Dl5G,KAAK67G,YAAY,KAAK77G,KAAKC,MAAMi5G,8IA4Q5B,IAAA4D,EAAA98G,KAEHymB,EAAQ,KACqB,OAA7BzmB,KAAKwH,MAAMgC,cACbid,EAAQ,aAERA,EAAQ,OAAOzmB,KAAKwH,MAAMgC,cACQ,OAA9BxJ,KAAKwH,MAAMqxG,iBACbpyF,GAAS,MAAMzmB,KAAKwH,MAAMsxG,iBAAiB94G,KAAKwH,MAAMqxG,gBAAgB54G,MAAM88G,UAIhF,IAAIptG,EAAkB3P,KAAKC,MAAM0P,iBAAmBhQ,OAAOoE,KAAK/D,KAAKC,MAAM0P,iBAAiB3L,OAAO,EAA7E,CAAkFoJ,IAAc6uB,WAAhGt1B,OAAAhH,OAAAq9G,EAAA,EAAAr9G,CAA6GA,OAAOoE,KAAK/D,KAAKC,MAAM0P,mBAAoB,CAACvC,IAAc6uB,WAGzLj8B,KAAKC,MAAMg9G,gBACbttG,EAAkB,GAClBhQ,OAAOoE,KAAKqJ,IAAcgtG,SAASp4E,WAAW/9B,QAAS,SAAAie,GACrD,IAAM24F,EAAeztG,IAAcgtG,SAASp4E,UAAU9f,GAClD24F,EAAaS,iBACfT,EAAaS,gBAAgBr3G,QAAQ,SAAA+M,GAC9BrB,EAAgBukB,SAASljB,IAC5BrB,EAAgBxC,KAAK6D,QAO/B,IAAMksG,EAAiB,SAAAj9G,GAAK,OAC1BoE,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAKxG,SAAW21G,EAAK78G,MAAM06G,WAAa,OAAS,CAAC,OAAO,SAE1B,OAA7BmC,EAAKt1G,MAAMgC,cACTnF,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAKG,GAAI,GACPzJ,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACEG,GAAI,CAAC,EAAE,GACPrL,WAAY,EACZoG,UAAW,SACXnG,SAAU,CAAC,EAAGo6G,EAAK78G,MAAM06G,WAAa,EAAI,IAJ5C,mCAQAt2G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACEG,GAAI,EACJzH,MAAO,CACL82G,SAAS,QAEXp8G,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAGzB2O,EAAgB7J,IAAI,SAACkL,EAAMtE,GACzB,IAAM0wG,EAAWN,EAAK/5G,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,UAAzE,iBAAAtO,OAAsGqK,EAAtG,QACjB,OACE3M,EAAAlE,EAAAC,cAACi9G,EAAA,EAAD,CACEN,QAAS/rG,EACTosG,SAAUA,EACVv2G,IAAG,SAAAF,OAAWqK,GACdhP,SAAU86G,EAAK78G,MAAM+B,SACrBvB,YAAc,SAAAqG,GAAOg2G,EAAKjB,YAAY/0G,EAAEkK,IACxC/O,WAAa66G,EAAK78G,MAAM+B,SAAW,CAACD,OAAO,QAAU,CAACR,EAAE,CAAC,EAAE,GAAGQ,OAAO,QACrEuD,YAAew3G,EAAK78G,MAAM+B,SAItB,KAJiC,CACnCqE,MAAM,CACJoZ,KAAO,oBASW,OAA9Bq9F,EAAKt1G,MAAMqxG,eACbx0G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,KACEtJ,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAMG,GAAI,EAAG9M,cAAe,SAAUC,eAAgB,SAAUF,WAAY,WAEvE+7G,EAAK78G,MAAM06G,YACVt2G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAO5L,OAAQ,EAAG+L,GAAI,EAAGhM,IAAG,iBAAA6E,OAAmBm2G,EAAKt1G,MAAMgC,cAA9B,UAG9BszG,EAAK78G,MAAM+I,SACT8zG,EAAK78G,MAAM+I,SACX8zG,EAAK78G,MAAMq9G,QACXj5G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAY,IAAKC,SAAU,CAAC,EAAGo6G,EAAK78G,MAAM06G,WAAa,EAAI,GAAI/xG,GAAI,EAAGE,wBAAyB,CAACC,OAAO+zG,EAAK78G,MAAMq9G,WAE7Ij5G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAY,IAAKC,SAAU,CAAC,EAAGo6G,EAAK78G,MAAM06G,WAAa,EAAI,IAEjFmC,EAAK78G,MAAM06G,YAAcmC,EAAK78G,MAAMi5G,SAAav5G,OAAOoE,KAAK+4G,EAAKt1G,MAAMsxG,kBAAkB90G,OAAO,EAAhD,6BAAA2C,OAAiFm2G,EAAK78G,MAAMi5G,SAA5F,gFAAAvyG,OAAqLm2G,EAAK78G,MAAMi5G,SAAhM,oBAAjD,4BAAAvyG,OAA4Sm2G,EAAKt1G,MAAMgC,cAAvT,OAMXnF,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAMG,GAAIgvG,EAAK78G,MAAM06G,WAAa,EAAI,EAAG35G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE5GtB,OAAOoE,KAAK+4G,EAAKt1G,MAAMsxG,kBAAkBhzG,IAAI,SAACy1B,EAAO7uB,GACnD,IAAMkwG,EAAaE,EAAKt1G,MAAMsxG,iBAAiBv9E,GAC3Ct5B,EAAa26G,EAAW38G,OAAS28G,EAAW38G,MAAMgC,WAAa26G,EAAW38G,MAAMgC,WAAa,GAC3Fs7G,EAAqBT,EAAK78G,MAAM+B,SAAW,CAACD,OAAO,QAAU,CAACA,OAAO,QAG3E,OAFAE,EAAatC,OAAOC,OAAOqC,EAAWs7G,GAGpCl5G,EAAAlE,EAAAC,cAACi9G,EAAA,EAAD19G,OAAAC,OAAA,GACMg9G,EAAW38G,MADjB,CAEEqF,YAAa,CACXC,OAAO,GAETsB,IAAG,UAAAF,OAAY40B,GACft5B,WAAaA,EACbD,SAAW86G,EAAK78G,MAAM+B,SACtBvB,YAAc,SAAAqG,GAAC,OAAIg2G,EAAKlB,aAAa90G,EAAEy0B,WAOnB,WAA9BuhF,EAAKt1G,MAAMqxG,eACTx0G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAK/E,GAAI,EAAGkF,GAAI,GACdzJ,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAY,EAAGC,SAAU,EAAG5B,GAAI,GACzDuD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAK7N,MAAO,QACRuE,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAMG,GAAIgvG,EAAK78G,MAAM06G,WAAa,EAAI,EAAG35G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9G67G,EAAKt1G,MAAMyxG,mBAAmBj1G,OAAS,EAEnCK,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,KACEtJ,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAY,EAAGC,SAAU,EAAGoL,GAAI,CAAC,EAAE,IAA9D,2CAIEgvG,EAAKt1G,MAAMyxG,mBAAmBnzG,IAAI,SAACoc,EAASxV,GAC1C,IAAMmuG,EAAeiC,EAAKlC,gBAAgB14F,GAC1C,OACE7d,EAAAlE,EAAAC,cAACi9G,EAAA,EAAD19G,OAAAC,OAAA,CAAaiH,IAAG,oBAAAF,OAAsBub,IAAgB24F,EAAtD,CAAoEp6G,YAAc,SAAAqG,GAAOg2G,EAAK3D,oBAAoBryG,EAAEob,EAAS46F,EAAKt1G,cAO5InD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAY,EAAGC,SAAU,EAAG5B,GAAI,GAA3D,wEAUduD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7N,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,eAGb67G,EAAKt1G,MAAMwxG,kBACZ30G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACEG,GAAI,EACJhO,MAAO,EACPwG,SAAUw2G,EAAK78G,MAAM06G,WAAa,OAAS,YAGxCmC,EAAK78G,MAAM06G,YACVt2G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM3M,cAAe,SAAUC,eAAgB,SAAUF,WAAY,UACnEsD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAO5L,OAAQ,EAAG+L,GAAI,EAAGhM,IAAG,iBAAA6E,OAAmBm2G,EAAKt1G,MAAMgC,cAA9B,WAGlCnF,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAaq6G,EAAK78G,MAAM06G,WAAa,EAAI,EAAIj4G,SAAU,EAAGoL,GAAI,GAAzF,wBAGAzJ,EAAAlE,EAAAC,cAACo9G,EAAA,EAAD,CACEnvF,GAAI,UACJ3tB,gBAAiB,UACjBgK,MAAOoyG,EAAKt1G,MAAMuxG,gBAClB0E,YAAa,sBACbphG,SAAUygG,EAAKf,oBACf5hG,QAAS2iG,EAAKd,wBACd11G,SAAWw2G,EAAK78G,MAAM06G,aAAemC,EAAK78G,MAAM+B,SAAW,OAAS,OACpE07G,iBAAmB,SAACC,GAAD,MAAgB,wCACnCniG,UAAoC,UAAzBshG,EAAK78G,MAAMyP,UAAwB+L,IAAOkT,OAASlT,IAAOmT,cAI3EvqB,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM3M,cAAe,SAAUC,eAAgB,SAAUF,WAAY,SAAUmtB,UAAW,UAErF4uF,EAAKt1G,MAAMwxG,mBACqB,OAA/B8D,EAAKt1G,MAAMuxG,gBACT10G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAK7N,MAAO,QACVuE,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAY,EAAGC,SAAU,EAAGoL,GAAI,CAAC,EAAE,IAA9D,2CAGAzJ,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAMG,GAAIgvG,EAAK78G,MAAM06G,WAAa,EAAI,EAAG35G,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9G67G,EAAKt1G,MAAMuxG,gBAAgB/2E,UAAUh+B,OAAS,EAC5C84G,EAAKt1G,MAAMuxG,gBAAgB/2E,UAAUl8B,IAAI,SAACoc,EAASxV,GACjD,IAAMmuG,EAAeiC,EAAKlC,gBAAgB14F,GAC1C,OACE7d,EAAAlE,EAAAC,cAACi9G,EAAA,EAAD19G,OAAAC,OAAA,CAAaiH,IAAG,oBAAAF,OAAsBub,IAAgB24F,EAAtD,CAAoEp6G,YAAc,SAAAqG,GAAMg2G,EAAKrB,eAAe30G,EAAEob,SAIlH7d,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAY,EAAGC,SAAU,EAAGoL,GAAI,GAA3D,sEAQNzJ,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM9E,UAAW,SAAUpG,WAAY,EAAGC,SAAU,EAAGoL,GAAI,GAA3D,wDA8BZgvG,EAAK78G,MAAM06G,YAA2C,OAA7BmC,EAAKt1G,MAAMgC,gBAAoD,OAAxBszG,EAAK78G,MAAMi5G,UAAmD,OAA9B4D,EAAKt1G,MAAMqxG,iBACzGx0G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE5M,WAAY,SACZE,eAAgB,UAEhBoD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7M,GAAI,EACJF,GAAI,CAAC,EAAG,GACRyB,KAAM,SACNb,aAAc,EACdyF,UAAW,OACXrB,QAAU,SAAAkB,GAAC,OAAIg2G,EAAKtC,OAAO1zG,KAN7B,cAgBV,OAAI9G,KAAKC,MAAM06G,WAEXt2G,EAAAlE,EAAAC,cAAC88G,EACKl9G,KAAKC,OAMboE,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAOiwG,OAAQ59G,KAAKC,MAAM29G,QACxBv5G,EAAAlE,EAAAC,cAACy9G,EAAA,EAAD,CAAWC,UAAW99G,KAAKu6G,YACzBl2G,EAAAlE,EAAAC,cAACy9G,EAAA,EAAUE,OAAX,CAAkBt3F,MAAOA,IAEzBpiB,EAAAlE,EAAAC,cAACy9G,EAAA,EAAUG,KAAX,KACE35G,EAAAlE,EAAAC,cAAC88G,EAAD,OAEF74G,EAAAlE,EAAAC,cAACy9G,EAAA,EAAUI,OAAX,KACE55G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CAAM5N,GAAI,CAAC,EAAE,GAAIiB,cAAe,CAAC,SAAU,OAAQlB,MAAO,EAAGmB,eAAgB,UAC3EoD,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7M,GAAI,EACJF,GAAI,CAAC,EAAG,GACRY,aAAc,EACdyF,UAAW,OACXrB,QAAU,SAAAkB,GAAC,OAAIg2G,EAAKvC,WAAWzzG,IAC/BzE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UANxC,SAW+B,OAA7BhC,KAAKwH,MAAMgC,gBAAmD,OAAxBxJ,KAAKC,MAAMi5G,UAAmD,OAA9Bl5G,KAAKwH,MAAMqxG,iBAC/Ex0G,EAAAlE,EAAAC,cAACuN,EAAA,EAAD,CACE7M,GAAI,EACJF,GAAI,CAAC,EAAG,GACRY,aAAc,EACdoE,QAAU,SAAAkB,GAAC,OAAIg2G,EAAKtC,OAAO1zG,IAC3B0U,UAAWC,IAAOgT,eAClBpsB,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UANxC,sBAtrBKk8G,IAAMr7G,WA0sBd+1G,gHCttBTuF,mLACK,IAAAj5G,EAAAlF,KACP,OACEoH,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACExH,MAAO,EACPC,GAAI,CAAC,EAAE,GACPq+G,GAAI,CAAC,EAAE,GACPp9G,cAAe,OAGbhB,KAAKC,MAAMm4G,KAAKtyG,IAAI,SAACuyG,EAAQC,GAE3B,IAAMC,EAAmBF,EAAQE,mBAAoB,EACrD,OAAwB,IAApBF,EAAQG,UAAyC,IAAnBH,EAAQ1zG,QAAoBO,EAAKjF,MAAM+B,WAAiC,IAAnBq2G,EAAQ1zG,SAAoB4zG,IAAqBrzG,EAAKjF,MAAM+B,SAC1I,KAGDq2G,EAAQ5xF,OAAS4xF,EAAQ5xF,MAAMziB,OACrCoD,EAAAjH,EAAAC,cAACi+G,EAAA,EAAD1+G,OAAAC,OAAA,GACMsF,EAAKjF,MACLo4G,EAAQp4G,MAFd,CAGEq+G,KAAMjG,EAAQiG,KACd73F,MAAO4xF,EAAQ5xF,MACf5f,IAAG,cAAAF,OAAgB2xG,KAElBD,EAAQ5xF,OAGXrf,EAAAjH,EAAAC,cAACkH,EAAA,EAAD3H,OAAAC,OAAA,CAAMiH,IAAG,cAAAF,OAAgB2xG,IAAgBD,EAAQp4G,kBA5BrC4C,aAqCXs7G,8ICpCTI,6MAGJx7G,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,kJAKL,IAAIxD,EAAY,CACd6B,EAAE,EACFzB,MAAM,IACN0+G,YAAYx+G,KAAKC,MAAMu+G,aAGrB77G,EAAY,CACdD,SAAS,EACTD,WAAW,EACXoG,UAAU,SACVvG,MAAMtC,KAAKC,MAAMM,SAAW,YAAc,YAM5C,OAHAb,EAAYM,KAAK+C,cAAcg1B,kBAAkBr4B,EAAUM,KAAKC,MAAMP,WACtEiD,EAAY3C,KAAK+C,cAAcg1B,kBAAkBp1B,EAAU3C,KAAKC,MAAM0C,WAGpE0B,EAAAlE,EAAAC,cAAC43G,EAAA,EAAD,CACE13G,eAAe,EACfZ,UAAWA,EACXa,SAAUP,KAAKC,MAAMM,UAErB8D,EAAAlE,EAAAC,cAACkE,EAAA,EACK3B,EAEH3C,KAAKC,MAAM8f,WAHd,aA7C0Bld,aAuDnB07G,wCC5Df,IAAAE,EAAAv4F,EAAA,KAAAw4F,EAAAx4F,EAAA,KAAAy4F,EAAAz4F,EAAA,KAAA04F,EAAA14F,EAAA,KAAA24F,EAAA34F,EAAA,MAKM8W,EAAoB,CACxBjL,KAAK,CACH+sF,IAAI,CACF9tG,MAAM,MACNrN,SAAS,GACT+5B,SAAS,OACT1a,YAAY,SACZnW,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,uBACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,6BAEPs1G,YAAY,gOACZwH,SAAS,CACPtzF,SAAS,8JAEX0/C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACTy7G,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,wCACL0K,QAAQ,6CACR2wB,eAAe,CACb,CACExsB,MAAM,OACN8gB,SAAQ,EACRjlB,QAAQ,gDAIdW,MAAM,aACNwV,YAAY,SACZ7gB,KAAK,kBACL6O,MAAM,kBACNnE,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACTy7G,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,wCACL0K,QAAQ,6CACR2wB,eAAe,CACb,CACExsB,MAAM,OACN8gB,SAAQ,EACRjlB,QAAQ,gDAIdW,MAAM,aACNwV,YAAY,SACZ7gB,KAAK,kBACL6O,MAAM,kBACNnE,QAAQ,+CAGZyyG,IAAI,CACFtuG,MAAM,MACNrN,SAAS,GACT+5B,SAAS,OACT1a,YAAY,SACZnW,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,uBACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,6BAEPkpE,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACTy7G,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,wCACL0K,QAAQ,6CACR2wB,eAAe,CACb,CACExsB,MAAM,OACN8gB,SAAQ,EACRjlB,QAAQ,gDAIdW,MAAM,aACNwV,YAAY,SACZ7gB,KAAK,kBACL6O,MAAM,kBACNnE,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,wCACL0K,QAAQ,8CAEVW,MAAM,aACNwV,YAAY,SACZ7gB,KAAK,kBACL6O,MAAM,kBACNnE,QAAQ,gDAId0yG,KAAK,CACHC,MAAM,CACJj4E,IAAI87C,EACJ1/E,SAAS,GACTqN,MAAM,QACN0sB,SAAS,OACT1a,YAAY,SACZnW,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,qBACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,2BAEP88G,SAAS,CACPQ,gBAAgB,4KAElBp0C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNC,QAAQ,OACRhgF,QAAQ,SACR6gD,MAAM,YACN51D,QAAQ,YACRuB,SAAS,aACTyf,YAAY,aACZ9L,cAAc,YACdkL,aAAa,gBAEfnL,WAAW,CACT17B,SAAS,GACTy7G,oBAAmB,EACnB5hF,eAAe,CACb,CACExsB,MAAM,MACN8gB,SAAQ,EACRjlB,QAAQ,+CAGZ06B,IAAIm4E,EACJv9G,KAAK,sCACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,gBACL6O,MAAM,gBACNxD,MAAM,gBACNX,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,sCACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,gBACL6O,MAAM,gBACNxD,MAAM,gBACNX,QAAQ,gDAiFd8yG,OAAO,CACLC,SAAS,CACPr4E,IAAI87C,EACJ1/E,SAAS,GACTqN,MAAM,WACN0sB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,OACnBurC,aAAa,CAAC,MAAM,MAAM,QAC1B1kE,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,0BACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,gCAEPs1G,YAAY,0NACZwH,SAAS,CACPtzF,SAAS,6JACT8zF,gBAAgB,sLAElBp0C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,2CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,qBACL6O,MAAM,qBACNxD,MAAM,qBACNX,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,2CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,qBACL6O,MAAM,qBACNxD,MAAM,qBACNX,QAAQ,+CAGZgzG,QAAQ,CACNt4E,IAAI87C,EACJ1/E,SAAS,GACTqN,MAAM,UACN0sB,SAAS,SACT1a,YAAY,SACZuuD,aAAa,CAAC,MAAM,MAAM,OAC1BvrC,YAAY,CAAC,MAAM,MAAM,SACzBn5B,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,yBACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,+BAEPs1G,YAAY,0NACZwH,SAAS,CACPtzF,SAAS,6JACT8zF,gBAAgB,mLAElBp0C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,0CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,oBACL6O,MAAM,oBACNxD,MAAM,oBACNX,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,0CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,oBACL6O,MAAM,oBACNxD,MAAM,oBACNX,QAAQ,+CAGZizG,OAAO,CACLv4E,IAAI87C,EACJ1/E,SAAS,GACTqN,MAAM,SACN0sB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,MAAM,OACzBurC,aAAa,CAAC,MAAM,MAAM,SAC1B1kE,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,wBACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,8BAEPs1G,YAAY,0NACZwH,SAAS,CACPtzF,SAAS,6JACT8zF,gBAAgB,sLAElBp0C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,sCACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,mBACL6O,MAAM,mBACNxD,MAAM,mBACNX,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,sCACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,mBACL6O,MAAM,mBACNxD,MAAM,mBACNX,QAAQ,+CAGZkzG,UAAU,CACRx4E,IAAI87C,EACJ1/E,SAAS,GACT+5B,SAAS,SACT1sB,MAAM,YACNgS,YAAY,SACZgjB,YAAY,CAAC,MAAM,OACnBn5B,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,2BACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,iCAEPs1G,YAAY,0NACZwH,SAAS,CACPtzF,SAAS,6JACT8zF,gBAAgB,yLAElBp0C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,4CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,sBACL6O,MAAM,sBACNxD,MAAM,sBACNX,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,4CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,sBACL6O,MAAM,sBACNxD,MAAM,sBACNX,QAAQ,+CAGZmzG,OAAO,CACLz4E,IAAI87C,EACJ1/E,SAAS,GACTqN,MAAM,OACN0sB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,MAAM,SACzBn5B,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,sBACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,4BAEPs1G,YAAY,0NACZwH,SAAS,CACPtzF,SAAS,6JACT8zF,gBAAgB,wLAElBp0C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,uCACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,iBACL6O,MAAM,iBACNxD,MAAM,iBACNX,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,uCACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,iBACL6O,MAAM,iBACNxD,MAAM,iBACNX,QAAQ,+CAGZozG,SAAS,CACP14E,IAAI87C,EACJ1/E,SAAS,GACTqN,MAAM,WACN0sB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,OACnBn5B,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,0BACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,gCAEPs1G,YAAY,0NACZwH,SAAS,CACPtzF,SAAS,6JACT8zF,gBAAgB,sLAElBp0C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,2CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,qBACL6O,MAAM,qBACNxD,MAAM,qBACNX,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,2CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,qBACL6O,MAAM,qBACNxD,MAAM,qBACNX,QAAQ,+CAGZqzG,QAAQ,CACN34E,IAAI87C,EACJ1/E,SAAS,GACTqN,MAAM,UACN0sB,SAAS,SACT1a,YAAY,SACZgjB,YAAY,CAAC,MAAM,OACnBn5B,QAAQ,6CACRy4B,IAAI,CACFiC,IAAIw3E,EACJp7G,SAAS,GACTxB,KAAK,yBACL0K,QAAQ,8CAEVu6B,SAAS,CACPG,IAAIy3E,EACJ78G,KAAK,+BAEPs1G,YAAY,0NACZwH,SAAS,CACPtzF,SAAS,6JACT8zF,gBAAgB,2LAElBp0C,GAAG,CACD9jC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,0CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,oBACL6O,MAAM,oBACNxD,MAAM,oBACNX,QAAQ,8CAEVykE,GAAG,CACD/pC,IAAI87C,EACJ1/E,SAAS,GACTm6B,QAAQ,KACRoB,UAAU,CACRggF,MAAM,QACNl/B,MAAM,QACNm/B,QAAQ,UACR/0F,QAAQ,YACRuB,SAAS,aACT2T,cAAc,eAEhBD,WAAW,CACT17B,SAAS,GACT65B,eAAe,GACf4hF,oBAAmB,EACnB73E,IAAI83E,EACJl9G,KAAK,0CACL0K,QAAQ,8CAEVmW,YAAY,SACZ7gB,KAAK,oBACL6O,MAAM,oBACNxD,MAAM,oBACNX,QAAQ,iDAMDmwB,oPCpGAmjF,6MA5vBb34G,MAAQ,CACNuV,WAAW,CACTC,OAAO,KACPC,SAAQ,GAEV0gG,WAAW,KACXl7D,aAAY,EACZ29D,eAAc,EACdC,eAAc,EACdC,gBAAe,EACfC,gBAAe,EACfC,kBAAiB,EACjBC,oBAAoB,QAItB19G,cAAgB,OAkDhB29G,iBAAmB,SAAC55G,GAAyB,IAAvB65G,IAAuBzuG,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,KAAAA,UAAA,GAErCyrG,EAAa72G,EAAE4e,OAAOhb,MAAM1G,SAAWV,MAAMwD,EAAE4e,OAAOhb,OAASxF,EAAKnC,cAAckO,MAAMnK,EAAE4e,OAAOhb,OAASxF,EAAKnC,cAAckO,MAAM,GACrI/L,EAAKsC,MAAMm2G,aAAeA,GAC5Bz4G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B+1G,aACA8C,oBALwB,OAMvB,WACGE,GAA2D,oBAAnCz7G,EAAKjF,MAAM2gH,qBACrC17G,EAAKjF,MAAM2gH,oBAAoB17G,EAAKsC,MAAMm2G,iBAMlDkD,cAAgB,WACd,GAAuC,OAAnC37G,EAAKsC,MAAMi5G,oBACb,OAAO,EAET,IAAMK,EAAqB57G,EAAKnC,cAAckO,MAAM/L,EAAKsC,MAAMi5G,qBAAqBx9F,IAAI,KAClF06F,EAAaz4G,EAAKjF,MAAMs+B,eAAiBr5B,EAAKnC,cAAckO,MAAM/L,EAAKjF,MAAMs+B,cAAcj7B,QAAU4B,EAAKnC,cAAckO,MAAM/L,EAAKjF,MAAMs+B,cAActxB,MAAM6zG,GAAsB,KAEzL57G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B+1G,eACC,WAC6C,oBAAnCz4G,EAAKjF,MAAM2gH,qBACpB17G,EAAKjF,MAAM2gH,oBAAoB17G,EAAKsC,MAAMm2G,iBAKhDoD,uBAAyB,WACvB,OAAuC,OAAnC77G,EAAKsC,MAAMi5G,qBAGRv7G,EAAKnC,cAAckO,MAAM/L,EAAKsC,MAAMi5G,qBAAqBx9F,IAAI,QAetE+9F,uBAAyB,SAACP,GACxBv7G,EAAK8C,SAAS,CACZy4G,2BAIJQ,oBAAsB,WAAiB,IAAhBpxF,EAAgB3d,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACvB2d,IACHA,EAAS3qB,EAAKsC,MAAMm2G,YAGtB,IAAM4C,GADN1wF,EAAS3qB,EAAKnC,cAAckO,MAAM4e,IACJvsB,SAAWusB,EAAOuC,IAAI,IAAMvC,EAAOhb,GAAG3P,EAAKjF,MAAMs+B,cAC/Er5B,EAAK8C,SAAS,CACZu4G,sBAIJW,6BAAU,SAAA9gG,IAAA,IAAA+gG,EAAAC,EAAA,OAAA3wF,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,cAAA0P,EAAA1P,KAAA,EAEuB1L,EAAKm8G,wBAF5B,OAAA/gG,EAAA3M,KAiENzO,EAAK8C,SAAS,CACZw4G,kBAAiB,KA5DbW,EAAkB,SAACpwG,EAAGmM,GAE1B,IAAMC,EAAY,CAChBI,YAAa,UACbH,cAAe,eACfC,WAAYtM,EAAKA,EAAGI,OAAS,MAGzBsxC,EAAc1xC,GAAoB,YAAdA,EAAGI,OAEzB+L,IACFC,EAAUE,WAAanY,EAAKnC,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrBjM,EAAKnC,cAAc2a,yBAAyBP,GAG9CjY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B44G,iBAAkB/9D,EAClB1lC,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERC,OAAO,KACPC,SAAQ,OAI8B,oBAA/B/X,EAAKjF,MAAMkhH,iBAAkC1+D,GACtDv9C,EAAKjF,MAAMkhH,gBAAgBpwG,IAIzBqwG,EAAyB,SAACrwG,GAC9B,IAAMiM,EAASjM,EAAG6M,gBAClB1Y,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERC,eAMF9X,EAAKjF,MAAMqhH,sBAAwBp8G,EAAKnC,cAAckO,MAAM/L,EAAKjF,MAAMqhH,qBAAqBh+G,QAC9F4B,EAAKnC,cAAc6iE,wBAAwB1gE,EAAKjF,MAAMyJ,YAAYsH,MAAM9L,EAAKjF,MAAMu+E,aAAa3xE,QAAQ3H,EAAKjF,MAAMqhH,oBAAoBH,EAAgBC,GAEvJl8G,EAAKnC,cAAc8iE,YAAY3gE,EAAKjF,MAAMyJ,YAAYsH,MAAM9L,EAAKjF,MAAMu+E,aAAa3xE,QAAQs0G,EAAgBC,GAG9Gl8G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERC,OAAO,KACPC,SAAQ,IAEVujG,kBAAiB,MA9Db,wBAAAlgG,EAAAvO,SAAAqO,EAAApgB,WAuEVuhH,+BAAY,SAAA1gG,IAAA,IAAA88F,EAAA6D,EAAAz5G,EAAA4V,EAAAE,EAAAL,EAAAgjG,EAAA3nD,EAAA4oD,EAAAnkG,EAAAw6C,EAAAptD,EAAA,OAAA+lB,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,UAEJ+sG,EAAaz4G,EAAKsC,MAAMm2G,WAAaz4G,EAAKnC,cAAckO,MAAM/L,EAAKsC,MAAMm2G,YAAc,KAFnF,CAAA38F,EAAApQ,KAAA,eAAAoQ,EAAAK,OAAA,UAID,GAJC,UAO2B,oBAA1Bnc,EAAKjF,MAAMyhH,WAPZ,CAAA1gG,EAAApQ,KAAA,eAAAoQ,EAAApQ,KAAA,EAQiB1L,EAAKjF,MAAMyhH,WAAW/D,GARvC,UAAA38F,EAAArN,KAAA,CAAAqN,EAAApQ,KAAA,eAAAoQ,EAAAK,OAAA,UAUC,GAVD,cAcJmgG,EAAUt8G,EAAKnC,cAAcixD,qBAAqB2pD,EAAWz4G,EAAKjF,MAAMyJ,YAAY/F,UAIpFoE,EAAW,SAACgJ,EAAGmM,GAEnB,IAAMulC,EAAc1xC,GAAoB,YAAdA,EAAGI,OAG7B,GAAIJ,EAAG,CACL,IAAMoM,EAAY,CAChBE,WAAYtM,EAAGI,OACfiM,cAAa,eACbukG,WAAYhE,EAAWzwG,UACvBqQ,YAAarY,EAAKjF,MAAMyJ,YAAYsH,OAGlCkM,IACFC,EAAUE,WAAanY,EAAKnC,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrBjM,EAAKnC,cAAc2a,yBAAyBP,GAIhDjY,EAAK8C,SAAS,CACZy6C,cACA1lC,WAAY,CACVC,OAAO,KACPC,SAAQ,KAIRwlC,IAEFv9C,EAAKw7G,iBAAiB,CACpBh7F,OAAO,CACLhb,MAAM,KAER,GACFxF,EAAK8C,SAAS,CACZq4G,eAAc,IAGmB,oBAAxBn7G,EAAKjF,MAAM8H,UACpB7C,EAAKjF,MAAM8H,SAASgJ,EAAGywG,EAAQ3jG,KAK/BF,EAAkB,SAAC5M,GACvB,IAAMiM,EAASjM,EAAG6M,gBAClB1Y,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERC,eAKFa,EAAS,KAGTL,EAAetY,EAAKjF,MAAMu+E,aAAar8E,KA/EjC6e,EAAApQ,KAAA,GAgFqB1L,EAAKm8G,uBAAsB,GAhFhD,WAgFJb,EAhFIx/F,EAAArN,OAkFYzO,EAAKjF,MAAMmgH,eAAiBl7G,EAAKsC,MAAM44G,gBAAkBI,GAlFrE,CAAAx/F,EAAApQ,KAAA,gBAAAoQ,EAAApQ,KAAA,GAoFuB1L,EAAKnC,cAAc89D,WAAW37D,EAAKjF,MAAMyJ,YAAYsH,MAAO9L,EAAKjF,MAAM4P,QAAS2N,GApFvG,SAoFFq7C,EApFE73C,EAAArN,QAuFNkK,EAAS3Y,EAAKjF,MAAM2hH,2BAA2BJ,EAAQ3oD,IAvFjD73C,EAAApQ,KAAA,qBA0FJ1L,EAAKjF,MAAM4hH,2BA1FP,CAAA7gG,EAAApQ,KAAA,gBAAAoQ,EAAApQ,KAAA,GA2FS1L,EAAKjF,MAAM4hH,2BAA2BL,EAAQt8G,EAAKsC,MAAMi5G,qBA3FlE,QA2FN5iG,EA3FMmD,EAAArN,KAAAqN,EAAApQ,KAAA,iBA6FNiN,EAAS3Y,EAAKjF,MAAM6d,qBAAqB0jG,EAAQt8G,EAAKsC,MAAMi5G,qBA7FtD,QAiGN5iG,GAEAP,GAFOmkG,EAIL5jG,GAFFP,WACAw6C,EAHO2pD,EAGP3pD,aAGIptD,EAAQmT,EAAOnT,OAAS,KAC9B8S,EAAeK,EAAOL,cAAgBtY,EAAKjF,MAAMu+E,aAAar8E,KAI9D+C,EAAKjF,MAAMie,0BAA0BV,EAAcF,EAAYw6C,EAAcptD,EAAO3C,EAAU4V,GAE9FzY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERE,SAAQ,QAIZ/X,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERE,SAAQ,OAxHJ,yBAAA+D,EAAAjP,SAAA8O,EAAA7gB,WA8HZ0e,uCAAoB,SAAApO,IAAA,OAAAmgB,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClB1L,EAAK8C,SAAS,CACZ+U,WAAY,CACVC,OAAO,KACPC,SAAQ,KAJM,wBAAAvM,EAAAqB,SAAAzB,EAAAtQ,WAgDpB8hH,gBAAkB,WAChB58G,EAAKwC,uFAxWD1H,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAILlD,KAAK0H,gMAGkBC,EAAUC,qFACjC5H,KAAKkD,YAECmsB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClDkyG,EAAsBp6G,EAAU42B,eAAiBv+B,KAAKC,MAAMs+B,aAC5DyjF,EAAuBp6G,EAAUw4G,gBAAkBpgH,KAAKwH,MAAM44G,cAC9D6B,EAAwBt6G,EAAU24G,iBAAmBtgH,KAAKC,MAAMqgH,eAChE4B,EAAkB9yG,KAAKC,UAAU1H,EAAU62E,gBAAkBpvE,KAAKC,UAAUrP,KAAKC,MAAMu+E,cACvF2jC,EAAqB/yG,KAAKC,UAAU1H,EAAU+B,eAAiB0F,KAAKC,UAAUrP,KAAKC,MAAMyJ,cAC3F2lB,GAAkB0yF,GAAuBG,GAAmBD,GAAyBE,GAAsBH,IAC7GhiH,KAAK0H,WAGyBE,EAAU44G,mBAAqBxgH,KAAKwH,MAAMg5G,kBAE7B,oBAAhCxgH,KAAKC,MAAMugH,kBACpBxgH,KAAKC,MAAMugH,iBAAiBxgH,KAAKwH,MAAMg5G,kBAIrC4B,EAAgBz6G,EAAUuJ,SAAWlR,KAAKC,MAAMiR,QACnBlR,KAAKwH,MAAMi5G,sBAAwB74G,EAAU64G,qBAC9C2B,IAChCpiH,KAAK6gH,gBAGmBj5G,EAAU+1G,aAAe39G,KAAKwH,MAAMm2G,YAE5D39G,KAAKihH,oKA2CPjhH,KAAKgI,SAAS,CACZq4G,eAAc,gDAIED,GAClBpgH,KAAKgI,SAAS,CACZo4G,uOAqOiBpgH,KAAKC,MAAMmgH,eAAiBpgH,KAAKwH,MAAM44G,yDACjD,kBAGyBjyF,IAA9BnuB,KAAKC,MAAMqgH,gBAAiCtgH,KAAKC,MAAMqgH,yDAClD,0BAGsBtgH,KAAK+C,cAAcmhE,mBAAmBlkE,KAAKC,MAAMyJ,YAAYsH,MAAMhR,KAAKC,MAAMu+E,aAAa3xE,QAAQ7M,KAAKC,MAAM4P,uBAAvI2wG,2BAICA,iQAID7C,EAAa,KACb8C,EAAsB,KACtBH,IAAmBtgH,KAAKC,MAAMqgH,gBAGhCtgH,KAAKC,MAAMu+E,6CACPx+E,KAAKC,MAAMqnC,aAAatnC,KAAKC,MAAMu+E,aAAar8E,KAAKnC,KAAKC,MAAMu+E,aAAa3xE,QAAQ7M,KAAKC,MAAMu+E,aAAaj3C,gBAG5F+4E,mCAAuBtgH,KAAKqhH,yEAA0B,UAAzEb,OAEA14G,EAAW,CACf61G,aACA2C,iBACAE,mBACAC,uBAGFzgH,KAAKgI,SAASF,uIAOP,IAAA3E,EAAAnD,KAEDqiH,EAAwC,WAA7BriH,KAAKC,MAAMqiH,cACtBpxG,EAASlR,KAAKC,MAAMiR,OAASlR,KAAKC,MAAMiR,OAAS,UAEvD,OACEslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGdohH,EACE7L,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,aACNQ,KAAM,kGAEL5C,KAAKC,MAAM4P,QAIZ7P,KAAKC,MAAMyJ,cAAgB1J,KAAK+C,cAAckO,MAAMjR,KAAKC,MAAMs+B,cAAcj7B,SAAWtD,KAAK+C,cAAckO,MAAMjR,KAAKC,MAAMs+B,cAAc1pB,GAAG,GAC/I2hG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGLE,KAAKC,MAAMsiH,SACT/L,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD/I,OAAAC,OAAA,CACEF,UAAW,CACToO,GAAG,IAED9N,KAAKC,MAAMsiH,UAKnBviH,KAAKC,MAAMuiH,OAASxiH,KAAKC,MAAMuiH,MAAMx+G,OAAO,GAC1CwyG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFxB,GAAG,CAAC,EAAE,KAGRy2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAGbhB,KAAKC,MAAMuiH,MAAM18G,IAAK,SAAC28G,EAAKC,GAAN,OACpBlM,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACf6F,IAAG,QAAAF,OAAU+7G,IAEblM,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAOsgH,EAAK32F,UAAY,WAAa22F,EAAKrgH,KAC1CE,MAAQmgH,EAAK32F,UAAY3oB,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAGjF22F,EAAKz8G,KACHwwG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CACEj9G,GAAI,EACJhD,SAAU,EACVJ,MAAO,OACPG,WAAY,EACZmjB,KAAM68F,EAAKz8G,KACX6C,UAAW,OACXlD,WAAY,QAEX88G,EAAKhL,aAGRjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVD,WAAY,EACZH,MAAO,WACPuG,UAAW,QAEV45G,EAAKhL,kBAW1BjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGLE,KAAKwH,MAAM64G,eAAiBrgH,KAAKC,MAAMmgH,cACrC5J,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACH6I,GAAG,EACHH,QAAQ,OACR1H,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,UACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,4IASF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJyuB,UAAU,EACVurF,QAAS5iH,KAAKwH,MAAM44G,cACpB5yG,MAAK,8CACL6O,SAAW,SAAAvV,GAAC,OAAI3D,EAAK0/G,oBAAoB/7G,EAAE4e,OAAOk9F,cAGnD5iH,KAAKwH,MAAM64G,eAAiBrgH,KAAKC,MAAMmgH,eAC1C5J,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,EACHqH,GAAI,EACJ9I,MAAO,EACP0B,aAAc,EACdT,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBP,gBAAiB,gBACjB6E,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,UAE7C+uF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5tG,UAAW,SACXlD,WAAY,UACZC,QAAS5F,KAAKqgH,cAAc1hG,KAAK3e,OAHnC,6CAOAw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrD,KAAM,MACNF,KAAM,UACNG,MAAO,cAOftC,KAAKwH,MAAM84G,iBAAmBtgH,KAAKwH,MAAMg5G,iBACvCxgH,KAAKwH,MAAMuV,WAAWE,QACpBu5F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwf,EAAA,EAADjgB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4e,SAAQ,uBACRhX,KAAM7H,KAAKwH,MAAMuV,WAAWC,OAC5B4B,WAAU,gCACVF,kBAAmB1e,KAAK0e,kBAAkBC,KAAK3e,UAInDw2G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAGJi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,SACXC,wBAAyB,CACvBC,OAAO/I,KAAKC,MAAM6iH,sBAGtBtM,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKkhH,QAAQviG,KAAK3e,OALjC,aAYNA,KAAKwH,MAAMuV,WAAWE,QACtBu5F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwf,EAAA,EAADjgB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4H,KAAM7H,KAAKwH,MAAMuV,WAAWC,OAC5B4B,WAAU,cAAAjY,OAAgBuK,EAAhB,eACVwN,kBAAmB1e,KAAK0e,kBAAkBC,KAAK3e,MAC/C6e,SAAQ,GAAAlY,OAAK3G,KAAK+C,cAAc0K,WAAWyD,GAAnC,qBAIZslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJ/M,WAAY,SACZC,cAAe,MACfC,eAAgBjB,KAAKC,MAAM+iH,oBAAsB,gBAAkB,YAGjEhjH,KAAKC,MAAM+iH,qBACTxM,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPwG,SAAU,MACVvF,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZoG,UAAW,OACXxC,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfnE,MAAOtC,KAAKC,MAAM+iH,oBAAoB1gH,MAAQtC,KAAKC,MAAM+iH,oBAAoB1gH,MAAQ,YACrFwG,wBAAyB,CACvBC,OAAQ/I,KAAKC,MAAM+iH,oBAAoBpgH,QAIzC5C,KAAKC,MAAM+iH,oBAAoBp4G,SAC7B4rG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE1nF,UAAW,MACXC,QAAShvB,KAAKC,MAAM+iH,oBAAoBp4G,SAExC4rG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrD,KAAM,MACNC,MAAO,YACPH,KAAM,mBASjBnC,KAAK+C,cAAckO,MAAMjR,KAAKC,MAAMs+B,cAAcj7B,SACjDkzG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPwG,SAAU,MACVvF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZH,MAAO,YACPuG,UAAW,QACXlD,WAAY,YACZC,QAAU,SAACkB,GAAD,OAAO3D,EAAK69G,uBAAuB,MAC7C36G,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAXjB,YAcYzG,KAAK+C,cAAckO,MAAMjR,KAAKC,MAAMs+B,cAAcrxB,QAAQlN,KAAKC,MAAM+B,SAAW,EAAI,GAdhG,IAcqGhC,KAAKC,MAAMyJ,YAAY8D,OAASxN,KAAKC,MAAMyJ,YAAYsH,SAMpKwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEplG,IAAK,EACL9N,KAAM,SACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZyJ,YAAa,aACbxL,gBAAiB,SACjB8N,UAAW,kBACXivG,YAAW,gBACXphG,SAAUrc,KAAK0gH,iBAAiB/hG,KAAK3e,MACrCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,SAC7C8D,MAAiC,OAA1B1K,KAAKwH,MAAMm2G,WAAsB39G,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMm2G,YAAYzwG,UAAY,KAEtGspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK6E,IAAK,SAAAia,GAAU,OAC5By2F,EAAAr2G,EAAAC,cAACm+G,EAAA,EAAD,CACEx+F,WAAYA,EACZlZ,IAAG,YAAAF,OAAcoZ,GACjBy+F,YAAa,kBAAIr7G,EAAK69G,uBAAuBjhG,IAC7Cxf,SAAU4C,EAAKqE,MAAMi5G,sBAAwBnvG,SAASyO,QAK9Dy2F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ3H,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEtiH,YAAaT,KAAKuhH,UAAU5iG,KAAK3e,MACjCsF,YAAa3F,OAAOC,OAAO,CACzBgJ,GAAG,EACH9I,MAAM,CAAC,EAAE,IACTuG,MAAM,CACJ48G,cAAc,cAEhB/7G,SAASlH,KAAKwH,MAAM+4G,gBAAgBvgH,KAAKC,MAAMsgH,gBAC/CvgH,KAAKC,MAAMqF,cAEZtF,KAAKC,MAAMiR,YAQxBlR,KAAKC,MAAM+I,SAjWbwtG,EAAAr2G,EAAAC,cAACs3G,EAAA,EACK13G,KAAKC,eAvZS4C,sBC41CjBqgH,6MAv1Cb17G,MAAQ,CACN27G,SAAQ,EACRZ,QAAQ,KACRa,UAAU,KACVC,WAAW,KACX1F,WAAW,KACX2F,YAAY,KACZ55G,YAAY,KACZ65G,YAAY,KACZvlF,YAAY,KACZwgD,aAAa,KACbglC,aAAa,KACbh6G,cAAc,KACdwnE,cAAc,KACd5J,eAAe,KACfk5C,eAAe,KACfmD,eAAc,EACdC,WAAW,UACXnD,gBAAe,EACfoD,gBAAgB,KAChBp6C,gBAAgB,KAChBq6C,gBAAgB,KAChBj0G,gBAAgB,KAChBk0G,YAAY,UACZC,eAAe,OACfl5C,iBAAiB,KACjBm5C,iBAAiB,KACjBC,mBAAmB,KACnBC,mBAAmB,KACnBnB,mBAAmB,KACnBE,oBAAoB,KACpB/kF,oBAAoB,KACpBimF,qBAAqB,KACrBC,qBAAqB,KACrBC,qBAAqB,KACrBC,uBAAuB,QAIzBthH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,WACL1H,KAAKskH,uMAGkB38G,EAAUC,gFACjC5H,KAAKkD,YAEwB0E,EAAU4B,gBAAkBxJ,KAAKwH,MAAMgC,eAElExJ,KAAKgI,SAAS,CACZu6G,QAAQ,KACRvkF,YAAY,KACZylF,eAAc,GACd,WACAtgH,EAAKohH,kBAIHC,EAAqB58G,EAAUi8G,cAAgB7jH,KAAKwH,MAAMq8G,aAClCj8G,EAAUk8G,iBAAmB9jH,KAAKwH,MAAMs8G,gBACzCU,IAC3BxkH,KAAKgI,SAAS,CACZu6G,QAAQ,KACRkB,eAAc,GACd,WACAtgH,EAAKshH,0JAKD,IAAAp6G,EAAArK,KACF2P,EAAkBhQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAUf,iBAAiBj/E,OAAO,SAACigF,EAAK3zG,GACrF,IAAMgtB,EAAc3zB,EAAKpK,MAAMykH,UAAUf,gBAAgB3yG,GACnDwuC,EAAkBn1C,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,gBAE7EvL,EAAc,GAMpB,OALAA,EAAYsH,MAAQA,EACpBtH,EAAY69B,IAAMvJ,EAAYuJ,IAC9B79B,EAAYmD,QAAUmxB,EAAYnxB,QAClCnD,EAAY/F,SAAW67C,EAAgB77C,SACvCghH,EAAI3zG,GAAStH,EACNi7G,GACN,IAEGC,EAAgB5kH,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAM4kH,UAAUE,OACpEv7G,EAAgBo7G,GAAiBjlH,OAAOoE,KAAK4L,GAAiBukB,SAAS0wF,GAAiBA,EAAgBjlH,OAAOoE,KAAK4L,GAAiB,GAI3I3P,KAAKgI,SAAS,CACZwB,gBACAmG,mBACA,WACAtF,EAAKk6G,gEAI+B,IAApBjlF,EAAoBptB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAN,KAE5BlS,KAAK+C,cAAckO,MAAMquB,GAAeh8B,UAC1Cg8B,EAAgBt/B,KAAK+C,cAAckO,MAAM,IAG3CquB,EAAgBt/B,KAAK+C,cAAckO,MAAMquB,GAAe7tB,KAAKzR,KAAKwH,MAAM83B,eAExE,IAAIioC,EAAIvnE,KAAK+C,cAAckO,MAAMjR,KAAK+C,cAAcixD,qBAAqB10B,EAAc,KACnFkoC,EAAiBxnE,KAAK+C,cAAckO,MAAMjR,KAAK+C,cAAcixD,qBAAqBh0D,KAAKwH,MAAM4/D,eAAe,KAC5GK,EAAeznE,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMy8G,oBAEnDv8C,EAAmB1nE,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM48G,sBACvDz8C,EAAiB3nE,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMw8G,oBACrDp8C,EAAI5nE,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMojE,kBAAkBn5D,KAAK81D,GAE/DM,EAAuB7nE,KAAK+C,cAAckO,MAAM,IAChD62D,EAAMP,EAAEt6D,MAAM46D,GAAsB5kD,IAAI,KAC5C6kD,EAAMA,EAAIr2D,KAAKm2D,EAAE36D,MAAMu6D,GAAgBvkD,IAAIwkD,GAAcx6D,MAAOjN,KAAK+C,cAAckO,MAAM,KAAKS,MAAMm2D,GAAuB5kD,IAAI,OAC/H6kD,EAAM9nE,KAAK+C,cAAckO,MAAMG,KAAKC,IAAIk2D,EAAGO,IAE3C,IAAIC,EAAUL,EACVM,EAAcH,EAAqB56D,MAAMs6D,GAAGtkD,IAAI,KAChDglD,EAAiBN,EAAel2D,KAAKu2D,GAAat2D,MAAMq2D,GACxDG,EAAkBP,EAAel2D,KAAKq2D,GAAKp2D,MAAMq2D,GAEjD18C,EAAQrrB,KAAK+C,cAAckO,MAAM62D,GAAK7kD,IAAIilD,GAAiBjlD,IAAI+kD,EAAY/kD,IAAIglD,IAQnF,OANK58C,IAASA,EAAM/nB,UAClB+nB,EAAQrrB,KAAK+C,cAAckO,MAAM,IAK5Boa,wMAIDg8C,EAAgBrnE,KAAKC,MAAMykH,UAAUM,QACrChnF,EAAch+B,KAAKC,MAAMykH,UAAUf,gBAAgB3jH,KAAKwH,MAAMgC,eAG5CxJ,KAAK+C,cAAco0B,kBAAkBkwC,EAAcr2D,SACnDq2D,EAAc9/B,oCAC9BvnC,KAAKC,MAAMqnC,aAAa+/B,EAAcr2D,MAAMq2D,EAAcx6D,QAAQw6D,EAAc9/B,eAIlF09E,EAAqBjnF,EAAYc,aACV9+B,KAAK+C,cAAco0B,kBAAkB8tF,EAAmB9iH,QACxD8iH,EAAmB19E,sCACxCvnC,KAAKC,MAAMqnC,aAAa29E,EAAmBj0G,MAAMi0G,EAAmBp4G,QAAQo4G,EAAmB19E,gBAI1EvnC,KAAK+C,cAAco0B,kBAAkB6G,EAAY77B,QACjD67B,EAAYuJ,sCACjCvnC,KAAKC,MAAMqnC,aAAatJ,EAAY77B,KAAK67B,EAAYnxB,QAAQmxB,EAAYuJ,8BAiBvE7mB,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAcykC,eACnBxnC,KAAK+C,cAAculE,oBAAoBtqC,EAAY77B,MACnDnC,KAAK+C,cAAculE,oBAAoBjB,EAAcr2D,OACrDhR,KAAK+C,cAAcguB,oBAAoB,mBAAmB,QAC1D/wB,KAAK+C,cAAc2tB,gBAAgBsN,EAAY77B,KAAKnC,KAAKC,MAAM4P,SAC/D7P,KAAK+C,cAAcmmE,sBAAsBlrC,EAAYh+B,KAAKC,MAAM4P,SAChE7P,KAAK+C,cAAcguB,oBAAoBiN,EAAY77B,KAAK,kBACxDnC,KAAK+C,cAAc2tB,gBAAgB22C,EAAcr2D,MAAMhR,KAAKC,MAAM4P,SAClE7P,KAAK+C,cAAcguB,oBAAoBiN,EAAY77B,KAAK,mBAAmB,CAAC,IAC5EnC,KAAK+C,cAAc2tB,gBAAgBu0F,EAAmBj0G,MAAMhR,KAAKC,MAAM4P,SACvE7P,KAAK+C,cAAcguB,oBAAoB,kBAAkB,kBAAkB,CAAC/wB,KAAKC,MAAM4P,UACvF7P,KAAK+C,cAAcguB,oBAAoBiN,EAAY77B,KAAK,mBAAmB,CAACnC,KAAKC,MAAM4P,UACvF7P,KAAK+C,cAAcguB,oBAAoB,kBAAkB,iBAAiB,CAAC/wB,KAAKC,MAAM4P,QAAQmuB,EAAYnxB,iDA1B1Go6B,OACA2jC,OACAq5C,OACAF,OACAzkF,OACA0xC,OACAgzC,OACA58C,OACA+8C,OACAlmF,OACA2lF,QACAQ,QACAZ,QAmBIa,EAAyB1kH,OAAOoE,KAAKitE,GAAelgE,OAAQ,SAAAE,GAAK,MAAc,SAAVA,IAAmB0zB,OAAQ,SAACwgF,EAAiBl0G,GACtH,IAAMtH,EAAcsnE,EAAchgE,GAIlC,OAHItH,EAAYkI,QAAQiD,GAAG,KACzBqwG,EAAiBl0G,GAAS8rG,EAAK/5G,cAAc0R,iBAAiB/K,EAAYkI,QAAQlI,EAAY/F,WAEzFuhH,GACP,IAEI37C,EAAkBvpE,KAAK+C,cAAc0R,iBAAiBu8D,EAAcW,KAAK//D,QAAQ,IAEnFmyG,IACFA,EAAmB/jH,KAAK+C,cAAc0R,iBAAiBsvG,EAAiB,IAAI92G,MAAM,QAGpF22G,EAAkB5jH,KAAK+C,cAAckO,MAAM2yG,GAAiB3gG,IAAI,KAEhEjjB,KAAKgI,SAAS,CACZi/B,YACAjJ,cACAwlF,eACAxyC,gBACA1xC,gBACA8nC,iBACAw8C,kBACAr6C,kBACAqB,mBACAm5C,mBACAC,qBACAC,qBACAhmF,sBACAmmF,uBACAD,uBACAE,0BACA,WACAvH,EAAK2H,eAAc,+SAIHU,kCAEbnlH,KAAKwH,MAAMw2B,aACdh+B,KAAKukH,gBAGDl9C,EAAgBrnE,KAAKC,MAAMykH,UAAUM,QACrChnF,EAAch+B,KAAKC,MAAMykH,UAAUf,gBAAgB3jH,KAAKwH,MAAMgC,eAC9Dy7G,EAAqBjnF,EAAYc,aAEnCqkF,GAAU,EACVE,EAAa,KACbC,EAAc,KACd55G,EAAc,KACd65G,EAAc,KACd/kC,EAAe,KACf8hC,GAAiB,EACjBwC,EAAqB,KACrBE,EAAsB,UAElBhjH,KAAKwH,MAAMs8G,sBACZ,iBAiBA,0CAhBHxD,GAAiB,EACjB52G,EAAc29D,EACR+9C,EAAqBplH,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM4/D,gBAAgBn6D,MAAMjN,KAAKwH,MAAMo8G,iBAChGN,EAActjH,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM4/D,gBAAgB11D,MAAM0zG,GACxEpC,EAAsB,CACpB1gH,MAAK,YACLM,KAAI,oBAAA+D,OAAqB3G,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMo8G,iBAAiB32G,MAAM,KAAKC,QAAQ,GAA7F,MAENsxE,EAAex+E,KAAK+C,cAAciS,gBAAgB,CAAC,YAAY,EAAE,oBACjEuuG,EAAW,cAAA58G,OAAiB3G,KAAK+C,cAAciS,gBAAgB,CAAC,aAAa,QAAQ,cAA1E,gGAELqwG,EAAiBrlH,KAAKwH,MAAMg8G,aAAelyG,SAAStR,KAAKwH,MAAMg8G,cAAcxjH,KAAKC,MAAMykH,UAAUY,kBAAoB,KAC5HnC,GAAWkC,GAAkBrlH,KAAKwH,MAAMy/B,UAAU7yB,WAAWixG,EAE7DhC,EAAagC,EAAiBrlH,KAAK+C,cAAcqP,YAA2B,IAAfizG,GAAqBtoC,MAAMvnE,OAAO,oBAAsB,uCAG7GxV,KAAKwH,MAAMq8G,mBACZ,oBAeA,kBAIA,6CAlBHvD,GAAiB,EACjB9hC,EAAexgD,EACft0B,EAAcu7G,EACd3B,EAActjH,KAAKwH,MAAMy2B,oBACzBslF,EAAW,8BAAA58G,OAAiC+C,EAAYsH,MAA7C,wCACX8xG,EAAkB,sDAAAn8G,OAAyDs+G,EAAmBj0G,MAA5E,oBAEZqa,EAAQrrB,KAAKgnE,oBAAoB,GACvCg8C,EAAsB,CACpB1gH,MAAK,YACLsI,QAAQ5K,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,eACvDpS,KAAI,6BAAA+D,OAA8B3G,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAA1E,MAAAnlB,OAAwF0kB,EAAMne,QAAQ,GAAtG,iDAINozG,GAAiB,EACjB9hC,EAAex+E,KAAK+C,cAAciS,gBAAgB,CAAC,YAAY,EAAE,yDAGjEsrG,GAAiB,EACjB9hC,EAAexgD,EACft0B,EAAcu7G,EACd3B,EAActjH,KAAKwH,MAAM83B,cACzBikF,EAAW,8BAAA58G,OAAiC+C,EAAYsH,MAA7C,6JAUnBhR,KAAKgI,SAAS,CACZm7G,UACAE,aACAE,cACA75G,cACAs0B,cACAslF,cACA9kC,eACA8hC,iBACAwC,qBACAE,uBACA,YACImC,GAAeI,EAAK/9G,MAAMm8G,iBAC5B4B,EAAKJ,iRAMHxB,EAAkB,GACxBhkH,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAUf,iBAAiB1/G,QAAS,SAAAkjE,GACzD,IAAMnpC,EAAcwnF,EAAKvlH,MAAMykH,UAAUf,gBAAgBx8C,GACnDppC,EAAgBynF,EAAKvlH,MAAM+8B,kBAAkBgB,EAAYN,UAAY8nF,EAAKvlH,MAAM+8B,kBAAkBgB,EAAYN,UAAUypC,GAAc,KAEvIppC,IAIA4lF,EAAgB3lF,EAAYN,YAC/BimF,EAAgB3lF,EAAYN,UAAY,IAG1CimF,EAAgB3lF,EAAYN,UAAUypC,GAAcppC,EACpD4lF,EAAgB3lF,EAAYN,UAAUypC,GAAYs+C,OAAS,KAC3D9B,EAAgB3lF,EAAYN,UAAUypC,GAAYu+C,WAAa,KAC/D/B,EAAgB3lF,EAAYN,UAAUypC,GAAY4G,YAAc,KAChE41C,EAAgB3lF,EAAYN,UAAUypC,GAAY6J,cAAgB,KAClE2yC,EAAgB3lF,EAAYN,UAAUypC,GAAY7nC,cAAgB,KAClEqkF,EAAgB3lF,EAAYN,UAAUypC,GAAYoC,gBAAkB,KACpEo6C,EAAgB3lF,EAAYN,UAAUypC,GAAY48C,iBAAmB,QAGvE/jH,KAAKgI,SAAS,CACZ27G,+RAMIgC,EAAkB,GAClBhC,EAAkB,GAClBt8C,EAAgBrnE,KAAKC,MAAMykH,UAAUM,iBACrChlH,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAUf,iBAAjE,eAAAhjG,EAAAhhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAmF,SAAAuS,EAAOukD,GAAP,IAAAnpC,EAAAD,EAAAH,EAAAC,EAAA+nF,EAAAh7C,EAAAtrC,EAAA0xC,EAAAgzC,EAAA6B,EAAA98C,EAAAs7C,EAAAyB,EAAAC,EAAAC,EAAAC,EAAA18C,EAAAw6C,EAAA,OAAAtzF,EAAAtwB,EAAAsQ,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UACjFotB,EAAckoF,EAAKjmH,MAAMykH,UAAUf,gBAAgBx8C,GACpDw8C,EAAgB3lF,EAAYN,YAC/BimF,EAAgB3lF,EAAYN,UAAY,MAGpCK,EAAgBmoF,EAAKjmH,MAAM+8B,kBAAkBgB,EAAYN,UAAYwoF,EAAKjmH,MAAM+8B,kBAAkBgB,EAAYN,UAAUypC,GAAc,MANrD,CAAApkD,EAAAnS,KAAA,YAUtDs1G,EAAKnjH,cAAco0B,kBAAkB6G,EAAY77B,QACjD67B,EAAYuJ,IAX0C,CAAAxkB,EAAAnS,KAAA,eAAAmS,EAAAnS,KAAA,EAY7Es1G,EAAKjmH,MAAMqnC,aAAatJ,EAAY77B,KAAK67B,EAAYnxB,QAAQmxB,EAAYuJ,KAZI,cAAAxkB,EAAAnS,KAAA,GAuB3E8P,QAAQqD,IAAI,CACpBmiG,EAAKnjH,cAAc0lE,mBAAmBzqC,GACtCkoF,EAAKnjH,cAAculE,oBAAoBtqC,EAAY77B,MACnD+jH,EAAKnjH,cAAc2tB,gBAAgBsN,EAAY77B,KAAK+jH,EAAKjmH,MAAM4P,SAC/Dq2G,EAAKnjH,cAAcmmE,sBAAsBlrC,EAAYkoF,EAAKjmH,MAAM4P,SAChEq2G,EAAKnjH,cAAcguB,oBAAoBiN,EAAY77B,KAAK,kBACxD+jH,EAAKnjH,cAAcguB,oBAAoBiN,EAAY77B,KAAK,mBAAmB,CAAC+jH,EAAKjmH,MAAM4P,UACvFq2G,EAAKnjH,cAAcguB,oBAAoB,kBAAkB,wBAAwB,CAACiN,EAAYnxB,YA9BX,QAAA+wB,EAAA7a,EAAApP,KAAAkqB,EAAAl+B,OAAAsyB,EAAA,EAAAtyB,CAAAi+B,EAAA,GAgBnFgoF,EAhBmF/nF,EAAA,GAiBnF+sC,EAjBmF/sC,EAAA,GAkBnFyB,EAlBmFzB,EAAA,GAmBnFmzC,EAnBmFnzC,EAAA,GAoBnFmmF,EApBmFnmF,EAAA,GAqBnFgoF,EArBmFhoF,EAAA,GAsBnFkrC,EAtBmFlrC,EAAA,GAiC/EwmF,EAAyB1kH,OAAOoE,KAAKitE,GAAetsC,OAAQ,SAACwgF,EAAiBl0G,GAClF,IAAMtH,EAAcsnE,EAAchgE,GAIlC,OAHItH,EAAYkI,QAAQiD,GAAG,KACzBqwG,EAAiBl0G,GAASk1G,EAAKnjH,cAAc0R,iBAAiB/K,EAAYkI,QAAQlI,EAAY/F,WAEzFuhH,GACP,IAEEY,EAAiB,KACjBC,EAA0B,KAC9Bh9C,EAAcm9C,EAAKnjH,cAAc0R,iBAAiBs0D,EAAY,IAC9D68C,EAAkBM,EAAKnjH,cAAc0R,iBAAiBmxG,EAAgB,IACtEh7C,EAAmBs7C,EAAKnjH,cAAc0R,iBAAiBm2D,EAAiB,IAClEo7C,EAAwBE,EAAK1+G,MAAMu8G,iBAAiB92G,MAAM87D,GAE5Dm9C,EAAKjmH,MAAM4P,SACbi2G,EAAiBI,EAAKnjH,cAAckO,MAAMquB,GAAerc,IAAI2nD,GAIvDq7C,EAAmBC,EAAKnjH,cAAckO,MAAM40G,GAAoB5iG,IAAI+gG,IAC1E+B,EAA0BC,EAAsB/4G,MAAMg5G,IAC1BpxG,GAAGmxG,KAC7BD,EAA0BC,IAK5B1mF,EAAgB4mF,EAAKnjH,cAAckO,MAAM,GAGrCs4D,EAAkB5pE,OAAOoE,KAAKsgH,GAAwBrgH,OAASrE,OAAOoE,KAAKsgH,GAAwBv+G,IAAK,SAAAkL,GAC5G,IAAMutB,EAAe8lF,EAAuBrzG,GACxCpO,EAAI,GAAA+D,OAAM43B,EAAarxB,QAAQ,GAA3B,KAAAvG,OAAiCqK,GACzC,GAAIk1G,EAAKjmH,MAAM4P,QACb,GAAKq2G,EAAKnjH,cAAckO,MAAM80G,GAAyBziH,SAAW0N,EAAMlE,gBAAkBu6D,EAAc7nC,YAAY1yB,eAE7G,GAAIkkE,EAAchgE,GAAO+4D,KAAK,CACnC,IAAIo8C,EAAuBn1C,EAAchgE,GAAO+4D,KAAK98D,MAAM64G,GACvDK,EAAqBtxG,GAAGm8D,EAAchgE,GAAO+4D,QAC/Co8C,EAAuBn1C,EAAchgE,GAAO+4D,MAE9CnnE,GAAI,MAAA+D,OAAUw/G,EAAqBj5G,QAAQ,GAAvC,eANJtK,GAAI,MAAA+D,OAAUo/G,EAAwB74G,QAAQ,GAA1C,SASR,OAAOtK,IACN2K,KAAK,UAAY,IAEdw2G,EAAmBpkH,OAAOoE,KAAKitE,GAAehtE,OAASrE,OAAOoE,KAAKitE,GAAelrE,IAAK,SAAAkL,GAC3F,GAAIA,EAAMlE,gBAAkBu6D,EAAc7nC,YAAY1yB,cACpD,SAAAnG,OAAUq/G,EAAsB94G,QAAQ,GAAxC,KAAAvG,OAA8CqK,EAA9C,QAEA,IAAMo1G,EAAwBp1C,EAAchgE,GAAO+4D,KACnD,SAAApjE,OAAUy/G,EAAsBl5G,QAAQ,GAAxC,KAAAvG,OAA8CqK,EAA9C,UAEDzD,KAAK,UAAY,IAEpBo2G,EAAgB3lF,EAAYN,UAAUypC,GAAcppC,EACpD4lF,EAAgB3lF,EAAYN,UAAUypC,GAAY6J,cAAgBA,EAClE2yC,EAAgB3lF,EAAYN,UAAUypC,GAAY7nC,cAAgBA,EAClEqkF,EAAgB3lF,EAAYN,UAAUypC,GAAY4G,YAAcnD,EAChE+4C,EAAgB3lF,EAAYN,UAAUypC,GAAYoC,gBAAkBA,EACpEo6C,EAAgB3lF,EAAYN,UAAUypC,GAAY48C,iBAAmBA,EACrEJ,EAAgB3lF,EAAYN,UAAUypC,GAAYs+C,OAAS18C,EAAY97D,MAAM,KAAKC,QAAQ,GAAG,IAC7Fy2G,EAAgB3lF,EAAYN,UAAUypC,GAAYu+C,WAAaE,EAAgB34G,MAAM,KAAKC,QAAQ,GAAG,IAErGy4G,EAAe,GAAAh/G,OAAIoiE,EAAY97D,MAAM,KAAKC,QAAQ,GAAnC,KAAAvG,OAAyCq3B,EAAYN,SAArD,KAAA/2B,OAAiEwgE,IAAgB,CAC9FA,aACAnpC,eArGmF,yBAAAjb,EAAAhR,SAAA6Q,EAAA5iB,SAAnF,gBAAAgS,GAAA,OAAA2O,EAAA1O,MAAAjS,KAAAkS,YAAA,WA0GAm0G,EAAoB1mH,OAAOoE,KAAK4hH,GAAiB/4E,OAAO05E,UAAU5hF,OACtE,SAACigF,EAAK99G,GAEJ,OADA89G,EAAI99G,GAAO8+G,EAAgB9+G,GACpB89G,GAET,IAII4B,EAAwB,GAC9B5mH,OAAOkR,OAAOw1G,GAAmBpiH,QAAS,SAAAuiH,GACnCD,EAAsBC,EAAExoF,YAAYN,YACvC6oF,EAAsBC,EAAExoF,YAAYN,UAAY,IAElD6oF,EAAsBC,EAAExoF,YAAYN,UAAU8oF,EAAEr/C,YAAcw8C,EAAgB6C,EAAExoF,YAAYN,UAAU8oF,EAAEr/C,cAI1GnnE,KAAKgI,SAAS,CACZ27G,gBAAgB4C,0IAIR/8G,GACVxJ,KAAKgI,SAAS,CACZwB,wDAIUk6G,GACRA,IAAe1jH,KAAKwH,MAAMk8G,YAC5B1jH,KAAKgI,SAAS,CACZ07G,aACAD,cAAc,iDAKFK,GAChB,GAAIA,IAAmB9jH,KAAKwH,MAAMs8G,eAAe,CAG/C9jH,KAAKgI,SAAS,CACZu6G,QAHc,KAId5E,WAHiB,KAIjBmG,2DAKSD,GACTA,IAAgB7jH,KAAKwH,MAAMq8G,aAC7B7jH,KAAKgI,SAAS,CACZ67G,qGAKqB9yG,EAAG8e,EAAOhS,0FAE/B0kG,EAAU,KACVa,EAAY,KACZK,GAAgB,OAEZzjH,KAAKwH,MAAMs8G,sBACZ,gBAUA,wCATG2C,EAAezmH,KAAK+C,cAAckO,MAAM4M,EAAOi6C,aAAa,IAAI70C,IAAI,KAAK/V,QAAQ,GACvFq1G,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,2CAAA+D,OAA4C8/G,EAA5C,mFAIEzmH,KAAKwH,MAAMq8G,mBACZ,oBAUA,kBAYA,6CArBG6C,EAAkB1mH,KAAK+C,cAAc0R,iBAAiBoJ,EAAOi6C,aAAa,GAAG,IACnFyqD,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,2CAAA+D,OAA4C+/G,EAAgBx5G,QAAQ,GAApE,KAAAvG,OAA0E3G,KAAKwH,MAAMkC,YAAYsH,MAAjG,yDAINyyG,GAAgB,OACRzjH,KAAKwH,MAAMk8G,kBACZ,sDACHN,EAAS,6FAITA,EAAS,yCAAAz8G,OAA4C3G,KAAKwH,MAAM+hE,gBAAgBr8D,QAAQ,GAA/E,2FAKPy5G,EAAkB3mH,KAAK+C,cAAc0R,iBAAiBoJ,EAAOi6C,aAAa,GAAG,IACnFyqD,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,2CAAA+D,OAA4CggH,EAAgBz5G,QAAQ,GAApE,KAAAvG,OAA0E3G,KAAKwH,MAAMkC,YAAYsH,MAAjG,2IAWdhR,KAAKgI,SAAS,CACZu6G,UACAa,YACAK,iBACA,WACAmD,EAAKrC,4SAIiB5G,iCAAW,KAC/B4E,EAAU,KACVkE,EAAe,KACfzD,EAAsB,KAE1BrF,EAAa39G,KAAK+C,cAAckO,MAAM0sG,QAC9B39G,KAAKwH,MAAMs8G,sBACZ,gBAUA,yCATCnG,EAAW9oG,GAAG,KACVgyG,EAAwB7mH,KAAKwH,MAAM4/D,eAAevyD,GAAG,GAAK8oG,EAAW16F,IAAIjjB,KAAKwH,MAAM4/D,gBAAgBn6D,MAAM,KAAKC,QAAQ,GAAKlN,KAAK+C,cAAckO,MAAM,GAC3Jw1G,EAAezmH,KAAKwH,MAAM4/D,eAAevyD,GAAG,GAAK7U,KAAK+C,cAAc8wD,aAAa8pD,EAAW16F,IAAIjjB,KAAKwH,MAAM4/D,gBAAgBn6D,MAAM,MAAUjN,KAAK+C,cAAckO,MAAM,GACpKsxG,EAAU,CACRngH,KAAK,OACLQ,KAAI,8BAAA+D,OAA+BkgH,EAA/B,qFAKA7mH,KAAKwH,MAAMq8G,mBACZ,4CACGx4F,EAAQrrB,KAAKgnE,oBAAoB22C,GACvCqF,EAAsB,CACpB1gH,MAAK,YACLsI,QAAQ5K,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,eACvDpS,KAAI,6BAAA+D,OAA8B3G,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAA1E,MAAAnlB,OAAwF0kB,EAAMne,QAAQ,GAAtG,0HAWdlN,KAAKgI,SAAS,CACZu6G,UACA5E,aACA8I,eACAzD,wKAIiBnzF,GACnB,IAAIvS,EAAa,KACbw6C,EAAe,GACbgvD,EAAe9mH,KAAKC,MAAMykH,UAAUf,gBAAgB3jH,KAAKwH,MAAMgC,eAAeqD,QACpF,OAAQ7M,KAAKwH,MAAMs8G,gBACjB,IAAK,OACHxmG,EAAa,yBACbw6C,EAAe,CAACgvD,EAAa9mH,KAAKwH,MAAMi/G,cAC1C,MACA,IAAK,QACH,IAAM52F,EAAS7vB,KAAK+C,cAAcixD,qBAAqBh0D,KAAKwH,MAAMm2G,WAAW,IAC7E,OAAQ39G,KAAKwH,MAAMq8G,aACjB,IAAK,UACHvmG,EAAa,UACbw6C,EAAe,CAACjoC,GAClB,MACA,IAAK,WACHvS,EAAa,WACbw6C,EAAe,CAACjoC,IAYxB,MAAO,CACLvS,aACAw6C,iDAIK,IAAAivD,EAAA/mH,KACP,OACEw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAG,QACXiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,iBAGA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEoc,SAAUrc,KAAK67G,YAAYl9F,KAAK3e,MAChCwJ,cAAexJ,KAAKwH,MAAMgC,cAC1BmG,gBAAiB3P,KAAKwH,MAAMmI,oBAI7B3P,KAAKwH,MAAMw2B,YAeVw4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,kBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER6C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdE,KAAM,OACNL,UAAW,SACXnB,YAAa,UACbD,MAAO,kBACPZ,SAAyC,SAA9BP,KAAKwH,MAAMs8G,eACtBrjH,YAAc,SAAAqG,GAAC,OAAIigH,EAAKC,kBAAkB,YAE5CxQ,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER6C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdE,KAAM,QACNR,KAAM,SACNG,UAAW,UACXnB,YAAa,UACbb,SAAyC,UAA9BP,KAAKwH,MAAMs8G,eACtBrjH,YAAc,SAAAqG,GAAC,OAAIigH,EAAKC,kBAAkB,eAKhB,UAA9BhnH,KAAKwH,MAAMs8G,gBACTtN,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,wBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,UACNL,UAAW,UACXH,KAAM,gBACNhB,YAAa,UACbb,SAAsC,YAA3BP,KAAKwH,MAAMq8G,YACtBpjH,YAAc,SAAAqG,GAAC,OAAIigH,EAAKE,eAAe,eAEzCzQ,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,QACNL,UAAW,UACXH,KAAM,eACNhB,YAAa,UACbb,SAAsC,UAA3BP,KAAKwH,MAAMq8G,YACtBpjH,YAAc,SAAAqG,GAAC,OAAIigH,EAAKE,eAAe,aAEzCzQ,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,WACNR,KAAM,cACNG,UAAW,SACXnB,YAAa,UACbb,SAAsC,aAA3BP,KAAKwH,MAAMq8G,YACtBpjH,YAAc,SAAAqG,GAAC,OAAIigH,EAAKE,eAAe,kBAOjB,UAA9BjnH,KAAKwH,MAAMs8G,gBAAyD,UAA3B9jH,KAAKwH,MAAMq8G,aAA2B7jH,KAAKwH,MAAMwpE,eAAiBrxE,OAAOoE,KAAK/D,KAAKwH,MAAMwpE,eAAehtE,OAAO,GACtJwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,wBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,KAEb/C,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAERmC,WAAY,CACVZ,GAAG,EACHvB,MAAM,QACNiC,OAAO,SAETa,KAAM,aACNzB,MAAO,yBACPZ,SAAqC,YAA1BP,KAAKwH,MAAMk8G,WACtBjjH,YAAc,SAAAqG,GAAC,OAAIigH,EAAKG,cAAc,eAExC1Q,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,KAEb/C,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAERmC,WAAY,CACVZ,GAAG,EACHvB,MAAM,QACNiC,OAAO,SAETtB,YAAc,SAAAqG,GAAC,OAAIigH,EAAKG,cAAc,eACtC3mH,SAAqC,eAA1BP,KAAKwH,MAAMk8G,WACtB9gH,KAAI,SAAA+D,OAAWhH,OAAOoE,KAAK/D,KAAKwH,MAAMwpE,eAAenoB,OAAO,GAAGt7C,KAAK,OACpEpM,MAAOnB,KAAK+C,cAAcqiG,aAAazlG,OAAOoE,KAAK/D,KAAKwH,MAAMwpE,eAAe,SAOvD,SAA9BhxE,KAAKwH,MAAMs8G,gBAA8B9jH,KAAKwH,MAAM27G,QAWjB,SAA9BnjH,KAAKwH,MAAMs8G,gBAAwD,UAA3B9jH,KAAKwH,MAAMq8G,cAA4B7jH,KAAKwH,MAAMkC,YAyDhE,UAA3B1J,KAAKwH,MAAMq8G,aACb7jH,KAAKwH,MAAMi8G,cACTjN,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,UACNQ,KAAM5C,KAAKwH,MAAM47G,UACjB5gH,UAAW,CACTH,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,QACrCM,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,aAG1B,YAA1B9rB,KAAKwH,MAAMk8G,WACZ1jH,KAAKC,MAAM4P,QAIP7P,KAAKwH,MAAM+hE,iBAAmBvpE,KAAKwH,MAAM+hE,gBAAgB10D,GAAG,GAC/D2hG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFuM,GAAG,IAGL0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,WACPH,KAAM,iBACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPuG,UAAW,UALb,iBAOgB2tG,EAAAr2G,EAAAC,cAAA,cAASJ,KAAKwH,MAAM+hE,gBAAgBr8D,QAAQ,GAA5C,SAPhB,KASAspG,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,CACEie,OAAQ,IACJ7d,KAAKC,MAFX,CAGE4C,UAAWskH,IACX9oG,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB8d,eAAgB,CACdrc,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,EAAE,GACX4K,MAAM,QACNlJ,aAAa,EACbyF,UAAU,UAEZiK,OAAQ,QACRoM,WAAY,aACZE,aAAc,wBACdzV,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC8d,qBAAuB,SAAAhX,GAAC,MAAI,CAACigH,EAAK9mH,MAAMykH,UAAUf,gBAAgBoD,EAAKv/G,MAAMgC,eAAeqD,gBAMpG2pG,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,WACNI,UAAW,CACTH,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,SAEvCY,KAAI,qDArEN4zG,EAAAr2G,EAAAC,cAACs3G,EAAA,EACK13G,KAAKC,OAuEa,eAA1BD,KAAKwH,MAAMk8G,YACV1jH,KAAKC,MAAM4P,QAIP7P,KAAKwH,MAAM68G,wBAA0B1kH,OAAOoE,KAAK/D,KAAKwH,MAAM68G,wBAAwBrgH,OAAO,EAC9FwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFuM,GAAG,IAGL0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,WACPH,KAAM,iBACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPuG,UAAW,UALb,iBAOiBlJ,OAAOoE,KAAK/D,KAAKwH,MAAM68G,wBAAwBv+G,IAAK,SAACkL,EAAMjL,GAAP,OAAkBywG,EAAAr2G,EAAAC,cAAA,UAAQyG,IAAG,UAAAF,OAAYZ,IAAUghH,EAAKv/G,MAAM68G,uBAAuBrzG,GAAO9D,QAAQ,GAAlF,IAAuF8D,KAP9K,KASAwlG,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,CACEie,OAAQ,IACJ7d,KAAKC,MAFX,CAGE4C,UAAWskH,IACX9oG,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB8d,eAAgB,CACdrc,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,EAAE,GACX4K,MAAM,QACNlJ,aAAa,EACbyF,UAAU,UAEZiK,OAAQ,QACRoM,WAAY,gBACZE,aAAcxd,KAAKwH,MAAMw2B,YAAY77B,KACrC4F,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,YAMjDw2G,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,WACNI,UAAW,CACTH,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,SAEvCY,KAAI,kEApEN4zG,EAAAr2G,EAAAC,cAACs3G,EAAA,EACK13G,KAAKC,OAlJfu2G,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,CACEsd,MAAO,MACHld,KAAKC,MAFX,CAGEmgH,eAAe,EACfmC,QAASviH,KAAKwH,MAAM+6G,QACpB74G,YAAa1J,KAAKwH,MAAMkC,YACxB60B,aAAcv+B,KAAKwH,MAAM87G,YACzB9kC,aAAcx+E,KAAKwH,MAAMg3E,aACzB8hC,eAAgBtgH,KAAKwH,MAAM84G,eAC3BC,eAAgBvgH,KAAKwH,MAAM+4G,eAC3Bx4G,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC8iH,mBAAoB9iH,KAAKwH,MAAMs7G,mBAC/BE,oBAAqBhjH,KAAKwH,MAAMw7G,oBAChCpC,oBAAqB5gH,KAAK4gH,oBAAoBjiG,KAAK3e,MACnD8d,qBAAsB9d,KAAK8d,qBAAqBa,KAAK3e,MACrDkR,OAAsC,SAA9BlR,KAAKwH,MAAMs8G,eAA4B,OAAS9jH,KAAK+C,cAAc0K,WAAWzN,KAAKwH,MAAMq8G,eAEjGrN,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAGJi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,SACXC,wBAAyB,CACvBC,OAAO/I,KAAKwH,MAAM+7G,eAIU,SAA9BvjH,KAAKwH,MAAMs8G,gBACTtN,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAa,SAAAqG,GAAC,OAAIigH,EAAK9mH,MAAM8G,YAAX,WALpB,YArDVyvG,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,UACNI,UAAW,CACTF,MAAM,QAERM,KAAI,sHAAA+D,OAAwH3G,KAAKwH,MAAM67G,WAAnI,wDA9MZ7M,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT8E,GAAG,EACH5H,cAAe,OAEjBqkB,YAAa,CACXhjB,KAAM,QAERM,UAAW,CACT+C,GAAI,GAEN9C,KAAM,2BAoaZ5C,KAAKwH,MAAMm8G,iBACTnN,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP9M,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOF+zG,EAAAr2G,EAAAC,cAAConH,EAAA,EAAD7nH,OAAAC,OAAA,CACEa,YAAa,KACbgnH,iBAAkB,GAClBC,UAAW,CACThlH,SAAS,CAAC,OAAO,SAEnB01G,KAAM,CACJ,CACE3xF,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEI,KAAK,gBAEP,CACEwC,QAAO,EACPxC,KAAK,oBACLlC,MAAM,CACJyF,GAAG,EACH3D,OAAO,YAKf,CACE0kB,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,eAIX,CACEwC,QAAO,EACP8hB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,OACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,aAI1B,CACElB,QAAO,EACP8hB,MAAM,cACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KAEdymD,OAAO,CACL,CACEhjD,KAAK,OACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,iBAI1B,CACE4gB,MAAM,eACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,KAEfymD,OAAO,CACL,CACEhjD,KAAK,SACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,eACpB5F,MAAM,CACJ4D,aAAa,EACbC,UAAU,CACR7C,eAAe,cAEjB0C,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAwB3C,CACE2C,QAAO,EACP8hB,MAAM,YACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,SACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,iBACpB5F,MAAM,CACJ4D,aAAa,EACbC,UAAU,CACR7C,eAAe,cAEjB0C,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAK3C,CACEykB,MAAM,UACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,SACL+L,YAAW,EACX3K,KAAK,aACLsC,KAAK,CAAC,cAAc,iBACpB5F,MAAM,MAMZ,CACE0E,QAAO,EACP8hB,MAAM,oBACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEhjD,KAAK,OACLpB,KAAK,SACL+L,YAAW,EACXjO,MAAM,CACJyC,SAAS,EACT60G,WAAW,KAEb1xG,KAAK,CAAC,cAAc,uBAI1B,CACElB,QAAO,EACP8hB,MAAM,oBACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,OACL2K,YAAW,EACXjO,MAAM,CACJyC,SAAS,EACT60G,WAAW,KAEbp1G,KAAK,SACL0D,KAAK,CAAC,cAAc,wBAKxB7F,KAAKC,MAxMX,CAyME+8B,kBAAmBh9B,KAAKwH,MAAMm8G,4BA/0CzB9gH,8BCwQN8kH,6MA5QbngH,MAAQ,CACNkC,YAAY,KACZ80E,aAAa,KACbh1E,cAAc,KACdo+G,eAAe,KACfj4G,gBAAgB,QAIlB5M,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAUC,8EACjC5H,KAAKkD,cAEwB0E,EAAU4B,gBAAkBxJ,KAAKwH,MAAMgC,sCAE5DE,EAAc1J,KAAKC,MAAMykH,UAAU/0G,gBAAgB3P,KAAKwH,MAAMgC,eAC9Dg1E,EAAe90E,EAAY4tB,kBAG3B5W,QAAQqD,IAAI,CAChB/jB,KAAKC,MAAMqnC,aAAak3C,EAAar8E,KAAKq8E,EAAa3xE,QAAQ2xE,EAAaj3C,KAC5EvnC,KAAKC,MAAMqnC,aAAatnC,KAAKwH,MAAMgC,cAAcE,EAAYmD,QAAQnD,EAAY69B,cAGnFvnC,KAAKgI,SAAS,CACZ0B,cACA80E,kRAME7uE,EAAkBhQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAiB+0B,OAAQ,SAACpV,EAAOte,GACxF,IAAMtH,EAAcvG,EAAKlD,MAAMykH,UAAU/0G,gBAAgBqB,GAOzD,OANItH,EAAYooB,SACdxC,EAAOniB,KAAPxN,OAAAw4B,EAAA,EAAAx4B,CAAA,CACE+K,MAAMsG,GACHtH,IAGA4lB,GACP,IAEIs4F,EAAiBj4G,EAAgB,GACjCnG,EAAgBo+G,EAAel9G,MAErC1K,KAAKgI,SAAS,CACZwB,gBACAo+G,iBACAj4G,0JAIQnG,GACVxJ,KAAKgI,SAAS,CACZwB,mDAMF,IAsGMq+G,EAAoB7nH,KAAKwH,MAAMkC,YAAc1J,KAAKwH,MAAMkC,YAAYo+G,UAAY,KAEtF,OACEtR,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjB,KAAKwH,MAAMmI,gBAmBV6mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGbjB,KAAKwH,MAAMmI,gBAAgB3L,OAU1BwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,iBAKA0oG,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAADpa,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,SACNiZ,cAAc,EACdjB,QAASna,KAAKwH,MAAMmI,gBACpB4K,kBAtKM,SAAAta,GACxB,IAAMuN,EAAQvN,EAAMuN,MACd9D,EAAc,CAClBtH,KAAKnC,EAAMmK,KAAKhI,MAGlB,OACEo0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,UAEZy1G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP9D,YAAaA,EACb0V,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHvB,MAAM,MACNiC,OAAO,UAIby0G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP4R,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,mBAoIA+Z,SAAUrc,KAAK67G,YAAYl9F,KAAK3e,MAChCqa,aAAcra,KAAKwH,MAAMogH,eACzBptG,qBA7HS,SAAAva,GAE3B,IACMib,GAA4D,IADlDjb,EAAMib,YAAYf,QACN6B,QAAQ/b,EAAMib,YAAYxQ,OAAgBzK,EAAMib,YAAYxQ,MAAQ,KAEhG,IAAKwQ,EACH,OAAO,KAGT,IAAM1N,EAAQ0N,EAAY1N,MACpB9D,EAAc,CAClBtH,KAAK8Y,EAAY9Y,MAGnB,OACEo0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACEyG,MAAO,CACLoZ,KAAK,KAEPxe,eAAgB,iBACZhB,EAAMya,YAEV87F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMya,WAHZ,CAIE3Z,WAAY,SACZC,cAAe,MACfqF,MAAO,CAACoI,OAAO,WACfxN,eAAgB,eAEhBu1G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP9D,YAAaA,EACb0V,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,UAIby0G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP4R,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,uBAgFFulH,GACErR,EAAAr2G,EAAAC,cAACynH,EAADloH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEyJ,YAAa1J,KAAKwH,MAAMkC,YACxB80E,aAAcx+E,KAAKwH,MAAMg3E,aACzBh1E,cAAexJ,KAAKwH,MAAMgC,kBAxClCgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPuG,UAAW,UAJb,gCAzBN2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,+BA5MAC,2DCsFPmlH,6MAzFbxgH,MAAQ,CACNygH,aAAa,KACbC,gBAAgB,0FAGhB,IAAMA,EAAkBvoH,OAAOoE,KAAK/D,KAAKC,MAAMkoH,WAAW,GAC1DnoH,KAAKooH,WAAWF,sCAEPpkF,GACT9jC,KAAKgI,SAAS,SAAAR,GAAK,OAAA7H,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAS6H,EAAT,CAAgB0gH,gBAAiBpkF,EAASmkF,aAAc,8CAEhEnhH,EAAE4F,GACb5F,EAAEuH,iBACFrO,KAAKgI,SAAS,SAAAR,GAAK,OAAA7H,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAS6H,EAAT,CAAgBygH,aAAczgH,EAAMygH,eAAev7G,EAAI,KAAOA,uCAG1E,IAAAvJ,EAAAnD,KACDqoH,OAA2Cl6F,IAA5BnuB,KAAKC,MAAMooH,cAA8BroH,KAAKC,MAAMooH,aACzE,OACE7R,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdonH,GACE7R,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACP/N,GAAI,CAAC,EAAE,GACPD,MAAO,CAAC,EAAE,IACVkB,cAAe,MACfC,eAAgB,iBAGdtB,OAAOoE,KAAK/D,KAAKC,MAAMkoH,WAAWriH,IAAK,SAACg+B,EAAQp3B,GAC9C,IAAM47G,EAAaxkF,IAAY3gC,EAAKqE,MAAM0gH,gBAC1C,OACE1R,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5vG,IAAG,WAAAF,OAAa+F,GAChB7D,UAAW,SACX5H,eAAgB,SAChBnB,MAAO,EAAEH,OAAOoE,KAAKZ,EAAKlD,MAAMkoH,WAAWnkH,OAC3CujH,aAAee,EAAa,oBAAsB,QAElD9R,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJrL,WAAY,EACZC,SAAU,CAAC,EAAG,GACdmG,UAAW,SACXjD,QAAS,kBAAMzC,EAAKilH,WAAWtkF,IAC/BxhC,MAAOgmH,EAAa,OAAS,YAC7B9sG,UAAW,CAAC,UAAW8sG,EAAa,WAAa,KAEhDxkF,OASjB0yE,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGLE,KAAKC,MAAMkoH,UAAUnoH,KAAKwH,MAAM0gH,iBAAiBpiH,IAAK,SAAC6I,EAASjC,GAAV,OACpD8pG,EAAAr2G,EAAAC,cAAC+N,EAAA,EAAD,CACEtH,IAAG,UAAAF,OAAY+F,GACfkC,OAAQD,EAASxO,EACjBohB,GAAU,IAAN7U,EAAU,EAAI,GAClBiC,SAAUA,EAAS45G,EACnBh6G,SAAUpL,EAAKqE,MAAMygH,eAAiBv7G,EACtCjM,YAAc,SAAAqG,GAAC,OAAI3D,EAAKqlH,aAAa1hH,EAAE4F,kBA/E/B7J,+CCiFX4lH,cAjEb,SAAAA,EAAYxoH,GAAO,IAAAiF,EAAA,OAAAvF,OAAA0wB,EAAA,EAAA1wB,CAAAK,KAAAyoH,IACjBvjH,EAAAvF,OAAA+oH,EAAA,EAAA/oH,CAAAK,KAAAL,OAAAgpH,EAAA,EAAAhpH,CAAA8oH,GAAApvE,KAAAr5C,KAAMC,KAbRuH,MAAQ,GAYWtC,EATnBnC,cAAgB,KASGmC,EAKnB0jH,mBALmBjpH,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAKE,SAAA+P,IAAA,OAAAqQ,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,OACnB1L,EAAKhC,YADc,wBAAAod,EAAAvO,SAAAqO,EAAApgB,SALFkF,EASnBq1G,WATmB56G,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KASN,SAAAwQ,IAAA,OAAA4P,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,OACX1L,EAAKjF,MAAMs6G,aADA,wBAAAv5F,EAAAjP,SAAA8O,EAAA7gB,SAPXkF,EAAKhC,YAFYgC,2EAPblF,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,yDAmB9C,OACEu2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEmH,OAAQ59G,KAAKC,MAAM29G,QAEnBpH,EAAAr2G,EAAAC,cAACyoH,EAAA,EAAD,CACEviH,SAAU,CAAC,QAAQ,SACnBw3G,UAAW99G,KAAKC,MAAMs6G,YAEtB/D,EAAAr2G,EAAAC,cAACyoH,EAAA,EAAU9K,OAAX,CACEx8F,GAAI,EACJunG,WAAY,OACZriG,MAAO,gBACPrkB,KAAM,uBAGRo0G,EAAAr2G,EAAAC,cAACyoH,EAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVmG,UAAW,OACXvG,MAAO,aAHT,0CAK0CtC,KAAKC,MAAMwxD,MALrD,gFAQF+kD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEtiH,YAAaT,KAAKu6G,WAClBj1G,YAAa,CACXxF,MAAM,CAAC,OAAO,SAHlB,qBA/DkBo+G,IAAMr7G,WC4rBvBkmH,6MAtrBbvhH,MAAQ,CACNwhH,SAAS,KACTC,WAAW,KACXC,YAAY,KACZC,YAAY,KACZ7F,YAAY,KACZ55G,YAAY,KACZ80E,aAAa,KACbngD,aAAa,KACbE,aAAa,KACbe,cAAc,KACd8pF,eAAe,KACf9I,eAAe,KACfC,gBAAe,EACfuC,mBAAmB,KACnBgB,eAAe,UACfuF,uBAAsB,KAIxBtmH,cAAgB,OAwMhB03G,WAAa,WACXv1G,EAAK8C,SAAS,CACZmhH,YAAa,mFAvMXnpH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAUC,mEACjC5H,KAAKkD,YAEkBlD,KAAKC,MAAM4P,UAAYlI,EAAUkI,SAEtD7P,KAAK0H,WAGsBE,EAAUk8G,iBAAmB9jH,KAAKwH,MAAMs8G,gBAEnE9jH,KAAKspH,+RAMFtpH,KAAKC,MAAM4P,iDACP,6BASC6Q,QAAQqD,IAAI,CAEpB/jB,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAM4P,SACvE7P,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKC,MAAM89B,cAAc57B,KAAKnC,KAAKC,MAAM4P,SAC5E7P,KAAK+C,cAAcq8B,wBAAwBp/B,KAAKC,MAAM89B,cAAcsB,WAAWl9B,KAAKnC,KAAKC,MAAM4P,QAAQ7P,KAAKC,MAAM89B,cAAcsB,WAAW17B,SAAS3D,KAAKC,MAAM89B,cAAcmB,UAAUI,eACvLt/B,KAAK+C,cAAc28B,oBAAoB,aAAa,GAAG1/B,KAAKC,MAAMspH,iBAAiBvpH,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAMupH,gBAAgBxpH,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAM89B,cAAc/9B,KAAKC,MAAM4P,SAClM7P,KAAK+C,cAAc28B,oBAAoB,mBAAmB,GAAG1/B,KAAKC,MAAMspH,iBAAiBvpH,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAMupH,gBAAgBxpH,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAM89B,cAAc/9B,KAAKC,MAAM4P,8CAXxM0uB,OACA6qF,OACA9pF,OACAmqF,OACAprF,OAUIgrF,EAAwBD,GAAkBA,EAAev0G,GAAG,IAC/C,GACC,EAIpB7U,KAAKgI,SAAS,CACZyhH,aACAR,YAPiB,EAQjBC,aAPkB,EAQlB3qF,eACAF,eACAiB,gBACA8pF,iBACAC,yBACC,WACDlmH,EAAKmmH,+JAKP,IACIhG,EAAc,KACd55G,EAAc,KACd80E,EAAe,KACf8hC,EAAiB,KACjBC,GAAiB,EAEfmJ,EAAiB1pH,KAAK+C,cAAciS,gBAAgB,CAAC,WAAWhV,KAAKC,MAAMupH,kBAC7ER,EAAWU,EAAejS,YAAYz3G,KAAKwH,MAAMs8G,gBAErD,OAAQ9jH,KAAKwH,MAAMs8G,gBACjB,IAAK,UACHxD,GAAiB,EACjB9hC,EAAex+E,KAAKC,MAAMwqE,UAC1B/gE,EAAc1J,KAAKC,MAAMyJ,YACzB45G,EAActjH,KAAKwH,MAAM+2B,aAC3B,MACA,IAAK,QACH+hF,GAAiB,EACjB52G,EAAc1J,KAAKC,MAAM89B,cACzBulF,EAActjH,KAAKwH,MAAM4hH,eACzB5qC,EAAex+E,KAAKC,MAAM89B,cAAcsB,WAC1C,MACA,IAAK,UACHihF,GAAiB,EACjB52G,EAAc1J,KAAKC,MAAM89B,cACzBygD,EAAex+E,KAAKC,MAAM89B,cAAcsB,WACxCikF,EAActjH,KAAKwH,MAAM83B,cACpBt/B,KAAKwH,MAAMyhH,aACd1I,GAAiB,EACjByI,EAAWU,EAAejS,YAAYkS,aAE1C,MACA,IAAK,WACHrJ,GAAiB,EACjB9hC,EAAex+E,KAAKC,MAAMwqE,UAE1B/gE,EAAc1J,KAAKC,MAAM89B,cACzBulF,EAActjH,KAAKwH,MAAM4hH,eAGpBppH,KAAKwH,MAAM0hH,cACd3I,GAAiB,EACjByI,EAAWU,EAAejS,YAAYmS,cAc5C,IAAM9G,EAAkB,MAAAn8G,OAAS3G,KAAKwH,MAAMs8G,eAApB,kBAAAn9G,OAAmD+C,EAAYsH,MAA/D,2DAIxBhR,KAAKgI,SAAS,CACZu6G,QA9DY,KA+DZyG,WACAt/G,cACA45G,cACA9kC,eACA+hC,iBACAD,iBACAwC,uKAYiBjzF,GACnB,IAAIvS,EAAa,KACbw6C,EAAe,KAcnB,OAZI93D,KAAKC,MAAM89B,cAAcmB,UAAUl/B,KAAKwH,MAAMs8G,kBAChDxmG,EAAatd,KAAKC,MAAM89B,cAAcmB,UAAUl/B,KAAKwH,MAAMs8G,gBAM3DhsD,EAAe,CAACjoC,IAGlBqH,QAAQqc,IAAI,uBAAuBj2B,EAAWw6C,GAEvC,CACLx6C,aACAw6C,2FAIajoC,gFACTg6F,EAAe7pH,KAAK+C,cAAckO,MAAMjR,KAAKC,MAAMyJ,YAAY+nD,gBAC9CzxD,KAAK+C,cAAc28B,oBAAnB,OAA8C,GAAG1/B,KAAKC,MAAMspH,iBAAiBvpH,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAMupH,gBAAgBxpH,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAM89B,cAAc/9B,KAAKC,MAAM4P,2BACtM4B,KAAKoe,GAAQhb,GAAGg1G,0BAC3B7pH,KAAKgI,SAAS,CACZmhH,YAAY,6BAEP,oCAEF,qJAKP,OADAnpH,KAAK0H,WACG1H,KAAKwH,MAAMs8G,gBACjB,IAAK,QACL,IAAK,UACH9jH,KAAKgI,SAAS,CACZmhH,YAAY,qDAcFrF,GAChB9jH,KAAKgI,SAAS,CACZ87G,oDAIK,IAAAz5G,EAAArK,KACD0pH,EAAiB1pH,KAAK+C,cAAciS,gBAAgB,CAAC,WAAWhV,KAAKC,MAAMupH,kBAC3EM,EAAkD,OAA/B9pH,KAAKC,MAAMupH,gBAA2B,KAAO,KAChEO,EAAsB/pH,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW80G,IACrED,EAAe7pH,KAAK+C,cAAcS,YAAYxD,KAAK+C,cAAckO,MAAMjR,KAAKC,MAAMyJ,YAAY+nD,OAAO,GAAG,IAAIzxD,KAAKC,MAAMuJ,cACvHg0B,EAAiBx9B,KAAKC,MAAM89B,cAAcsB,WAAW7B,eAAe1sB,OAAQ,SAAAmoB,GAAC,OAAIA,EAAEnH,UACzF,OACE0kF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBqF,SAAU,CAAC,OAAO,UAGftG,KAAKC,MAAM+pH,kBACVxT,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZE,eAAgB,YAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJzL,KAAM,QACNvC,MAAO,OACPmqH,cAAe,SACf7nH,KAAM2nH,EAAoB3nH,KAC1B6E,UAAW8iH,EAAoBznH,MAAM4nH,IACrCtkH,QAAS,SAAAkB,GAAC,OAAIuD,EAAKpK,MAAMkqH,kBAAkBJ,EAAoBlsC,SAPjE,aASaksC,EAAoB5nH,OAKvCq0G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHwF,OAAO,OAMTixG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJtwG,GAAI,EACJ/M,WAAY,SACZC,cAAe,MACfumH,aAAY,aAAA5gH,OAAe+iH,EAAepnH,MAAM4nH,MAEhD1T,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJS,IAAK4nH,EAAevoH,MACpBkB,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAENonH,EAAevnH,OAGpBq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,UACL09F,SAAS,OACToK,aAAY,aAAA5gH,OAAc3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEpD7F,WAAY,aACZE,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJrL,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAJT,YAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpBiP,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,iBAE5By4E,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJrL,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAJT,SAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpBiP,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,iBAE5By4E,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,aAOAk0G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,kBAG9By4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,SACfD,WAAY,cAEZy1G,EAAAr2G,EAAAC,cAAC0uB,EAAA,EAAD,CACEhrB,UAAW,CACTgK,GAAG,GAELlL,KAAM,mBACNqsB,aAAc,CACZD,QAAQhvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,mBAG3DwhG,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,cACLkc,YAAY,CACVpd,eAAe,eAGnB+P,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,kBAG9By4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAAC0uB,EAAA,EAAD,CACEhrB,UAAW,CACTgK,GAAG,GAELlL,KAAM,kBACNqsB,aAAc,CACZD,QAAQhvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,sBAG3DwhG,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,iBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,kBAG9By4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAAC0uB,EAAA,EAAD,CACElsB,KAAM,MACNqsB,aAAc,CACZD,QAAQhvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,mBAG3DwhG,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,wBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,iBAG1BP,EAAex5B,OAAO,GACpBwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,yBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,EACTD,WAAW,EACX80G,WAAW,IACXj1G,MAAM,aAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAMpCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,SACfD,WAAY,cAEZy1G,EAAAr2G,EAAAC,cAAC0uB,EAAA,EAAD,CACElsB,KAAM,YACNqsB,aAAc,CACZD,QAAQhvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,gBAG3DwhG,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,kBACLlC,MAAM,CACJwC,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,kBAG9By4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,SACfD,WAAY,cAEZy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,UAOAk0G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,cACLlC,MAAM,CACJwC,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAI3B/9B,KAAKC,MAAMyJ,YAAYuhB,eAAiBjrB,KAAKC,MAAM+B,WAClDw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,GAAI,KACZkB,cAAe,SACfD,WAAY,cAEZy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,aAOAk0G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJ0D,SAAS,EACTlB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAOlC/9B,KAAKC,MAAM+pH,iBACPxT,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPmqH,cAAe,SACf7nH,KAAMsnH,EAAetnH,KACrB6E,UAAWyiH,EAAepnH,MAAM4nH,IAChCtkH,QAAS,SAAAkB,GAAC,OAAIuD,EAAKpK,MAAMkqH,kBAAkBT,EAAe7rC,SAGxD79E,KAAKC,MAAMyJ,YAAX,SAAA/C,OAAkC+iH,EAAevnH,MAAjD,cAAAwE,OAAwE+iH,EAAevnH,OAI7Fq0G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT8E,GAAG,EACH5H,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,6BAKd4zG,EAAAr2G,EAAAC,cAACkqH,EAAD3qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwxD,MAAOo4D,EACPtP,WAAYv6G,KAAKy6G,WACjBmD,OAAmC,UAA3B59G,KAAKwH,MAAM2hH,eAErB3S,EAAAr2G,EAAAC,cAACmqH,EAAA,EAAD,CACEC,iBAAiB,EACjBpoH,KAAI,mBACJqkB,MAAK,mBACL5W,QAAS7P,KAAKC,MAAM4P,QACpB0qG,WAAYv6G,KAAKy6G,WACjBnqF,UAAWtwB,KAAKC,MAAMuJ,cACtBo0G,OAAmC,UAA3B59G,KAAKwH,MAAM2hH,YACnBvmH,KAAI,+DAAA+D,OAAiE3G,KAAKwH,MAAMiiH,WAAazpH,KAAKwH,MAAMiiH,WAAWv8G,QAAQ,GAAK,OAA5H,mCAAAvG,OAAoK3G,KAAKC,MAAMuJ,cAA/K,cACJihH,MAAK,eAAA9jH,OAAiB3G,KAAKwH,MAAMiiH,WAAazpH,KAAKwH,MAAMiiH,WAAWv8G,QAAQ,GAAK,OAA5E,gBAAAvG,OAAiG3G,KAAKC,MAAMuJ,cAA5G,uCAAA7C,OAA+J3G,KAAK+C,cAAciS,gBAAgB,CAAC,aAAnMrO,OAAiN3G,KAAKC,MAAMioH,gBAAgBrqC,MAA5O,2DAjrBch7E,uCCg5CdkmH,6MAp4CbvhH,MAAQ,CACNwhH,SAAS,KACT0B,SAAS,KACTjB,WAAW,KACXR,WAAW,KACXC,YAAY,KACZC,YAAY,KACZnsC,YAAY,KACZ2tC,YAAY,KACZrH,YAAY,KACZsH,YAAY,KACZ5sF,YAAY,KACZt0B,YAAY,KACZ80E,aAAa,KACbngD,aAAa,KACbE,aAAa,KACbssF,cAAa,EACbvrF,cAAc,KACdwrF,gBAAe,EACfC,eAAe,KACf3B,eAAe,KACf17C,gBAAe,EACf4yC,eAAe,KACfC,gBAAe,EACfiJ,gBAAgB,KAChBxsF,kBAAkB,KAClB8lF,mBAAmB,KACnBgB,eAAe,UACfkH,sBAAsB,KACtBC,oBAAoB,QACpB5B,uBAAsB,KAIxBtmH,cAAgB,OAyShB03G,WAAa,WACXv1G,EAAK8C,SAAS,CACZmhH,YAAa,mFAxSXnpH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAUC,2EACjC5H,KAAKkD,YAEkBlD,KAAKC,MAAM4P,UAAYlI,EAAUkI,SAEtD7P,KAAK0H,WAGDwjH,EAAwBtjH,EAAUk8G,iBAAmB9jH,KAAKwH,MAAMs8G,eAChEqH,EAA6BvjH,EAAUqjH,sBAAwBjrH,KAAKwH,MAAMyjH,qBAC5EC,GAAyBC,IAC3BnrH,KAAKspH,gUAeG5oG,QAAQqD,IAAI,CAEpB/jB,KAAK+C,cAAc0jC,sBAAsBzmC,KAAKC,MAAMyJ,aACpD1J,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAM4P,SACvE7P,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKC,MAAM89B,cAAc57B,KAAKnC,KAAKC,MAAM4P,SAC5E7P,KAAK+C,cAAcq8B,wBAAwBp/B,KAAKC,MAAM89B,cAAcsB,WAAWl9B,KAAKnC,KAAKC,MAAM4P,QAAQ7P,KAAKC,MAAM89B,cAAcsB,WAAW17B,SAAS3D,KAAKC,MAAM89B,cAAcmB,UAAUI,eACvLt/B,KAAK+C,cAAc28B,oBAAoB,aAAa,GAAG1/B,KAAKC,MAAMspH,iBAAiBvpH,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAMupH,gBAAgBxpH,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAM89B,cAAc/9B,KAAKC,MAAM4P,SAClM7P,KAAK+C,cAAc28B,oBAAoB,eAAe,GAAG1/B,KAAKC,MAAMspH,iBAAiBvpH,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAMupH,gBAAgBxpH,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAM89B,cAAc/9B,KAAKC,MAAM4P,SACpM7P,KAAK+C,cAAc28B,oBAAoB,iBAAiB,GAAG1/B,KAAKC,MAAMspH,iBAAiBvpH,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAMupH,gBAAgBxpH,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAM89B,cAAc/9B,KAAKC,MAAM4P,8CAftM+6G,OACArsF,OACA6qF,OACA9pF,OACAmqF,OACAprF,OACA0sF,QAYiB,GACC,EAId/tF,EAAoBr9B,OAAOkR,OAAO7Q,KAAK+C,cAAciS,gBAAgB,CAAC,cAAclP,IAAK,SAAA+5B,GAAW,MAAK,CAC7Gn1B,MAAMm1B,EAAYt8B,KAClBnB,KAAKy9B,EAAY1+B,MACjBqM,MAAMqyB,EAAY19B,KAClB27B,QAAQ+B,EAAYt8B,KACpBw6B,cAAc56B,EAAKlD,MAAMyJ,YAAYm2B,EAAYt8B,SAG7C8lH,EAAwBD,GAAkBA,EAAev0G,GAAG,GAC5Dm2G,EAAwBhuF,EAAkB9d,KAAM,SAAA2gB,GAAW,OAAIA,EAAYn1B,QAAUvH,EAAKlD,MAAMupH,kBAChGA,EAAkBwB,EAAsBtgH,MAExC8yB,EAAiBx9B,KAAKC,MAAM89B,cAAcsB,WAAW7B,eAAe1sB,OAAQ,SAAAmoB,GAAC,OAAIA,EAAEnH,UACrF47C,EAAiBlwC,EAAex5B,OAAO,EACrC6mH,EAAen9C,EACfo9C,EAAiBxrF,GAAiBt/B,KAAK+C,cAAckO,MAAMquB,GAAezqB,GAAG,IAI9E64D,GAAkBo9C,IACrBp9C,GAAiB,GAGfu9C,EAAsB,SACrBJ,GAAgBC,IACnBG,EAAsB,WAGxBjrH,KAAKgI,SAAS,CACZyhH,aACAR,YAnCiB,EAoCjBC,aAnCkB,EAoClB0B,cACArsF,eACAssF,eACAxsF,eACAiB,gBACAyrF,iBACAr9C,iBACA07C,iBACA0B,iBACAtB,kBACAxsF,oBACAiuF,sBACAD,wBACA3B,yBACC,WACDlmH,EAAKmmH,+JAKP,IACIhG,EAAc,KACd55G,EAAc,KACd80E,EAAe,KACf8hC,EAAiB,KACjBC,GAAiB,EAEjBvjC,EAAch9E,KAAKwH,MAAMs8G,eACvB4F,EAAiB1pH,KAAK+C,cAAciS,gBAAgB,CAAC,WAAWhV,KAAKC,MAAMupH,kBAC3ExrF,EAAch+B,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,kBAAkBhV,KAAKC,MAAMuJ,gBAC1Gw/G,EAAWhpH,KAAK+C,cAAcktB,aAAa,CAAC,WAAWjwB,KAAKwH,MAAMs8G,gBAAgB9jH,KAAKC,MAAMyJ,cAAgBggH,EAAejS,YAAYz3G,KAAKwH,MAAMs8G,gBAEvJ,OAAQ9jH,KAAKwH,MAAMs8G,gBACjB,IAAK,UACHxD,GAAiB,EACjB9hC,EAAex+E,KAAKC,MAAMwqE,UAC1B/gE,EAAc1J,KAAKC,MAAMyJ,YACzB45G,EAActjH,KAAKwH,MAAM+2B,aAErBP,GAAeA,EAAYc,aAAa9tB,MAAMlE,gBAAkB9M,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAMupH,iBAAiBx4G,MAAMlE,eAAiB9M,KAAKwH,MAAM4hH,gBAAkBppH,KAAKwH,MAAM4hH,eAAev0G,GAAG,KACtMm0G,EAAQ,cAAAriH,OAAiBq3B,EAAYc,aAAa9tB,MAA1C,8CAEZ,MACA,IAAK,QAOH,OANAgsE,EAAch9E,KAAKwH,MAAMyjH,oBAEvBjC,EADEhpH,KAAKwH,MAAMkmE,eACFg8C,EAAejS,YAAYz3G,KAAKwH,MAAMyjH,qBAEtC,KAELjrH,KAAKwH,MAAMyjH,qBACjB,IAAK,SAECjtF,GAAgBh+B,KAAKwH,MAAMqjH,eAC7B7B,EAAW,MAEb1I,GAAiB,EACjB52G,EAAc1J,KAAKC,MAAM89B,cACzBulF,EAActjH,KAAKwH,MAAM4hH,eACzB5qC,EAAex+E,KAAKC,MAAM89B,cAAcsB,WAC1C,MACA,IAAK,UACHihF,GAAiB,EACjB52G,EAAc1J,KAAKC,MAAM89B,cACzBygD,EAAex+E,KAAKC,MAAM89B,cAAcsB,WACxCikF,EAActjH,KAAKwH,MAAM83B,cACpBt/B,KAAKwH,MAAMyhH,aACd1I,GAAiB,EACjByI,EAAWU,EAAejS,YAAYkS,aAM9C,MACA,IAAK,WACHrJ,GAAiB,EACjB9hC,EAAex+E,KAAKC,MAAMwqE,UAI1B/gE,EAAc1J,KAAKC,MAAMyJ,YACzB45G,EAActjH,KAAKwH,MAAM4hH,eAAiBppH,KAAKwH,MAAM4hH,eAAen8G,MAAMjN,KAAKwH,MAAM62B,cAAgB,KAIhGr+B,KAAKwH,MAAM0hH,cACd3I,GAAiB,EACjByI,EAAWU,EAAejS,YAAYmS,cAc5C,IAAM9G,EAAqBp5G,EAAW,MAAA/C,OAAS3G,KAAKwH,MAAMs8G,eAApB,kBAAAn9G,OAAmD+C,EAAYsH,MAA/D,2DAAgI,KAItKhR,KAAKgI,SAAS,CACZu6G,QAvFY,KAwFZyG,WACAhsC,cACAh/C,cACAt0B,cACA45G,cACA9kC,eACA+hC,iBACAD,iBACAwC,uKAYiBjzF,EAAOixF,GAC1B,IAAIxjG,EAAa,KACbw6C,EAAe,KAEnB,GAAI93D,KAAKC,MAAM89B,cAAcmB,UAAUl/B,KAAKwH,MAAMs8G,gBAGhD,GAFAxmG,EAAatd,KAAKC,MAAM89B,cAAcmB,UAAUl/B,KAAKwH,MAAMs8G,gBAEzB,aAA9B9jH,KAAKwH,MAAMs8G,eAA8B,CAC3C,IAAIsH,EAAuB,MAEzBA,EADEtK,EACqB9gH,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM4hH,gBAAgBn8G,MAAMjN,KAAK+C,cAAckO,MAAM6vG,GAAoB79F,IAAI,MAE3GjjB,KAAK+C,cAAckO,MAAM4e,GAAQ5M,IAAIjjB,KAAK+C,cAAcixD,qBAAqBh0D,KAAKwH,MAAM62B,aAAa,MAIrGxpB,GAAG7U,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM4hH,mBAC9DgC,EAAuBprH,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM4hH,iBAM7DtxD,EAAe,CAFfszD,EAAuBprH,KAAK+C,cAAcixD,qBAAqBo3D,EAAsB,SAInD,UAA9BprH,KAAKwH,MAAMs8G,iBACbxmG,EAAatd,KAAKC,MAAM89B,cAAcmB,UAAUl/B,KAAKwH,MAAMyjH,sBAG7DnzD,EAAe,CAACjoC,GAMpB,MAAO,CACLvS,aACAw6C,2FAIajoC,8EACTg6F,EAAe7pH,KAAK+C,cAAckO,MAAMjR,KAAKC,MAAMyJ,YAAY+nD,QACpD58C,GAAG,mCACK7U,KAAK+C,cAAc28B,oBAAnB,OAA8C,GAAG1/B,KAAKC,MAAMspH,iBAAiBvpH,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAMupH,gBAAgBxpH,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAM89B,cAAc/9B,KAAKC,MAAM4P,2BACtM4B,KAAKoe,GAAQhb,GAAGg1G,0BAC3B7pH,KAAKgI,SAAS,CACZmhH,YAAY,6BAEP,oCAGJ,qJAUP,OANAnpH,KAAK0H,WAE0C,oBAApC1H,KAAKC,MAAMmnH,sBACpBpnH,KAAKC,MAAMmnH,uBAGLpnH,KAAKwH,MAAMs8G,gBACjB,IAAK,QACL,IAAK,UACH,GAAkC,YAA9B9jH,KAAKwH,MAAMs8G,gBAAmE,UAAnC9jH,KAAKwH,MAAMyjH,oBAAgC,CACxF,IAAMN,EAA4C,YAA9B3qH,KAAKwH,MAAMs8G,eAA+B,YAAc,SACtE4G,EAAyC,YAA9B1qH,KAAKwH,MAAMs8G,eAA+B9jH,KAAKwH,MAAMujH,eAAiB/qH,KAAKwH,MAAMiiH,WAClGzpH,KAAKgI,SAAS,CACZ0iH,WACAC,cACAxB,YAAY,sDAeJrF,GAChB9jH,KAAKgI,SAAS,CACZ87G,0DAIWmH,GACbjrH,KAAKgI,SAAS,CACZijH,8DAIU3iE,GAEZ,IAAMohE,EAAiB1pH,KAAK+C,cAAciS,gBAAgB,CAAC,WAAWszC,IAClEohE,GACF1pH,KAAKC,MAAMkqH,kBAAkBT,EAAe7rC,wCAIvC,IAAAxzE,EAAArK,KAEDqrH,EAAwC,UAA9BrrH,KAAKwH,MAAMs8G,eACrBwH,EAA0C,YAA9BtrH,KAAKwH,MAAMs8G,eACvByH,EAA2C,aAA9BvrH,KAAKwH,MAAMs8G,eAExBtmF,EAAiBx9B,KAAKC,MAAM89B,cAAcsB,WAAW7B,eAAe1sB,OAAQ,SAAAmoB,GAAC,OAAIA,EAAEnH,UACnF+3F,EAAe7pH,KAAK+C,cAAcS,YAAYxD,KAAK+C,cAAckO,MAAMjR,KAAKC,MAAMyJ,YAAY+nD,OAAO,GAAG,IAAIzxD,KAAKC,MAAMuJ,cAuE7H,OACEgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjB,KAAKwH,MAAMw1B,kBAmBVw5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBqF,SAAU,CAAC,OAAO,SAElBkwG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,mBAKA0oG,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAADpa,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,WACNiZ,cAAc,EACdb,kBAnHY,SAAAta,GACxB,IAAM2nH,EAAiB3nH,EAAMka,QAAQ+E,KAAM,SAAAssG,GAAM,OAAIA,EAAO9gH,QAAUzK,EAAMyK,QAC5E,OAAKk9G,EAKHpR,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,UAEZy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJS,IAAK8lH,EAAexlH,KACpBC,KAAMgI,EAAKpK,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,GAEXxC,EAAMuN,SArBN,MAiHG2M,QAASna,KAAKwH,MAAMw1B,kBACpB3gB,SAAUrc,KAAKyrH,cAAc9sG,KAAK3e,MAClCwa,qBAvFe,SAAAva,GAC3B,IAAMib,EAAcjb,EAAMib,YAAYf,QAAQ+E,KAAM,SAAAssG,GAAM,OAAIA,EAAO9gH,QAAUzK,EAAMib,YAAYxQ,MAAMA,QAEvG,OAAKwQ,EAIHs7F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACEyG,MAAO,CACLoZ,KAAK,KAEPxe,eAAgB,iBACZhB,EAAMya,YAEV87F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMya,WAHZ,CAIE3Z,WAAY,SACZC,cAAe,MACfqF,MAAO,CAACoI,OAAO,WACfxN,eAAgB,eAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJS,IAAKoZ,EAAY9Y,KACjBC,KAAMgI,EAAKpK,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,GAEXyY,EAAY1N,SA3BZ,MAoFG6M,aAAcra,KAAKwH,MAAMwjH,0BAG7BxU,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,oBAKA0oG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACH+N,GAAG,GAELvN,UAAU,GAEVi2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,EACPuG,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,UACL09F,SAAS,QAEXn8G,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,YAOA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpBiP,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,iBAE5By4E,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,SAOA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpBiP,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,iBAE5By4E,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBE,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,aAOA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAAC0uB,EAAA,EAAD,CACEnsB,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,CAAC,EAAE,IAEhBG,KAAM,mBACNosB,QAAShvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,kBAE1DwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAAC0uB,EAAA,EAAD,CACEnsB,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,CAAC,EAAE,IAEhBG,KAAM,kBACNosB,QAAShvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,qBAE1DwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,iBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAAC0uB,EAAA,EAAD,CACEnsB,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,CAAC,EAAE,IAEhBG,KAAM,MACNosB,QAAShvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,kBAE1DwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,SACfD,WAAY,aACZE,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,wBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,iBAG1BP,EAAex5B,OAAO,GACpBwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,MACfD,WAAY,cAEZy1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,yBACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,EACTD,WAAW,EACX80G,WAAW,IACXj1G,MAAM,aAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,oBAOtCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAAC0uB,EAAA,EAAD,CACEnsB,UAAW,CACTD,SAAS,CAAC,EAAE,GACZD,WAAW,CAAC,EAAE,IAEhBG,KAAM,YACNosB,QAAShvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,eAE1DwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,kBACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,UAOA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,eAEP6O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,mBAIhCy4E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,MAAM,OACdkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,aAOA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmf,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJ0D,SAAS,EACTjB,SAAS,CAAC,EAAE,GACZJ,MAAM,cAGV0O,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMupH,gBACpB9/G,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBxrF,cAAe/9B,KAAKC,MAAM89B,oBAMhC/9B,KAAKC,MAAMyJ,YAAY+tG,aACrBjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,EACJzT,GAAI,EACJhO,MAAO,EACPkB,cAAe,SACf0qH,UAAS,aAAA/kH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEhD4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAHjB,wBAOA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,OACVmG,UAAW,WAEV7I,KAAKC,MAAMyJ,YAAY+tG,cAI1Bz3G,KAAKwH,MAAMojH,aACTpU,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,EACJ3Y,GAAI,EACJ5H,cAAe,SACfD,WAAY,aACZ2qH,UAAS,aAAA/kH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEhD4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJqB,SAAU,OACVJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAJjB,sBAQA+zG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CACE/8F,KAAM5lB,KAAK+C,cAAc8iB,2BAA2B7lB,KAAKwH,MAAMojH,YAAYhtG,kBAE3E44F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,QAET1C,KAAK+C,cAAcqP,YAA6C,IAAjCpS,KAAKwH,MAAMojH,YAAYx2G,WAAgB2oE,MAAMvnE,OAAO,qBAJtF,QAMAghG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrD,KAAM,QACNF,KAAM,YACNG,MAAO,iBAKfk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJqB,SAAU,OACVJ,MAAO,WACPG,WAAY,CAAC,EAAE,IAJjB,wBAQA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,QAET1C,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAMojH,YAAY/6F,OAAO7vB,KAAKC,MAAMyJ,YAAY/F,UAAUuJ,QAAQ,GAJ9G,IAImHlN,KAAKC,MAAMyJ,YAAYsH,YAY7H,UAA7BhR,KAAKC,MAAMuJ,eAA4D,OAA/BxJ,KAAKC,MAAMupH,iBACjDhT,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACT6B,EAAE,EACFqH,GAAG,EACHkF,GAAG,EACHhO,MAAM,GAERS,UAAU,EACVD,eAAe,EACfkC,UAAW,CACTH,KAAK,QACLC,MAAM,cAERF,KAAM,iBACNO,UAAW,CACTF,WAAW,IACXH,MAAM,aACNuG,UAAU,SACVnG,SAAS,CAAC,OAAO,SAEnBE,KAAI,8dAAA+D,OAAge3G,KAAK+C,cAAc8gC,uBAAnB,gBAAhe,gIAIV2yE,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,kBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAO+lH,EAAY,EAAI,GAEzBvO,QAAS,UACTj9G,MAAO,CAAC,EAAE,OACVkC,SAAUhC,KAAKC,MAAM+B,SACrBo7G,SAAU,qBACVn7G,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAU+qH,EACV7qH,YAAc,SAAAqG,GAAC,OAAIuD,EAAK28G,kBAAkB,cAE5CxQ,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAO8lH,EAAU,EAAI,EACrBnkH,UAAUlH,KAAKwH,MAAMkmE,gBAEvB5tE,MAAO,CAAC,EAAE,OACVi9G,QAAS,kBACTK,SAAU,kBACVp7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAU8qH,EACV5qH,YAAc,SAAAqG,GAAC,OAAIuD,EAAK28G,kBAAkB,YAE5CxQ,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOgmH,EAAa,EAAI,GAE1BzrH,MAAO,CAAC,EAAE,OACVi9G,QAAS,WACTK,SAAU,oBACVp7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUgrH,EACV9qH,YAAc,SAAAqG,GAAC,OAAIuD,EAAK28G,kBAAkB,iBAK9CqE,GAAWrrH,KAAKwH,MAAMkmE,gBACpB8oC,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,wBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,QACNR,KAAM,SACNG,UAAW,UACXnB,YAAa,UACbX,YAAc,SAAAqG,GAAC,OAAIuD,EAAK48G,eAAe,UACvC1mH,SAA8C,UAAnCP,KAAKwH,MAAMyjH,uBAExBzU,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,UACNR,KAAM,cACNG,UAAW,SACXnB,YAAa,UACbZ,YAAcR,KAAKwH,MAAMsjH,eACzBvqH,SAA8C,YAAnCP,KAAKwH,MAAMyjH,oBACtBxqH,YAAc,SAAAqG,GAAC,OAAIuD,EAAK7C,MAAMsjH,eAAiBzgH,EAAK48G,eAAe,WAAa,WAOxFjnH,KAAKwH,MAAMwhH,UAAYhpH,KAAKC,MAAM4P,SAChC2mG,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACT6B,EAAE,EACFqH,GAAG,EACHkF,GAAG,EACHhO,MAAM,GAERS,UAAU,EACVD,eAAe,EACfkC,UAAW,CACTH,KAAK,QACLC,MAAM,cAERK,UAAW,CACTF,WAAW,IACXH,MAAM,aACNuG,UAAU,SACVnG,SAAS,CAAC,OAAO,SAEnBN,KAAM,mBACNQ,KAAM5C,KAAKwH,MAAMwhH,WAIvBxS,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGZoqH,IAAYrrH,KAAKwH,MAAMkmE,gBAAoB29C,GAA8C,UAAnCrrH,KAAKwH,MAAMyjH,sBAAoCjrH,KAAKwH,MAAMqjH,aAChHrU,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAG,EACHqH,GAAI,IAGN4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNC,MAAO,WACPH,KAAM,iBAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,WACPuG,UAAW,UAHb,8CASFwiH,GAA8C,UAAnCrrH,KAAKwH,MAAMyjH,qBAAmCjrH,KAAKwH,MAAMw2B,YACtEw4E,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAI,GAENxG,KAAM,mBACNQ,KAAI,iFAAA+D,OAAmF3G,KAAK+C,cAAc8gC,uBAAnB,UAAAl9B,OAAoD3G,KAAKC,MAAMuJ,gBAAlJ,mBAAA7C,OAAoL3G,KAAKC,MAAMuJ,cAA/L,gBAEJgtG,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAa,SAAAqG,GAAC,OAAIuD,EAAKpK,MAAM8G,YAAX,UAAAJ,OAAiC0D,EAAKpK,MAAMuJ,kBALhE,gBAUA6hH,GAA8C,YAAnCrrH,KAAKwH,MAAMyjH,sBAAsCjrH,KAAKC,MAAM89B,cAAcsB,WAAW+/E,mBAClG5I,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAG,EACH68G,GAAI,EACJx1G,GAAI,IAGN4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNC,MAAO,WACPH,KAAM,mBAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPuG,UAAW,UALb,mBAOkB2tG,EAAAr2G,EAAAC,cAAA,cAASJ,KAAKwH,MAAM83B,cAAcpyB,QAAQ,GAA1C,IAA+ClN,KAAKwH,MAAMkC,YAAY8D,OAPxF,KASAgpG,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,CACEie,OAAQ,IACJ7d,KAAKC,MAFX,CAGE4C,UAAWskH,IACX9oG,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB8d,eAAgB,CACdrc,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,EAAE,GACX0B,aAAa,EACbkJ,MAAM,UACNzD,UAAU,UAEZiK,OAAQ,UACRsM,aAAcxd,KAAKwH,MAAMg3E,aAAar8E,KACtC4F,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzCsd,WAAYtd,KAAKC,MAAM89B,cAAcmB,UAAUigF,aAKrD3I,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,CACEsd,MAAO,MACHld,KAAKC,MAFX,CAGEqF,YAAa,CACXxF,MAAM,CAAC,EAAE,MAEXsgH,eAAe,EACf12G,YAAa1J,KAAKwH,MAAMkC,YACxB60B,aAAcv+B,KAAKwH,MAAM87G,YACzB9kC,aAAcx+E,KAAKwH,MAAMg3E,aACzBkjC,WAAY1hH,KAAK0hH,WAAW/iG,KAAK3e,MACjCsgH,eAAgBtgH,KAAKwH,MAAM84G,eAC3BC,eAAgBvgH,KAAKwH,MAAM+4G,eAC3Bx4G,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC8iH,mBAAoB9iH,KAAKwH,MAAMs7G,mBAC/BlC,oBAAqB5gH,KAAK4gH,oBAAoBjiG,KAAK3e,MACnDwgH,iBAAkBxgH,KAAK4rH,yBAAyBjtG,KAAK3e,MACrD8d,qBAAsB9d,KAAK8d,qBAAqBa,KAAK3e,MACrDkR,OAAQlR,KAAK+C,cAAc0K,WAAWzN,KAAKwH,MAAMw1E,eAG/CsuC,EACE9U,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACw4G,EAAA,EAADj5G,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE06G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUl5G,KAAKC,MAAMuJ,gBAGnBxJ,KAAKC,MAAMyJ,YAAYu1G,UAAYj/G,KAAKC,MAAMyJ,YAAYu1G,SAASQ,gBACjEjJ,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAG,EACHT,GAAI,IAGN01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,WACPuG,UAAW,UAHb,sBAKqB2tG,EAAAr2G,EAAAC,cAAA,cAASJ,KAAKC,MAAMuJ,eALzC,gBAOAgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,WACPuG,UAAW,SACXC,wBAAyB,CAACC,OAAO/I,KAAKC,MAAMyJ,YAAYu1G,SAASQ,qBAIrE,OAIR4L,EACF7U,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAG,EACHT,GAAI,IAGN01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,WACPuG,UAAW,UAHb,sBAKqB2tG,EAAAr2G,EAAAC,cAAA,cAASJ,KAAKwH,MAAMkC,YAAY8D,OALrD,aAK+ExN,KAAKwH,MAAMyjH,oBAL1F,OASFM,GACF/U,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAG,EACHT,GAAI,IAGN01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,WACPuG,UAAW,UAHb,sBAKsB7I,KAAKC,MAAMuJ,cALjC,gBAK4DgtG,EAAAr2G,EAAAC,cAAA,WAL5D,2BAK0Fo2G,EAAAr2G,EAAAC,cAAA,cAASJ,KAAKwH,MAAMkC,YAAY8D,OAL1H,2DAKkMxN,KAAKC,MAAMuJ,cAL7M,SAehBgtG,EAAAr2G,EAAAC,cAACkqH,EAAD3qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwxD,MAAOo4D,EACPtP,WAAYv6G,KAAKy6G,WACjBmD,OAAmC,UAA3B59G,KAAKwH,MAAM2hH,eAErB3S,EAAAr2G,EAAAC,cAACmqH,EAAA,EAAD,CACEC,iBAAiB,EACjBpoH,KAAI,mBACJqkB,MAAK,mBACL5W,QAAS7P,KAAKC,MAAM4P,QACpB0qG,WAAYv6G,KAAKy6G,WACjBnqF,UAAWtwB,KAAKC,MAAMuJ,cACtBo0G,OAAmC,UAA3B59G,KAAKwH,MAAM2hH,YACnBvmH,KAAI,yBAAA+D,OAA2B3G,KAAKwH,MAAMmjH,YAAtC,iCAAAhkH,OAAiF3G,KAAKwH,MAAMkjH,SAAW1qH,KAAKwH,MAAMkjH,SAASx9G,QAAQ,GAAK,OAAxI,mCAAAvG,OAAgL3G,KAAKC,MAAMuJ,cAA3L,cACJihH,MAAK,eAAA9jH,OAAiB3G,KAAKwH,MAAMkjH,SAAW1qH,KAAKwH,MAAMkjH,SAASx9G,QAAQ,GAAK,OAAxE,gBAAAvG,OAA6F3G,KAAKC,MAAMuJ,cAAxG,uCAAA7C,OAA2J3G,KAAK+C,cAAciS,gBAAgB,CAAC,aAA/LrO,OAA6M3G,KAAKC,MAAMioH,gBAAgBrqC,MAAxO,oDA97BT24B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,iCA5cOC,iDC4nBdgpH,8MAvoBbrkH,MAAQ,CACNsH,UAAU,KACV5F,UAAU,KACVC,WAAW,KACX4F,WAAW,KACXC,YAAY,QAIdjM,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,YACLlD,KAAKiP,qMAGkBtH,EAAWC,oFAClC5H,KAAKkD,YAECgM,EAA4BvH,EAAUwH,qBAAuBnP,KAAKC,MAAMkP,oBACzDC,KAAKC,UAAU1H,EAAU2H,iBAAmBF,KAAKC,UAAUrP,KAAKC,MAAMqP,gBACvEJ,IAClBlP,KAAKgI,SAAS,CACZkB,UAAU,MACV,WACA/F,EAAKoM,sBAIHC,EAAgB7H,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDyN,EAAmB9H,EAAU+H,YAAc1P,KAAKC,MAAMyP,WACxDF,GAAiBC,IACnBzP,KAAKiP,uVAKHK,EAAgBtP,KAAKC,MAAMqP,gBAERA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAK/D,KAAKC,MAAM+8B,mBAAmB0H,OAAQ,SAACp1B,EAAcouB,GAO/E,OANe/9B,OAAOoE,KAAKsG,EAAKpK,MAAM+8B,kBAAkBU,IACjDz5B,QAAS,SAAA+M,GACT1B,EAAc4kB,SAASljB,IAC1B1B,EAAcnC,KAAK6D,KAGhB1B,GACP,KAGE3N,EAAe3B,KAAKC,MAAM6rH,iBAE1B5iH,EAAY,GACZgK,EAAa,GACfnD,EAAgB,GAChBC,EAAmB,cAEjBhQ,KAAK+C,cAAckN,aAAaX,EAAhC,eAAAY,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA8C,SAAAiD,EAAO9J,GAAP,IAAA+G,EAAAC,EAAA,OAAAigB,EAAAtwB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,UAElDb,EAAcvG,GAAiB,KAEzB+G,EAAc5Q,OAAOkR,OAAOlP,GAAcmP,OAAO,SAAAC,GAAE,OAAKA,EAAGC,QAAUxH,OACxD+G,EAAYvM,OALmB,CAAAwP,EAAA5C,KAAA,eAO5CJ,EAAanG,EAAKtH,cAAckO,MAAM,GAPMuC,EAAA5C,KAAA,EAS1CvG,EAAKtH,cAAckN,aAAaM,EAAhC,eAAA8C,EAAA1T,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA4C,SAAAC,EAAOS,EAAGhL,GAAV,IAAAwL,EAAAC,EAAAN,EAAAU,EAAAksB,EAAAJ,EAAA1a,EAAAqb,EAAAmP,EAAA,OAAA/c,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAG3CG,EAAGlJ,QAASkJ,EAAGI,QAAwB,YAAdJ,EAAGI,QAHe,CAAAT,EAAAE,KAAA,eAAAF,EAAA2Q,OAAA,UAIvC,GAJuC,OAOhDrR,EAAmBA,EAAmBoB,KAAKC,IAAIrB,EAAiBsB,SAASP,EAAGQ,YAAcD,SAASP,EAAGQ,WAEhGA,EAAYD,SAASP,EAAGQ,WACxBC,EAAcnH,EAAKtH,cAAckO,MAAMF,EAAGS,aAVAd,EAAAyhB,GAYxCphB,EAAGG,OAZqCR,EAAAE,KAazC,YAbyCF,EAAAyhB,GAAA,EAgBzC,aAhByCzhB,EAAAyhB,GAAA,0BAc5C3hB,EAAaA,EAAWiB,KAAKD,GAded,EAAA2Q,OAAA,2BAiB5C7Q,EAAaA,EAAWkB,MAAMF,GAjBcd,EAAA2Q,OAAA,2BAAA3Q,EAAA2Q,OAAA,oBAwB5C7Q,EAAWmB,GAAG,KAChBnB,EAAanG,EAAKtH,cAAckO,MAAM,IAGlCC,EAASH,EAAGG,OACZU,EAAUpB,EACVstB,EAAU/sB,EAAG+sB,QACbJ,EAAW3sB,EAAG2sB,SACd1a,EAAcjS,EAAGiS,YACjBqb,EAAeh0B,EAAKtH,cAAckO,MAAMF,EAAGstB,cAC3CmP,EAAgBnjC,EAAKtH,cAAckO,MAAMF,EAAGy8B,eAC7CnP,EAAa/6B,SAAYkqC,EAAclqC,UAC1CyM,EAAcvG,GAAe2D,KAAK,CAChC+D,SACAU,UACAksB,UACAJ,WACAnsB,YACAC,cACAwR,cACAqb,eACAmP,kBAGFz9B,EAAcvG,GAAiBuG,EAAcvG,GAAeojC,KAAK,SAACzsC,EAAG+4B,GAAJ,OAAW5nB,SAASnR,EAAEoR,WAAaD,SAAS4nB,EAAE3nB,WAAa,GAAK,KAhDnF,yBAAAb,EAAAqB,SAAAzB,EAAAtQ,SAA5C,gBAAA4T,EAAAgf,GAAA,OAAAvf,EAAApB,MAAAjS,KAAAkS,YAAA,IAT0C,wBAAAsB,EAAAzB,SAAAuB,EAAAtT,SAA9C,gBAAAgS,GAAA,OAAA9B,EAAA+B,MAAAjS,KAAAkS,YAAA,WAgEFpD,EAAY,KACVqD,EAAcnS,KAAK+C,cAAcqP,YAAY,IAAIC,WAE/CrS,KAAKC,MAAMkP,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,4CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAYqD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CzD,EAAY,yCAIV0D,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB1B,SAAStR,KAAK+C,cAAcqP,YAAYpS,KAAK+C,cAAcqP,cAAcoD,OAAO,cAAc,YAAY,uBAAuBqlC,GAAG5nC,UAAU,KAE9JgrB,EAAsB,GAEvBjuB,IACHA,EAAmBgD,aAMfhT,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAKgM,GAA5C,eAAA4Q,EAAAhhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA2D,SAAAuR,EAAO5Q,GAAP,IAAA+6G,EAAAC,EAAAC,EAAAC,EAAAn3G,EAAArL,EAAAk0B,EAAAC,EAAAsuF,EAAAC,EAAAC,EAAArkE,EAAAskE,EAAAC,EAAAC,EAAA72G,EAAApE,EAAA,OAAAkf,EAAAtwB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,WAC3Db,EAAciB,GAAOhN,OADsC,CAAA8d,EAAAlR,KAAA,gBAEvDm7G,EAAqBh8G,EAAciB,GAAO,GAC1Cg7G,EAAej8G,EAAciB,GAAO,GACpCi7G,EAAiBl8G,EAAciB,GAAOkO,KAAM,SAAAnO,GAAE,MAAiB,OAAbA,EAAG+sB,WAAoB,KACzEouF,EAAiBn8G,EAAciB,GAAOkO,KAAM,SAAAnO,GAAE,MAAiB,OAAbA,EAAG+sB,WAAoB,KAIzE/oB,EAAsB1K,EAAKtH,cAAc6uG,4BAA4B5gG,GACrEtH,EAAcW,EAAKpK,MAAM+8B,kBAAkB+uF,EAAmBruF,SAAS5wB,eAAekE,GAV/B8Q,EAAAlR,KAAA,EAenD8P,QAAQqD,IAAI,CACpBkoG,EAAiB5hH,EAAKtH,cAAcyjD,uBAAuB98C,EAAY2hE,GAAGx+D,QAAQo/G,EAAe16G,UAAUyB,EAAc,CAAC,YAAY,eAAe,gBAAkB,GACvKk5G,EAAiB7hH,EAAKtH,cAAcyjD,uBAAuB98C,EAAY4nE,GAAGzkE,QAAQq/G,EAAe36G,UAAUyB,EAAc,CAAC,YAAY,eAAe,gBAAkB,KAjB5G,UAAA4qB,EAAA9b,EAAAnO,KAAAkqB,EAAAl+B,OAAAsyB,EAAA,EAAAtyB,CAAAi+B,EAAA,GAa3DuuF,EAb2DtuF,EAAA,GAc3DuuF,EAd2DvuF,EAAA,GAoBvDwuF,EAAkBj7G,KAAKC,IAAI46G,EAAiBA,EAAe16G,UAAYy6G,EAAaz6G,UAAU26G,EAAiBA,EAAe36G,UAAYy6G,EAAaz6G,WAEvJy2C,EAAemkE,EAAexlH,OAAOylH,GAAgBx/E,KAAK,SAACzsC,EAAG+4B,GAAJ,OAAW5nB,SAASnR,EAAEoR,WAAaD,SAAS4nB,EAAE3nB,WAAa,GAAK,IAE1H+6G,EAA4B,IAC9Bv3G,EAzByD,CAAA+M,EAAAlR,KAAA,SA4B3D,IAFM27G,EAAmB,GACnBC,EAA4B,GA3ByB72G,EAAA,SA4BlDpE,GACP,IAAM01B,EAAY+gB,EAAatjB,OAAQ,SAACuC,EAAUpH,GAChD,IAAM4sF,EAAWr7G,KAAK+9C,IAAI79C,SAASuuB,EAAYtuB,WAAWD,SAASC,IAKnE,OAJ2B,OAAvB01B,EAAUwlF,UAAqBA,EAASxlF,EAAUwlF,YACpDxlF,EAAUwlF,SAAWA,EACrBxlF,EAAUpH,YAAcA,GAEnBoH,GACP,CACAwlF,SAAS,KACT5sF,YAAY,OAGVoH,GAAaA,EAAUpH,cACpB0sF,EAAiBtlF,EAAUpH,YAAY7c,eAC1CupG,EAAiBtlF,EAAUpH,YAAY7c,aAAe,IAExDupG,EAAiBtlF,EAAUpH,YAAY7c,aAAa7V,KAAK85B,EAAUpH,YAAYtuB,WAC/Ei7G,EAA0BvlF,EAAUpH,YAAY7c,aAAe3Y,EAAKtH,cAAck9B,8BAA8Bv2B,EAAYu9B,EAAUpH,YAAY7c,eAlB7IzR,EAAU86G,EAAgB96G,GAAWyB,EAAczB,GAAWlH,EAAKpK,MAAMyV,iBAAkBC,EAA3FpE,GA5BkD,OAAAuQ,EAAAlR,KAAA,GAkD7B8P,QAAQqD,IAAIpkB,OAAOkR,OAAO27G,IAlDG,QAAA1qG,EAAAnO,KAoD3C1P,QAAS,SAACkR,EAAepP,GACvC,IAAMid,EAAcrjB,OAAOoE,KAAKyoH,GAA2BzmH,GAC3DwmH,EAAiBvpG,GAAa/e,QAAS,SAAAsN,GACrC,IAAM6D,EAAa/K,EAAKtH,cAAcqP,YAAsB,IAAVb,GAAgBiE,OAAO,cACzE82G,EAA0Bl3G,GAAcD,MAxDe,QAgExDjC,EAAWlC,KACdkC,EAAWlC,GAAS,IAGlBm7G,GACFA,EAAeloH,QAAS,SAAC47B,EAAY95B,GACnC,IAAM2mH,EAAc,CAClB5uF,QAAQ,KACRvsB,UAAUsuB,EAAYtuB,UACtB8sB,aAAah0B,EAAKtH,cAAckO,MAAM4uB,EAAYmuC,eAE9C54D,EAAa/K,EAAKtH,cAAcqP,YAAkC,IAAtBytB,EAAYtuB,WAAgBiE,OAAO,cACjFT,GAAuBu3G,EAA0Bl3G,KACnDs3G,EAAY33G,GAAuBu3G,EAA0Bl3G,IAE/DlC,EAAWlC,GAAO7D,KAAKu/G,KAIvBN,GACFA,EAAenoH,QAAS,SAAC47B,EAAY95B,GACnC,IAAM4mH,EAAc,CAClB7uF,QAAQ,KACRvsB,UAAUsuB,EAAYtuB,UACtB8sB,aAAah0B,EAAKtH,cAAckO,MAAM4uB,EAAYmuC,eAE9C54D,EAAa/K,EAAKtH,cAAcqP,YAAkC,IAAtBytB,EAAYtuB,WAAgBiE,OAAO,cACjFT,GAAuBu3G,EAA0Bl3G,KACnDu3G,EAAY53G,GAAuBu3G,EAA0Bl3G,IAE/DlC,EAAWlC,GAAO7D,KAAKw/G,KA9FkC,yBAAA7qG,EAAA/P,SAAA6P,EAAA5hB,SAA3D,gBAAAgzB,GAAA,OAAArS,EAAA1O,MAAAjS,KAAAkS,YAAA,YA0GN,IAFMgrB,EAAWl9B,KAAK+C,cAAciS,gBAAgB,CAAC,2BAInD,IAAMlB,EAAgB,GAChBC,EAAiB,GAGnBxC,EAAYyB,IACdzB,EAAYyB,GAEdzB,EAAYD,SAASjH,EAAKtH,cAAcqP,YAAY/H,EAAKtH,cAAcqP,YAAsB,IAAVb,GAAgBiE,OAAO,cAAc,YAAY,uBAAuBqlC,GAAG5nC,UAAU,KAGxKJ,EAAoBxI,EAAKtH,cAAckO,MAAM,GAI7CtR,OAAOoE,KAAKgM,GAAe9L,QAAS,SAAA+M,GAE7ByB,EAAazB,KAChByB,EAAazB,GAAS,IAEnB8C,EAAc9C,KACjB8C,EAAc9C,GAAS,IAEpB+C,EAAe/C,KAClB+C,EAAe/C,GAAS3G,EAAKtH,cAAckO,MAAM,IAE9CgtB,EAAoBjtB,KACvBitB,EAAoBjtB,GAAS,IAG/BrR,OAAOoE,KAAKm5B,GAAUj5B,QAAS,SAAA65B,GAG7B,IAAM8uF,EAA0B78G,EAAciB,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAG+sB,UAAUA,IAChF,GAAK8uF,GAA4BA,EAAwB5oH,OAAzD,CAIA,IAAIgQ,EAAgB,KACdC,EAA0Bf,EAAWlC,GAASrR,OAAOkR,OAAOqC,EAAWlC,GAAOF,OAAQ,SAAAC,GAAE,OAAIA,EAAG+sB,UAAUA,KAAW5pB,MAAQ,KAC9HC,EAAoBjB,EAAWlC,GAASkC,EAAWlC,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAG+sB,UAAUA,GAAW/sB,EAAGQ,WAAWmB,GAAiB3B,EAAGQ,WAAWA,IAAc,KAC3J4C,GAAqBA,EAAkBnQ,OACzCgQ,EAAgBG,EAAkBD,OAElCF,EAAgBC,IACKD,EAAczC,UAAUA,IAC3CyC,EAAgB,MAIfiqB,EAAoBjtB,GAAO8sB,KAC9BG,EAAoBjtB,GAAO8sB,GAAWzzB,EAAKtH,cAAckO,MAAM,IAG5DwB,EAAazB,GAAO8sB,KACvBrrB,EAAazB,GAAO8sB,GAAW,MAG5BhqB,EAAc9C,GAAO8sB,KACxBhqB,EAAc9C,GAAO8sB,GAAW,MAGlC,IAAMzpB,EAAgBhK,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,aAC3FX,EAAmBvE,EAAciB,GAAOF,OAAO,SAAAC,GAAE,OAAKA,EAAG+sB,UAAUA,GAAW/sB,EAAGQ,WAAWA,KAAemB,GAAiB3B,EAAGQ,UAAUmB,KAE7I,GAAK4B,EAAiBtQ,OAkCpBsQ,EAAiBrQ,QAAQ,SAAA8M,GACvB,OAAQA,EAAGG,QACT,IAAK,UACH+sB,EAAoBjtB,GAAO8sB,GAAWG,EAAoBjtB,GAAO8sB,GAASrsB,KAAKV,EAAGy8B,eACpF,MACA,QACEvP,EAAoBjtB,GAAO8sB,GAAWG,EAAoBjtB,GAAO8sB,GAASpsB,MAAMX,EAAGy8B,eAC/EvP,EAAoBjtB,GAAO8sB,GAASnsB,GAAG,KACzCssB,EAAoBjtB,GAAO8sB,GAAWzzB,EAAKtH,cAAckO,MAAM,YAzCvE,GAAIwB,GAAgBA,EAAazB,IAAUyB,EAAazB,GAAO8sB,GAAS,CACtExpB,EAAmB7B,EAAazB,GAAO8sB,GACvC,IAAMvpB,EAAiB5U,OAAOkR,OAAOyD,GAAkBJ,MAIvD,GAHuBlH,WAAWuH,EAAe3C,SAG9B,GACjB,GAAIL,EAAUvB,GAAoBgE,EAAc,CAC9C,IAAMw5B,EAAgBvP,EAAoBjtB,GAAO8sB,GAC3CO,EAAeh0B,EAAKtH,cAAc0R,iBAAiBT,EAAcqqB,aAAahqB,GAChFK,EAAa84B,EAAcvgC,MAAMoxB,GAGrC9pB,EAAe3C,QAAU8C,EACzBH,EAAe8pB,aAAeA,EAC9B/pB,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClB1C,QAAQvH,EAAKtH,cAAckO,MAAM,GACjCotB,aAAah0B,EAAKtH,cAAckO,MAAM,UAI1CqD,EAAmB,CAAC,CAClB1C,QAAQvH,EAAKtH,cAAckO,MAAM,GACjCotB,aAAah0B,EAAKtH,cAAckO,MAAM,KAsB5C,IAAM0D,EAAShV,OAAOkR,OAAOyD,GAAkBJ,MAC3CU,EAAgBqpB,EAAoBjtB,GAAO8sB,GAAS7wB,MAAM0H,EAAO0pB,cACrE,GAAIzpB,EAAcC,GAAG,GAAG,CAEtB,IAAME,EAAsB1K,EAAKtH,cAAc6uG,4BAA4B5gG,GAC3E,GAAkC+D,EAAoB,CACpD,IAAMD,EAAyBd,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KAChPD,GAA0BzK,EAAKtH,cAAckO,MAAM6D,GAAwBD,GAAG,KAChFD,EAAgBA,EAAc3H,MAAM6H,IAIxCjC,EAAoBA,EAAkBpB,KAAKmD,GAC3Cb,EAAe/C,GAAS+C,EAAe/C,GAAOS,KAAKmD,GAOrDd,EAAc9C,GAAO8sB,GAAWxpB,OApGiC/C,EAAAs7G,MAwGrE,IAAIz3G,EAAa/K,EAAKtH,cAAcqP,YAAsB,IAAVb,GAEhD,GAAkB,OAAdzC,GAAuBsG,EAAWC,cAAcvG,IAAcsG,EAAWE,eAAe,IAAIjD,KAAO,OAAQ,CAO7G,IAAMkD,EAAgBH,EAAWI,OAAO,oBAGxChD,EAAK4C,EAAWI,OAAO,eAAiB,EAExC3C,EAAoB7F,WAAWA,WAAW6F,EAAkB3F,QAAQ,KAEpE6F,EAAsBwC,GAAiBxB,EACvCjB,EAAuByC,GAAiB1C,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBzB,KAAKC,IAAIsB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBzB,KAAKqE,IAAI7C,EAAcC,GAGtFH,EAAgBnB,EAChBkB,EAAeqB,OArKRvC,EAAUvB,EAAiBuB,GAAWyB,EAAczB,GAAWvR,KAAKC,MAAMyV,iBAAkBo3G,EAA5Fv7G,GAiOT,IAzDMqE,EAAqBjW,OAAOoE,KAAK+O,GAAwBhN,IAAI,SAAA+P,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAEjD,EAAuB+C,GACzBG,SAASjD,EAAsB8C,MAG7BI,EAAY,EAChBL,EAAmB3R,QAAS,SAACiS,EAAKnQ,GAChC,IAAMoQ,EAAU/E,KAAKgF,MAAMH,EAAUL,EAAmB5R,OAAO,KAC/D4R,EAAmB7P,GAAOoQ,QAAUA,EACpCF,MAwBIf,EAAalV,KAAKC,MAAMiV,WAAalV,KAAKC,MAAMiV,WAAWD,cAAgB,MAGjF/L,EAAUiE,KAAK,CACb/H,GAAG8P,EACH5S,MAAO,OAAQtC,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAASE,EAAWD,cAAc,QAAQ,QAAQ1H,KAAK,KAAK,IACvHnD,KAAKwL,IAKHS,EAAkB,EAClBzD,EAAcD,EAAc,IAC9B0D,EAAkB,GAGhBzD,IAAkBD,IACpBA,EAAgBvB,KAAKqE,IAAI,EAAE7C,EAAc,IAGtB,EACf0D,GAAa1D,EAAcD,GADZ,EAEf4D,EAAc,GACX7J,EAAE,EAAEA,GAHQ,EAGQA,IACrB8J,EAAaxJ,WAAWA,WAAW2F,EAAejG,EAAE4J,GAAYpJ,QAAQ,IAC9EqJ,EAAYpJ,KAAKqJ,GAGS,GACtBE,EAAY/W,OAAOkR,OAAO2B,GAAMxO,OAChC2S,EAAgBvF,KAAKqE,IAAI,EAAErE,KAAKwF,KAAKF,EAFf,KAItBvN,EAAa,CACjB0N,OAAO,CACLtT,KAAM,OACNiS,OAAQ,kBAEVsB,OAAO,CACLvT,KAAM,SACNwT,SAAS,EACT1F,IAAKsB,EACL8C,IAAK7C,GAEPoE,QAAQ,gBACRC,QAAQ,SAAAvM,GAAK,OAAIL,EAAKtH,cAAcS,YAAYkH,EAAM2L,IACtDa,WAAYlX,KAAKC,MAAM+B,SAAW,KAAO,CACvCmV,OAAQ,GACRC,SAAS,EACT5B,OAAQ,QACR6B,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdE,eAAgB,SAChBD,WAAW,SAASb,EAAc,SAEpCJ,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAU5X,KAAKC,MAAM+B,SAAW,KAAO,CACrCmV,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfC,WAAWjB,EACXkB,eAAgB,SAChBjC,OAAQ,SAAAhL,GAAC,OAAIH,EAAKtH,cAAcW,iBAAiB8G,EAAE,KAErDZ,SAAQ,EACRkO,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjB1W,OAAO,SAAAwI,GAAC,OAAIA,EAAE5H,OACd+V,mBAAmB,GACnBC,kBAAkB3F,EAClB4F,WAAW,CAAEtM,KAAM,QAASE,UAAW,IACvCqM,YAAqC,UAAzBxY,KAAKC,MAAMyP,UAAwB,GAAM,GACrDjO,MAAM,CACJgX,KAAM,CACJC,MAAO,CACL9V,KAAM,CACJF,SAAS,GACTD,WAAW,IACXkW,KAAK3Y,KAAKC,MAAMwB,MAAMC,OAAOyV,OAC7BjM,WAAWlL,KAAKC,MAAMwB,MAAM0J,MAAMC,aAIxCwN,KAAM,CACJC,KAAM,CACJC,OAAQ9Y,KAAKC,MAAMwB,MAAMC,OAAOqX,gBAAiBC,gBAAiB,SAaxEnY,OAAQb,KAAKC,MAAM+B,SAAW,CAAEoK,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrH0M,aAAa,SAACC,GAAc,IAEpBC,EADYD,EAAVE,MACYC,OAAO,GAC3B,OACEm9F,EAAAr2G,EAAAC,cAAC2sH,EAAA,EAAD,CACE5zG,MAAOA,GAEPq9F,EAAAr2G,EAAAC,cAAC4sH,EAAA,EAAD,CACE1qH,MAAO6W,EAAM7W,MACbkL,MAAO2L,EAAMK,QACb9O,MAAK,KAAA/D,OAAOwS,EAAM/O,KAAKqP,cAGO,kBAAxBN,EAAM/O,KAAK4L,UAAyBrW,OAAOoE,KAAKoV,EAAM/O,KAAK4L,UAAUhS,OAAO,GAClFrE,OAAOoE,KAAKoV,EAAM/O,KAAK4L,UAAUlQ,IAAI,SAAAkL,GACnC,GAAIA,IAAUmI,EAAMK,QAClB,OAAO,KAET,IAAMlX,EAAQ+H,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,QAAQ,QACzFrD,EAAUuH,EAAM/O,KAAK4L,SAAShF,GAChC0I,EAAmBrP,EAAKtH,cAAcS,YAAYoO,EAAQ,GAC9D,OAAI5E,WAAW4E,IAAU,IAErB4kG,EAAAr2G,EAAAC,cAAC4sH,EAAA,EAAD,CACEx/G,MAAOwD,EACP1O,MAAOA,EACPuE,IAAG,OAAAF,OAASqK,GACZtG,MAAK,KAAA/D,OAAO+S,KAIX,UAQnB1Z,KAAKgI,SAAS,CACZkB,YACAC,mJAKF,OACEqtG,EAAAr2G,EAAAC,cAACktB,EAAA,EAAD3tB,OAAAC,OAAA,CACE2D,KAAMqW,IACN1L,YAAY,GACRlO,KAAKwH,MAAM2B,WAHjB,CAIEiB,KAAMpK,KAAKwH,MAAM0B,UACjB2Q,SAAU7Z,KAAKC,MAAM4Z,SACrB9X,OAAQ/B,KAAKC,MAAM+O,YACnB8K,eAAgB9Z,KAAKC,MAAM6Z,yBAloBGjX,aCyjBvBoqH,8MAvjBbzlH,MAAQ,CAEN0lH,iBAAiB,GACjBC,kBAAkB,KAClBC,qBAAqB,KACrBpqB,sBAAsB,KACtBqqB,sBAAsB,KACtBC,yBAAyB,KACzBC,0BAA0B,KAC1BC,6BAA6B,KAC7BC,6BAA6B,QAI/B1qH,cAAgB,OAChBsyB,aAAe,gFAGTr1B,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,OAG9CD,KAAKq1B,aAAer1B,KAAK+C,cAAcm0E,uKAIvCl3E,KAAKkD,gbA+IkByE,EAAUC,mEACjC5H,KAAKkD,kJAIL,IAAMs6B,EAAiBx9B,KAAKC,MAAMyJ,aAAe1J,KAAKC,MAAMqoD,YAActoD,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAMqoD,aAAajpB,WAAW7B,eAAiB,GAC/IiwC,EAAwBjwC,EAAex5B,OAASw5B,EAAe1sB,OAAQ,SAAAmoB,GAAC,OAAIA,EAAEnH,UAAY,KAC1F47C,EAAiBD,GAAyBA,EAAsBzpE,OAAO,EACvE0pH,EAAWhgD,EAAiB,EAAE,EAAI,GAExC,OACE8oC,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAGbhB,KAAKwH,MAAM0lH,iBAAiBlpH,OAAO,GACjCwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACPlF,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdjB,KAAKwH,MAAM0lH,iBAAiBpnH,IAAI,SAAC0E,EAAEkC,GAAH,OAC9B8pG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,GACM4K,EAAE1G,UADR,CAEE9C,cAAe,SACf6F,IAAG,mBAAAF,OAAqB+F,KAExB8pG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACNiO,GAAG,CAAC,EAAE,KAGR0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGduJ,EAAEvK,MAAM+I,SAAWwB,EAAEvK,MAAM+I,SACzBwtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEc,WAAY,EACZ90G,WAAY,CAAC,EAAE,GACfH,MAAO,YACP4I,WAAY,UACZxI,SAAU,CAAC,EAAE,SACboG,wBAAyB,CAAEC,OAAQyB,EAAEvK,MAAMyK,SAKjD8rG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAENkI,EAAEvK,MAAMwmB,OAGTjc,EAAEvK,MAAMq+G,MACN9H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE1nF,UAAW,SACXC,QAASxkB,EAAEvK,MAAMq+G,MAEjB9H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,sBAYjCk0G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTK,GAAG,EACHF,GAAG,IAIHG,KAAKC,MAAM6rH,kBAAoB9rH,KAAKC,MAAM6rH,iBAAiB9nH,OAAO,GAChEwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP4F,GAAI,CAAC,EAAE,GACPN,GAAI,kBAEJoxG,EAAAr2G,EAAAC,cAACutH,GAADhuH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE+O,YAAa,IACb6K,SAAU,iBACV3E,WAAYlV,KAAKC,MAAMuJ,cACvB8F,cAAe,CAACtP,KAAKC,MAAMuJ,eAC3BkM,iBAAkB1V,KAAK+C,cAAcmwD,oBAAoB,MAAM,OAKvEsjD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,EAAE4tH,GACV3sH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbolH,UAAW+F,IAAQC,IAHrB,aAOAtX,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqtE,cAAc,EACdluD,UAAW,CACTjd,KAAK,mBACLlC,MAAM,CACJ0D,SAAS,EACTlB,WAAW,IACXmB,aAAa,EACblB,SAAS,CAAC,QAAQ,SAClBJ,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOklB,QAC9B9iB,UAAU,CACR7C,eAAe,gBAOvBysE,GACE8oC,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,EAAE4tH,GACV3sH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbolH,UAAW+F,IAAQC,IAHrB,iBAOAtX,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqtE,cAAc,EACdluD,UAAW,CACTjd,KAAK,gBACLlC,MAAM,CACJ0D,SAAS,EACTlB,WAAW,IACXmB,aAAa,EACblB,SAAS,CAAC,QAAQ,SAClBJ,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOklB,QAC9B9iB,UAAU,CACR7C,eAAe,gBAQ7Bu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,EAAE4tH,GACV3sH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbolH,UAAW+F,IAAQC,IAHrB,cAOAtX,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqtE,cAAc,EACdluD,UAAW,CACTjd,KAAK,8BACLlC,MAAM,CACJ0D,SAAS,EACTC,aAAa,EACbyC,MAAM,CACJ5D,WAAW,IACXH,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOklB,QAC9BlkB,SAAU1C,KAAKC,MAAM+B,SAAW,QAAU,SAE5C8B,UAAU,CACR7C,eAAe,eAKvBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP8I,GAAI,OACJ3H,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqtE,cAAc,EACdluD,UAAW,CACTjd,KAAK,eACLlC,MAAM,CACJyC,SAAS,EACTD,WAAW,EACXH,MAAM,WACNwB,UAAU,CACR7C,eAAe,iBAO3Bu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,EAAE4tH,GACV3sH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbolH,UAAW+F,IAAQC,IAHrB,YAOAtX,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqtE,cAAc,EACdluD,UAAW,CACTjd,KAAK,kBACLlC,MAAM,CACJ0D,SAAS,EACTC,aAAa,EACbyC,MAAM,CACJ5D,WAAW,IACXC,SAAS1C,KAAKC,MAAM+B,SAAW,QAAU,QACzCM,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOklB,SAEhC9iB,UAAU,CACR7C,eAAe,eAMrBjB,KAAKwH,MAAMimH,8BAAgCztH,KAAKwH,MAAMimH,6BAA6BzpH,OAAO,GACxFwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMimH,6BAA6B3nH,IAAI,SAACk/F,EAAgB0B,GAAjB,OAC1C8P,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACV60G,WAAY,EACZ90G,WAAY,EACZH,MAAO,WACPuG,UAAW,SACXD,GAAI89F,EAAgB,EAAI,EACxB7/F,IAAG,YAAAF,OAAc+/F,IAEhB1B,OAQfwR,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,EAAE4tH,GACV3sH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbolH,UAAW+F,IAAQC,IAHrB,QAOAtX,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqtE,cAAc,EACdluD,UAAW,CACTjd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTC,aAAa,EACbyC,MAAM,CACJ5D,WAAW,IACXC,SAAS1C,KAAKC,MAAM+B,SAAW,QAAU,QACzCM,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOklB,SAEhC9iB,UAAU,CACR7C,eAAe,gBAMzBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,EAAE4tH,GACV3sH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbolH,UAAW+F,IAAQC,IAHrB,gBAOAtX,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqtE,cAAc,EACdluD,UAAW,CACTjd,KAAK,cACLlC,MAAM,CACJ0D,SAAS,EACTlB,WAAW,IACXC,SAAS,CAAC,QAAQ,SAClBJ,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOklB,QAC9B9iB,UAAU,CACR7C,eAAe,eAMrBjB,KAAKwH,MAAM+lH,2BACT/W,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACV60G,WAAY,EACZ90G,WAAY,EACZH,MAAO,WACPuG,UAAW,UAEV7I,KAAKwH,MAAM+lH,0BAA0BrgH,QAAQ,GARhD,IAQqDlN,KAAKq1B,aAAa/E,UARvE,IAQmFtwB,KAAKq1B,aAAa3rB,YAAY4qB,mCA5iBlGzxB,uBCkOpBkrH,8MAjObvmH,MAAQ,CACNg2B,eAAe,KACfwwF,mBAAmB,QAIrBjrH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKiuH,uMAGkBtmH,EAAUC,+EACjC5H,KAAKkD,YAECmsB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClDq+G,EAAmB9+G,KAAKC,UAAU1H,EAAUs1B,aAAe7tB,KAAKC,UAAUrP,KAAKC,MAAMg9B,WACrFkxF,EAAuB/+G,KAAKC,UAAU1H,EAAUo2B,iBAAmB3uB,KAAKC,UAAUrP,KAAKC,MAAM89B,eAC7FqwF,EAAsBzmH,EAAUhG,cAAgB3B,KAAKC,MAAM0B,cAAgBhC,OAAOkR,OAAOlJ,EAAUhG,cAAcmP,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqBnN,SAAWrE,OAAOkR,OAAO7Q,KAAKC,MAAM0B,cAAcmP,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqBnN,QAEjPqrB,GAAkB8+F,GAAwBD,GAAoBE,IAChEpuH,KAAKiuH,uSAKFjuH,KAAKC,MAAM4P,SAAY7P,KAAKC,MAAM89B,eAAkB/9B,KAAKC,MAAMg9B,oDAC3D,0BAQCvc,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKC,MAAM89B,cAAc57B,KAAKnC,KAAKC,MAAM4P,SAAQ,GACpF7P,KAAK+C,cAAcomC,2BAA2BnpC,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAM89B,eAChF/9B,KAAK+C,cAAck8B,yBAAyBj/B,KAAKC,MAAM4P,QAAQ7P,KAAKC,MAAM89B,cAAc/9B,KAAKC,MAAM89B,cAAcmB,UAAUC,SAC3Hn/B,KAAK+C,cAAcq8B,wBAAwBp/B,KAAKC,MAAM89B,cAAcsB,WAAWl9B,KAAKnC,KAAKC,MAAM4P,QAAQ7P,KAAKC,MAAM89B,cAAcsB,WAAW17B,SAAS3D,KAAKC,MAAM89B,cAAcmB,UAAUI,2DARvL8pF,OACAiF,OACA7wF,OACA8wF,OAQIC,EAAqBvuH,KAAKC,MAAMg9B,UAAUQ,gBAAgBve,KAAM,SAAA3d,GAAC,OAAIA,EAAEyP,QAAU7N,EAAKlD,MAAM+Q,OAASzP,EAAEm8B,WAAav6B,EAAKlD,MAAMy9B,UAAYn8B,EAAEu8B,UAAY36B,EAAKlD,MAAM69B,UAEpKkwF,EAAqB,aACrBhuH,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAKy5B,GAA5C,eAAA7c,EAAAhhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA6D,SAAAC,EAAOkvB,GAAP,IAAA91B,EAAA2/D,EAAA9qC,EAAA/sB,EAAA64B,EAAA,OAAA5Z,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3DlH,EAAcvG,EAAKJ,cAAciS,gBAAgB,CAAC,QAAQ,SAASwqB,EAAYvqB,gBAC/Eo0D,EAAkBglD,EAAiB7uF,GAFwB9uB,EAAAE,KAAA,EAGtCzN,EAAKJ,cAAc2tB,gBAAgB8O,EAAYr8B,EAAKlD,MAAM4P,SAHpB,OAG3D0uB,EAH2D7tB,EAAAiD,KAI3DnC,EAAerO,EAAKJ,cAAckO,MAAMusB,EAAegC,IAAcl8B,QAAkEH,EAAKJ,cAAckO,MAAM,GAAjF9N,EAAKJ,cAAckO,MAAMusB,EAAegC,IAEzH6K,EAAoBg/B,EAAkBA,EAAgBh/B,kBAAoB,KAC1EkkF,GAAsBlkF,IACxBA,EAAoBA,EAAkBp9B,MAAMshH,EAAmB3vF,YAEjEovF,EAAmB7gH,KAAK,CACtB6D,MAAMwuB,EACNgvF,OAAOF,EACP18G,QAAQ2sB,EAAarxB,QAAQ,GAC7BuhH,WAAWj9G,EAAYtE,QAAQ,GAC/Bk8G,eAAejmH,EAAKJ,cAAc8wD,aAAau1D,GAC/CsF,UAAUhlH,EAAYtH,MAAZ,iBAAAuE,OAAqC64B,EAArC,QACV6K,kBAAkBA,EAAoBA,EAAkBn9B,QAAQ,GAAGm8D,EAAgBp/B,sBAAwB9mC,EAAKJ,cAAckO,MAAM,GAAG/D,QAAQ,KAjBhF,wBAAAwD,EAAAqB,SAAAzB,EAAAtQ,SAA7D,gBAAAgS,GAAA,OAAA2O,EAAA1O,MAAAjS,KAAAkS,YAAA,YAqBNlS,KAAKgI,SAAS,CACZgmH,gKAIUj9G,GACZ/Q,KAAKiuH,wDAGOl9G,GACZ/Q,KAAKiuH,mDAGE,IAAA5jH,EAAArK,KACP,OACEA,KAAKwH,MAAMwmH,mBACTxX,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,EACPkB,cAAe,SACfoE,GAAI,4BAEJoxG,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9sH,GAAI,CAAC,EAAE,IAAd,mBACA01G,EAAAr2G,EAAAC,cAACuuH,GAAA,EAADhvH,OAAAC,OAAA,CACE4/F,KAAMx/F,KAAKwH,MAAMwmH,mBACjB5V,KAAM,CACJ,CACE3xF,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,QACLtD,MAAM,CACJoB,GAAG,EACHgB,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,SAEvC6D,KAAK,CAAC,cAER,CACEtC,KAAK,OACLsC,KAAK,CAAC,YAIZ,CACElB,QAAO,EACP8hB,MAAM,UACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEhjD,KAAK,OACLsC,KAAK,CAAC,WACN5F,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEykB,MAAM,aACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,8BACpD/U,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEhjD,KAAK,OACLsC,KAAK,CAAC,cACN5F,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEykB,MAAM,eACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,0BACpD/U,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,OACLsC,KAAK,CAAC,qBACN5F,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEykB,MAAM,GACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdue,YAAY,CACVve,MAAM,GAERymD,OAAO,CACL,CACEmyD,UAAU,CACR35F,eAAe,CACb7X,SAAS,SAACjH,GAAD,QAAYoK,EAAKtH,cAAckO,MAAMhR,EAAMmgG,IAAIquB,YAAYr8F,IAAI,MAQ5E2lF,eAAel7F,IACf5c,MAAM,CACJ4d,OAAO,GACPQ,YAAY,CACVve,MAAM,GAER+C,UAAUskH,IACVpoG,eAAe,CACb1Y,MAAM,CACJvG,MAAM,QAER4K,MAAM,QACNlJ,aAAa,EACbyF,UAAU,SACV5E,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,UAEvC0I,MAAM,QACNwG,OAAO,QACPnJ,SAAS/H,KAAK4uH,cAAcjwG,KAAK3e,MACjCsd,WAAWtd,KAAKC,MAAM89B,cAAcmB,UAAU8gD,MAC9CxiE,aAAaxd,KAAKC,MAAM89B,cAAcsB,WAAWl9B,WAMvDnC,KAAKC,SAGbD,KAAKC,MAAM+I,UAAY,YA9NKnG,aC+ZrBgsH,8MAtZbrnH,MAAQ,CACN7F,aAAa,GACbmtH,cAAa,EACbphD,gBAAe,EACfqhD,iBAAgB,KAIlBhsH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,+aAMkBC,EAAUC,2EACjC5H,KAAKkD,YAECi/G,EAAqB/yG,KAAKC,UAAU1H,EAAU+B,eAAiB0F,KAAKC,UAAUrP,KAAKC,MAAMyJ,aACzFslH,EAAqBrnH,EAAU2gD,cAAgBtoD,KAAKC,MAAMqoD,aACtCtoD,KAAKC,MAAMg9B,YAAct1B,EAAUs1B,WAAc7tB,KAAKC,UAAUrP,KAAKC,MAAMg9B,aAAe7tB,KAAKC,UAAU1H,EAAUs1B,YACrHklF,GAAsB6M,IAC5ChvH,KAAK0H,mJAIC,IAAAvE,EAAAnD,KAEF2B,EAAe3B,KAAKC,MAAMg9B,UAAYj9B,KAAKC,MAAMg9B,UAAUt7B,aAAamP,OAAQ,SAAAmoB,GAAC,OAAIA,EAAEyE,SAAS5wB,gBAAkB3J,EAAKlD,MAAMspH,iBAAiBz8G,eAAiBmsB,EAAEjoB,MAAMlE,gBAAkB3J,EAAKlD,MAAMuJ,cAAcsD,iBAAmB3J,EAAKlD,MAAMqoD,aAAervB,EAAE6E,UAAY36B,EAAKlD,MAAMqoD,eAAiB,GACzSwmE,KAAe9uH,KAAKC,MAAMg9B,YAAaj9B,KAAKC,MAAMg9B,UAAUQ,gBAAgBve,KAAM,SAAA+vG,GAAW,OAAIA,EAAYvxF,SAAS5wB,gBAAkB3J,EAAKlD,MAAMspH,iBAAiBz8G,eAAiBmiH,EAAYj+G,MAAMlE,gBAAkB3J,EAAKlD,MAAMuJ,cAAcsD,iBAAmB3J,EAAKlD,MAAMqoD,aAAe2mE,EAAYnxF,QAAQhxB,gBAAkB3J,EAAKlD,MAAMqoD,YAAYx7C,kBAE5V0wB,EAAiBx9B,KAAKC,MAAMyJ,aAAe1J,KAAKC,MAAMqoD,YAActoD,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAMqoD,aAAajpB,WAAW7B,eAAiB,GAC/IiwC,EAAwBjwC,EAAex5B,OAASw5B,EAAe1sB,OAAQ,SAAAmoB,GAAC,OAAIA,EAAEnH,UAAY,KAC1F47C,EAAiBD,GAAyBA,EAAsBzpE,OAAO,EAI7EhE,KAAKgI,SAAS,CACZrG,eACAmtH,eACAphD,iBACAqhD,iBAdsB,qCAkBjB,IAAA1kH,EAAArK,KACDkvH,EAAkBlvH,KAAK+C,cAAciS,gBAAgB,CAAC,aACtDm6G,EAAwBxvH,OAAOoE,KAAKmrH,GAAiBp+G,OAAQ,SAAAw3C,GAAW,OAAKj+C,EAAKpK,MAAMqoD,aAAej+C,EAAKpK,MAAMqoD,cAAgBA,IACxI,OACEkuD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,GAEH9N,KAAK+C,cAAc0K,WAAWzN,KAAKC,MAAMspH,kBAH5C,MAGkEvpH,KAAKC,MAAMuJ,cAH7E,MAG+FxJ,KAAKC,MAAMypH,eAAiB1pH,KAAKC,MAAMypH,eAAevnH,KAAO,YAuDxJq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPkB,cAAe,CAAC,SAAS,OACzBC,eAAgBjB,KAAKC,MAAMqoD,YAAc,SAAW,iBAGlD6mE,EAAsBrpH,IAAK,SAAAwiD,GAAW,OACpCkuD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACP/M,WAAY,SACZC,cAAe,SACf6F,IAAG,WAAAF,OAAa2hD,GAChBxoD,MAAO,CAAC,EAAG,EAAEqvH,EAAsBnrH,OAAQ,MAGzCqG,EAAKpK,MAAMqoD,YACTkuD,EAAAr2G,EAAAC,cAACgvH,EAADzvH,OAAAC,OAAA,GACMyK,EAAKpK,MADX,CAEEupH,gBAAiBlhE,EACjBmiB,UAAWpgE,EAAKpK,MAAMyJ,YAAY47B,IAClC0kF,kBAAmB3/G,EAAKpK,MAAMqoD,YAC9B8+D,qBAAsB/8G,EAAKpK,MAAMovH,cACjClF,kBAAmB9/G,EAAKpK,MAAMkqH,kBAC9BpsF,cAAe1zB,EAAKpK,MAAMyJ,YAAY4+C,MAGxCkuD,EAAAr2G,EAAAC,cAACkvH,EAAD3vH,OAAAC,OAAA,GACMyK,EAAKpK,MADX,CAEEupH,gBAAiBlhE,EACjBmiB,UAAWpgE,EAAKpK,MAAMyJ,YAAY47B,IAClC0kF,kBAAmB3/G,EAAKpK,MAAMqoD,YAC9B6hE,kBAAmB9/G,EAAKpK,MAAMkqH,kBAC9BpsF,cAAe1zB,EAAKpK,MAAMyJ,YAAY4+C,UAatDtoD,KAAKwH,MAAMunH,iBAAmB/uH,KAAKC,MAAM4P,SAAW7P,KAAKwH,MAAMsnH,cAAgB9uH,KAAKC,MAAMqoD,aACxFkuD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP9M,cAAe,SACfoE,GAAI,4BAEJoxG,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9sH,GAAI,CAAC,EAAE,IAAd,kBACA01G,EAAAr2G,EAAAC,cAACmvH,GAAD5vH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE+Q,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMqoD,YACpB5+C,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBuC,iBAAkB9rH,KAAKwH,MAAM7F,aAC7Bo8B,cAAe/9B,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAMqoD,iBAKvDtoD,KAAKwH,MAAMunH,iBAAmB/uH,KAAKwH,MAAMkmE,gBAAkB1tE,KAAKC,MAAM4P,SAAW7P,KAAKwH,MAAMsnH,cAAgB9uH,KAAKC,MAAMqoD,aACrHkuD,EAAAr2G,EAAAC,cAACovH,GAAD7vH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE+Q,MAAOhR,KAAKC,MAAMuJ,cAClBs0B,QAAS99B,KAAKC,MAAMqoD,YACpB5+C,YAAa1J,KAAKC,MAAMyJ,YACxBg0B,SAAU19B,KAAKC,MAAMspH,iBACrBuC,iBAAkB9rH,KAAKwH,MAAM7F,aAC7Bo8B,cAAe/9B,KAAKC,MAAMyJ,YAAY1J,KAAKC,MAAMqoD,gBAkBrDtoD,KAAKC,MAAM4P,SAAW7P,KAAKwH,MAAM7F,cAAgB3B,KAAKwH,MAAM7F,aAAaqC,OAAO,GAC9EwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP1I,GAAI,eACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9sH,GAAI,CAAC,EAAE,IAAd,gBACA01G,EAAAr2G,EAAAC,cAACqvH,EAAA,EAAD9vH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqP,cAAe,CAACtP,KAAKC,MAAMuJ,eAC3BsiH,iBAAkB9rH,KAAKwH,MAAM7F,aAC7B+tH,iBAAkB1vH,KAAKwH,MAAM7F,aAAa+iC,OAAQ,SAACgrF,EAAiBz2F,GAElE,OADAy2F,EAAiBz2F,EAAE/nB,OAAOpE,eAAiBmsB,EAAE/nB,OACtCw+G,GACP,IACFtX,KAAM,CACJ,CACE3xF,MAAOzmB,KAAKC,MAAM+B,SAAW,GAAK,OAClC/B,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEc,KAAK,OACLwC,QAAO,KAIb,CACE8hB,MAAM,SACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAERymD,OAAO,CACL,CACEpkD,KAAK,YAIX,CACEskB,MAAM,OACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,UAIX,CACEwC,QAAO,EACP8hB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,aACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEsD,QAAO,EACPxC,KAAK,YAIX,CACEskB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,YAIX,CACEskB,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEhjD,KAAK,QACLpB,KAAK,SACL0D,KAAK,CAAC,gBACN5F,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEwB,KAAK,OACLoB,QAAO,EACPxC,KAAK,SACL0D,KAAK,CAAC,eAIZ,CACE4gB,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,GACNU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,oBASnBnC,KAAKC,MAAMqoD,aACTkuD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPsF,GAAI,OACJrE,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9sH,GAAI,GADN,8BAKA01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,IACViB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACuvH,EAAD,CACEtH,cAAc,EACdF,UAAW,CACTyH,GAAG,CACD,CACErH,EAAG,6BACHpoH,EAAC,oZAEH,CACEooH,EAAG,6BACHpoH,EAAC,ulBAAAwG,OAAylB3G,KAAKC,MAAMwB,MAAMC,OAAOsE,KAAjnB,0BAEH,CACEuiH,EAAG,gCACHpoH,EAAC,wdAEH,CACEooH,EAAG,0BACHpoH,EAAC,mLAEH,CACEooH,EAAG,4BACHpoH,EAAC,yOA1YC0C,mCC+NXgtH,8MAnOb9sH,cAAgB,OAEhByE,MAAQ,CACNwJ,MAAM,KACN0sB,SAAS,KACTh0B,YAAY,iFAIR1J,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAWC,mEAClC5H,KAAKkD,YACwBlD,KAAKC,MAAM6vH,sBAAwBnoH,EAAUmoH,uBAAyB9vH,KAAKC,MAAM6vH,sBAE5G9vH,KAAK0H,gRAKHsJ,EAAM,KACN0sB,EAAS,cAEiB19B,KAAK+C,cAAcqlD,eAAepoD,KAAKC,MAAMypH,eAAenmH,KAAK,oBAAzFwsH,WAEJ/+G,EAAQ++G,EAAgB/+G,MACxB0sB,EAAWqyF,EAAgBryF,WAErBg1C,EAAe1yE,KAAK+C,cAAciS,gBAAgB,CAAC,aAAa,aACtEhE,EAAQ0hE,EAAa1hE,MACrB0sB,EAAWg1C,EAAah1C,UAGpBh0B,EAAc1J,KAAKC,MAAM+8B,kBAAkBU,GAAU1sB,qBAEpDhR,KAAKgI,SAAS,CACnBgJ,QACA0sB,WACAh0B,oJAIK,IAAAvG,EAAAnD,KACD0pH,EAAiB1pH,KAAKC,MAAMypH,eAC5BhgH,EAAc1J,KAAKC,MAAMyJ,aAAe1J,KAAKwH,MAAMkC,YAEzD,OACE8sG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,CAAC,EAAG,GACR0N,UAAW,EACXhN,aAAc,EACd1B,MAAO,CAAC,EAAG,MAEX02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,EACHX,GAAI,EACJ2E,OAAQ,IACRxD,OAAQ,OACRP,aAAc,EACd+E,SAAU,SACVvF,cAAe,SACfN,gBAAiB,SACjBwL,YAAa,cACbjL,eAAgB,CAAC,SAAiC,OAAxByoH,EAAenmH,KAAgB,OAAS,UAElEizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPynH,aAAY,aAAA5gH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOyoB,WAEnDqsF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJx9G,GAAI,EACJE,GAAI,EACJE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM7tG,GAAI,EAAG7H,WAAY,UACvBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrE,GAAI,EACJ2uH,IAAKtG,EAAevnH,KACpBL,IAAK4nH,EAAevoH,MACpBkB,KAAMrC,KAAKC,MAAM+B,SAAW,MAAQ,UAEtCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM71G,GAAI,GACR41G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,CAAC,EAAG,GACRjD,WAAY,EACZC,SAAU,CAAC,EAAG,GACd60G,WAAY,GAEXmS,EAAevnH,QAItBq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrE,GAAI,EACJuH,GAAI,EACJ7H,WAAY,aACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJL,cAAe,MACfD,WAAY,YAEZy1G,EAAAr2G,EAAAC,cAACiqH,EAAA,EAAD1qH,OAAAC,OAAA,CACEwf,UAAW,CACT6wG,aAAa,EACb9tH,KAAI,GAAAwE,OAAK+iH,EAAewG,SAApB,OACJjwH,MAAO,CACL0D,SAAU,EACVlB,WAAY,EACZ80G,WAAY,IACZ70G,SAAU,CAAC,EAAG,GACdmG,UAAW,SACX/E,UAAW,CACTqsH,aAAc,YAEhB7tH,MAAOtC,KAAKC,MAAMypH,eAAepnH,MAAM4nH,OAGvClqH,KAAKC,MAhBX,CAiBE+Q,MAAOhR,KAAKwH,MAAMwJ,MAClBtH,YAAaA,EACbo0B,QAAS99B,KAAKC,MAAM69B,QACpBJ,SAAU19B,KAAKwH,MAAMk2B,YAEvB84E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJ4E,GAAI,CAAC,EAAG,GACRhD,SAAU,EACV60G,WAAY,IACZ1uG,UAAW,OACXvG,MAAO,YANT,mBAQmBtC,KAAKwH,MAAMwJ,QAGhCwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJnG,WAAY,EACZC,SAAU,CAAC,EAAG,GACdmG,UAAW,OACX0uG,WAAY,MACZj1G,MAAO,aAENonH,EAAejS,YAAY2Y,SAKpC5Z,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE10G,OAAQ,OACRssB,GAAI,iBACJrtB,cAAe,SACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9H,GAAI,EACJsF,GAAI,EACJtG,MAAO,GAEN4pH,EAAe2G,SAASvqH,IAAI,SAACwqH,EAASvqH,GAAV,OAC3BywG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhN,GAAI,EACJf,GAAI,EACJ6I,GAAI,CAAC,EAAG,GACR7H,WAAY,SACZC,cAAe,MACf6F,IAAG,WAAAF,OAAaZ,IAEhBywG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJqE,GAAI,EACJvD,KAAM,OACNG,MAAO,OACPD,KAAMc,EAAKlD,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,CAAC,EAAG,GAAIhD,SAAU,CAAC,EAAG,GAAID,WAAY,OAC7C6tH,OAKT9Z,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiC,OAAQ,OACRhB,WAAY,WACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXxE,GAAI,EACJhB,MAAO,IACP4C,SAAU,EACVunH,cAAe,QACfhjH,UAAWyiH,EAAepnH,MAAM4nH,KAElCzpH,YAAa,SAAAqG,GAAC,OACZ3D,EAAKlD,MAAMkqH,kBAAkBT,EAAe7rC,SAG7C79E,KAAKC,MAAMyJ,YAAX,SAAA/C,OACY+iH,EAAevnH,MAD3B,aAAAwE,OAEgB+iH,EAAevnH,kBA3N7BU,aC8JJ0tH,8MA9JbxtH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KACDwwH,EAAYxwH,KAAK+C,cAAciS,gBAAgB,CAAC,gBACtD,OACEwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPc,GAAI,EACJI,cAAe,CAAC,SAAU,OAC1BC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM71G,GAAI,EAAGE,GAAI,CAAC,EAAG,GAAIhB,MAAO,CAAC,EAAG,IAAMkB,cAAe,UACvDw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMx1G,eAAgB,OAAQH,GAAI,EAAGhB,MAAO,CAAC,EAAG,KAC9C02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEga,KAAM,OACNhuH,WAAY,EACZ80G,WAAY,EACZj1G,MAAO,QACPI,SAAU,CAAC,EAAG,GACdmG,UAAW,QAEV2nH,EAAUE,WAGfla,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPgO,GAAI,CAAC,EAAG,GACR7M,eAAgB,QAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,QACPuG,UAAW,OACXpG,WAAY,EACZC,SAAU,GAET8tH,EAAUlS,OAGf9H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,EACPkB,cAAe,UAGbwvH,EAAUrI,UAAUriH,IAAK,SAAC6I,EAAS5I,GAAV,OACvBywG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJ+F,IAAG,YAAAF,OAAcZ,GACjBhF,WAAY,cAEZy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZ+kB,QAAS,MACTllB,MAAO,QACPuG,UAAW,OACXjD,QAAS,SAAAkB,GAAC,OACR3D,EAAKlD,MAAM0wH,iBAAiBhiH,EAAS2vG,KAAM3vG,EAASiiH,OAGtDpa,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,MACfD,WAAY,cAEZy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJS,IAAK0uH,EAAUK,aAEhBliH,EAAS2vG,YAQxB9H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GACPk3G,OAAQh3G,KAAKC,MAAM+B,SAAW,EAAI,EAClCjB,WAAY,cAEZy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOO,OAAQh3G,KAAKC,MAAM+B,SAAW,EAAI,EAAGF,IAAK0uH,EAAUM,UAE7Dta,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,EAAG5E,GAAI,CAAC,EAAG,GAAIhB,MAAO,CAAC,EAAG,IAAMkB,cAAe,UACvDw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,CAAC,EAAG,GAAIE,cAAe,MAAOD,WAAY,cAClDy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,CAAC,EAAG,GACRhB,MAAO,CAAC,QAAS,SACjBgC,IAAK9B,KAAK+C,cAAciS,gBAAgB,CACtC,WACA,KACA,aAGJwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAG,GACRhI,GAAI,EACJkN,GAAI,CAAC,EAAG,GACRxL,MAAO,QACPuG,UAAW,OACXpG,WAAY,EACZC,SAAU,EACVoG,wBAAyB,CACvBC,OAAQynH,EAAUO,eAIxBva,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,CAAC,EAAG,GAAIE,cAAe,MAAOD,WAAY,cAClDy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,CAAC,EAAG,GACR4E,GAAI,CAAC,EAAG,GACR5F,MAAO,CAAC,QAAS,SACjBgC,IAAK9B,KAAK+C,cAAciS,gBAAgB,CACtC,WACA,KACA,aAGJwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAG,GACRhI,GAAI,EACJkN,GAAI,CAAC,EAAG,GACRxL,MAAO,QACPuG,UAAW,OACXpG,WAAY,EACZC,SAAU,EACVoG,wBAAyB,CACvBC,OAAQynH,EAAUQ,wBApJPnuH,uBCoHZouH,8MA9GbluH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KACDkvH,EAAkBlvH,KAAK+C,cAAciS,gBAAgB,CAAC,aAC5D,OACEwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC8wH,GAAA,EAADvxH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE6D,UAAW,CACTgK,GAAG,CAAC,EAAE,IAERqjH,YAAa,WACbT,SAAU,iCACVU,sBAAuBpxH,KAAK+C,cAAcupG,6BAE5CkK,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPwG,SAAU,EACVvF,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEdjB,KAAKC,MAAMyJ,YAmBX8sG,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,EACJrL,WAAY,EACZC,SAAU,CAAC,EAAG,GACdJ,MAAO,YACPuG,UAAW,UALb,iCAlBA2tG,EAAAr2G,EAAAC,cAAAo2G,EAAAr2G,EAAAu2G,SAAA,KACEF,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACElrH,SAAU,CAAC,EAAE,IADf,4BAKA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACPrD,OAAQ,EACR/D,aAAc,EACd0K,YAAa,cACbxL,gBAAiB,UACjB8a,UAAW,CAACC,KAAO/W,aAAa1E,KAAKC,MAAM+B,SAAWyZ,KAAO9W,OAAS,OAEtE6xG,EAAAr2G,EAAAC,cAACixH,GAAiBrxH,KAAKC,SAc7Bu2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,EAAGF,GAAI,EAAGK,eAAgB,UAClCu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,CAAC,SAAU,OAC1BC,eAAgB,iBAEftB,OAAOoE,KAAKmrH,GAAiBppH,IAAI,SAACwiD,EAAaviD,GAAd,OAChCywG,EAAAr2G,EAAAC,cAACkxH,GAAD3xH,OAAAC,OAAA,GACMuD,EAAKlD,MADX,CAEE69B,QAASwqB,EACTzhD,IAAG,WAAAF,OAAaZ,GAChB2D,YAAavG,EAAKlD,MAAMyJ,YACxBggH,eAAgBwF,EAAgB5mE,UAKxCkuD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPC,GAAI,CAAC,EAAE,GACPkB,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPuG,UAAW,UAHb,2EAK0E2tG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CAASjgH,SAAU,CAAC,EAAE,GAAIkjB,KAAM5lB,KAAK+C,cAAciS,gBAAgB,CAAC,cAApE,SAL1E,KAK6KwhG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CAASjgH,SAAU,CAAC,EAAE,GAAIkjB,KAAM5lB,KAAK+C,cAAciS,gBAAgB,CAAC,gBAApE,WAL7K,KAKoRwhG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CAASjgH,SAAU,CAAC,EAAE,GAAIkjB,KAAM5lB,KAAK+C,cAAciS,gBAAgB,CAAC,iBAApE,YALpR,OAK+XwhG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CAASjgH,SAAU,CAAC,EAAE,GAAIkjB,KAAM5lB,KAAK+C,cAAciS,gBAAgB,CAAC,gBAApE,WAL/X,IAKqewhG,EAAAr2G,EAAAC,cAAA,WALre,gEAlGiByC,iCC2Od0uH,8MA7Ob/pH,MAAQ,CACN2B,WAAW,KACXC,cAAc,QAIhBrG,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,6JAILlD,KAAKyH,oBAAqB,sJAI1BzH,KAAK0H,gMAGkBC,EAAUC,8EACjC5H,KAAKkD,YAEiByE,EAAU3F,WAAahC,KAAKC,MAAM+B,UAEtDhC,KAAKqI,aAAa,CAChBc,WAAW,KACXC,cAAc,MACd,WACAjG,EAAKuE,+LAKQI,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,iQAKDoB,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChBvI,OAAO,SAAAwI,GAAC,OAAIA,EAAE5H,OACd6H,aAAa,SAACC,EAAMtD,GAClBuD,EAAKhC,aAAa,CAChBe,cAAcgB,KAGlBE,aAAa,SAACF,EAAMtD,GAClBuD,EAAKhC,aAAa,CAChBe,cAAc,QAGlBmB,cAAevK,KAAKC,MAAMsK,cAAgBvK,KAAKC,MAAMsK,cAAiB,SAAAC,GAAC,OAAIA,GAC3EC,WAAYzK,KAAKC,MAAMwK,WACvBE,YAAa,SAAAT,GACX,OAAO,MAETzI,MAAM,CACJmJ,QAAS,CACPC,UAAW7K,KAAKC,MAAM6K,OAAS,CAC7BC,WAAY/K,KAAKC,MAAMwB,MAAMC,OAAOsJ,QAClC,CACFvC,QAAS,SAGbwC,OAAO,CACLrI,KAAK,CACHH,WAAW,IACXC,SAAS1C,KAAKC,MAAM+B,SAAW,GAAK,GACpCkJ,WAAYlL,KAAKC,MAAMwB,MAAM0J,MAAMC,YAGvCC,QAAQ,CACNzI,KAAK,CACHF,SAAS,GACTD,WAAW,IACXyI,WAAYlL,KAAKC,MAAMwB,MAAM0J,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqB/L,KAAKC,MAAM6K,OAChCkB,sBAAsB,CAAEC,KAAM,SAC9BpL,OAAQb,KAAKC,MAAMY,QAAU,CAACuL,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,GAC1DL,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,OAGpDnM,KAAKC,MAAMuxH,aACbroH,EAAWkC,QAAU,CACnB1L,OAAOC,OAAO,CACZ6xH,UAAW,GACXC,WAAY,GACZC,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXC,YAAa,SACbC,WAAY/xH,KAAKC,MAAM+B,SAAW,GAAK,GACvCgwH,cAAehyH,KAAKC,MAAMwB,MAAMC,OAAOyV,OACvC86G,QAAS,CACP,CACEh5D,GAAI,QACJ5yD,MAAO,CACL2rH,cAAe,WAIrBhyH,KAAKC,MAAMiyH,eAIjBlyH,KAAKqI,aAAa,CAChBc,kJAMF,OACEqtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP8N,SAAU,WACV7M,WAAY,SACZE,eAAgB,UAGdjB,KAAKwH,MAAM2B,aAAenJ,KAAKC,MAAM6K,QACnC0rG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5oG,OAAQ,EACRzB,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACb1D,UAAW,SACX9H,WAAY,SACZ6M,SAAU,WACV9N,MAAO,CAAC,MAAM,OACdiC,OAAQ,CAAC,MAAM,OACff,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAM4B,cACTotG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,QAAQ,OAChBiC,OAAQ,CAAC,QAAQ,OACjBD,IAAK9B,KAAKwH,MAAM4B,cAAcjI,QAEhCq1G,EAAAr2G,EAAAC,cAAC0C,GAAA,EAADnD,OAAAC,OAAA,CACE+D,SAAU,EACVlB,WAAY,EACZC,SAAU,CAAC,EAAE,GACbkB,aAAc,EACdP,OAAQrD,KAAKwH,MAAM4B,cAAc+oH,YAAcnyH,KAAKwH,MAAM4B,cAAcsB,OACpE1K,KAAKwH,MAAM4B,cAAcgpH,kBAE/B5b,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbD,WAAY,EACZH,MAAO,aAENtC,KAAKwH,MAAM4B,cAAcoE,QAI9BgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJ/L,OAAQ,QACRD,IAAK9B,KAAKC,MAAMoyH,eAElB7b,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAEdzC,KAAKC,MAAMoa,cAEdm8F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAENtC,KAAKC,MAAMqyH,gBAO1B9b,EAAAr2G,EAAAC,cAACktB,EAAA,EAAD3tB,OAAAC,OAAA,CACE2D,KAAM0K,KACNC,YAAY,GACRlO,KAAKC,MACLD,KAAKwH,MAAM2B,WAJjB,CAKEiB,KAAMpK,KAAKC,MAAMiJ,qBAvOGrG,kCC8Gf0vH,8MA9Gb/qH,MAAQ,CACNgrH,WAAW,KACXC,aAAa,QAIf1vH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0yH,yMAGkB/qH,EAAUC,sFACjC5H,KAAKkD,YACC4sH,EAAuBnoH,EAAUmoH,uBAAyB9vH,KAAKC,MAAM6vH,uBACvCnoH,EAAU6rB,qBAAuBpkB,KAAKC,UAAU1H,EAAU6rB,uBAAyBpkB,KAAKC,UAAUrP,KAAKC,MAAMuzB,sBAC/Gs8F,IAChC9vH,KAAK0yH,oBAGDljH,EAAgB7H,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDyN,EAAmB9H,EAAU+H,YAAc1P,KAAKC,MAAMyP,WACvCN,KAAKC,UAAU1H,EAAUgrH,gBAAkBvjH,KAAKC,UAAUrP,KAAKC,MAAM0yH,eACtEljH,GAAoBD,KAChCojH,EAAWjzH,OAAOC,OAAO,GAAGI,KAAKwH,OACvCxH,KAAKgI,SAAS,CACZwqH,WAAW,KACXC,aAAa,MACb,WACAtvH,EAAK6E,SAAS4qH,8QAOb5yH,KAAKC,MAAMuzB,qBAAwBxzB,KAAKC,MAAM6vH,+DAC1C,aAGHngH,EAAkB3P,KAAKC,MAAM0P,iBAAmB,QACpC3P,KAAKC,MAAMg9B,+CAAmBj9B,KAAK+C,cAAcm9B,oBAAoBvwB,EAAgB3P,KAAKC,MAAM4P,mCAA5GotB,OAGAw1F,EAAex1F,EAAUG,aACzBo1F,EAAaC,EAAahhH,KAAKghH,EAAaxlH,MAAMgwB,EAAUE,OAAOla,IAAI,OAE7EjjB,KAAKgI,SAAS,CACZwqH,aACAC,qJAIK,IAAApoH,EAAArK,KAED2yH,EAAe,CACnBpb,WAAW,EACXj1G,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAO4Z,UAC9BpQ,WAAWlL,KAAKC,MAAMwB,MAAM0J,MAAMyb,QAClCnkB,WAAYzC,KAAKC,MAAM+B,SAAW,IAAM,IACxCU,SAAS1C,KAAKC,MAAM+B,SAAW,OAAS,SAItChC,KAAKC,MAAM0yH,cAAgBhzH,OAAOoE,KAAK/D,KAAKC,MAAM0yH,cAAc3uH,QAClErE,OAAOoE,KAAK/D,KAAKC,MAAM0yH,cAAc1uH,QAAQ,SAAA1C,GAC3CoxH,EAAapxH,GAAK8I,EAAKpK,MAAM0yH,aAAapxH,KAI9C,IAAMoC,EAAW3D,KAAKC,MAAM0D,UAAY,EAExC,OAAO3D,KAAKwH,MAAMirH,cAAgBzyH,KAAKwH,MAAMgrH,WAC3Chc,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACyyH,GAAA1yH,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXrvH,SAAUA,EACVg1B,SAAU,QACVy3B,IAAKpjD,WAAWhN,KAAKwH,MAAMgrH,YAC3B55F,MAAO5rB,WAAWhN,KAAKwH,MAAMirH,cAC7BQ,aAAe,SAAAz9F,GAAC,MAAI,KAAKnrB,EAAKtH,cAAcS,YAAYgyB,EAAE7xB,KAEzD,SAAAuM,GAAA,IAAGgjH,EAAHhjH,EAAGgjH,WAAHhjH,EAAe0oB,MAAf,OACC49E,EAAAr2G,EAAAC,cAAA,QACE+yH,IAAKD,EACL7sH,MAAOssH,OAMfnc,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAM,gBA3GcQ,aC+GnBuwH,8MA7Gb5rH,MAAQ,CACN4nE,YAAY,KACZH,cAAc,QAIhBlsE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0yH,yMAGkB/qH,EAAUC,sFACjC5H,KAAKkD,YACC4sH,EAAuBnoH,EAAUmoH,uBAAyB9vH,KAAKC,MAAM6vH,uBACvCnoH,EAAU6rB,qBAAuBpkB,KAAKC,UAAU1H,EAAU6rB,uBAAyBpkB,KAAKC,UAAUrP,KAAKC,MAAMuzB,sBAC/Gs8F,IAChC9vH,KAAK0yH,oBAGDljH,EAAgB7H,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDyN,EAAmB9H,EAAU+H,YAAc1P,KAAKC,MAAMyP,WACvCN,KAAKC,UAAU1H,EAAUgrH,gBAAkBvjH,KAAKC,UAAUrP,KAAKC,MAAM0yH,eACtEljH,GAAoBD,KAChCojH,EAAWjzH,OAAOC,OAAO,GAAGI,KAAKwH,OACvCxH,KAAKgI,SAAS,CACZonE,YAAY,KACZH,cAAc,MACd,WACA9rE,EAAK6E,SAAS4qH,8QAOb5yH,KAAKC,MAAMuzB,qBAAwBxzB,KAAKC,MAAM6vH,+DAC1C,aAGHngH,EAAkB3P,KAAKC,MAAM0P,iBAAmB,QACpC3P,KAAKC,MAAMg9B,+CAAmBj9B,KAAK+C,cAAcm9B,oBAAoBvwB,EAAgB3P,KAAKC,MAAM4P,mCAA5GotB,OAEAgyC,EAAgBhyC,EAAUI,cAC1B+xC,EAAcH,EAAcx9D,KAAKwrB,EAAUK,gBAAgBrwB,MAAMgwB,EAAUE,OAAOla,IAAI,OAE5FjjB,KAAKgI,SAAS,CACZonE,cACAH,sJAIK,IAAA5kE,EAAArK,KAED2yH,EAAe,CACnBpb,WAAW,EACXj1G,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAO4Z,UAC9BpQ,WAAWlL,KAAKC,MAAMwB,MAAM0J,MAAMyb,QAClCnkB,WAAYzC,KAAKC,MAAM+B,SAAW,IAAM,IACxCU,SAAS1C,KAAKC,MAAM+B,SAAW,OAAS,SAItChC,KAAKC,MAAM0yH,cAAgBhzH,OAAOoE,KAAK/D,KAAKC,MAAM0yH,cAAc3uH,QAClErE,OAAOoE,KAAK/D,KAAKC,MAAM0yH,cAAc1uH,QAAQ,SAAA1C,GAC3CoxH,EAAapxH,GAAK8I,EAAKpK,MAAM0yH,aAAapxH,KAI9C,IAAM4C,EAAOnE,KAAKC,MAAMkE,MAAQ,KAC1BR,EAAW3D,KAAKC,MAAM0D,UAAY,EAExC,OAAO3D,KAAKwH,MAAMynE,eAAiBjvE,KAAKwH,MAAM4nE,YAC5ConC,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KAEED,EAAAr2G,EAAAC,cAACyyH,GAAA1yH,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXrvH,SAAUA,EACVg1B,SAAU,QACVy3B,IAAKpjD,WAAWhN,KAAKwH,MAAM4nE,aAC3Bx2C,MAAO5rB,WAAWhN,KAAKwH,MAAMynE,eAC7BgkD,aAAe,SAAAz9F,GAAC,OAAIrxB,EAAKkG,EAAKtH,cAAcS,YAAYgyB,EAAE7xB,KAEzD,SAAAuM,GAAA,IAAGgjH,EAAHhjH,EAAGgjH,WAAHhjH,EAAe0oB,MAAf,OACC49E,EAAAr2G,EAAAC,cAAA,QACE+yH,IAAKD,EACL7sH,MAAOssH,OAMfnc,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAM,gBA1GeQ,aC0+CpBwwH,8MA39Cb7rH,MAAQ,CACNy1B,UAAU,KACVt7B,aAAa,GACb+H,YAAY,KACZ4+C,YAAY,KACZgrE,aAAa,KACb9pH,cAAc,KACdslH,cAAa,EACb1uF,gBAAgB,GAChBmzF,gBAAgB,GAChB7J,eAAe,KACf8J,gBAAe,EACfC,kBAAkB,GAClBC,kBAAkB,GAClBC,iBAAgB,EAChB5E,iBAAgB,EAChBxF,iBAAiB,KACjBqK,oBAAoB,KACpBC,8BAA8B,UAIhC9wH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,uKAK9CD,KAAKkD,YAELlD,KAAKqvH,gBAAgByE,KAAM,WACzB,IACMR,EAAenwH,EAAKlD,MAAM4kH,UAAUE,OACpCmK,EAAkB/rH,EAAKJ,cAAciS,gBAAgB,CAAC,aACtD00G,EAAiB/pH,OAAOkR,OAAOq+G,GAAiBhwG,KAAM,SAAA+Z,GAAC,OAAIA,EAAE4kD,QAAUy1C,IAE7E,QAAuBnlG,IAAnBu7F,EAA8B,CAChC,IAAMphE,EAAcohE,EAAenmH,KAC7BiwH,GAAkBrwH,EAAKqE,MAAMsnH,aAC7BtlH,EAAgBrG,EAAKlD,MAAM4kH,UAAUkP,OACrCxK,EAAmBpmH,EAAKlD,MAAM4kH,UAAUC,OACxCp7G,EAAc6/G,GAAoBpmH,EAAKlD,MAAM+8B,kBAAkBusF,IAAqBpmH,EAAKlD,MAAM+8B,kBAAkBusF,GAAkB//G,GAAiBrG,EAAKlD,MAAM+8B,kBAAkBusF,GAAkB//G,GAAyB,KAElO,GAAIrG,EAAKqE,MAAMsnH,eAAiBplH,EAC9B,OAAOvG,EAAKlD,MAAM8G,YAAY5D,EAAKlD,MAAMioH,gBAAgBrqC,OAG3D16E,EAAK6E,SAAS,CACZsgD,cACA5+C,cACA4pH,eACA9pH,gBACAkgH,iBACA8J,iBACAjK,yBAEG,CACL,IAAM//G,EAAgBrG,EAAKlD,MAAM4kH,UAAUC,OACrCyE,EAAmBpmH,EAAKlD,MAAM4kH,UAAUE,OACxCr7G,EAAcvG,EAAKlD,MAAM+8B,kBAAkBusF,IAAqBpmH,EAAKlD,MAAM+8B,kBAAkBusF,GAAkB//G,GAAiBrG,EAAKlD,MAAM+8B,kBAAkBusF,GAAkB//G,GAAiB,KAClME,GACFvG,EAAK6E,SAAS,CACZ0B,cACAF,gBACA+/G,qBAKNpmH,EAAK6E,SAAS,CACZ+mH,iBAvCsB,0aA+CHpnH,EAAWC,kFAClC5H,KAAKkD,YAECmsB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClDmkH,EAA2B5kH,KAAKC,UAAU1H,EAAUq1B,qBAAuB5tB,KAAKC,UAAUrP,KAAKC,MAAM+8B,oBACvG3N,GAAkB2kG,IACpBh0H,KAAKgI,SAAS,CACZ2rH,iBAAgB,GAChB,WACAtpH,EAAKglH,2SAMJrvH,KAAKC,MAAM4P,+BACO,GACG,EACxB7P,KAAKgI,SAAS,CACZ8mH,cAHmB,EAInB6E,iBAHsB,uBAKjB,0BAGe3zH,KAAK+C,cAAcg6B,4BAA4B/8B,KAAKC,MAAM+8B,kBAAkBh9B,KAAKC,MAAM4P,iBAAzGotB,YAGEg3F,EAAiB,GACjBC,EAAmB,GAEnBT,EAAoB,GACpBC,EAAoB,IACF,EAClBS,EAAiBn0H,KAAK+C,cAAciS,gBAAgB,CAAC,aAE3DioB,EAAUQ,gBAAgBx5B,QAAS,SAAA47B,GAC5Bq0F,EAAiBr0F,EAAY/B,WAChCo2F,EAAiBr0F,EAAY/B,SAAW,CACtC2nF,OAAO3I,EAAK/5G,cAAckO,MAAM,GAChCW,QAAQkrG,EAAK/5G,cAAckO,MAAM,KAIrCijH,EAAiBr0F,EAAY/B,SAAS2nF,OAASyO,EAAiBr0F,EAAY/B,SAAS2nF,OAAOh0G,KAAKouB,EAAYC,eAC7Go0F,EAAiBr0F,EAAY/B,SAASlsB,QAAUsiH,EAAiBr0F,EAAY/B,SAASlsB,QAAQH,KAAKouB,EAAYtB,cAE1G01F,EAAep0F,EAAY7uB,SAC9BijH,EAAep0F,EAAY7uB,OAAS8rG,EAAK/5G,cAAckO,MAAM,IAE/DgjH,EAAep0F,EAAY7uB,OAASijH,EAAep0F,EAAY7uB,OAAOS,KAAKouB,EAAYtB,gBAGnF6B,EAAkBzgC,OAAOoE,KAAKkwH,GAEpCt0H,OAAOoE,KAAK/D,KAAKC,MAAM+8B,mBAAmB/4B,QAAQ,SAAAy5B,GAChD/9B,OAAOoE,KAAK+4G,EAAK78G,MAAM+8B,kBAAkBU,IAAWz5B,QAAS,SAAA65B,GACxDsC,EAAgBlM,SAAS4J,IACpB21F,EAAkB/1F,KACpB+1F,EAAkB/1F,GAAU,IAE9B+1F,EAAkB/1F,GAAUI,GAAS,GACrC21F,EAAkB/1F,GAAUI,GAASg/E,EAAK78G,MAAM+8B,kBAAkBU,GAAUI,KAG1E41F,EAAkBh2F,KACpBg2F,EAAkBh2F,GAAU,IAE9Bg2F,EAAkBh2F,GAAUI,GAAS,GACrC41F,EAAkBh2F,GAAUI,GAASg/E,EAAK78G,MAAM+8B,kBAAkBU,GAAUI,QAK5Es2F,EAAqBz0H,OAAOoE,KAAKkwH,GAAgBnuH,IAAK,SAAAkL,GAC1D,IAAMqjH,EAAernH,WAAWinH,EAAejjH,GAAO9D,QAAQ,IACxDonH,EAAkBL,EAAejjH,GAAOiS,IAAIga,EAAUG,cAAcnwB,MAAM,KAC1EvD,EAAcozG,EAAK/5G,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,gBAC/E,MAAO,CACL7P,GAAG4L,EACH7O,KAAK6O,EACLxD,MAAMwD,EACNohH,gBAAgB,CACdjuH,KAAK,IACLC,QAAQ,OACRG,UAAU,CACRlD,GAAG,EACHoB,WAAW,EACXC,SAAS,CAAC,EAAE,KAGhByvH,WAAWkC,EACX3pH,MAAM0G,KAAK0wD,MAAMwyD,GACjB7c,YAAW,KAAA9wG,OAAO0tH,EAAP,QAAA1tH,OAA0BqK,GACrC1O,MAAM,OAAOoH,EAAYpH,MAAMgL,IAAIC,KAAK,KAAK,IAC7CpM,MAAMuI,GAAeA,EAAYtH,KAAOsH,EAAYtH,KAA9C,iBAAAuE,OAAsEqK,EAAMiE,cAA5E,WAKVtV,OAAOoE,KAAKk5B,EAAUO,gBAAgBv5B,QAAS,SAAA+M,GAC7C,IAAMqjH,EAAernH,WAAWiwB,EAAUO,eAAexsB,GAAOyuB,qBAAqBvyB,QAAQ,IACvFonH,EAAkBr3F,EAAUO,eAAexsB,GAAOyuB,qBAAqBxc,IAAIga,EAAUG,cAAcnwB,MAAM,KACzGvD,EAAcozG,EAAK/5G,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,gBACxD6nG,EAAK/5G,cAAciS,gBAAgB,CAAC,YAAYhE,IACpDwO,aACjB40G,EAAmBjnH,KAAK,CACtB/H,GAAG4L,EACH7O,KAAK6O,EACLxD,MAAMwD,EACNohH,gBAAgB,CACdjuH,KAAK,IACLC,QAAQ,OACRG,UAAU,CACRlD,GAAG,EACHoB,WAAW,EACXC,SAAS,CAAC,EAAE,KAGhByvH,WAAWkC,EACX3pH,MAAM0G,KAAK0wD,MAAMwyD,GACjB7c,YAAW,KAAA9wG,OAAO0tH,EAAP,QAAA1tH,OAA0BqK,GACrC1O,MAAM,OAAOoH,EAAYpH,MAAMgL,IAAIC,KAAK,KAAK,IAC7CpM,MAAMuI,GAAeA,EAAYtH,KAAOsH,EAAYtH,KAA9C,iBAAAuE,OAAsEqK,EAAMiE,cAA5E,YAKN2+G,EAAsBj0H,OAAOoE,KAAKmwH,GAAkBpuH,IAAI,SAACyuH,EAAY7nH,GACzE,IAAMqxB,EAAgBo2F,EAAeI,GAC/BtF,EAAciF,EAAiBK,GAErC,MAAO,CACLnvH,GAAGmvH,EACHpyH,KAAKoyH,EACL7pH,MAJkBsC,WAAWiiH,EAAYxJ,OAAOx4G,MAAM,KAAKC,QAAQ,IAKnEM,MAAOuwB,EAAc57B,KACrBG,MAAM,OAAOy7B,EAAcz7B,MAAMgL,IAAIC,KAAK,KAAK,IAC/CkqG,YAAW,KAAA9wG,OAAOsoH,EAAYr9G,QAAQ1E,QAAQ,GAAnC,QAAAvG,OAA4Co3B,EAAc57B,SAMnER,EAAes7B,EAAUt7B,aACzBmtH,EAAe7xF,GAAaj9B,KAAK+C,cAAckO,MAAMgsB,EAAUG,cAAcvoB,GAAG,GAItF7U,KAAKgI,SAAS,CACZi1B,YACA6xF,eACAntH,eACAgyH,iBAxHsB,EAyHtBvzF,kBACAqzF,oBACAC,oBACAU,qBACAR,qKAKYN,GAChB,IAAIz1C,EAAK,GAAAl3E,OAAM3G,KAAKC,MAAMioH,gBAAgBrqC,MAAjC,KAAAl3E,OAA0C2sH,IAC/BtzH,KAAKC,MAAM+8B,kBAAkBh9B,KAAKwH,MAAM+hH,mBAAqBvpH,KAAKC,MAAM+8B,kBAAkBh9B,KAAKwH,MAAM+hH,kBAAkBvpH,KAAKwH,MAAMgC,eAAiBxJ,KAAKC,MAAM+8B,kBAAkBh9B,KAAKwH,MAAM+hH,kBAAkBvpH,KAAKwH,MAAMgC,eAAiB,QAE3Pq0E,GAAK,IAAAl3E,OAAQ3G,KAAKwH,MAAM+hH,iBAAnB,KAAA5iH,OAAuC3G,KAAKwH,MAAMgC,gBAEzDxJ,KAAKC,MAAM8G,YAAY82E,gDAEJt6E,EAAKm6B,EAAS1sB,GACjC,IAAIsiH,EAAa,KAEhBA,EADU,OAAP/vH,EACU,SAEE,SAChB,IAAIs6E,EAAK,GAAAl3E,OAAM3G,KAAKC,MAAMioH,gBAAgBrqC,MAAjC,KAAAl3E,OAA0C2sH,IAC/BtzH,KAAKC,MAAM+8B,kBAAkBU,IAAa19B,KAAKC,MAAM+8B,kBAAkBU,GAAU1sB,GAAShR,KAAKC,MAAM+8B,kBAAkBU,GAAU1sB,GAAS,QAE5J6sE,GAAK,IAAAl3E,OAAQ+2B,EAAR,KAAA/2B,OAAoBqK,IAE3BhR,KAAKC,MAAM8G,YAAY82E,yCAGXngD,EAAS1sB,GAErB,GADoBhR,KAAKC,MAAM+8B,kBAAkBU,IAAa19B,KAAKC,MAAM+8B,kBAAkBU,GAAU1sB,GAAShR,KAAKC,MAAM+8B,kBAAkBU,GAAU1sB,GAAS,KAC9I,CACd,IAAI6sE,EAAK,GAAAl3E,OAAM3G,KAAKC,MAAMioH,gBAAgBrqC,OACtC79E,KAAKwH,MAAM8rH,eACbz1C,GAAK,IAAAl3E,OAAQ3G,KAAKwH,MAAM8rH,eAE1Bz1C,GAAK,IAAAl3E,OAAQ+2B,EAAR,KAAA/2B,OAAoBqK,GAEzBhR,KAAKC,MAAM8G,YAAY82E,6DAIMg2C,GAC/B7zH,KAAKgI,SAAS,CACZ6rH,mEAKE7zH,KAAKwH,MAAMkC,aAAe1J,KAAKwH,MAAM8gD,YAClCtoD,KAAKwH,MAAMsnH,aAGd9uH,KAAKC,MAAM8G,YAAY/G,KAAKC,MAAMioH,gBAAgBrqC,MAAM,IAAI79E,KAAKwH,MAAM+hH,iBAAiB,IAAIvpH,KAAKwH,MAAMgC,eAFvGxJ,KAAKC,MAAM8G,YAAY/G,KAAKC,MAAMioH,gBAAgBrqC,MAAM,IAAI79E,KAAKwH,MAAMkiH,eAAe7rC,OAOxF79E,KAAKC,MAAM8G,YAAY/G,KAAKC,MAAMioH,gBAAgBrqC,wCAI7C,IAAA0nC,EAAAvlH,KAEDiG,EAAW,GACXuuH,EAAiB,GAkBvB,OAjBIx0H,KAAKwH,MAAM8gD,cACbksE,EAAernH,KAAKnN,KAAK+C,cAAc0K,WAAWzN,KAAKwH,MAAMkiH,eAAewG,WACxElwH,KAAKwH,MAAMkC,cACR1J,KAAKwH,MAAMsnH,aAEL9uH,KAAKwH,MAAMkC,aACpBzD,EAASkH,KAAKnN,KAAKC,MAAMioH,gBAAgBrqC,MAAM,IAAI79E,KAAKwH,MAAM+hH,iBAAiB,IAAIvpH,KAAKwH,MAAMgC,eAF9FvD,EAASkH,KAAKnN,KAAKC,MAAMioH,gBAAgBrqC,MAAM,IAAI79E,KAAKwH,MAAMkiH,eAAe7rC,SAM/E79E,KAAKwH,MAAM+hH,kBACbiL,EAAernH,KAAKnN,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,YAAYhV,KAAKwH,MAAM+hH,iBAAiB,WAEtGvpH,KAAKwH,MAAMgC,eACbgrH,EAAernH,KAAKnN,KAAKwH,MAAMgC,eAI/BgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGL00H,EAAexwH,OAAO,GACpBwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP/M,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,IAEP02G,EAAAr2G,EAAAC,cAAC6E,EAAA,EAADtF,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2C,KAAM,WACNqD,SAAUA,EACVJ,KAAM2uH,EACNxyH,SAAUhC,KAAKC,MAAM+B,SACrBvB,YAAaT,KAAKw6G,OAAO77F,KAAK3e,UAGlCw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GACPmB,eAAgB,cAQrBjB,KAAKwH,MAAMunH,gBAiBR/uH,KAAKwH,MAAMkC,YACb8sG,EAAAr2G,EAAAC,cAACq0H,GAAD90H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEg9B,UAAWj9B,KAAKwH,MAAMy1B,UACtBqrB,YAAatoD,KAAKwH,MAAM8gD,YACxB5+C,YAAa1J,KAAKwH,MAAMkC,YACxBolH,aAAc9uH,KAAKwH,MAAMsnH,aACzBtlH,cAAexJ,KAAKwH,MAAMgC,cAC1BkgH,eAAgB1pH,KAAKwH,MAAMkiH,eAC3B2F,cAAervH,KAAKqvH,cAAc1wG,KAAK3e,MACvCupH,iBAAkBvpH,KAAKwH,MAAM+hH,iBAC7BvsF,kBAAmBh9B,KAAKC,MAAM+8B,kBAC9BmtF,kBAAmBnqH,KAAKmqH,kBAAkBxrG,KAAK3e,SAE9CA,KAAKwH,MAAM8gD,aAAgBtoD,KAAKwH,MAAMsnH,aAMzCtY,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAENE,KAAKwH,MAAMgsH,eACVhd,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAAC8wH,GAAA,EAADvxH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE6D,UAAW,CACTgK,GAAG,CAAC,EAAE,IAERqjH,YAAa,WACbT,SAAU,iCACVU,sBAAuBpxH,KAAK+C,cAAcupG,6BAE5CkK,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJS,IAAK9B,KAAKwH,MAAMkiH,eAAevoH,MAC/BkB,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,KAEG5tH,KAAK+C,cAAc0K,WAAWzN,KAAKwH,MAAMkiH,eAAewG,UAF3D,cAKF1Z,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJlN,GAAI,OACJd,MAAO,CAAC,EAAE,IACV40H,UAAW,SACXzzH,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbmG,UAAW,UAEV7I,KAAK+C,cAAciS,gBAAgB,CAAC,WAAWhV,KAAKwH,MAAM8gD,YAAY,cAAc,YAK3FkuD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAAC8wH,GAAA,EAADvxH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE6D,UAAW,CACTgK,GAAG,CAAC,EAAE,IAERqjH,YAAa,WACbT,SAAU,iCACVU,sBAAuBpxH,KAAK+C,cAAcupG,6BAE5CkK,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,GADN,6BAQF9N,KAAKwH,MAAMmsH,iBAAmB3zH,KAAKwH,MAAMsnH,cACvCtY,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACP8I,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,CAAC,EAAE,GACP70H,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACNiO,GAAG,CAAC,EAAE,GACNrF,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMy1B,UAAUE,OACnBq5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEc,WAAY,EACZ90G,WAAY,CAAC,EAAE,GACfH,MAAO,YACP4I,WAAY,UACZxI,SAAU,CAAC,EAAE,SACboG,wBAAyB,CAAEC,OAAQ/I,KAAKwH,MAAMy1B,UAAUE,OAAOjwB,QAAQ,GAAG,sBAI5EspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,SAGjBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,WAOAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE1nF,UAAW,SACXC,QAAShvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,aAExDwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,mBAOnBk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,CAAC,EAAE,GACP70H,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACNiO,GAAG,CAAC,EAAE,GACNrF,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMy1B,UACTu5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACw0H,GAADj1H,OAAAC,OAAA,CACE+D,SAAU,GACN3D,KAAKC,MAFX,CAGEg9B,UAAWj9B,KAAKwH,MAAMy1B,aAExBu5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,IACPiB,WAAY,SACZE,eAAgB,YAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZyI,WAAYlL,KAAKC,MAAMwB,MAAM0J,MAAMyb,QACnCtkB,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAJrD,IAMI9rB,KAAKwH,MAAMy1B,UAAUM,kBAAkBrwB,QAAQ,GANnD,MASFspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE71G,GAAI,EACJ8B,SAAU,EACVD,WAAY,EACZyI,WAAYlL,KAAKC,MAAMwB,MAAM0J,MAAMyb,QACnCtkB,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WALrD,KAOA0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,IACPiB,WAAY,SACZE,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACy0H,GAADl1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkE,KAAM,KACNR,SAAU,EACVgvH,aAAc,CACZjwH,SAAS,GACTD,WAAW,IACXH,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDmR,UAAWj9B,KAAKwH,MAAMy1B,gBAM9Bu5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,SAGjBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,qBA4BRk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACNiO,GAAG,CAAC,EAAE,GACNrF,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMosH,oBACTpd,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZqE,GAAI,kBACJrD,OAAQ,CAAC,OAAO,QAChBf,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC00H,GAADn1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE6K,QAAQ,EACRoD,YAAY,EACZ3D,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzB5K,MAAQE,KAAKC,MAAM+B,SAAW,GAAK,GACnCD,OAAS/B,KAAKC,MAAM+B,SAAW,GAAK,GACpCkH,UAAWlJ,KAAKwH,MAAMosH,wBAI1Bpd,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,SAGjBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,+BA2BVk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPsF,GAAI,mBACJnE,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,EAAE,MACVkB,cAAe,SACfoE,GAAI,yBAEJoxG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACElwF,MAAO,cACP+wF,WAAcx3G,KAAKC,MAAM+B,SAIrB,KAJgC,CAClCqE,MAAM,CACJ6nB,UAAU,UAIdsoF,EAAAr2G,EAAAC,cAAC00H,GAADn1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuxH,YAAY,EACZtjH,YAAY,EACZgkH,YAAa,CACXT,UAAU,GACVsD,aAAa,GAEfxqH,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtB8nH,aAAc,cACd7nH,WAAY,SAAAP,GACV,OAAI8C,WAAW9C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGXmP,SAAU,wBACV3Q,UAAWlJ,KAAKwH,MAAM4sH,mBACtB/B,aAAcryH,KAAKC,MAAMioH,gBAAgB/mH,MACzCkZ,aAAY,KAAA1T,OAAO3G,KAAK+C,cAAcS,YAAYwJ,WAAWhN,KAAKwH,MAAMy1B,UAAUG,cAAc,IAChGv8B,OAAQb,KAAKC,MAAM+B,SAAW,CAAEoK,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,SAI3HiqG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,MACVkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,KACEH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,CAAC,EAAE,GACPxhB,GAAI,CAAC,EAAE,GACP20H,UAAW,SACX1zH,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,IACVkB,cAAe,SACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACEnrH,WAAY,EACZC,SAAU,CAAC,EAAE,GACbmG,UAAW,QAHb,gBAQF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACP9I,MAAO,CAAC,EAAE,IACVkB,cAAe,SACfC,eAAgB,YAEhBu1G,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAAD,CACEW,WAAY,CACVnZ,EAAE,EACFxB,GAAG,GAELsa,aACE,CAAC3P,MAAM,OAAO8C,MAAM,MAEtBrL,KAAM,mBACNgY,QAAS,CACP,CAACzP,MAAM,OAAO8C,MAAM,MACpB,CAAC9C,MAAM,QAAQ8C,MAAM,MACrB,CAAC9C,MAAM,SAAS8C,MAAM,MACtB,CAAC9C,MAAM,SAAS8C,MAAM,MACtB,CAAC9C,MAAM,MAAM8C,MAAM,QAErB6O,SAAW,SAAA7R,GAAC,OAAI+6G,EAAKyP,iCAAiCxqH,QAI5DgsG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,CAAC,EAAE,GACPgvH,UAAW,SACXzzH,eAAgB,SAChBmE,GAAI,yBAEJoxG,EAAAr2G,EAAAC,cAACutH,GAADhuH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqP,cAAe,GACfuK,SAAU,wBACVC,eAAgB,wBAChBgyG,iBAAkB9rH,KAAKwH,MAAM7F,aAC7BwN,mBAAoBnP,KAAKwH,MAAMqsH,8BAC/Bn+G,iBAAkB1V,KAAK+C,cAAcmwD,oBAAoB,MAAM,WAU7ElzD,KAAKwH,MAAM44B,gBAAgBp8B,OAAO,GAChCwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP1I,GAAI,iBACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,uBAOF+zG,EAAAr2G,EAAAC,cAAConH,EAAA,EAAD7nH,OAAAC,OAAA,CACE6nH,iBAAkB,GAClBn/D,YAAatoD,KAAKwH,MAAM8gD,YACxB7nD,YAAa,SAACR,GAAD,OAAWslH,EAAKkG,cAAcxrH,EAAMy9B,SAASz9B,EAAM+Q,QAChE02G,UAAW,CACThlH,SAAS,CAAC,OAAO,SAEnB01G,KAAM,CACJ,CACE3xF,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAME,KAAKwH,MAAMgsH,eAAiB,IAAO,MAElDjtE,OAAO,CACL,CACEpkD,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEI,KAAK,gBAEP,CACEwC,QAAO,EACPxC,KAAK,oBACLlC,MAAM,CACJyF,GAAG,EACH3D,OAAO,YAKf,CACE0kB,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,eA4BX,CACEskB,MAAM,OACNxmB,MAAM,CACJH,MAAM,CAAC,IAAME,KAAKwH,MAAMgsH,eAAiB,GAAM,MAEjDjtE,OAAO,CACL,CACEpkD,KAAKnC,KAAKwH,MAAMgsH,eAAX,GAAA7sH,OAA+B3G,KAAKwH,MAAMkiH,eAAewG,SAAzD,eAAiF,OACtFjwH,MAAM,CACJ4D,aAAa,EACbF,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAK3C,CACEykB,MAAMzmB,KAAKwH,MAAMgsH,eAAiB,MAAQ,aAC1ClV,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,gBACpDwjG,SAASx4G,KAAKwH,MAAMgsH,gBAA6C,OAA3BxzH,KAAKwH,MAAM8gD,YACjDroD,MAAM,CACJH,MAAM,CAACE,KAAKwH,MAAMgsH,eAAiB,IAAO,IAAKxzH,KAAKwH,MAAMgsH,eAAiB,IAAO,MAEpFn1G,YAAY,CACVrd,cAAc,SACdD,WAAW,cAEbwlD,OAAO,CACL,CACEpkD,KAAK,YACL8tH,aAAY,KAIlB,CACExpG,MAAMzmB,KAAKwH,MAAMgsH,eAAiB,MAAQ,aAC1ClV,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,gBACpDwjG,SAASx4G,KAAKwH,MAAMgsH,gBAA6C,OAA3BxzH,KAAKwH,MAAM8gD,YACjDroD,MAAM,CACJH,MAAM,CAACE,KAAKwH,MAAMgsH,eAAiB,IAAO,IAAKxzH,KAAKwH,MAAMgsH,eAAiB,IAAO,MAEpFn1G,YAAY,CACVrd,cAAc,SACdD,WAAW,cAEbwlD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJ6D,UAAU,CACRzC,GAAG,IAGP4uH,aAAY,KAIlB,CACEtrH,QAAO,EACP8hB,MAAM,YACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,aACpD/U,MAAM,CACJH,MAAM,CAAC,IAAM,KAEfymD,OAAO,CACL,CACEpkD,KAAK,uBACLlC,MAAM,CACJ6D,UAAU,CACRzC,GAAG,GAELU,OAAO,CAAC,QAAQ,WAMxB,CACE4C,QAAO,EACP8hB,MAAM,mBACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,gBACpD/U,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,iBAIX,CACEwC,QAAO,EACP8hB,MAAM,kBACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,mBACpD/U,MAAM,CACJH,MAAM,CAAC,IAAKE,KAAKwH,MAAMgsH,eAAiB,IAAO,MAEjDjtE,OAAO,CACL,CACEpkD,KAAK,oBAkBX,CACEskB,MAAM,GACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfue,YAAY,CACVve,MAAM,GAERymD,OAAO,CACL,CACEpkD,KAAK,SACLqL,MAAO,SACPvN,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbgN,UAAU,KACVvH,UAAU,SACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAWslH,EAAKkG,cAAcxrH,EAAMy9B,SAASz9B,EAAM+Q,cAMrEhR,KAAKC,MA7NX,CA8NE+8B,kBAAmBh9B,KAAKwH,MAAMisH,uBAKpC9zH,OAAOoE,KAAK/D,KAAKwH,MAAMksH,mBAAmB1vH,OAAO,IAAMhE,KAAKC,MAAM4P,UAClE2mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP1I,GAAI,iBACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,uBAOF+zG,EAAAr2G,EAAAC,cAAConH,EAAA,EAAD7nH,OAAAC,OAAA,CACE6nH,iBAAkB,GAClBn/D,YAAatoD,KAAKwH,MAAM8gD,YACxB7nD,YAAa,SAACR,GAAD,OAAWslH,EAAKkG,cAAcxrH,EAAMy9B,SAASz9B,EAAM+Q,QAChE02G,UAAW,CACThlH,SAAS,CAAC,OAAO,SAEnB01G,KAAM,CACJ,CACE3xF,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAME,KAAKwH,MAAMgsH,eAAiB,IAAO,MAElDjtE,OAAO,CACL,CACEpkD,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEI,KAAK,gBAEP,CACEwC,QAAO,EACPxC,KAAK,oBACLlC,MAAM,CACJyF,GAAG,EACH3D,OAAO,YAKf,CACE0kB,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,eA4BX,CACEskB,MAAM,OACNxmB,MAAM,CACJH,MAAM,CAAC,IAAME,KAAKwH,MAAMgsH,eAAiB,GAAM,MAEjDjtE,OAAO,CACL,CACEpkD,KAAKnC,KAAKwH,MAAMgsH,eAAX,GAAA7sH,OAA+B3G,KAAKwH,MAAMkiH,eAAewG,SAAzD,eAAiF,OACtFjwH,MAAM,CACJ4D,aAAa,EACbF,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAK3C,CACEykB,MAAMzmB,KAAKwH,MAAMgsH,eAAiB,MAAQ,aAC1ClV,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,gBACpDwjG,SAASx4G,KAAKwH,MAAMgsH,gBAA6C,OAA3BxzH,KAAKwH,MAAM8gD,YACjDroD,MAAM,CACJH,MAAM,CAACE,KAAKwH,MAAMgsH,eAAiB,IAAO,IAAKxzH,KAAKwH,MAAMgsH,eAAiB,IAAO,MAEpFn1G,YAAY,CACVrd,cAAc,SACdD,WAAW,cAEbwlD,OAAO,CACL,CACEpkD,KAAK,YACL8tH,aAAY,KAIlB,CACExpG,MAAMzmB,KAAKwH,MAAMgsH,eAAiB,MAAQ,aAC1ClV,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,gBACpDwjG,SAASx4G,KAAKwH,MAAMgsH,gBAA6C,OAA3BxzH,KAAKwH,MAAM8gD,YACjDroD,MAAM,CACJH,MAAM,CAACE,KAAKwH,MAAMgsH,eAAiB,IAAO,IAAKxzH,KAAKwH,MAAMgsH,eAAiB,IAAO,MAEpFn1G,YAAY,CACVrd,cAAc,SACdD,WAAW,cAEbwlD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJ6D,UAAU,CACRzC,GAAG,IAGP4uH,aAAY,KAIlB,CACEtrH,QAAO,EACP8hB,MAAM,YACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,aACpD/U,MAAM,CACJH,MAAM,CAAC,IAAM,KAEfymD,OAAO,CACL,CACEpkD,KAAK,uBACLlC,MAAM,CACJ6D,UAAU,CACRzC,GAAG,GAELU,OAAO,CAAC,QAAQ,WAMxB,CACE4C,QAAO,EACP8hB,MAAM,mBACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,gBACpD/U,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,iBAIX,CACEwC,QAAO,EACP8hB,MAAM,kBACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,mBACpD/U,MAAM,CACJH,MAAM,CAAC,IAAKE,KAAKwH,MAAMgsH,eAAiB,IAAO,MAEjDjtE,OAAO,CACL,CACEpkD,KAAK,oBAkBX,CACEskB,MAAM,GACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfue,YAAY,CACVve,MAAM,GAERymD,OAAO,CACL,CACEpkD,KAAK,SACLqL,MAAO,UACPvN,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbgN,UAAU,KACVvH,UAAU,UACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAWslH,EAAKkG,cAAcxrH,EAAMy9B,SAASz9B,EAAM+Q,cAMrEhR,KAAKC,MA7NX,CA8NE+8B,kBAAmBh9B,KAAKC,MAAM4P,QAAQ7P,KAAKwH,MAAMksH,kBAAkB1zH,KAAKC,MAAM+8B,sBAOlFh9B,KAAKC,MAAM4P,SAAW7P,KAAKwH,MAAMsnH,cAC/BtY,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,EACPsF,GAAI,eACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9/G,GAAI,CAAC,EAAE,IAAd,gBACA0oG,EAAAr2G,EAAAC,cAACqvH,EAAA,EAAD9vH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqP,cAAetP,KAAKwH,MAAM44B,gBAC1B0rF,iBAAkB9rH,KAAKwH,MAAM7F,aAC7B+tH,iBAAkB1vH,KAAKwH,MAAM7F,aAAa+iC,OAAQ,SAACgrF,EAAiBz2F,GAElE,OADAy2F,EAAiBz2F,EAAE/nB,OAAOpE,eAAiBmsB,EAAE/nB,OACtCw+G,GACP,IACFtX,KAAM,CACJ,CACE3xF,MAAOzmB,KAAKC,MAAM+B,SAAW,GAAK,OAClC/B,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEc,KAAK,OACLwC,QAAO,KAIb,CACE8hB,MAAM,SACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAERymD,OAAO,CACL,CACEpkD,KAAK,YAIX,CACEskB,MAAM,OACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,UAIX,CACEwC,QAAO,EACP8hB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,aACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEsD,QAAO,EACPxC,KAAK,YAIX,CACEskB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,YAIX,CACEskB,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEhjD,KAAK,QACLpB,KAAK,SACL0D,KAAK,CAAC,gBACN5F,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEwB,KAAK,OACLoB,QAAO,EACPxC,KAAK,SACL0D,KAAK,CAAC,eAIZ,CACE4gB,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,GACNU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,qBAtkCvBq0G,EAAAr2G,EAAAC,cAAC60H,GAADt1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkqH,kBAAmBnqH,KAAKmqH,kBAAkBxrG,KAAK3e,SAjCjDw2G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACE3kH,UAAW,CACTuyH,SAAS,EACTzyH,WAAW,GAEb4iB,YAAa,CACXvX,GAAG,EACHzL,KAAK,QAEPyB,UAAW,CACThD,GAAG,EACHotB,UAAU,OACVltB,cAAc,UAEhB4B,KAAM,iCAtXGC,+DCkQRsyH,8MA7Qb3tH,MAAQ,CACNkC,YAAY,KACZ0rH,kBAAkB,KAClBC,kBAAkB,KAClBC,2BAA2B,QAI7BvyH,cAAgB,OA4HhBwyH,sDAAkB,SAAAn1G,EAAOg1G,GAAP,IAAAC,EAAAC,EAAAr5F,EAAA,OAAAxL,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,OACZykH,EAAoB,KAClBC,EAA6B,GACXpwH,EAAKnC,cAAciS,gBAAgB,CAAC,WAAW,YAAY,YAAY,oBAE/E/Q,QAAS,SAAA+M,GACnBA,IAAUokH,IACPC,IACHA,EAAoBrkH,GAEtBskH,EAA2BtkH,GAAS,CAClCA,aAKAirB,EAAY/2B,EAAKnC,cAAciS,gBAAgB,CAAC,iBACpCogH,IAChBE,EAA2Br5F,GAAa,CACtCjrB,MAAMirB,IAIV/2B,EAAK8C,SAAS,CACZotH,oBACAE,8BACA,WACApwH,EAAKswH,gBAAgBH,KA3BP,wBAAA/0G,EAAAvO,SAAAqO,EAAApgB,iEA+BlBw1H,sDAAkB,SAAA30G,EAAOw0G,GAAP,OAAA5kG,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,OAChB1L,EAAK8C,SAAS,CACZqtH,sBAFc,wBAAAr0G,EAAAjP,SAAA8O,EAAA7gB,iEAMlBorB,KAAO,WACL,IAAMhe,EAAgBlI,EAAKnC,cAAcqoD,mBACnCmuD,EAAkBr0G,EAAKsC,MAAMqzG,aAC7B4a,EAAY,CAChBx5F,UAAU/2B,EAAKsC,MAAM4tH,kBACrB5rH,cAActE,EAAKsC,MAAM6tH,kBACzBK,SAAQ,iBAAA/uH,OAAkBzB,EAAKsC,MAAM4tH,kBAA7B,KAAAzuH,OAAkDzB,EAAKsC,MAAM6tH,oBAEjE7b,EAAaD,GAAmBA,EAAgBc,cAAgBd,EAAgBc,cAAcob,EAAUroH,GAAiB,KAGzF,oBAA3BmsG,EAAgBe,QACzBf,EAAgBe,OAAOd,EAAW,KAAKic,GAIzCvwH,EAAKnC,cAAc2a,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,YACbF,WAAU,GAAA1W,OAAKzB,EAAKsC,MAAM4tH,kBAAhB,KAAAzuH,OAAqCzB,EAAKsC,MAAM6tH,iGAjLxDr1H,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,6KAMzCD,KAAKwH,MAAM4tH,mBAAsBp1H,KAAKwH,MAAM6tH,4DACxC,UAGQ,aACXxa,EAAe76G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,YADnD,eAEA8c,SAAW+oF,EAAawB,kBAEjCjvG,EAAgBpN,KAAK+C,cAAcqoD,mBACnCixD,EAAkBxB,EAAawB,gBAErC18G,OAAOoE,KAAKs4G,GAAiBp4G,QAAQ,SAACq1B,EAAIg2B,GAIxC,OAFqBh2B,EAAI6xB,MAAM,KAAKj3C,MAAMpH,eAGxC,IAAK,KACH,IAAMwvG,EAAQ,UAAA31G,OAbL,YAaK,KAAAA,OAAyB2oD,EAAzB,KAAA3oD,OAA8BxD,EAAKqE,MAAM4tH,kBAAzC,KAAAzuH,OAA8DxD,EAAKqE,MAAM6tH,mBAEvF,IAAK1nG,SAASC,eAAe0uF,GAAU,CACrC,IAAMz4B,EAASl2D,SAASvtB,cAAc,UAChCm8G,EAAuBF,EAAgB/iF,GACvCvxB,EAAWw0G,GAAwBA,EAAqBx0G,SAAWw0G,EAAqBx0G,SAAW,KACnGy0G,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAEtG,GAAIA,GAA8B,oBAAZA,EAMpBA,EALqB,CACnBvgF,UAAU94B,EAAKqE,MAAM4tH,kBACrB5rH,cAAcrG,EAAKqE,MAAM6tH,kBACzBK,SAAQ,iBAAA/uH,OAAkBxD,EAAKqE,MAAM4tH,kBAA7B,KAAAzuH,OAAkDxD,EAAKqE,MAAM6tH,oBAElDjoH,EAAcytG,GAGjC9yG,GAAgC,oBAAbA,IACjB87E,EAAOE,WACTF,EAAOG,mBAAqB,WACC,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC5CF,EAAOG,mBAAqB,KAC5Bj8E,MAIJ87E,EAAOI,OAASl8E,GAIpB87E,EAAOz+E,GAAKk3G,EACZz4B,EAAOroE,UAAP,UAAA7U,OA5CO,aA6CPk9E,EAAO/hF,IAAMw3B,EACbuqD,EAAOyH,OAAQ,EAEXixB,GAAwBA,EAAqBE,cAC/CF,EAAqBE,cAAct4B,YAAYN,GAE/Cl2D,SAAS+uF,KAAKv4B,YAAYN,GAGhC,MACA,IAAK,MACH,IAAM84B,EAAY,cAAAh2G,OAxDT,YAwDS,KAAAA,OAA6B2oD,GAE/C,IAAK3hC,SAASC,eAAe+uF,GAAc,CACzC,IAAMt2G,EAAQsnB,SAASvtB,cAAc,QAErCiG,EAAMjB,GAAKu3G,EACXt2G,EAAMsf,IAAM,aACZtf,EAAMuf,KAAO0T,EAEb3L,SAAS+uF,KAAKv4B,YAAY99E,QASpCrG,KAAKgI,SAAS,CACZ6yG,+QAKF76G,KAAKkD,qBACClD,KAAK21H,gRAILP,EAAoBz1H,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAiB,YAEtE3P,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAjE,eAAAgR,EAAAhhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAkF,SAAAuR,EAAO5Q,GAAP,IAAAtH,EAAA,OAAA+mB,EAAAtwB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,UAChFlH,EAAcW,EAAKpK,MAAMykH,UAAU/0G,gBAAgBqB,GACnC3G,EAAKtH,cAAco0B,kBAAkBztB,EAAYsH,SACjDtH,EAAY69B,IAHoD,CAAAzlB,EAAAlR,KAAA,eAAAkR,EAAAlR,KAAA,EAI9EvG,EAAKpK,MAAMqnC,aAAa59B,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY69B,KAJI,wBAAAzlB,EAAA/P,SAAA6P,EAAA5hB,SAAlF,gBAAAgS,GAAA,OAAA2O,EAAA1O,MAAAjS,KAAAkS,YAAA,WAQNlS,KAAKu1H,gBAAgBH,wLAGEztH,EAAUC,2EACjC5H,KAAKkD,YAEC0yH,EAAmBhuH,EAAUwtH,oBAAsBp1H,KAAKwH,MAAM4tH,kBAC9DS,EAAmBjuH,EAAUytH,oBAAsBr1H,KAAKwH,MAAM6tH,mBAC/DO,GAAqBC,IAAqB71H,KAAKwH,MAAM4tH,mBAAqBp1H,KAAKwH,MAAM6tH,mBACxFr1H,KAAK81H,wJAgEA,IAAAhZ,EAAA98G,KAEP,OAAKA,KAAKwH,MAAM4tH,kBAKd5e,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP8I,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,yBAGA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuf,aAAa,EACbpE,cAAc,EACdiB,SAAUrc,KAAKu1H,gBACf/rH,cAAexJ,KAAKwH,MAAM4tH,kBAC1BzlH,gBAAiB3P,KAAKC,MAAMykH,UAAU/0G,oBAIxC3P,KAAKwH,MAAM8tH,4BAA8Bt1H,KAAKwH,MAAM6tH,mBAClD7e,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,6BAGA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuf,aAAa,EACbpE,cAAc,EACdiB,SAAUrc,KAAKw1H,gBACfhsH,cAAexJ,KAAKwH,MAAM6tH,kBAC1B1lH,gBAAiB3P,KAAKwH,MAAM8tH,+BAIpC9e,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPmB,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJF,GAAI,CAAC,EAAG,GACRyB,KAAM,SACNb,aAAc,EACdyF,UAAW,OACXrB,QAAU,SAAAkB,GAAC,OAAIg2G,EAAK1xF,KAAKtkB,IACzBI,UAAYlH,KAAKwH,MAAM4tH,oBAAsBp1H,KAAKwH,MAAM6tH,mBAP1D,kBAxDC,YArMWxyH,wBCkyBTkzH,8MA5xBbvuH,MAAQ,CACN6F,MAAM,GACNm1G,MAAM,KACND,QAAQ,KACRyT,YAAY,GACZrY,WAAW,KACXlG,YAAY,KACZ/tG,YAAY,KACZ45G,YAAY,KACZ2S,aAAY,EACZ13F,aAAa,KACbigD,aAAa,KACb03C,cAAa,EACb52F,cAAc,KACd91B,cAAc,KACd2sH,iBAAiB,EACjBC,eAAe,KACfC,eAAe,KACfvS,eAAe,KACf8D,eAAe,KACf0O,eAAe,KACflW,eAAc,EACdnxB,eAAe,KACft/E,gBAAgB,KAChB2wG,gBAAe,EACfiW,iBAAiB,KACjB/V,kBAAiB,EACjBgW,kBAAkB,KAClBnsF,kBAAkB,KAClBy4E,mBAAmB,KACnBE,oBAAoB,KACpBoE,sBAAqB,EACrBqP,yBAAwB,KAI1B1zH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,uKAK9CD,KAAKkD,YACLlD,KAAKgI,SAAS,CACZ87G,eAAe,SACf,WACA3gH,EAAKuzH,mbAOgB/uH,EAAUC,sFACjC5H,KAAKkD,YAECgoH,EAAwBtjH,EAAUk8G,iBAAmB9jH,KAAKwH,MAAMs8G,eAChE6S,EAA0B/uH,EAAU44G,mBAAqBxgH,KAAKwH,MAAMg5G,iBACpE2B,EAAqB/yG,KAAKC,UAAU1H,EAAU+B,eAAiB0F,KAAKC,UAAUrP,KAAKC,MAAMyJ,aACzFktH,EAAsBxnH,KAAKC,UAAU1H,EAAU62E,gBAAkBpvE,KAAKC,UAAUrP,KAAKC,MAAMu+E,eAC7F0sC,GAAyByL,GAA2BxU,IACtDniH,KAAKgI,SAAS,CACZwuH,kBAAkB,KAClBC,yBAAwB,GACxB,WACApsH,EAAKqsH,WAAWxL,KAIhB0L,GACF52H,KAAK4gH,0TAIiBjD,iCAAW,KAE/B4E,EAAU,MAEV5E,IAAc39G,KAAK+C,cAAckO,MAAM0sG,GAAY9oG,GAAG,oBACxD8oG,EAAa39G,KAAK+C,cAAckO,MAAM0sG,QAC9B39G,KAAKwH,MAAMs8G,sBACZ,iBAmBA,4CAlBG+S,EAAoB72H,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAM83B,cAAct/B,KAAKC,MAAMyJ,YAAY/F,UAAU8N,KAAKksG,GACvHmZ,EAAqB92H,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAMuvH,mBAAmB/2H,KAAKC,MAAMu+E,aAAa76E,UAAU8N,KAAKksG,GAC9HqZ,EAAwBH,EAAkB5zG,IAAI6zG,GAC9CG,EAAgBj3H,KAAKwH,MAAM6iC,kBAAkBp9B,MAAM,OAAOA,MAAM+pH,GAEhEE,EAAmBL,EAAkB5pH,MAAMjN,KAAKwH,MAAMynF,gBACtDkoC,EAAoBF,EAAchqH,MAAM,KAAKA,MAAMjN,KAAKwH,MAAM+uH,kBAC9DztF,EAAMouF,EAAiBriH,GAAG,GAAKsiH,EAAkBl0G,IAAIi0G,GAAkBjqH,MAAM,KAAOjN,KAAK+C,cAAckO,MAAM,GAGnHsxG,EAAU,CACRngH,KAAK,eACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,sBAAA+D,OAAuBg3G,EAAWzwG,QAAQ,GAA1C,KAAAvG,OAAgD3G,KAAKC,MAAMyJ,YAAYsH,MAAvE,mCAAArK,OAA8GswH,EAAc/pH,QAAQ,GAApI,KAAAvG,OAA0I3G,KAAKC,MAAMu+E,aAAah/C,YAAlK,mDAAA74B,OAA+NmiC,EAAI57B,QAAQ,GAA3O,sJAIAkqH,EAAuBp3H,KAAK+C,cAAcixD,qBAAqB2pD,EAAW39G,KAAKC,MAAMyJ,YAAY/F,oBAC5E3D,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,eAAe,CAACi1H,GAAsB,CAACnrH,KAAKjM,KAAKC,MAAM4P,yBAAlJwnH,SACJA,EAAiBr3H,KAAK+C,cAAcS,YAAYxD,KAAK+C,cAAc0R,iBAAiB4iH,EAAer3H,KAAKC,MAAMyJ,YAAY/F,WAC1H4+G,EAAU,CACRngH,KAAK,aACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,wBAAA+D,OAAyBg3G,EAAWzwG,QAAQ,GAA5C,KAAAvG,OAAkD3G,KAAKC,MAAMyJ,YAAYsH,MAAzE,mCAAArK,OAAgH0wH,EAAhH,KAAA1wH,OAAkI3G,KAAKC,MAAMu+E,aAAah/C,YAA1J,+EAQZx/B,KAAKgI,SAAS,CACZu6G,4JAIiB1yF,GACnB,IAAIvS,EAAa,KACbw6C,EAAe,GAEnB,OADAjoC,EAAS7vB,KAAK+C,cAAcwyB,KAAK1F,GACzB7vB,KAAKwH,MAAMs8G,gBACjB,IAAK,QACHxmG,EAAa,eACbw6C,EAAe,CAACjoC,GAClB,MACA,IAAK,WACHvS,EAAa,mBACbw6C,EAAe,CAACjoC,GAKpB,MAAO,CACLvS,aACAw6C,mEAIuBjoC,EAAOgpC,GAChC,IAAIv7C,EAAa,KACbw6C,EAAe,GACXyJ,EAAoB1I,EAApB0I,OAAQtkB,EAAY4b,EAAZ5b,EAAG7mB,EAASyiC,EAATziC,EAAG5rB,EAAMquD,EAANruD,EAEtB,OADAqlB,EAAS7vB,KAAK+C,cAAcwyB,KAAK1F,GACzB7vB,KAAKwH,MAAMs8G,gBACjB,IAAK,QACHxmG,EAAa,8BACbw6C,EAAe,CAACjoC,EAAQ0xC,EAAQ/2D,EAAGyyC,EAAG7mB,GACxC,MACA,IAAK,WACH9Y,EAAa,mBACbw6C,EAAe,CAACjoC,GAKpB,MAAO,CACLvS,aACAw6C,4OAKIzqD,EAAQ,YASJqT,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,eACpEnC,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,iBACpEnC,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,sBACpEnC,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,uBACpEnC,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,mBAAmB,GAAG,CAAC8J,KAAKjM,KAAKC,MAAM4P,UAC3G7P,KAAKwH,MAAM83B,cAAczqB,GAAG,GAAK7U,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,eAAe,CAACnC,KAAK+C,cAAc8wD,aAAa7zD,KAAKwH,MAAM83B,gBAAgB,CAACrzB,KAAKjM,KAAKC,MAAM4P,UAAY7P,KAAK+C,cAAckO,MAAM,YAIxO,gCAhBEqmH,OACAC,OACAR,OACAS,OACApB,OACAqB,OAUIC,EAA0B,GACvBhrH,EAAI,EAAGA,EAAI8qH,EAAsB9qH,IACxCgrH,EAAwBvqH,KAAKnN,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,kBAAkB,CAACuK,sBAGxFgU,QAAQqD,IAAI2zG,WAApCC,SAEAC,EAAe53H,KAAK+C,cAAc0R,iBAAiBzU,KAAK+C,cAAckO,MAAMqmH,GAAa7lH,KAAKzR,KAAK+C,cAAckO,MAAMsmH,IAAgBv3H,KAAKC,MAAMyJ,YAAY/F,UACpK0J,EAAMF,KAAK,CACTsZ,MAAM,gBACN/b,MAAM1K,KAAK+C,cAAcS,YAAYwJ,WAAW4qH,IAAe,IAAI53H,KAAKC,MAAMu+E,aAAah/C,cAGvFq4F,EAAgB73H,KAAK+C,cAAc0R,iBAAiBsiH,EAAmB/2H,KAAKC,MAAMu+E,aAAa76E,UACrG0J,EAAMF,KAAK,CACTsZ,MAAM,iBACN/b,MAAM1K,KAAK+C,cAAcS,YAAYwJ,WAAW6qH,IAAgB,IAAI73H,KAAKC,MAAMyJ,YAAYsH,QAGvF8mH,EAAgB93H,KAAK+C,cAAc0R,iBAAiB6iH,EAAYt3H,KAAKC,MAAMyJ,YAAY/F,UAC7F0J,EAAMF,KAAK,CACTsZ,MAAM,iBACN/b,MAAM1K,KAAK+C,cAAcS,YAAYwJ,WAAW8qH,IAAgB,IAAI93H,KAAKC,MAAMu+E,aAAah/C,cAGxFu4F,EAAkB/3H,KAAK+C,cAAc0R,iBAAiB8iH,EAAcv3H,KAAKC,MAAMyJ,YAAY/F,UACjG0J,EAAMF,KAAK,CACTsZ,MAAM,mBACN/b,MAAM1K,KAAK+C,cAAcS,YAAYwJ,WAAW+qH,IAAkB,IAAI/3H,KAAKC,MAAMu+E,aAAah/C,cAG1Fw4F,EAAiBL,EAAgB3zH,OAAO,EAAI2zH,EAAgBjzF,OAAQ,SAACuzF,EAAQ7hG,GAEjF,OADA6hG,EAAU7mH,KAAKqE,IAAI2gB,EAAE8hG,SAASD,IAE9B,GAAK,KAED5B,EAAiB2B,EAAc,GAAArxH,OAAM3G,KAAK+C,cAAcqP,YAA2B,IAAf4lH,GAAqBj7C,MAAMvnE,OAAO,wBAAvE,QAAuG,OAC5InI,EAAMF,KAAK,CACTsZ,MAAM,mBACN/b,MAAM2rH,IAGFH,EAAe8B,GAAiC,IAAfA,GAAqB3lH,KAAKg5B,MAE3DhB,EAAoBstF,EAAgBjzF,OAAQ,SAAC2F,EAAkBjU,GACnE,GAAI0mF,EAAK/5G,cAAckO,MAAMmlB,EAAE+hG,qBAAqBtjH,GAAG,IAAMioG,EAAK/5G,cAAckO,MAAMmlB,EAAEgiG,aAAavjH,GAAG,GAAG,CACzG,IAAMozB,EAAkB60E,EAAK/5G,cAAc0R,iBAAiB2hB,EAAE+hG,oBAAoBrb,EAAK78G,MAAMu+E,aAAa76E,UAAUsf,IAAImT,EAAEgiG,aACrHnwF,EAAgB3kC,UACnB+mC,EAAoBA,EAAkB54B,KAAKw2B,IAG/C,OAAOoC,GACPrqC,KAAK+C,cAAckO,MAAM,IAE3B5D,EAAMF,KAAK,CACTsZ,MAAM,qBACN/b,MAAM1K,KAAK+C,cAAcS,YAAY6mC,EAAkBp9B,MAAM,QAAQ,IAAIjN,KAAKC,MAAMu+E,aAAah/C,YAAY,WAGzGw2F,EAAc,GAEd12F,EAAgBt/B,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAM83B,cAAct/B,KAAKC,MAAMyJ,YAAY/F,UACpG00H,EAAe/4F,EAAcrc,IAAI40G,GAEjC1B,EAAmBC,GAAkBp2H,KAAK+C,cAAckO,MAAMmlH,EAAe,IAAIvhH,GAAG,GAAK7U,KAAK+C,cAAckO,MAAMG,KAAKqE,IAAI,EAAEzI,WAAWhN,KAAK+C,cAAckO,MAAMwmH,GAAkBx0G,IAAIjjB,KAAK+C,cAAckO,MAAMmlH,EAAe,KAAKnpH,MAAMjN,KAAKC,MAAMu+E,aAAa85C,kBAAoBt4H,KAAK+C,cAAckO,MAAM,GAE/SsnH,EAA8Bv4H,KAAK+C,cAAckO,MAAM,GAAGgS,IAAIjjB,KAAKC,MAAMu+E,aAAa85C,eAAerrH,MAAMkpH,GAC3GqC,EAAwBnuF,EAAkBp9B,MAAMorH,GAAcprH,MAAMsrH,GACpEtB,EAAgBuB,EAAsBvrH,MAAM,OAU5CiqH,EAAmB53F,EAAcryB,MAAMjN,KAAKwH,MAAMynF,gBAClDkoC,EAAoBF,EAAchqH,MAAM,KAAKA,MAAMjN,KAAKwH,MAAM+uH,kBAC9DztF,EAAMouF,EAAiBriH,GAAG,GAAKsiH,EAAkBl0G,IAAIi0G,GAAkBjqH,MAAM,KAAOjN,KAAK+C,cAAckO,MAAM,GAInH+kH,EAAY7oH,KAAK,CACfsZ,MAAM,MACN/b,MAAK,GAAA/D,OAAImiC,EAAI57B,QAAQ,GAAhB,KACLuqG,YAAY,wDAGdue,EAAY7oH,KAAK,CACfsZ,MAAM,QACN/b,MAAK,GAAA/D,OAAI0xH,EAAaprH,MAAM,KAAKC,QAAQ,GAApC,KACLuqG,YAAY,qCAGdue,EAAY7oH,KAAK,CACfsZ,MAAM,aACN/b,MAAK,GAAA/D,OAAIwvH,EAAiBjpH,QAAQ,GAA7B,KACLuqG,YAAW,gCAAA9wG,OAAiC3G,KAAKC,MAAMu+E,aAAai6C,aAAzD,uBAAA9xH,OAA2F3G,KAAKC,MAAMu+E,aAAa85C,cAAnH,yBAGPI,EAAiB14H,KAAK+C,cAAcS,YAAYxD,KAAK+C,cAAc0R,iBAAiBgjH,EAAiBz3H,KAAKC,MAAMyJ,YAAY/F,WAClIqyH,EAAY7oH,KAAK,CACfsZ,MAAM,UACN/b,MAAMguH,EAAe,IAAI14H,KAAKC,MAAMu+E,aAAah/C,YACjDi4E,YAAY,yGAKM,EAEpBz3G,KAAKgI,SAAS,CACZqF,QACA4oH,aAJkB,EAKlBD,cACAqC,eACAnC,eACA0B,eACAvB,iBACAD,iBACAD,mBACA9rF,oBACA0sF,qBACAyB,wBACAD,oNAImB/X,mEACrBxgH,KAAKgI,SAAS,CACZw4G,0JAIMsD,GACR9jH,KAAKgI,SAAS,CACZ87G,wGAIuB/yG,EAAG8e,EAAOhS,8FAE/B0kG,EAAU,UACNviH,KAAKwH,MAAMs8G,sBACZ,iBAWA,2CAVG6U,EAAkB5nH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBy4G,EAAKtlH,MAAMyJ,YAAYmD,QAAQC,eAAiBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAMu+E,aAAa3xE,QAAQgrB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAInpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAC9e8rH,EAAeD,EAAkB34H,KAAK+C,cAAc0R,iBAAiBnD,SAASqnH,EAAgBvuH,KAAK,IAAIpK,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GACzKsxG,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,wCAAA+D,OAAyCiyH,EAAa1rH,QAAQ,GAA9D,KAAAvG,OAAoE3G,KAAKC,MAAMuJ,cAA/E,iDAIAqvH,EAAoB9nH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBy4G,EAAKtlH,MAAMyJ,YAAYmD,QAAQC,gBAAkB,KACtKgsH,EAAiBD,EAAoB74H,KAAK+C,cAAc0R,iBAAiBnD,SAASunH,EAAkBzuH,KAAK,IAAIpK,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GACzK8uB,EAAoB,CACxBlzB,QAAQ7M,KAAK+C,cAAco0B,kBAAkBn3B,KAAKC,MAAMu+E,aAAah/C,aAAamJ,UAE9EowF,EAAqBhoH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAKA,EAAI1mC,QAAQC,gBAAkBizB,EAAkBlzB,QAAQC,eAAiBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,mBAAsB,KAC3QksH,EAAkBD,EAAqB/4H,KAAK+C,cAAc0R,iBAAiBnD,SAASynH,EAAmB3uH,KAAK,IAAIpK,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GAClLsxG,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,2CAAA+D,OAA4CmyH,EAAe5rH,QAAQ,GAAnE,KAAAvG,OAAyE3G,KAAKC,MAAMuJ,cAApF,mCAAA7C,OAAmIqyH,EAAgB9rH,QAAQ,GAA3J,KAAAvG,OAAiK3G,KAAKC,MAAMu+E,aAAah/C,YAAzL,gFAOmB,EAE7Bx/B,KAAKgI,SAAS,CACZu6G,UACA6E,sBAJ2B,GAK3B,WACA7B,EAAKmR,sTAIQxL,kCACTpjH,EAAW,GAEX4pB,EAAiB,CACrB7kB,QAAQ7M,KAAK+C,cAAco0B,kBAAkB,OAAOwR,UAEhD5I,EAAoB,CACxBlzB,QAAQ7M,KAAK+C,cAAco0B,kBAAkBn3B,KAAKC,MAAMu+E,aAAah/C,aAAamJ,mBAQ1EjoB,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAcirF,2BAA2BhuF,KAAKC,MAAMuJ,eACzDxJ,KAAK+C,cAAcosF,2BAA2Bz9D,EAAeqO,GAC7D//B,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAM4P,SACvE7P,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,iBAAiB,CAACnC,KAAKC,MAAM4P,+CARjGo/E,OACAsnC,OACAh4F,OACAe,OAQFx3B,EAASw7G,YAActjH,KAAK+C,cAAckO,MAAM,GAChDnJ,EAASy2B,aAAgBv+B,KAAK+C,cAAckO,MAAMstB,GAAcj7B,QAAmDtD,KAAK+C,cAAckO,MAAM,GAAlEjR,KAAK+C,cAAckO,MAAMstB,GACnGz2B,EAASw3B,cAAiBt/B,KAAK+C,cAAckO,MAAMquB,GAAeh8B,QAAoDtD,KAAK+C,cAAckO,MAAM,GAAnEjR,KAAK+C,cAAckO,MAAMquB,GACrGx3B,EAASmnF,eAAkBjvF,KAAK+C,cAAckO,MAAMg+E,GAAgB3rF,QAAqDtD,KAAK+C,cAAckO,MAAM,GAApEjR,KAAK+C,cAAckO,MAAMg+E,GACvGnnF,EAASyuH,iBAAoBv2H,KAAK+C,cAAckO,MAAMslH,GAAkBjzH,QAAuDtD,KAAK+C,cAAckO,MAAM,GAAtEjR,KAAK+C,cAAckO,MAAMslH,QAEnGv2H,KAAKwH,MAAMs8G,sBACZ,kBAkBA,6CAjBHh8G,EAASs4G,eAAgB,EACzBt4G,EAASw4G,gBAAiB,EAC1Bx4G,EAASw7G,YAAcx7G,EAASy2B,aAChCz2B,EAASg7G,mBAAqB,uDAC9Bh7G,EAAS0uH,kBAAoB,CAC3ByC,cAAc,CACZ92H,KAAK,MACL6O,MAAM,MACNrN,SAAS,GACTu1H,WAAW,WAEbC,aAAax5H,OAAAw4B,EAAA,EAAAx4B,CAAA,CACXy5H,aAAa,YACVp5H,KAAKC,MAAMyJ,kDAKlB5B,EAASs4G,eAAgB,EACzBt4G,EAASw4G,gBAAiB,EAC1Bx4G,EAASg7G,mBAAqB,GAC9Bh7G,EAASw7G,YAActjH,KAAK+C,cAAc0R,iBAAiB3M,EAASw3B,cAAct/B,KAAKC,MAAMyJ,YAAY/F,UACzGmE,EAAS0uH,kBAAoB,CAC3ByC,cAAc,CACZ92H,KAAK,MACL6O,MAAM,MACNrN,SAAS,GACTu1H,WAAW,WAEbC,aAAax5H,OAAAw4B,EAAA,EAAAx4B,CAAA,CACXy5H,aAAa,YACVp5H,KAAKC,MAAMyJ,+EAQlB5B,EAASw7G,YAAYlxF,IAAI,KAC3BtqB,EAAS2uH,yBAA0B,GAGjCvL,IACFpjH,EAASy6G,QAAU,KACnBz6G,EAASs/G,sBAAuB,GAGlCpnH,KAAKgI,SAASF,EAAS,WACrB09G,EAAK6T,kJAIA,IAAAnT,EAAAlmH,KAEDs5H,EAAY,SAAAr5H,GAChB,IAAMP,EAASC,OAAAw4B,EAAA,EAAAx4B,CAAA,CACb4B,EAAE,EACFuM,GAAG,EACHhO,MAAM,OACHG,EAAMP,WAEX,OACE82G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACElwF,MAAOxmB,EAAMwmB,MACb/mB,UAAWA,EACX83G,WAAY,CACV90G,SAAS,EACTD,WAAW,GAEb60G,iBAAkB,CAChB1uG,GAAG,EACHlD,GAAG,GAEL+xG,YAAax3G,EAAMw3G,aAEnBjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACEgJ,GAAI,EACJlG,SAAU,CAAC,EAAE,GACbJ,MAAO,aACHrC,EAAM0C,WAET1C,EAAMyK,SAMT2gH,EAAwC,UAA9BrrH,KAAKwH,MAAMs8G,eACrByV,EAA0C,aAA9Bv5H,KAAKwH,MAAMs8G,eACvB0V,EAAwC,UAA9Bx5H,KAAKwH,MAAMs8G,eACrB2V,EAAWz5H,KAAKwH,MAAMs8G,eAE5B,OACEtN,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGPE,KAAKC,MAAMyJ,aAAe1J,KAAKC,MAAMyJ,YAAYgwH,UAC/CljB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,cAKA0oG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CACE/5G,GAAI,EACJtG,MAAO,OACPqD,WAAY,OACZigB,KAAM5lB,KAAKC,MAAMyJ,YAAYgwH,UAE7BljB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,OACP+D,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAGdzG,KAAKC,MAAMyJ,YAAYgwH,YAOhC15H,KAAKwH,MAAM83B,eAAiBt/B,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM83B,eAAezqB,GAAG,IAAM7U,KAAKwH,MAAMwuH,YAAYhyH,OAAO,GACpHwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,eAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPkB,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdjB,KAAKwH,MAAMwuH,YAAYlwH,IAAK,SAAC6zH,EAAS5zH,GAAV,OAC1BywG,EAAAr2G,EAAAC,cAACk5H,EAAD35H,OAAAC,OAAA,CACEiH,IAAG,eAAAF,OAAiBZ,GACpBrG,UAAW,CACToO,GAAG,CAAC,EAAE,GACNzM,GAAG,CAAC,EAAE0E,EAAMmgH,EAAK1+G,MAAMwuH,YAAYhyH,OAAO,EAAI,EAAI,GAClDlE,MAAM,CAAC,EAAE,SAEX6C,UAAW,CACTD,SAAS,CAAC,EAAE,KAEVi3H,QAShB35H,KAAKC,MAAMuJ,eACTgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,kBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAO8lH,EAAU,EAAI,GAEvBvrH,MAAO,CAAC,EAAE,OACVi9G,QAAS,QACTK,SAAU,kBACVp7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAU8qH,EACV5qH,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,YAEpCpjB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOg0H,EAAY,EAAI,GAEzBz5H,MAAO,CAAC,EAAE,OACVi9G,QAAS,WACTK,SAAU,oBACVp7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUg5H,EACV94H,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,eAEpCpjB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOi0H,EAAU,EAAI,GAEvB15H,MAAO,CAAC,EAAE,OACVi9G,QAAS,QACTK,SAAU,mBAEVp7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUi5H,EACV/4H,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,aAInCvO,GAAWkO,EACVlO,GAAWrrH,KAAKwH,MAAM0uH,aACpB1f,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,UACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,OAMO7I,KAAKC,MAAMuJ,cANlB,6BAM2DxJ,KAAKwH,MAAM6uH,eANtE,OAUDr2H,KAAKC,MAAMyJ,aAAe1J,KAAKwH,MAAM87G,aAAetjH,KAAKwH,MAAMyuH,aAAej2H,KAAKC,MAAMu+E,aAC5Fg4B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPgO,GAAI,CAAC,EAAE,IAEP0oG,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,CACEsd,MAAO,MACHld,KAAKC,MAFX,CAGEiR,OAAQuoH,EACRjX,MAAOxiH,KAAKwH,MAAMg7G,MAClBD,QAASviH,KAAKwH,MAAM+6G,QACpB74G,YAAa1J,KAAKC,MAAMyJ,YACxB60B,aAAcv+B,KAAKwH,MAAM87G,YACzB9kC,aAAcx+E,KAAKC,MAAMu+E,aACzB4hC,cAAepgH,KAAKwH,MAAM44G,cAC1BE,eAAgBtgH,KAAKwH,MAAM84G,eAC3Bv4G,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC8iH,mBAAoB9iH,KAAKwH,MAAMs7G,mBAC/BtC,iBAAkBxgH,KAAKwgH,iBAAiB7hG,KAAK3e,MAC7CgjH,oBAAqBhjH,KAAKwH,MAAMw7G,oBAChCpC,oBAAqB5gH,KAAK4gH,oBAAoBjiG,KAAK3e,MACnD8d,qBAAsB9d,KAAK8d,qBAAqBa,KAAK3e,MACrD4hH,2BAA4B5hH,KAAK4hH,2BAA2BjjG,KAAK3e,QAEjEw2G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAGJi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAGTwiH,EAAO,sBAAA1kH,OACiB3G,KAAKC,MAAMuJ,cAD5B,oBAEH+vH,GAAS,6BAAA5yH,OACkB3G,KAAKC,MAAMuJ,cAD7B,sBAUzBgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,qBAIV42H,GACFhjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,EACPuG,MAAO,CACL82G,SAAS,QAEXl8G,eAAgB,iBAGZjB,KAAKwH,MAAM6F,OAAUrN,KAAKwH,MAAM6F,MAAMrJ,OAmBpChE,KAAKwH,MAAM6F,MAAMvH,IAAK,SAAC6zH,EAAS5zH,GAAV,OACxBywG,EAAAr2G,EAAAC,cAACk5H,EAAD35H,OAAAC,OAAA,CACEiH,IAAG,SAAAF,OAAWZ,GACdrG,UAAW,CACTI,MAAM,CAAC,EAAE,SAEP65H,MAxBNnjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,gCAtwBRC,gHCwDTgtH,8MAzDb9sH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,kJAIL,IAAMxD,EAASC,OAAAw4B,EAAA,EAAAx4B,CAAA,CACb4B,EAAE,EACFuM,GAAG,EACHhO,MAAM,OACHE,KAAKC,MAAMP,WAGhB,OACE82G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAWA,EACX+mB,MAAOzmB,KAAKC,MAAMwmB,MAClB+wF,WAAY,CACV90G,SAAS,EACTD,WAAW,GAEb60G,iBAAkB,CAChB1uG,GAAG,EACHlD,GAAG,GAEL+xG,YAAaz3G,KAAKC,MAAMw3G,aAGtBz3G,KAAKC,MAAMyK,MACT8rG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACEgJ,GAAI,EACJlG,SAAU,CAAC,EAAE,GACbJ,MAAO,aACHtC,KAAKC,MAAM0C,WAEd3C,KAAKC,MAAMyK,OAEX1K,KAAKC,MAAM+I,UAAY,aArDnBnG,aCgKJg3H,8MA9JbryH,MAAQ,CACNsyH,qBAAoB,EACpB1S,sBAAqB,KAIvBrkH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAILlD,KAAK0H,gMAGkBC,EAAUC,+EACjC5H,KAAKkD,YAECmsB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClDkqH,EAAyB3qH,KAAKC,UAAU1H,EAAU6W,QAAQ6Y,YAAcjoB,KAAKC,UAAUrP,KAAKC,MAAMue,QAAQ6Y,UAC1G2iG,EAAqBh6H,KAAKC,MAAM+5H,oBAAsBryH,EAAUqyH,qBAAuBh6H,KAAKC,MAAM+5H,mBAClGlK,EAAuB9vH,KAAKC,MAAM6vH,sBAAwBnoH,EAAUmoH,uBAAyB9vH,KAAKC,MAAM6vH,sBAC1GiK,GAA0B1qG,GAAkB2qG,GAAsBlK,IACpE9vH,KAAK0H,kRAMF1H,KAAKC,MAAM4P,SAAY7P,KAAKC,MAAM6vH,+DAC9B,iBAGHmK,EAAsBj6H,KAAK+C,cAAciS,gBAAgB,CAAC,aAAa,QAAQ,cAC/EklH,EAAgBl6H,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,QAAQ,QAAQ,kBAAkB,OAAO,sBAErG0L,QAAQqD,IAAI,CAChB/jB,KAAKC,MAAMqnC,aAAa4yF,EAAc/3H,KAAK+3H,EAAcrtH,QAAQqtH,EAAc3yF,8BAOvE7mB,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAc2tB,gBAAgBwpG,EAAc/3H,KAAKnC,KAAKC,MAAM4P,SACjE7P,KAAK+C,cAAc2tB,gBAAgBupG,EAAoBj6H,KAAKC,MAAM4P,SAClE7P,KAAK+C,cAAc4hE,aAAas1D,EAAoBC,EAAcrtH,QAAQ7M,KAAKC,MAAM4P,qDANrFsqH,OACAC,OACAC,OAOFD,EAAcp6H,KAAK+C,cAAckO,MAAMmpH,GACvCD,EAAiBn6H,KAAK+C,cAAckO,MAAMkpH,GACpCL,EAAsBM,EAAYvlH,GAAG,IAAM7U,KAAK+C,cAAckO,MAAMopH,GAAexlH,GAAGulH,IAAgBD,EAAetlH,GAAG,qBAEvH7U,KAAKgI,SAAS,CACnB8xH,iNAIuB/oH,mEACzB/Q,KAAKgI,SAAS,CACZo/G,sBAAqB,wIAKvB,IAAM/E,EAAwC,WAA7BriH,KAAKC,MAAMqiH,cACtB4X,EAAgBl6H,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,QAAQ,QAAQ,kBAAkB,OAAO,aAC3G,OAAQqtG,IAAariH,KAAKwH,MAAMsyH,sBAAuB95H,KAAKwH,MAAM4/G,qBA6E9D,KA5EF5Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,EACHT,GAAI,EACJhB,MAAO,EACPyF,OAAQ,EACR/D,aAAc,EACdT,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBP,gBAAiB,eAEjB81G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAM4/G,qBACT5Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,YAGrD0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,UACNG,MAAO,YAIbk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJrL,WAAY,IACZC,SAAU,OACVJ,MAAO,aACPuG,UAAW,UAGT7I,KAAKwH,MAAM4/G,qBACT,uEAEA,4JAIHpnH,KAAKwH,MAAM4/G,sBACV5Q,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4C,UAAWskH,IACX9oG,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB8d,eAAgB,CACdtc,WAAW,EACXJ,KAAK,QACLvC,MAAM,OACNuG,MAAM,CACJ3D,SAAS,QAEXuE,UAAU,OACVyD,MAAM,oBAER8S,aAAc,OACdF,WAAY,UACZpM,OAAQ,mBACRnJ,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC6d,OAAQ,CAACq8G,EAAcrtH,QAAQ7M,KAAKC,MAAMse,KAAKkX,MAAMkwC,iBAAiB,kBAtJlD9iE,aCmnDrBy3H,8MAvmDb9yH,MAAQ,CACN6F,MAAM,GACNm1G,MAAM,KACN+X,OAAO,KACPhY,QAAQ,KACRyT,YAAY,GACZwE,YAAY,CACV,CACE9vH,MAAM,GACNnH,KAAK,MACLiK,MAAM,WAER,CACE9C,MAAM,EACNnH,KAAK,QACLiK,MAAM,WAER,CACE9C,MAAM,EACNnH,KAAK,OACLiK,MAAM,UAER,CACE9C,MAAM,EACNnH,KAAK,OACLiK,MAAM,YAGVitH,UAAU,KACV9c,WAAW,KACXlG,YAAY,KACZ/tG,YAAY,KACZ45G,YAAY,KACZoX,QAAQ,SACRC,aAAY,EACZ1E,aAAY,EACZ13F,aAAa,KACbigD,aAAa,KACbl/C,cAAc,KACd91B,cAAc,KACd2sH,iBAAiB,EACjByE,eAAe,KACfxE,eAAe,KACfyE,eAAe,KACf/W,eAAe,KACf8D,eAAe,KACf0O,eAAe,KACflW,eAAc,EACdnxB,eAAe,KACf6rC,gBAAgB,KAChBva,gBAAe,EACfwa,gBAAgB,KAChBprH,gBAAgB,KAChB2wG,gBAAe,EACfiW,iBAAiB,KACjB/V,kBAAiB,EACjBgW,kBAAkB,KAClBnsF,kBAAkB,KAClB2wF,mBAAmB,KACnBC,mBAAmB,KACnBnY,mBAAmB,KACnBxB,oBAAoB,KACpB0B,oBAAoB,KACpBkY,oBAAoB,KACpB9T,sBAAqB,EACrBqP,yBAAwB,EACxB0E,yBAAwB,KAI1Bp4H,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,uKAK9CD,KAAKkD,YACLlD,KAAKgI,SAAS,CACZ87G,eAAe,QACf,WACA3gH,EAAKuzH,kRAKDhjE,EAAuB1zD,KAAKC,MAAMyJ,YAAY0xH,wBAC9Cp7H,KAAKC,MAAMqnC,aAAaosB,EAAqBvxD,KAAKuxD,EAAqB7mD,QAAQ6mD,EAAqBnsB,0LAGnF5/B,EAAUC,8FACjC5H,KAAKkD,YAECmsB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClDq7G,EAAwBtjH,EAAUk8G,iBAAmB9jH,KAAKwH,MAAMs8G,eAChE6S,EAA0B/uH,EAAU44G,mBAAqBxgH,KAAKwH,MAAMg5G,iBACpE2B,EAAqB/yG,KAAKC,UAAU1H,EAAU+B,eAAiB0F,KAAKC,UAAUrP,KAAKC,MAAMyJ,aACzFktH,EAAsBxnH,KAAKC,UAAU1H,EAAU62E,gBAAkBpvE,KAAKC,UAAUrP,KAAKC,MAAMu+E,eAC7F0sC,GAAyB77F,GAAkBsnG,GAA2BxU,KAClE0Y,EAAiB3P,EAAwB,KAAOlrH,KAAKwH,MAAMqzH,eACjE76H,KAAKgI,SAAS,CACZ6yH,iBACArE,kBAAkB,KAClBC,yBAAwB,GACxB,WACApsH,EAAKqsH,WAAWxL,MAIhB0L,GACF52H,KAAK4gH,sBAGDya,EAAoBzzH,EAAUszH,sBAAwBl7H,KAAKwH,MAAM0zH,oBACjEI,EAAwB1zH,EAAUizH,iBAAmB76H,KAAKwH,MAAMqzH,gBAClEQ,GAAqBC,GAAyBpQ,KAC5CoQ,EACFt7H,KAAKgI,SAAS,CACZ+yH,gBAAgB,OAETM,GACTr7H,KAAKu7H,yBAEPv7H,KAAKihH,2KAKP,IAAIV,GAAiB,EACfib,EAAgBx7H,KAAKwH,MAAMgzH,YAAY,GACvCiB,EAAgB97H,OAAOC,OAAO,GAAGI,KAAKwH,MAAMgzH,aAAatmH,MAE3DwnH,EAAU17H,KAAKwH,MAAMizH,UAAYz6H,KAAK+C,cAAcqP,YAAiC,IAArBpS,KAAKwH,MAAMizH,WAAgBkB,IAAIH,EAAc9wH,MAAM8wH,EAAcj4H,MAAQvD,KAAK+C,cAAcqP,cAAcupH,IAAIH,EAAc9wH,MAAM8wH,EAAcj4H,MACpNm4H,EAAU17H,KAAK+C,cAAcqP,YAAYspH,EAAQlmH,OAAO,cAAc,cAEtE,IAAMomH,EAAQ57H,KAAK+C,cAAcqP,YAAYpS,KAAKwH,MAAMszH,gBAAgB,IAAI96H,KAAK+C,cAAcqP,cAAcoD,OAAO,YAAY,uBAC1HqmH,EAAU77H,KAAK+C,cAAcqP,cAAcupH,IAAIF,EAAc/wH,MAAM+wH,EAAcl4H,MACvF,OAAQvD,KAAKwH,MAAMs8G,gBACjB,QACA,IAAK,OACHvD,EAAiBqb,EAAME,QAAQD,IAAYD,EAAMtmH,eAAeomH,GAClE,MACA,IAAK,gBAC+B,SAA9B17H,KAAKwH,MAAMqzH,iBACbta,EAAiBqb,EAAME,QAAQD,IAAYD,EAAMtmH,eAAeomH,IAKtE17H,KAAKgI,SAAS,CACZu4G,kMAIsB5C,iCAAW,KACnCA,EAAa39G,KAAK+C,cAAckO,MAAM0sG,GACtC39G,KAAKgI,SAAS,CACZ21G,cACA,WACAb,EAAKye,4SAKiBv7H,KAAK+C,cAAcykC,6BAArCP,SACF7yB,EAAY9C,SAASe,KAAKg5B,MAAM,KAChCpE,IACF7yB,EAAY6yB,EAAU7yB,WAExBA,GAAapU,KAAKwH,MAAMkzH,0BACjBtmH,yRAIH2mH,EAAkB,MAClB/6H,KAAKwH,MAAMm2G,aAAc39G,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMm2G,YAAY9oG,GAAG,IAAyC,OAAnC7U,KAAKwH,MAAM0zH,0CACvFl7H,KAAKwH,MAAMs8G,sBACZ,uCACG/8D,EAAWz1C,SAASe,KAAKg5B,MAAM,cACLrrC,KAAK+7H,qCAA/BC,SACAH,EAAU77H,KAAK+C,cAAcqP,YAA8B,IAAlB4pH,IAC3CC,EAAUj8H,KAAK+C,cAAcqP,YAA2C,IAA/BpS,KAAKwH,MAAM0zH,sBAC5CY,QAAQD,KAClBI,EAAUJ,GAENK,EAAc5qH,SAAS2qH,EAAQphF,GAAG5nC,UAAU,KAAM8zC,EAClDo1E,EAAc7qH,SAASuqH,EAAQhhF,GAAG5nC,UAAU,KAAM8zC,EAClDq1E,EAAgBp8H,KAAKwH,MAAMm2G,WAAW1wG,MAAMivH,GAAaj5G,IAAIk5G,GAE7Dp8G,EAAaq8G,EAAcn5G,IAAIjjB,KAAKwH,MAAMm2G,YAAY1wG,MAAM,KAI9DrK,+BAA6B5C,KAAKwH,MAAMm2G,WAAWzwG,QAAQ,eAAMlN,KAAKC,MAAMuJ,iDAAwCyyH,EAAQl/C,MAAMvnE,OAAO,uEAA8D4mH,EAAclvH,QAAQ,eAAMlN,KAAKC,MAAMyJ,YAAY4tB,SAASn1B,2BAAkBiP,KAAKwF,KAAKmJ,2BAC/R3O,KAAKwF,KAAKmJ,GAAY,MACxBnd,GAAI,4FAENA,GAAI,4BAAA+D,OAAgC3G,KAAKC,MAAMwB,MAAMC,OAAO6nB,MAAxD,qDAAA5iB,OAAiH3G,KAAKC,MAAMuJ,cAA5H,sFACJuxH,EAAkB,CAChBn4H,OACAR,KAAK,cACLI,UAAU,CACRF,MAAM,8EAQhBtC,KAAKgI,SAAS,CACZ+yH,uKAOF,MAAO,CAFczpH,SAAStR,KAAKwH,MAAM0zH,mEAKtBrrG,GACnB,IAAIvS,EAAa,KACbw6C,EAAe,GACbukE,EAASr8H,KAAK+C,cAAcwyB,KAAK1F,GACnCysG,EAAehrH,SAAStR,KAAKwH,MAAM0zH,qBACvC,OAAQl7H,KAAKwH,MAAMs8G,gBACjB,IAAK,OACHxmG,EAAa,cACbw6C,EAAe,CAACukE,EAAOC,GACzB,MACA,IAAK,gBACHh/G,EAAa,kBACbw6C,EAAe,CAACukE,GAKpB,MAAO,CACL/+G,aACAw6C,0PAMIzqD,EAAQ,GACR2oH,EAAc,GACdC,GAAc,WAaVv1G,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAcwwD,2BACnBvzD,KAAK+C,cAAcuoC,0BAA0BtrC,KAAKC,MAAMu+E,aAAar8E,KAAK,UAC1EnC,KAAK+C,cAAcuoC,0BAA0BtrC,KAAKC,MAAMu+E,aAAar8E,KAAM,eAC3EnC,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKC,MAAMu+E,aAAah/C,YAAYx/B,KAAKC,MAAMyJ,YAAY0xH,eAAevuH,SAC7G7M,KAAKC,MAAM4P,QAAU7P,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,SAAS,CAACnC,KAAKC,MAAM4P,UAAY,KAC1H7P,KAAKC,MAAM4P,QAAU7P,KAAK+C,cAAcg8B,mBAAmB/+B,KAAKC,MAAMu+E,aAAar8E,KAAKnC,KAAKC,MAAM4P,SAAW7P,KAAK+C,cAAckO,MAAM,GACvIjR,KAAKC,MAAM4P,QAAU7P,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMyJ,YAAY0xH,eAAej5H,KAAK,QAAQ,CAACnC,KAAKC,MAAM4P,UAAY7P,KAAK+C,cAAckO,MAAM,GAChKjR,KAAK+C,cAAcwiC,kBAAkBvlC,KAAKC,MAAMyJ,YAAY0xH,eAAej5H,KAAK,UAAUnC,KAAKC,MAAMyJ,YAAY0xH,eAAe5jE,UAAU,UAE1Ix3D,KAAKC,MAAM4P,QAAU7P,KAAK+C,cAAcwiC,kBAAkBvlC,KAAKC,MAAMu+E,aAAar8E,KAAK,UAAUnC,KAAKC,MAAMu+E,aAAahnB,UAAU,SAAS,CAAC1mD,OAAO,CAACoR,SAASliB,KAAKC,MAAM4P,WAAa,2CApBtL0sH,OACAxuD,OACAyuD,OACAtX,OACAuX,OACAC,OACAC,OACAC,OAEAC,OAcI98F,EAAoB//B,KAAK+C,cAAciS,gBAAgB,CAAC,YAAYhV,KAAKC,MAAMu+E,aAAah/C,cAE9Fw7F,EAAqB,GACrBpD,EAAe53H,KAAK+C,cAAckO,MAAM,GACxC6rH,EAAmB98H,KAAK+C,cAAckO,MAAM,GAE5CsrH,GAAuBA,EAAoBv4H,SAC7C84H,EAAmB1rH,KAAK+9C,IAAIotE,EAAoB,GAAGhrH,UAAUgrH,EAAoBA,EAAoBv4H,OAAO,GAAGuN,WAAW,MAC1HypH,EAAqBuB,EAAoBz2H,IAAK,SAAAiL,GAC5C,IAAM8e,EAAS01F,EAAKxiH,cAAc0R,iBAAiB1D,EAAGrG,MAAMq1B,EAAkBp8B,UAE9E,OADAi0H,EAAeA,EAAanmH,KAAKoe,GAC1B,CACLA,SACAhoB,KAAKkJ,EAAGlJ,KACR0J,UAAUR,EAAGQ,UACb+e,UAAUvf,EAAGwe,YACb1Z,KAAK0vG,EAAKxiH,cAAcqP,YAAmC,IAAvBd,SAASP,EAAGQ,YAAiBwrE,MAAMvnE,OAAO,oBAAoB,WAKlGolH,EAAiB,GACnBmC,EAAmB/8H,KAAK+C,cAAckO,MAAM,IAC5C2rH,oCACI58H,KAAK+C,cAAckN,aAAa2sH,EAAhC,eAAAj8G,EAAAhhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA6C,SAAAiT,EAAOxc,GAAP,IAAAmgC,EAAAq4C,EAAA,OAAA7uD,EAAAtwB,EAAAsQ,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,YAC7C20G,EAAKtlH,MAAM4P,SAAW/I,EAAE2gC,cAAgB3gC,EAAE2gC,aAAau1F,WAAal2H,EAAE2gC,aAAau1F,UAAUlwH,gBAAkBy4G,EAAKtlH,MAAM4P,QAAQ/C,eADrF,CAAA6W,EAAA/S,KAAA,eAAA+S,EAAA/S,KAAA,EAEvB20G,EAAKxiH,cAAcykC,aAAa1gC,EAAEkc,aAFX,QAEzCikB,EAFyCtjB,EAAAhQ,QAIvC2rE,EAAgBimC,EAAKxiH,cAAc0R,iBAAiB3N,EAAE2gC,aAAa5X,OAAOkQ,EAAkBp8B,UAClGo5H,EAAmBA,EAAiBtrH,KAAK6tE,GACzCs7C,EAAeztH,KAAK,CAClB0iB,OAAOyvD,EACPz3E,KAAKf,EAAE8W,gBACP0S,UAAUi1F,EAAKtlH,MAAMu+E,aAAah/C,YAClC3pB,KAAK0vG,EAAKxiH,cAAcqP,YAA0C,IAA9Bd,SAAS21B,EAAU7yB,YAAiB2oE,MAAMvnE,OAAO,oBAAoB,UAV9D,wBAAAmO,EAAA5R,SAAAuR,EAAAtjB,SAA7C,gBAAAgS,GAAA,OAAA2O,EAAA1O,MAAAjS,KAAAkS,YAAA,YAiBRwqH,EAAmB18H,KAAK+C,cAAc0R,iBAAiBioH,EAAiB18H,KAAKC,MAAMu+E,aAAa76E,UAE1F6+B,EAAiBurC,EAAc/tE,KAAK+C,cAAc0R,iBAAiBs5D,EAAY/tE,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GAC3IgsH,EAAmBlvD,EAAc/tE,KAAK+C,cAAcS,YAAYg/B,EAAe,GAAG,IAAIxiC,KAAKC,MAAMuJ,cAAiBxJ,KAAKwH,MAAM6F,MAAMrJ,OAAShE,KAAKwH,MAAM6F,MAAM,GAAG3C,MAAQ1K,KAAK+C,cAAcS,YAAYg/B,EAAe,GAAG,IAAIxiC,KAAKC,MAAMuJ,cAC9O6D,EAAMF,KAAK,CACTsZ,MAAM,qBACN/b,MAAMuyH,IAGRT,EAAmBA,EAAmBx8H,KAAK+C,cAAc0R,iBAAiB+nH,EAAiBx8H,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GACjJisH,EAAsBV,EAAmBx8H,KAAK+C,cAAcS,YAAYg5H,EAAiB,GAAG,IAAIx8H,KAAKC,MAAMu+E,aAAar8E,KAAQnC,KAAKwH,MAAM6F,MAAMrJ,OAAShE,KAAKwH,MAAM6F,MAAM,GAAG3C,MAAQ1K,KAAK+C,cAAcS,YAAYg5H,EAAiB,GAAG,IAAIx8H,KAAKC,MAAMu+E,aAAar8E,KAC3QkL,EAAMF,KAAK,CACTsZ,MAAK,GAAA9f,OAAI3G,KAAKC,MAAMu+E,aAAar8E,KAA5B,iBACLuI,MAAMwyH,IAGFC,EAA4BjY,EAAmBllH,KAAK+C,cAAcS,YAAY0hH,EAAiB,GAAG,IAAIllH,KAAKC,MAAMu+E,aAAah/C,YAAex/B,KAAKwH,MAAM6F,MAAMrJ,OAAShE,KAAKwH,MAAM6F,MAAM,GAAG3C,MAAQ1K,KAAK+C,cAAcS,YAAY0hH,EAAiB,GAAG,IAAIllH,KAAKC,MAAMu+E,aAAah/C,YACxRnyB,EAAMF,KAAK,CACTsZ,MAAM,oBACN/b,MAAMyyH,IASFC,EAAwBp9H,KAAK+C,cAAcS,YAAYo0H,EAAa,GAAG,IAAI53H,KAAKC,MAAMu+E,aAAah/C,YACzGnyB,EAAMF,KAAK,CACTsZ,MAAM,gBACN/b,MAAM0yH,IAGF7C,EAAS3C,EAAa30G,IAAIu5G,GAAkBvvH,MAAM,UAAUgW,IAAI65G,GAEtEzvH,EAAMF,KAAK,CACTsZ,MAAM,uBACN/b,MAAM6vH,EAAOt3G,IAAI,GAAGhW,MAAM,KAAKC,QAAQ,GAAG,MAE5CG,EAAMF,KAAK,CACTsZ,MAAM,wBACN/b,MAAM6vH,EAAOttH,MAAM,KAAKC,QAAQ,GAAG,MAG/BoyB,EAAgBm9F,GAAcA,EAAW5sG,OAAS7vB,KAAK+C,cAAc0R,iBAAiBgoH,EAAW5sG,OAAO7vB,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GACpKosH,EAAgBr9H,KAAK+C,cAAcS,YAAY87B,EAAc,GACnE02F,EAAY7oH,KAAK,CACfsZ,MAAM,kBACNgxF,YAAY,8BACZ/sG,MAAM2yH,EAAc,IAAIr9H,KAAKC,MAAMu+E,aAAah/C,cAG5C64F,EAAeqE,EAAiBz5G,IAAIu5G,GAC1CxG,EAAY7oH,KAAK,CACfsZ,MAAM,QACN/b,MAAK,GAAA/D,OAAI0xH,EAAaprH,MAAM,KAAKC,QAAQ,GAApC,KACLuqG,YAAY,qCAGdue,EAAY7oH,KAAK,CACfsZ,MAAK,GAAA9f,OAAI3G,KAAKC,MAAMu+E,aAAar8E,KAA5B,YACLuI,MAAK,GAAA/D,OAAI3G,KAAK+C,cAAcS,YAAYk5H,EAAiB,GAApD,KAAA/1H,OAA0D3G,KAAKC,MAAMu+E,aAAar8E,QAGzFw6H,EAAYA,EAAY38H,KAAK+C,cAAc0R,iBAAiBkoH,EAAU38H,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GAC5HynH,EAAiB14H,KAAK+C,cAAcS,YAAYm5H,EAAU,GAChE3G,EAAY7oH,KAAK,CACfsZ,MAAM,oBACN/b,MAAK,GAAA/D,OAAI+xH,EAAJ,KAAA/xH,OAAsB3G,KAAKC,MAAMu+E,aAAah/C,eAI/C89F,EAAwBX,EAAUlrH,KAAKsrH,GAEzCQ,EAAiBV,EAAgBA,EAAcn4F,OAAQ,SAAC84F,EAAWC,GACrE,IAAMxpD,EAAmBsxC,EAAKxiH,cAAckO,MAAMwsH,EAAMh2F,aAAai2F,IAC/DC,EAAepY,EAAKxiH,cAAc0R,iBAAiBgpH,EAAMh2F,aAAa/8B,MAAM66G,EAAKtlH,MAAMyJ,YAAY/F,UAKzG,OAJIg6H,EAAa9oH,GAAG,KAClB2oH,EAAaA,EAAW/rH,KAAKksH,EAAa1wH,MAAMgnE,KAG3CupD,GACPx9H,KAAK+C,cAAckO,MAAM,IAAMjR,KAAK+C,cAAckO,MAAM,GAI1DssH,EAAiBj+F,EAAczqB,GAAG,GAAKzD,KAAKwF,KAAK2mH,EAAet6G,IAAIqc,IAAkB,EAKhFynB,EAAWz1C,SAASe,KAAKg5B,MAAM,KAC/BuyF,EAAc59H,KAAK+C,cAAckO,MAAM81C,GAAUr1C,MAAM6rH,GACvDM,EAAgBv+F,EAAczqB,GAAG,GAAKyoH,EAAsBr6G,IAAIqc,GAAiBt/B,KAAK+C,cAAckO,MAAM,GAC3F,MACE,OACjB6sH,EAAmB1sH,KAAKqE,IAAI,EAAErE,KAAKgF,MAAMwnH,EAAY36G,IADpC,UAEjB4lB,EAAM+0F,EAAY/oH,GAAG,GAAKgpH,EAAc5wH,MAHzB,OAG6CgW,IAAI66G,GAAkB7wH,MAAM,KAAOjN,KAAK+C,cAAckO,MAAM,GAI9H+kH,EAAY7oH,KAAK,CACfsZ,MAAM,MACN/b,MAAK,GAAA/D,OAAIkiC,EAAI37B,QAAQ,GAAhB,KACLuqG,YAAY,+DAGRsmB,EAAc/9H,KAAKwH,MAAMizH,UAAYz6H,KAAK+C,cAAcqP,YAAiC,IAArBpS,KAAKwH,MAAMizH,WAAgB19C,MAAMvnE,OAAO,oBAAsB,GACxIwgH,EAAY7oH,KAAK,CACfzC,MAAMqzH,EACNt3G,MAAM,sBACNgxF,YAAY,6BAGdz3G,KAAKgI,SAAS,CACZqF,QACAktH,SACAoC,YACA3G,cACAC,cACA32F,gBACAs7F,iBACAI,mNAI2Bxa,mEAC7BxgH,KAAKgI,SAAS,CACZw4G,0JAIMsD,GACR9jH,KAAKgI,SAAS,CACZ87G,6DAIc+W,GAChB76H,KAAKgI,SAAS,CACZ6yH,yGAIwB/zH,6FACpBm0H,EAAqB,KACrBH,EAAkBh0H,EAAE4e,OAAOhb,MAC3BszH,EAAWh+H,KAAK+C,cAAcqP,gBAC9BwpH,EAAQ57H,KAAK+C,cAAcqP,YAAY0oH,EAAgB,IAAIkD,EAASxoH,OAAO,YAAY,uBAAuBmmH,IAAI,EAAE,WAChHsC,kCACJ/C,EAAsB5pH,SAASsqH,EAAM/gF,GAAG5nC,UAAU,cAEtBjT,KAAK+7H,8BAA/BC,SACFd,EAAoBc,IACtBd,EAAsBc,GAGxBh8H,KAAKgI,SAAS,CACZ8yH,kBACAG,qBACAC,uBACA,WACA1V,EAAKvE,6MAKYga,wFACfS,EAAU17H,KAAKwH,MAAMizH,UAAYz6H,KAAK+C,cAAcqP,YAAiC,IAArBpS,KAAKwH,MAAMizH,WAAkBz6H,KAAK+C,cAAcqP,cAChHwpH,EAAQF,EAAQC,IAAIV,EAAmBvwH,MAAMuwH,EAAmB13H,MAAMo4H,IAAI,EAAE,UAE5Eb,EAAkBc,EAAMpmH,OAAO,cACjC0lH,EAAsB5pH,SAASsqH,EAAM/gF,GAAG5nC,UAAU,cAGtBjT,KAAK+7H,8BAA/BC,SACFd,EAAoBc,IACtBd,EAAsBc,GAGxBh8H,KAAKgI,SAAS,CACZ8yH,kBACAG,qBACAC,gNAIuBnqH,EAAG8e,EAAOhS,oGAE/B0kG,EAAU,KACVwY,EAAkB,UACd/6H,KAAKwH,MAAMs8G,sBACZ,gBAWA,yBA0BA,qBAWA,yCA/CGoa,EAAkBntH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBo5G,EAAKjmH,MAAMyJ,YAAYmD,QAAQC,eAAiBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASgyF,EAAKjmH,MAAMu+E,aAAa3xE,QAAQgrB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASgyF,EAAKjmH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAInpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAC9eqxH,EAAeD,EAAkBl+H,KAAK+C,cAAc0R,iBAAiBnD,SAAS4sH,EAAgB9zH,KAAK,IAAIpK,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GACzK8pH,EAAkB,CAChB34H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,wCAAA+D,OAAyCw3H,EAAajxH,QAAQ,GAA9D,KAAAvG,OAAoE3G,KAAKC,MAAMuJ,cAA/E,+CAIExJ,KAAKwH,MAAMqzH,sBACZ,iBASA,2CARHE,EAAkB,CAChB34H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,0DAAA+D,OAA2D3G,KAAK+C,cAAcqP,YAA2C,IAA/BpS,KAAKwH,MAAM0zH,qBAA0Bn+C,MAAMvnE,OAAO,oBAA5I,sDAIA4oH,EAA0BrtH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBo5G,EAAKjmH,MAAMyJ,YAAYmD,QAAQC,eAAiBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASgyF,EAAKjmH,MAAMu+E,aAAa3xE,QAAQgrB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASgyF,EAAKjmH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAInpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KACtfuxH,EAAiBD,EAA0Bp+H,KAAK+C,cAAc0R,iBAAiBnD,SAAS8sH,EAAwBh0H,KAAK,IAAIpK,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GAC3L8pH,EAAkB,CAChB34H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,uDAAA+D,OAAwD03H,EAAenxH,QAAQ,GAA/E,KAAAvG,OAAqF3G,KAAKC,MAAMuJ,cAAhG,0HAQJqvH,EAAoB9nH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBo5G,EAAKjmH,MAAMyJ,YAAYmD,QAAQC,gBAAkB,KACtKgsH,EAAiBD,EAAoB74H,KAAK+C,cAAc0R,iBAAiBnD,SAASunH,EAAkBzuH,KAAK,IAAIpK,KAAKC,MAAMyJ,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GAC/K8pH,EAAkB,CAChB34H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,2CAAA+D,OAA4CmyH,EAAe5rH,QAAQ,GAAnE,KAAAvG,OAAyE3G,KAAKC,MAAMuJ,cAApF,kDAIAu2B,EAAoB//B,KAAK+C,cAAciS,gBAAgB,CAAC,YAAYhV,KAAKC,MAAMu+E,aAAah/C,cAC5Fu5F,EAAqBhoH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAKA,EAAI1mC,QAAQC,gBAAkBizB,EAAkBlzB,QAAQC,eAAiBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASgyF,EAAKjmH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,mBAAsB,KAC3QksH,EAAkBD,EAAqB/4H,KAAK+C,cAAc0R,iBAAiBnD,SAASynH,EAAmB3uH,KAAK,IAAI21B,EAAkBp8B,UAAY3D,KAAK+C,cAAckO,MAAM,GAC7K8pH,EAAkB,CAChB34H,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,yCAAA+D,OAA0CqyH,EAAgB9rH,QAAQ,GAAlE,KAAAvG,OAAwE3G,KAAKC,MAAMu+E,aAAah/C,YAAhG,gFAOU,GACS,EAE7Bx/B,KAAKgI,SAAS,CACZu6G,UACA0T,aALkB,EAMlB8E,kBACA3T,sBAN2B,GAO3B,WACAlB,EAAKwQ,oTAIQxL,kCACTpjH,EAAW,YAIP4Y,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKC,MAAMuJ,cAAcxJ,KAAKC,MAAM4P,SACvE7P,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,cAAc,CAACnC,KAAKC,MAAM4P,+CAJ9F0uB,OACAk8F,OAMF3yH,EAAS2yH,UAAYA,GAAanpH,SAASmpH,GAAW,EAAInpH,SAASmpH,GAAa,KAChF3yH,EAAS6yH,YAAc7yH,EAAS2yH,WAAa3yH,EAAS2yH,WAAWnpH,SAASe,KAAKg5B,MAAM,KACrFvjC,EAASy2B,aAAgBv+B,KAAK+C,cAAckO,MAAMstB,GAAcj7B,QAAmDtD,KAAK+C,cAAckO,MAAM,GAAlEjR,KAAK+C,cAAckO,MAAMstB,GAI9E,cAFjBulF,EAAiB9jH,KAAKwH,MAAMs8G,iBAEIh8G,EAAS6yH,cAC3C7W,EAAiB,OACjBh8G,EAASg8G,eAAiBA,GAIxBh8G,EAAS2yH,WAA8B,SAAjB3W,GACxBA,EAAiB,gBACjBh8G,EAAS+yH,eAAiB,OAC1B/yH,EAASg8G,eAAiBA,GACA,kBAAjBA,GAAqCh8G,EAAS+yH,gBAAmB76H,KAAKwH,MAAMqzH,iBACrF/yH,EAAS+yH,eAAiB,QAIP,kBAAjB/W,GAAoCh8G,EAAS6yH,cAC/C7W,EAAiB,WACjBh8G,EAASg8G,eAAiBA,QAGpBA,SACD,iBAOA,0BASA,6CAfHh8G,EAASs4G,eAAgB,EACzBt4G,EAASw4G,gBAAiB,EAC1Bx4G,EAASw7G,YAAcx7G,EAASy2B,aAChCz2B,EAASg7G,mBAAT,8CAAAn8G,OAA4E3G,KAAKC,MAAMuJ,cAAvF,WACA1B,EAASw5G,oBAAsBthH,KAAK+C,cAAcixD,qBAAqBlsD,EAASy2B,aAAav+B,KAAKC,MAAMyJ,YAAY/F,8CAGpHmE,EAASs4G,eAAgB,EACzBt4G,EAASg7G,mBAAqB,GAC9Bh7G,EAASw7G,YAAcx7G,EAASy2B,aAChCz2B,EAASw4G,eAA+C,WAA9BtgH,KAAKwH,MAAMqzH,eACrC/yH,EAASgzH,gBAAkB96H,KAAK+C,cAAcqP,YAA+B,IAAnBtK,EAAS2yH,WAAgBjlH,OAAO,cAC1F1N,EAASg7G,mBAAT,8CAAAn8G,OAA4E3G,KAAKC,MAAMuJ,cAAvF,WACA1B,EAASw5G,oBAAsBthH,KAAK+C,cAAcixD,qBAAqBlsD,EAASy2B,aAAav+B,KAAKC,MAAMyJ,YAAY/F,8CAGpHmE,EAASs4G,eAAgB,EACzBt4G,EAASw4G,gBAAiB,EAC1Bx4G,EAASg7G,mBAAqB,GAC9Bh7G,EAASw7G,YAActjH,KAAK+C,cAAc0R,iBAAiB3M,EAASw3B,cAAct/B,KAAKC,MAAMyJ,YAAY/F,kFAMzGunH,IACFpjH,EAASy6G,QAAU,KACnBz6G,EAASizH,gBAAkB,KAC3BjzH,EAASs/G,sBAAuB,aAGHpnH,KAAK+7H,+BAA9BuC,SACAzC,EAAU77H,KAAK+C,cAAcqP,YAA6B,IAAjBksH,GAAuB9oH,OAAO,cAC7E1N,EAASqzH,0BAA0BrzH,EAAS2yH,WAAYz6H,KAAK+C,cAAcqP,YAA+B,IAAnBtK,EAAS2yH,WAAgBjlH,OAAO,gBAAgBqmH,EAIvI77H,KAAKgI,SAASF,EAAS,WACrB8+G,EAAKyS,kJAIA,IAAAtS,EAAA/mH,KAEDu+H,EAAuC,SAA9Bv+H,KAAKwH,MAAMs8G,eACpB0V,EAAwC,UAA9Bx5H,KAAKwH,MAAMs8G,eACrB0a,EAAwC,UAA9Bx+H,KAAKwH,MAAMs8G,eACrByV,EAA0C,aAA9Bv5H,KAAKwH,MAAMs8G,eACvB2a,EAA2C,kBAA9Bz+H,KAAKwH,MAAMs8G,eACxB2V,EAAWz5H,KAAKwH,MAAMs8G,eACtB4a,GAAe1+H,KAAKwH,MAAMmzH,YAEhC,OACEnkB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGPE,KAAKC,MAAMic,aACTs6F,EAAAr2G,EAAAC,cAACu+H,GACK3+H,KAAKC,OAKbD,KAAKC,MAAMyJ,aAAe1J,KAAKC,MAAMyJ,YAAYgwH,UAC/CljB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,eAKA0oG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CACE/5G,GAAI,EACJtG,MAAO,OACPqD,WAAY,OACZigB,KAAM5lB,KAAKC,MAAMyJ,YAAYgwH,UAE7BljB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,OACP+D,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAGdzG,KAAKC,MAAMyJ,YAAYgwH,YAOhC15H,KAAKwH,MAAM83B,eAAiBt/B,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM83B,eAAezqB,GAAG,IAAM7U,KAAKwH,MAAMwuH,YAAYhyH,OAAO,GACpHwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,eAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,EACPuG,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,UACL09F,SAAS,QAEXl8G,eAAgB,iBAGdjB,KAAKwH,MAAMwuH,YAAYlwH,IAAK,SAAC6zH,EAAS5zH,GAAV,OAC1BywG,EAAAr2G,EAAAC,cAACw+H,GAADj/H,OAAAC,OAAA,CACEiH,IAAG,eAAAF,OAAiBZ,GACpBrG,UAAW,CACToO,GAAG,EACHhO,MAAM,CAAC,MAAM,QAGf6C,UAAW,CACTD,SAAS,CAAC,EAAE,KAEVi3H,QAShB35H,KAAKC,MAAMuJ,eACTgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,kBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGW,OAAzBjB,KAAKwH,MAAMizH,UACTjkB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOg5H,EAAS,EAAI,GAEtBxhB,QAAS,OACTj9G,MAAO,CAAC,EAAE,OACVs9G,SAAU,kBACVp7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUg+H,EACV99H,YAAc,SAAAqG,GAAC,OAAIigH,EAAK6S,UAAU,WAEjC55H,KAAKwH,MAAMmzH,YAkBdnkB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOg0H,EAAY,EAAI,GAEzBz5H,MAAO,CAAC,EAAE,OACVi9G,QAAS,WACTK,SAAU,oBACVp7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUg5H,EACV94H,YAAc,SAAAqG,GAAC,OAAIigH,EAAK6S,UAAU,eAhCpCpjB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOk5H,EAAa,EAAI,GAE1B3+H,MAAO,CAAC,EAAE,OACVS,SAAUk+H,EACV1hB,QAAS,gBACTK,SAAU,kBACVp7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCvB,YAAc,SAAAqG,GAAC,OAAIigH,EAAK6S,UAAU,oBAsBxCpjB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOi5H,EAAU,EAAI,GAEvB1+H,MAAO,CAAC,EAAE,OACVi9G,QAAS,QACTK,SAAU,oBACVp7G,SAAUhC,KAAKC,MAAM+B,SAErBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUi+H,EACV/9H,YAAc,SAAAqG,GAAC,OAAIigH,EAAK6S,UAAU,YAEpCpjB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOi0H,EAAU,EAAI,GAEvB15H,MAAO,CAAC,EAAE,OACVi9G,QAAS,QACTK,SAAU,mBACVp7G,SAAUhC,KAAKC,MAAM+B,SACrBC,WAAY,CACV6L,GAAG,CAAC,EAAE,GACN/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUi5H,EACV/4H,YAAc,SAAAqG,GAAC,OAAIigH,EAAK6S,UAAU,aAIpC55H,KAAKwH,MAAMuzH,iBACTvkB,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD/I,OAAAC,OAAA,CACEF,UAAW,CACTkJ,GAAG,EACHkF,GAAG,IAED9N,KAAKwH,MAAMuzH,kBAKnBvB,EACEhjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,EACPuG,MAAO,CACL82G,SAAS,QAEXl8G,eAAgB,iBAGZjB,KAAKwH,MAAM6F,OAAUrN,KAAKwH,MAAM6F,MAAMrJ,OAmBpChE,KAAKwH,MAAM6F,MAAMvH,IAAK,SAAC6zH,EAAS5zH,GAAV,OACxBywG,EAAAr2G,EAAAC,cAACw+H,GAADj/H,OAAAC,OAAA,CACEiH,IAAG,SAAAF,OAAWZ,GACdrG,UAAW,CACTI,MAAM,CAAC,EAAE,SAEP65H,MAxBNnjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,sBAad4zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,wBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPmB,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6hB,GAAG,EACH68F,GAAG,EACHr+G,GAAG,EACHD,MAAM,EACN2I,QAAQ,OACRxH,eAAe,UAEjBV,UAAU,EACVD,eAAe,GAGbN,KAAKwH,MAAMwzH,oBAAsBh7H,KAAKwH,MAAMwzH,mBAAmBh3H,OAC7DwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,EACJ68F,GAAI,EACJt+G,MAAO,EACPkB,cAAe,MACfumH,aAAY,aAAA5gH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEnD4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,IAAO,IAHtC,QAOAw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,GAAM,GACnC6G,UAAW7I,KAAKC,MAAM+B,SAAW,QAAU,QAJ7C,UAQAw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,IAAO,IAElChC,KAAKC,MAAM+B,SAAW,GAAK,SAGjCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,SACfD,WAAY,aACZwF,SAAU,CAAC,UAAU,UACrBs4H,UAAW,CAAC,UAAU,UAGpB7+H,KAAKwH,MAAMwzH,mBAAmBl1H,IAAK,SAACg5H,EAAO/4H,GAAR,OACjCywG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPD,GAAI,CAAC,EAAE,GACPmB,cAAe,MACf6F,IAAG,WAAAF,OAAaZ,GAChBwhH,aAAY,aAAA5gH,OAAeogH,EAAK9mH,MAAMwB,MAAMC,OAAOkF,UAEnD4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZH,MAAO,YACPI,SAAUqkH,EAAK9mH,MAAM+B,SAAW,EAAI,EACpClC,MAAOinH,EAAK9mH,MAAM+B,SAAW,IAAO,IAEnC88H,EAAOjpH,MAEV2gG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZH,MAAO,YACPI,SAAUqkH,EAAK9mH,MAAM+B,SAAW,EAAI,EACpClC,MAAOinH,EAAK9mH,MAAM+B,SAAW,GAAM,GACnC6G,UAAWk+G,EAAK9mH,MAAM+B,SAAW,QAAU,QAE1C88H,EAAOjvG,OAAO3iB,QAAQ,GAPzB,IAO8B4xH,EAAOxuG,WAErCkmF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAOinH,EAAK9mH,MAAM+B,SAAW,IAAO,IACpCf,eAAgB8lH,EAAK9mH,MAAM+B,SAAW,WAAa,cAEnDw0G,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CACErgH,MAAO,OACPqD,WAAY,OACZigB,KAAMmhG,EAAKhkH,cAAc8iB,2BAA2Bi5G,EAAOj3H,OAE3D2uG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,QAGZ+lH,EAAK9mH,MAAM+B,UACVw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZH,MAAO,QAENykH,EAAKhkH,cAAcmF,YAAY42H,EAAOj3H,OAI7C2uG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJpD,MAAO,OACPH,KAAM,YACNE,KAAM0kH,EAAK9mH,MAAM+B,SAAW,QAAU,kBAWxDw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,aAFT,iCAWPtC,KAAKC,MAAM4P,SAAW7P,KAAKC,MAAMyJ,aAAe1J,KAAKwH,MAAM87G,aAAetjH,KAAKwH,MAAMyuH,aAAej2H,KAAKC,MAAMu+E,aAClHg4B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPgO,GAAI,CAAC,EAAE,IAGJ2wH,GAAcC,GACbloB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,0BAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAERsC,KAAM,aACNG,UAAW,UACXnB,YAAa,UACbb,SAAyC,SAA9BP,KAAKwH,MAAMqzH,eACtBp6H,YAAc,SAAAqG,GAAC,OAAIigH,EAAKgY,kBAAkB,SAC1Cn8H,KAAM5C,KAAKC,MAAM+B,SAAW,OAAS,mBAEvCw0G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdhD,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAERsC,KAAM,cACNG,UAAW,SACXnB,YAAa,UACbb,SAAyC,WAA9BP,KAAKwH,MAAMqzH,eACtBp6H,YAAc,SAAAqG,GAAC,OAAIigH,EAAKgY,kBAAkB,WAC1Cn8H,KAAM5C,KAAKC,MAAM+B,SAAW,SAAW,wBAO7Cu8H,GAAUv+H,KAAKwH,MAAM87G,aAAetjH,KAAKwH,MAAMg5G,kBAAoBxgH,KAAKwH,MAAM87G,YAAYzuG,GAAG,IAAQ4pH,GAAcC,IACnHloB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,IAGJy+H,GAAwC,SAA9Bv+H,KAAKwH,MAAMqzH,iBACpBrkB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,uBAIG9N,KAAKwH,MAAM2zH,wBAuFV3kB,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,EACHkF,GAAG,GAEL1L,KAAM,UACNI,UAAW,CACTF,MAAM,YAERM,KAAI,2DA/FN4zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZE,eAAgB,SAChBD,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPyD,KAAM,OACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZyJ,YAAa,aACbxL,gBAAiB,SACjB8N,UAAW,kBACX9D,MAAO1K,KAAKwH,MAAMszH,iBAAmB,GACrCz+G,SAAUrc,KAAKg/H,sBAAsBrgH,KAAK3e,MAC1CuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,WAE/C4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdjB,KAAKwH,MAAMgzH,YAAY10H,IAAK,SAACvE,EAAEwE,GAC7B,IAAMxF,IAAWwmH,EAAKv/G,MAAMyzH,qBAAqBlU,EAAKv/G,MAAMyzH,mBAAmBvwH,QAAQnJ,EAAEmJ,OAASq8G,EAAKv/G,MAAMyzH,mBAAmB13H,OAAShC,EAAEgC,MAC3I,OACEizG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,KAERS,SAAUA,EACVD,eAAe,EACfuG,IAAG,cAAAF,OAAgBZ,GACnBtF,YAAa,SAAAqG,GAAC,OAAIigH,EAAKkY,iBAAiB19H,KAExCi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbmG,UAAW,SACXvG,MAAO/B,EAAW,YAAc,YAE/BgB,EAAEiM,WAQbixH,GACEjoB,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,CACEie,OAAQ,IACJ7d,KAAKC,MAFX,CAGEoe,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB4B,UAAWskH,IACXpoG,eAAgB,CACdrc,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,IACT0B,aAAa,EACbyF,UAAU,UACVyD,MAAM,gBACNxD,SAASlH,KAAKwH,MAAM+4G,gBAEtBrvG,OAAQ,gBACRoM,WAAY,uBACZE,aAAcxd,KAAKC,MAAMu+E,aAAar8E,KACtC4F,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC8d,qBAAsB9d,KAAKk/H,sBAAsBvgH,KAAK3e,YA0B3Eu+H,GAAsC,WAA5Bv+H,KAAKwH,MAAMqzH,eACpBrkB,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,CACEsd,MAAO,MACHld,KAAKC,MAFX,CAGEiR,OAAQuoH,EACRjX,MAAOxiH,KAAKwH,MAAMg7G,MAClBD,QAASviH,KAAKwH,MAAM+6G,QACpB74G,YAAa1J,KAAKC,MAAMyJ,YACxB60B,aAAcv+B,KAAKwH,MAAM87G,YACzB9kC,aAAcx+E,KAAKC,MAAMu+E,aACzB4hC,cAAepgH,KAAKwH,MAAM44G,cAC1BG,eAAgBvgH,KAAKwH,MAAM+4G,eAC3BD,eAAgBtgH,KAAKwH,MAAM84G,eAC3Bv4G,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC8iH,mBAAoB9iH,KAAKwH,MAAMs7G,mBAC/BxB,oBAAqBthH,KAAKwH,MAAM85G,oBAChC0B,oBAAqBhjH,KAAKwH,MAAMw7G,oBAChCpC,oBAAqB5gH,KAAK4gH,oBAAoBjiG,KAAK3e,MACnDwgH,iBAAkBxgH,KAAK4rH,yBAAyBjtG,KAAK3e,MACrD8d,qBAAsB9d,KAAK8d,qBAAqBa,KAAK3e,QAErDw2G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAGJi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAGR01H,GAAUE,EAAX,sBAAA93H,OACwB3G,KAAKC,MAAMuJ,cADnC,oBAEI+vH,GAAS,6BAAA5yH,OACkB3G,KAAKC,MAAMuJ,cAD7B,qBAQpBi1H,IAAeC,EAClBloB,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAGJi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,2DAUF0wH,EACF/iB,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAIFvB,KAAKwH,MAAMmzH,YACTnkB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJpL,SAAU,EACVJ,MAAO,WACPuG,UAAW,UALb,+CAO+C7I,KAAKC,MAAMuJ,cAP1D,KASAgtG,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,CACEie,OAAQ,IACJ7d,KAAKC,MAFX,CAGE4C,UAAWskH,IACX9oG,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB8d,eAAgB,CACdrc,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,IACT0B,aAAa,EACbyF,UAAU,SACVyD,MAAM,YAERwG,OAAQ,WACRoM,WAAY,WACZE,aAAcxd,KAAKC,MAAMu+E,aAAar8E,KACtC4F,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,UAI7Cw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,kDAMkD7I,KAAK+C,cAAcqP,YAAiC,IAArBpS,KAAKwH,MAAMizH,WAAgB19C,MAAMvnE,OAAO,oBANzH,yBAMoKxV,KAAKC,MAAMuJ,cAN/K,OAYNg1H,GACFhoB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFuM,GAAG,IAIF9N,KAAKwH,MAAMm1H,WAAa38H,KAAKwH,MAAMm1H,UAAU9nH,GAAG,GAC/C2hG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,WACPH,KAAM,iBACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbJ,MAAO,WACPuG,UAAW,UALb,iBAOgB2tG,EAAAr2G,EAAAC,cAAA,cAASJ,KAAKwH,MAAMm1H,UAAUzvH,QAAQ,GAAtC,IAA2ClN,KAAKC,MAAMu+E,aAAah/C,aAPnF,KASAg3E,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,CACEie,OAAQ,IACJ7d,KAAKC,MAFX,CAGE4C,UAAWskH,IACX9oG,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB8d,eAAgB,CACdrc,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,EAAE,GACX4K,MAAM,QACNlJ,aAAa,EACbyF,UAAU,UAEZiK,OAAQ,QACRoM,WAAY,QACZvV,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzCwd,aAAcxd,KAAKC,MAAMyJ,YAAY0xH,eAAej5H,SAIxDq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,0CAYR2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,oBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6hB,GAAG,EACH68F,GAAG,EACHr+G,GAAG,EACHD,MAAM,EACN2I,QAAQ,OACR1H,WAAW,SACXE,eAAe,UAEjBV,UAAU,EACVD,eAAe,GAGbN,KAAKwH,MAAMozH,gBAAkB56H,KAAKwH,MAAMozH,eAAe52H,OACrDwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,EACJ68F,GAAI,EACJt+G,MAAO,EACPkB,cAAe,MACfumH,aAAY,aAAA5gH,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,UAEnD4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,GAAM,IAHrC,QAOAw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZ3C,MAAOE,KAAKC,MAAM+B,SAAW,GAAM,GACnC6G,UAAW7I,KAAKC,MAAM+B,SAAW,QAAU,QAJ7C,WASGhC,KAAKC,MAAM+B,UACVw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GACP4C,SAAU,EACVD,WAAY,GAHd,SAWJzC,KAAKwH,MAAMozH,eAAe90H,IAAK,SAACk6E,EAAMj6E,GAAP,OAC7BywG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE52G,GAAI,EACJC,MAAO,EACPkB,cAAe,MACf6F,IAAG,SAAAF,OAAWZ,GACdwhH,aAAY,aAAA5gH,OAAeogH,EAAK9mH,MAAMwB,MAAMC,OAAOkF,UAEnD4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZH,MAAO,YACPI,SAAUqkH,EAAK9mH,MAAM+B,SAAW,EAAI,EACpClC,MAAOinH,EAAK9mH,MAAM+B,SAAW,GAAM,IAElCg+E,EAAMnqE,MAET2gG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZH,MAAO,YACPI,SAAUqkH,EAAK9mH,MAAM+B,SAAW,EAAI,EACpClC,MAAOinH,EAAK9mH,MAAM+B,SAAW,GAAM,GACnC6G,UAAWk+G,EAAK9mH,MAAM+B,SAAW,QAAU,QAE1Cg+E,EAAMnwD,OAAO3iB,QAAQ,GAPxB,IAO6B8yE,EAAM1vD,YAGhCy2F,EAAK9mH,MAAM+B,UACVw0G,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CACE7iH,MAAO,GACPwC,MAAO,OACPqD,WAAY,OACZigB,KAAMmhG,EAAKhkH,cAAc8iB,2BAA2Bm6D,EAAMn4E,OAE1D2uG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZH,MAAO,QAENykH,EAAKhkH,cAAcmF,YAAY83E,EAAMn4E,OAExC2uG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrD,KAAM,QACNC,MAAO,OACPH,KAAM,oBAWxBq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,aAFT,8BAcbtC,KAAKC,MAAM4P,QAQd2mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,qBAtBV4zG,EAAAr2G,EAAAC,cAACs3G,EAAA,EAAD/3G,OAAAC,OAAA,CACEF,UAAW,CACTkJ,GAAG,IAED5I,KAAKC,iBA1kDD4C,kCCorCXs8H,8MAlrCb33H,MAAQ,CACNi7G,KAAK,EACL2c,MAAM,KACN5c,MAAM,CACJ6c,EAAE,YACFC,EAAE,aAEJC,cAAc,CACZC,GAAG,CACDhyH,MAAM,OAERiyH,GAAG,CACDjyH,MAAM,OAERkyH,GAAG,CACDlyH,MAAM,OAERmyH,IAAI,CACFnyH,MAAM,OAGVqxE,QAAQ,KACRpB,QAAQ,KACRmiD,SAAS,KACT3iH,SAAQ,EACR4iH,UAAU,KACVC,YAAY,GACZC,YAAY,GACZC,WAAW,KACXC,YAAY,KACZC,aAAY,EACZC,aAAY,EACZz2H,YAAY,KACZ60B,aAAa,KACb/0B,cAAc,KACd42H,gBAAgB,GAChBC,eAAc,EACdC,eAAe,KACfC,gBAAgB,KAChBviH,kBAAkB,GAClBwiH,iBAAiB,KACjBC,kBAAkB,KAClBC,mBAAmB,KACnB5c,eAAe,UACf6c,oBAAmB,EACnBC,qBAAoB,EACpBC,qBAAqB,KACrBC,sBAAsB,KACtBC,yBAAyB,QAI3Bh+H,cAAgB,OAuIhBi+H,aAAe,SAACl6H,GACd,IAAMg5H,EAAch5H,EAAE4e,OAAOhb,MAAM1G,SAAWV,MAAMwD,EAAE4e,OAAOhb,OAAS0G,KAAKgF,MAAMtP,EAAE4e,OAAOhb,OAAS,GAC7Fw1H,EAAch7H,EAAKnC,cAAckO,MAAM6uH,GAAajrH,GAAG,IAAM3P,EAAKnC,cAAckO,MAAM6uH,GAAa1tG,IAAIltB,EAAKsC,MAAMy4H,aACxH/6H,EAAK8C,SAAS,CACZ83H,cACAI,mBAIJe,aAAe,SAACn6H,GACd,IAAMi5H,EAAcj5H,EAAE4e,OAAOhb,MAAM1G,SAAWV,MAAMwD,EAAE4e,OAAOhb,OAAS5D,EAAE4e,OAAOhb,MAAQ,GACjFy1H,EAAc7uH,SAASyuH,IAAc,IAAMzuH,SAASyuH,IAAc,IACxE76H,EAAK8C,SAAS,CACZ+3H,cACAI,cACAG,eAAe,UAInBY,aAAe,SAACZ,GACdp7H,EAAK+7H,aAAa,CAChBv7G,OAAO,CACLhb,MAAM41H,QAqFZa,iBAAmB,SAACpwH,GAElB7L,EAAK8C,SAAS,CACZq4H,eAFoB,OAMxBe,2BAA6B,SAACrwH,GAE5B7L,EAAK8C,SAAS,CACZ24H,oBAFyB,OAM7BU,iBAAmB,SAACxxG,GAClB,IAAMyxG,EAAmBp8H,EAAKnC,cAAcixD,qBAAqBnkC,EAAO3qB,EAAKsC,MAAMkC,YAAY/F,UACzFi9H,EAAsB17H,EAAKnC,cAAckO,MAAM4e,GAAQuC,IAAI,IAAMltB,EAAKnC,cAAckO,MAAMqwH,GAAkBzsH,GAAG3P,EAAKsC,MAAMq5H,qBAAqBjhD,oBACrJ16E,EAAK8C,SAAS,CACZ44H,2BAIJW,0BAA4B,SAAC3hD,GAC3B,MAAO,CACLtiE,WAAW,cACXw6C,aAAa,CAAC5yD,EAAKsC,MAAMq5H,qBAAqBn2H,MAAMxF,EAAKsC,MAAMq5H,qBAAqBrjD,SAASp4E,GAAGw6E,EAAmB16E,EAAKsC,MAAMkC,YAAY83H,iBAI9IC,0BAA4B,SAAC1wH,GAK3B7L,EAAKw8H,mBAGPC,6BAA+B,SAAC5wH,GAC9B,IAAM8tE,EAAU35E,EAAKnC,cAAciS,gBAAgB,CAAC,YAAY,SAAS,cAAc,eAAe,WAAWjE,GACjH7L,EAAK8C,SAAS,CACZ62E,wFAvRE7+E,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0hI,kSAICtB,EAAkB,YACWpgI,KAAK+C,cAAcm6E,wBAAwBl9E,KAAKC,MAAM4P,uBACpE5L,QAAS,SAAAo4E,GACxBA,EAASmB,UACX4iD,EAAgBjzH,KAAKkvE,KAInBulD,EAA+B5hI,KAAKC,MAAM4kH,UAAUkP,OAASqM,EAAgBlhH,KAAM,SAAA0/D,GAAK,OAAIttE,SAASstE,EAAMl0E,SAAW4G,SAASnO,EAAKlD,MAAM4kH,UAAUkP,UAAY,KAEhK+M,EAAwBV,EAAgBp8H,OAAO,EAAIo8H,EAAgB,GAAK,KACxES,EAAuBe,IAA8Dd,GAAyB,MAEpH9gI,KAAKgI,SAAS,CACZo4H,kBACAS,uBACAC,0BAGIhd,EAAiB,CAAC,UAAU,SAAS5vF,SAASl0B,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAM4kH,UAAUC,OAAS9kH,KAAKwH,MAAMs8G,eACtH+d,EAAoB7hI,KAAKC,MAAM4kH,UAAUkP,QAAUp0H,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAiBukB,SAASl0B,KAAKC,MAAM4kH,UAAUkP,QACnIvqH,EAAgBq4H,EAAoB7hI,KAAKC,MAAM4kH,UAAUkP,OAASp0H,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAiB,GAE1H3P,KAAKgnH,kBAAkBlD,GACvB9jH,KAAK8hI,oBAAoBt4H,sLAILk3H,EAAmBh3H,wFACjCm4B,EAAkB7hC,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,oBAChE2gC,EAAe31C,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAY6sB,aAC5E7hC,KAAK+C,cAAc6zC,YAAnB,GAAAjwC,OAAkCgvC,EAAlC,cAAAhvC,OAA2D+C,EAAYmD,QAAvE,0BAAjBq1D,YACUA,EAAS93D,4BACjBw1H,EAAW19D,EAAS93D,KAEpB61H,EAAcL,GAAYA,EAAQ,WAAAj5H,OAAY+5H,IAAwB1gI,KAAK+C,cAAc0R,iBAAiBmrH,EAAQ,WAAAj5H,OAAY+5H,IAAsBh3H,EAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,qBACpMgvH,oCAEF,4LAGgBt4H,EAAUC,2EACjC5H,KAAKkD,YAEC+W,EAAuBrS,EAAU4B,gBAAkBxJ,KAAKwH,MAAMgC,cAC9Du4H,EAA4Bn6H,EAAU84H,qBAAuB1gI,KAAKwH,MAAMk5H,oBAC1EzmH,GAAwB8nH,IAC1B/hI,KAAKykH,kSAMDud,EAAqC,QAA7BhiI,KAAKwH,MAAMgC,cACnBu3H,EAA2B/gI,KAAKwH,MAAMkC,YAAY42E,WAAWtgF,KAAKwH,MAAMk5H,6BAGxEhgH,QAAQqD,IAAI,CAChB/jB,KAAKC,MAAMqnC,aAAatnC,KAAKwH,MAAMkC,YAAYsH,MAAOhR,KAAKwH,MAAMkC,YAAY83H,YAAaxhI,KAAKwH,MAAMkC,YAAY69B,KACjHvnC,KAAKC,MAAMqnC,aAAay5F,EAAyB5+H,KAAM4+H,EAAyBl0H,QAASk0H,EAAyBx5F,8BAS1G7mB,QAAQqD,IAAI,CACpB/jB,KAAKiiI,gBAAgBjiI,KAAKwH,MAAMk5H,mBAAmB1gI,KAAKwH,MAAMkC,aAC9D1J,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKwH,MAAMkC,YAAYsH,MAAMhR,KAAKC,MAAM4P,SAC3E7P,KAAK+C,cAAcmhE,mBAAmBlkE,KAAKwH,MAAMgC,cAAcxJ,KAAKC,MAAMu+E,aAAa3xE,QAAQ7M,KAAKC,MAAM4P,SAC1G7P,KAAK+C,cAAcmhE,mBAAmB68D,EAAyB5+H,KAAKnC,KAAKC,MAAMu+E,aAAa3xE,QAAQ7M,KAAKC,MAAM4P,SAC/GmyH,EAAQhiI,KAAK+C,cAAcy/E,cAAcxiF,KAAKC,MAAM4P,SAAQ,GAAS7P,KAAK+C,cAAc2tB,gBAAgBqwG,EAAyB5+H,KAAKnC,KAAKC,MAAM4P,SAAQ,wCAVzJowH,OACAQ,OACAE,OACAN,OAUF9hG,GATEA,SAS6Bv+B,KAAK+C,cAAckO,MAAM,GACxDwvH,EAAoBA,GAAqBzgI,KAAK+C,cAAckO,MAAM,GAElEjR,KAAKgI,SAAS,CACZi4H,cACA1hG,eACA8hG,gBACAI,oBACAE,qBACAI,oNAIsBv3H,2EACJ,GACA,GACdE,EAAc1J,KAAKC,MAAMykH,UAAU/0G,gBAAgBnG,GACnDk3H,EAAqB/gI,OAAOoE,KAAK2F,EAAY42E,YAAY,GAE/DtgF,KAAKgI,SAAS,CACZ83H,YALkB,GAMlBC,YAPkB,GAQlBr2H,cACAF,gBACAk3H,2KAIqBA,GACvB1gI,KAAKgI,SAAS,CACZ04H,mEAKF,IAAMZ,EAAc9/H,KAAKwH,MAAMy4H,YAAY/yH,UAC3ClN,KAAKghI,aAAa,CAChBt7G,OAAO,CACLhb,MAAMo1H,6LAkCV9/H,KAAKgI,SAAS,CACZiV,SAAQ,IAIJilH,EAAY,CAChBC,OAAQniI,KAAKwH,MAAMu4H,YACnBqC,YAAapiI,KAAKwH,MAAMs4H,YACxBuC,SAAUriI,KAAKwH,MAAMk5H,mBACrBpmG,gBAAiBt6B,KAAKwH,MAAMkC,YAAYmD,QACxCy1H,MAAOtiI,KAAKwH,MAAMkC,YAAY42E,WAAWtgF,KAAKwH,MAAMk5H,oBAAoB7zH,SAKpEg1B,EAAkB7hC,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,oBAChE2gC,EAAe31C,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAY6sB,IAC7F0gG,YAAc5sF,+BAAiCusF,EAAUE,iCAAwBF,EAAUG,4BAAmBH,EAAUC,mCAA0BD,EAAU5nG,0BAE3It6B,KAAK+C,cAAc6zC,YAAY2rF,aAAhDrgE,SAEAk9D,EAAQl9D,GAAYA,EAAS93D,KAAO83D,EAAS93D,KAAO,6BAGxDpK,KAAKgI,SAAS,CACZiV,SAAQ,uBAEH,kBAIH7S,EAAOpK,KAAKC,MAAMse,KAAK0C,IAAIsmB,IAAIi7F,iBACnC,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,UAAW,WACrD,CAACpD,EAAMv8F,MAAOu8F,EAAMqD,WAAYrD,EAAMsD,UAAWtD,EAAMuD,YAAavD,EAAM50H,EAAG40H,EAAMniF,EAAGmiF,EAAMhpG,IAGxFwsG,EAAa5iI,KAAK+C,cAAcwyB,KAAK,aACfv1B,KAAK+C,cAAcguB,oBAAoB/wB,KAAKC,MAAMu+E,aAAar8E,KAAK,yBAA1F6mG,SACA65B,EAAY7iI,KAAK+C,cAAcwyB,KAAK6pG,EAAMv8F,OAC1CigG,EAAeD,EAAUE,IAAI/iI,KAAK+C,cAAcwyB,KAAKyzE,IAAgBg6B,KAAK,KAAOrH,IAAIkH,GACrFI,EAAcjjI,KAAK+C,cAAc+yB,MAAMosG,EAAUE,YAAYl/G,YAC7Dq9G,EAAkBuC,EAClBjD,EAAY7/H,KAAK+C,cAAc0R,iBAAiB8rH,EAAgBvgI,KAAKwH,MAAMkC,YAAY/F,UACvFq8H,EAAaH,EAAU58G,IAAIjjB,KAAKwH,MAAMs4H,aAAa7yH,MAAM,KAAKgW,IAAIjjB,KAAKwH,MAAMu4H,aAAa9yH,MAAM,KAIhG+Q,EAAoB,CACxBkkH,EAAU5nG,gBACV4nG,EAAUI,MACVW,EACAf,EAAUC,OACVS,EACArC,EACAn2H,GAGIo2H,EAAqD,QAAlCxgI,KAAKwH,MAAMk5H,mBAA+BoC,EAAe,KAMrE,GACG,EAEhB9iI,KAAKgI,SAAS,CACZy6G,KAJW,EAKX2c,QACAniH,SALc,EAMd4iH,YACAG,aACAO,kBACAC,mBACAxiH,mKAgDc8lG,GACZA,IAAmB9jH,KAAKwH,MAAMs8G,gBAChC9jH,KAAKgI,SAAS,CACZ87G,8DAKajlC,GACjB,IAAMgiD,EAAuB7gI,KAAKwH,MAAMq5H,qBAAuB7gI,KAAKwH,MAAM44H,gBAAgBlhH,KAAM,SAAA0/D,GAAK,OAAIttE,SAASstE,EAAMl0E,SAAWm0E,IAAY,KAE/I7+E,KAAKgI,SAAS,CACZ64H,yDAWF7gI,KAAKgI,SAAS,CACZy6G,KAPW,EAQX2c,MAPY,KAQZvgD,QAPc,KAQdkhD,YAPkB,GAQlBD,YAPkB,GAQlB9hH,kBAPwB,sCAWnB,IAAA3T,EAAArK,KACP,OACEw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP8I,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,CAAC,EAAE,KACVkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,kBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER6C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdN,KAAM,WACNG,UAAW,UACXK,KAAM,eACNxB,YAAa,UACbb,SAAyC,YAA9BP,KAAKwH,MAAMs8G,eACtBrjH,YAAc,SAAAqG,GAAC,OAAIuD,EAAK28G,kBAAkB,eAE5CxQ,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER6C,UAAW,CACTD,SAAS,CAAC,EAAE,IAEdN,KAAM,aACNG,UAAW,SACXK,KAAM,eACNxB,YAAa,UACbb,SAAyC,UAA9BP,KAAKwH,MAAMs8G,eACtBrjH,YAAc,SAAAqG,GAAC,OAAIuD,EAAK28G,kBAAkB,eAKhB,YAA9BhnH,KAAKwH,MAAMs8G,gBACTtN,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTG,GAAG,EACHE,GAAG,EACHe,GAAG,EACHhB,MAAM,GAERS,UAAU,EACVD,eAAe,EACf8B,KAAM,mBACNI,UAAW,CACTF,MAAM,cAERK,UAAW,CACTL,MAAM,cAERM,KAAI,yJAEJ4zG,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CACEj9G,GAAI,EACJjD,WAAY,IACZH,MAAO,UACPI,SAAU,OACViD,WAAY,UACZigB,KAAM,wDAEN4wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,UAHlB,YAMEu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrD,KAAM,QACNC,MAAO,UACPH,KAAM,cAVV,OAkBwB,YAA9BnC,KAAKwH,MAAMs8G,eACTtN,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPkB,cAAe,MACfC,eAAgB,iBAGdtB,OAAOoE,KAAK/D,KAAKwH,MAAMg7G,OAAO18G,IAAK,SAAA48G,GAAS,OAC1ClM,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,UACLyjH,eAAe,OACfz0H,OAAOpE,EAAK7C,MAAMi7G,MAAMC,EAAY,UAAY,WAElDhgH,SAAU,EACVmG,UAAW,SACXhC,IAAG,QAAAF,OAAU+7G,GACbpgH,MAAQ+H,EAAK7C,MAAMi7G,MAAMC,EAAY,UAAY,WACjD/8G,WAAa0E,EAAK7C,MAAMi7G,MAAMC,EAAY,UAAY,WACtDygB,YAAc94H,EAAK7C,MAAMi7G,MAAMC,EAAY,UAAY,YAEtDr4G,EAAK7C,MAAMg7G,MAAME,OAK1BlM,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACNiC,OAAO,QAET2I,MAAQ,EAAE/K,OAAOoE,KAAK/D,KAAKwH,MAAMg7G,OAAOx+G,OAAQhE,KAAKwH,MAAMi7G,QAI5DziH,KAAKwH,MAAMgC,eAAkBxJ,KAAKwH,MAAM+2B,aAcrCv+B,KAAKwH,MAAMq3E,QACb23B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,UACNI,UAAW,CACTF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,qEAAA+D,OAAuE3G,KAAKwH,MAAMq3E,QAAlF,eAEN23B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,OACPqD,WAAY,UACZC,QAAS5F,KAAKojI,MAAMzkH,KAAK3e,OAJ3B,kBASCA,KAAKwH,MAAM43H,MA4Nd5oB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WAJT,kBAQAk0G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHiO,GAAG,EACH/N,GAAG,GAELQ,UAAU,EACVD,eAAe,GAEfk2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,aAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WAJT,gBAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,gBAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAMgC,eAEdgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,iBAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAMs4H,YANd,IAM4B9/H,KAAKwH,MAAMk5H,oBAEvClqB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,iBAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAMu4H,YANd,SAQAvpB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,gBAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAMq4H,UAAU3yH,QAAQ,GANhC,IAMqClN,KAAKwH,MAAMk5H,oBAEhDlqB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,gBAQAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WAENtC,KAAKwH,MAAMw4H,WAAW9yH,QAAQ,GANjC,MASFspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM+2B,cAAc5sB,GAAG3R,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM43H,MAAMv8F,QAC7F2zE,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFuM,GAAG,IAGL0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,MACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,yBAMyB7I,KAAKwH,MAAMk5H,mBANpC,oBAQAlqB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,OACPqD,WAAY,UACZC,QAAS5F,KAAKojI,MAAMzkH,KAAK3e,OAJ3B,mBAUDA,KAAKwH,MAAM64H,cA4Dd7pB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEoe,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB4B,UAAWskH,IACXpoG,eAAgB,CACdrc,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,IACT0B,aAAa,EACbyF,UAAU,UACVyD,MAAM,eACNxD,SAASlH,KAAKwH,MAAM+4G,gBAEtBrvG,OAAQ,eACRoM,WAAY,WACZ5S,MAAO1K,KAAKwH,MAAMg5H,iBAClB3iH,OAAQ7d,KAAKwH,MAAMwW,kBACnBR,aAAcxd,KAAKC,MAAMu+E,aAAar8E,KACtC4F,SAAU/H,KAAK2hI,6BAA6BhjH,KAAK3e,SAEnDw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,OACPqD,WAAY,UACZC,QAAS5F,KAAKojI,MAAMzkH,KAAK3e,OAJ3B,kBA1FFw2G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFuM,GAAG,IAGL0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,MACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,+DAQA2tG,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEoe,YAAa,CACXve,MAAM,EACNiB,WAAW,SACXE,eAAe,UAEjB4B,UAAWskH,IACXpoG,eAAgB,CACdrc,SAAS,EACTD,WAAW,EACXJ,KAAK,SACLvC,MAAM,CAAC,EAAE,IACT0B,aAAa,EACbkJ,MAAM,UACNzD,UAAU,WAEZiK,OAAQ,UACRoM,WAAY,UACZvV,SAAU/H,KAAKmhI,iBAAiBxiH,KAAK3e,MACrCwd,aAAcxd,KAAKwH,MAAMu5H,yBAAyB5+H,KAClD0b,OAAQ,CAAC7d,KAAKC,MAAMu+E,aAAa3xE,QAAQ7M,KAAKC,MAAMse,KAAKkX,MAAMkwC,iBAAiB,UAElF6wC,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,OACPqD,WAAY,UACZC,QAAS5F,KAAKojI,MAAMzkH,KAAK3e,OAJ3B,qBAhbZw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,0BAGA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJoa,aAAa,EACbpE,cAAc,EACd5R,cAAexJ,KAAKwH,MAAMgC,cAC1B6S,SAAUrc,KAAK8hI,oBAAoBnjH,KAAK3e,MACxC2P,gBAAiB3P,KAAKC,MAAMykH,UAAU/0G,oBAG1C6mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJ/M,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,8BAGAD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE1nF,UAAW,MACXC,QAAO,kFAEPwnF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrD,KAAM,MACNF,KAAM,OACNG,MAAO,gBAIbk0G,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEuf,aAAa,EACbhW,cAAexJ,KAAKwH,MAAMk5H,mBAC1BrkH,SAAUrc,KAAKqjI,yBAAyB1kH,KAAK3e,MAC7C2P,gBAAiB3P,KAAKwH,MAAMkC,YAAY42E,eAI1CtgF,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMy4H,aAAaprH,GAAG,GAClD2hG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,kCAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEplG,IAAK,EACLoxG,KAAM,EACN3iH,MAAO,OACPyD,KAAM,SACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZyJ,YAAa,aACbxL,gBAAiB,SACjB8N,UAAW,kBACX9D,MAAO1K,KAAKwH,MAAMs4H,YAClBzjH,SAAUrc,KAAKghI,aAAariH,KAAK3e,MACjCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,SAC7C62G,YAAW,UAAA92G,OAAY3G,KAAKwH,MAAMk5H,mBAAmBzrH,cAA1C,aAEbuhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPwG,SAAU,OACVvF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVD,WAAY,EACZH,MAAO,YACPuG,UAAW,QACXlD,WAAY,YACZC,QAAU,SAACkB,GAAD,OAAOuD,EAAKi5H,qBACtBj9H,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAZjB,kBAekBzG,KAAKwH,MAAMy4H,YAAY/yH,QAAQlN,KAAKC,MAAM+B,SAAW,EAAI,GAf3E,IAegFhC,KAAKwH,MAAMk5H,sBAI/FlqB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,sBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEplG,IAAK,EACLvR,MAAO,OACPyD,KAAM,SACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZoH,YAAa,MACb05H,YAAa,QACb7iI,gBAAiB,SACjB8N,UAAW,kBACX9D,MAAO1K,KAAKwH,MAAMu4H,YAClBtiB,YAAa,0BACbphG,SAAUrc,KAAKihI,aAAatiH,KAAK3e,MACjCkM,YAAalM,KAAKwH,MAAM24H,YAAc,aAAe,SAGpDngI,KAAKwH,MAAM24H,aACV3pB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJ4B,SAAU,EACVJ,MAAO,OAHT,2CASJk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdtB,OAAOoE,KAAK/D,KAAKwH,MAAM+3H,eAAez5H,IAAK,SAAAq8H,GACzC,IAAMqB,EAAan5H,EAAK7C,MAAM+3H,cAAc4C,GACtC5hI,EAAW8J,EAAK7C,MAAM84H,iBAAiB6B,EACvCriI,EAAS,EAAEH,OAAOoE,KAAKsG,EAAK7C,MAAM+3H,eAAev7H,OAAQ,IAC/D,OACEwyG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFzB,MAAMA,GAERS,SAAUA,EACVD,eAAe,EACfuG,IAAG,eAAAF,OAAiBw7H,GACpB1hI,YAAa,SAAAqG,GAAC,OAAIuD,EAAK62H,aAAaiB,KAEpC3rB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZoG,UAAW,SACXvG,MAAO+H,EAAKpK,MAAMM,SAAW,YAAc,UAE1CijI,EAAWh2H,YAQ1BgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPmB,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACqjI,GAAA,EAAD,CACEn+H,YAAa,CACXxE,GAAG,EACHF,GAAG,CAAC,EAAG,GACPyB,KAAK,SACLb,aAAa,EACbyF,UAAU,OACVC,UAAWlH,KAAKwH,MAAM04H,cAAgBlgI,KAAKwH,MAAMk5H,qBAAuB1gI,KAAKwH,MAAMu4H,cAAgB//H,KAAKwH,MAAM24H,aAEhHuD,WAAY,YACZC,UAAW3jI,KAAKwH,MAAMyV,QACtBxc,YAAc,SAAAqG,GAAC,OAAIuD,EAAKu5H,SAAS98H,QAKvC0vG,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,WACNI,UAAW,CACTF,MAAM,YAERM,KAAI,gBAAA+D,OAAkB3G,KAAKwH,MAAMgC,cAA7B,uCA7PZgtG,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT8E,GAAG,EACH5H,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,uBAugBkB,UAA9B5C,KAAKwH,MAAMs8G,gBACbtN,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGLE,KAAKwH,MAAM44H,gBAAgBp8H,OAAO,EAChCwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,iBAGA0oG,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAADpa,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmb,cAAc,EACdjZ,KAAM,mBACNgY,QAASna,KAAKwH,MAAM44H,gBACpB/jH,SAAUrc,KAAK6jI,mBAAmBllH,KAAK3e,MACvCqa,aAAcra,KAAKwH,MAAMs5H,yBAGzB9gI,KAAKwH,MAAMq5H,qBAAqBpjD,QAC9B+4B,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,UACNI,UAAW,CACTF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,uCAAA+D,OAAyC3G,KAAKwH,MAAMq5H,qBAAqBvhD,cAAcpyE,QAAQ,GAA/F,KAAAvG,OAAqG3G,KAAKwH,MAAMq5H,qBAAqBrgD,WAArI,+BAGNg2B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,EACHkF,GAAG,IAGL0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,MACNC,MAAO,WACPH,KAAM,eAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAHb,uBAKsB2tG,EAAAr2G,EAAAC,cAAA,cAASJ,KAAKwH,MAAMq5H,qBAAqBphD,gBAAgBvyE,QAAQ,GAAjE,IAAsElN,KAAKwH,MAAMq5H,qBAAqBrgD,YAL5H,oBAOAg2B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,QACPuG,UAAW,UAHb,yFASJ2tG,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,CACEsd,MAAO,MACHld,KAAKC,MAFX,CAGEmgH,eAAe,EACfE,gBAAgB,EAChBpvG,OAAQ,cACRxH,YAAa1J,KAAKwH,MAAMkC,YACxB80E,aAAcx+E,KAAKC,MAAMu+E,aACzB+hC,eAAgBvgH,KAAKwH,MAAMo5H,oBAC3B74H,SAAU/H,KAAKyhI,0BAA0B9iH,KAAK3e,MAC9C4gH,oBAAqB5gH,KAAKqhI,iBAAiB1iH,KAAK3e,MAChDwgH,iBAAkBxgH,KAAKohI,2BAA2BziH,KAAK3e,MACvD8d,qBAAsB9d,KAAKuhI,0BAA0B5iH,KAAK3e,MAC1D8iH,mBAAoB,+DACpBvkF,aAAcv+B,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMi5H,mBAAmB5rH,GAAG7U,KAAKwH,MAAMq5H,qBAAqBlhD,kBAAoB3/E,KAAKwH,MAAMq5H,qBAAqBlhD,iBAAmB3/E,KAAKwH,MAAMi5H,oBAE1LjqB,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,sBAMsB7I,KAAKwH,MAAMgC,cANjC,yBAgBdgtG,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,GAELxG,KAAM,UACNI,UAAW,CACTF,MAAM,YAERM,KAAI,2DAvqCAC,8CCyYXihI,8MA7Ybt8H,MAAQ,CACN0J,OAAO,KACPqxG,QAAQ,KACRwhB,YAAY,KACZr6H,YAAY,KACZs6H,aAAa,KACbzlG,aAAa,KACbigD,aAAa,KACbh1E,cAAc,KACd82G,gBAAe,EACfwC,mBAAmB,KACnB2T,yBAAwB,KAI1B1zH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAGkBC,EAAUC,6EACjC5H,KAAKkD,YAECk/G,EAAiBx6G,EAAUsJ,SAAWlR,KAAKwH,MAAM0J,QAAYlR,KAAKC,MAAMiR,SAAWvJ,EAAUuJ,OAC7F+yH,EAAuB70H,KAAKC,UAAUrP,KAAKC,MAAMg5H,iBAAmB7pH,KAAKC,UAAU1H,EAAUsxH,eAC7FiL,EAAsB90H,KAAKC,UAAUrP,KAAKC,MAAMk5H,gBAAkB/pH,KAAKC,UAAU1H,EAAUwxH,eAC7F/W,GAAiB6hB,GAAwBC,IAC3ClkI,KAAK0H,wQAKDwJ,EAASlR,KAAKC,MAAMiR,QAAUlR,KAAKwH,MAAM0J,QAAU,OACzDlR,KAAKgI,SAAS,CACZkJ,UACA,WACA/N,EAAKghI,cACLhhI,EAAKihI,uMAIa5lD,4EAEfA,4CACI,UAGLjgD,EAAe,UACXigD,EAAar8E,YACd,+CACkBnC,KAAK+C,cAAcy/E,cAAcxiF,KAAKC,MAAM4P,uBAAjE0uB,uDAIMv+B,KAAKC,MAAMqnC,aAAak3C,EAAar8E,KAAKq8E,EAAa3xE,QAAQ2xE,EAAaj3C,8BAC7DvnC,KAAK+C,cAAc2tB,gBAAgB8tD,EAAar8E,KAAKnC,KAAKC,MAAM4P,wBAArF0uB,6CAIJA,EAAeA,GAAgBv+B,KAAK+C,cAAckO,MAAM,qBAEjDstB,sQAKFv+B,KAAKC,MAAMykH,UAAUuU,eAAkBj5H,KAAKC,MAAMykH,UAAUyU,uDACxD,0BAOCz4G,QAAQqD,IAAI,CACpB/jB,KAAK0wB,gBAAgB1wB,KAAKC,MAAMykH,UAAUyU,cAC1Cn5H,KAAK0wB,gBAAgB1wB,KAAKC,MAAMykH,UAAUuU,oDAJ1C8K,OACAC,OAMIzlG,EAAqC,SAAtBv+B,KAAKwH,MAAM0J,OAAoB8yH,EAAeD,EAGnE/jI,KAAKgI,SAAS,CACZ+7H,cACAC,eACAzlG,+JAIc,IAAAl0B,EAAArK,KACZuiH,EAAU,KACV74G,EAAc,KACd60B,EAAe,KACf/0B,EAAgB,KAChB82G,GAAiB,EACjBwC,EAAqB,KAEzB,OAAQ9iH,KAAKwH,MAAM0J,QACjB,IAAK,OACHovG,GAAiB,EACjB/hF,EAAev+B,KAAKwH,MAAMw8H,aAC1Bt6H,EAAc1J,KAAKC,MAAMykH,UAAUuU,cACnCzvH,EAAgBxJ,KAAKC,MAAMykH,UAAUuU,cAAc92H,KACnD2gH,EAAkB,eAAAn8G,OAAkB3G,KAAKC,MAAMykH,UAAUyU,aAAah3H,KAApD,iDAClBogH,EAAU,CACRngH,KAAK,eAILQ,KAAI,aAAA+D,OAAc3G,KAAKC,MAAMykH,UAAUuU,cAAc92H,KAAjD,aAAAwE,OAAiE3G,KAAKC,MAAMykH,UAAUyU,aAAah3H,OAE3G,MACA,IAAK,SACHqH,EAAgBxJ,KAAKC,MAAMykH,UAAUyU,aAAah3H,KAClDm+G,GAAiB,EACjB/hF,EAAev+B,KAAKwH,MAAMu8H,YAC1Br6H,EAAc1J,KAAKC,MAAMykH,UAAUyU,aACnCrW,EAAkB,oBAAAn8G,OAAuB3G,KAAKC,MAAMykH,UAAUuU,cAAc92H,KAA1D,iDAClBogH,EAAU,CACRngH,KAAK,aAILQ,KAAI,eAAA+D,OAAgB3G,KAAKC,MAAMykH,UAAUyU,aAAah3H,KAAlD,kBAAAwE,OAAuE3G,KAAKC,MAAMykH,UAAUuU,cAAc92H,OAOpHnC,KAAKgI,SAAS,CACZu6G,UACA74G,cACA60B,eACA/0B,gBACA82G,iBACAwC,sBACA,WACAz4G,EAAK85H,kDAICjzH,GACRlR,KAAKgI,SAAS,CACZkJ,wDAIiBH,EAAG8e,EAAOhS,GAAO,IAAAi/F,EAAA98G,KAChCuiH,EAAU,KAEd,OAAQviH,KAAKwH,MAAM0J,QACjB,IAAK,OACH,IAAMmzH,EAAUtzH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBgwG,EAAK78G,MAAMykH,UAAUyU,aAAatsH,QAAQC,gBAAkB,KACzKw3H,EAAeD,EAAU/yH,SAAS+yH,EAAQj6H,KAAK,IAAMylB,EACzDy0G,EAAetkI,KAAK+C,cAAc0R,iBAAiB6vH,EAAatkI,KAAKwH,MAAMkC,YAAY/F,UACvF4+G,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,6BAAA+D,OAA8B29H,EAAap3H,QAAQ,GAAnD,KAAAvG,OAAyD3G,KAAKC,MAAMykH,UAAUyU,aAAah3H,KAA3F,cAER,MACA,IAAK,SACH,IAAMoiI,EAAcxzH,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBgwG,EAAK78G,MAAMykH,UAAUyU,aAAatsH,QAAQC,gBAAkB,KAC7K65G,EAAkB4d,EAAcjzH,SAASizH,EAAYn6H,KAAK,IAAMylB,EACpE82F,EAAkB3mH,KAAK+C,cAAc0R,iBAAiBkyG,EAAgB3mH,KAAKwH,MAAMkC,YAAY/F,UAC7F4+G,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,6BAAA+D,OAA8BggH,EAAgBz5G,QAAQ,GAAtD,KAAAvG,OAA4D3G,KAAKC,MAAMykH,UAAUuU,cAAc92H,KAA/F,cAQVnC,KAAKmkI,cAELnkI,KAAKgI,SAAS,CACZu6G,yDAIiB1yF,GACnB,IAAMhS,EAAS,GACf,OAAQ7d,KAAKwH,MAAM0J,QACjB,IAAK,OACH2M,EAAOnT,MAAQmlB,EACfhS,EAAOi6C,aAAe,GACtBj6C,EAAOP,WAAatd,KAAKC,MAAMykH,UAAUuU,cAAcC,WACzD,MACA,IAAK,SACHr7G,EAAOnT,MAAQ,KACfmT,EAAOi6C,aAAe,CAACjoC,GACvBhS,EAAOP,WAAatd,KAAKC,MAAMykH,UAAUyU,aAAaC,aAK1D,OAAOv7G,mCAGA,IAAA0nG,EAAAvlH,KAEDwkI,IAAcxkI,KAAKC,MAAMukI,UAE/B,OACEhuB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB2H,GAAI,CAAC,EAAE47H,EAAY,EAAI,IAEvBhuB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChBnB,MAAO,CAAC,EAAE0kI,EAAY,EAAI,MAGvBxkI,KAAKC,MAAM4P,QAoCV2mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,IAGJE,KAAKC,MAAMiR,QACVslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,sBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,OACNL,UAAW,UACXH,KAAM,gBACNhB,YAAa,UACbb,SAAiC,SAAtBP,KAAKwH,MAAM0J,OACtBzQ,YAAc,SAAAqG,GAAC,OAAIy+G,EAAKqU,UAAU,YAEpCpjB,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,SACNL,UAAW,SACXH,KAAM,cACNhB,YAAa,UACbb,SAAiC,WAAtBP,KAAKwH,MAAM0J,OACtBzQ,YAAc,SAAAqG,GAAC,OAAIy+G,EAAKqU,UAAU,gBAO5CpjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgB,GAAI0jI,EAAY,EAAI,GAGQ,OAA1BxkI,KAAKwH,MAAM+2B,aACTi4E,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqgH,gBAAgB,EAChBpvG,OAAQlR,KAAKwH,MAAM0J,OACnBqxG,QAASviH,KAAKwH,MAAM+6G,QACpB74G,YAAa1J,KAAKwH,MAAMkC,YACxB60B,aAAcv+B,KAAKwH,MAAM+2B,aACzBigD,aAAcx+E,KAAKC,MAAMykH,UAAUyU,aACnCpxH,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC8iH,mBAAoB9iH,KAAKwH,MAAMs7G,mBAE/BhlG,qBAAsB9d,KAAK8d,qBAAqBa,KAAK3e,QAErDw2G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAGJi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,sBAMsB7I,KAAKwH,MAAMgC,cANjC,OAMoDxJ,KAAKwH,MAAM0J,OAN/D,uBAYNslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,0BAjJlB4zG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCG,KAAM,QACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACPlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,uDAQA2tG,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM23G,2BAL1B,sBAtQS/0G,iEC6RZ4hI,8MA5Rbj9H,MAAQ,CACN0B,UAAU,KACVw7H,WAAW,KACXC,YAAY,KACZn7H,cAAc,KACd8qE,oBAAoB,QAItBvxE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,gNAQLlD,KAAKqvH,qMAGkB1nH,EAAWC,mEAClC5H,KAAKkD,6RAKC+5B,EAAY,GACdynG,EAAa1kI,KAAK+C,cAAckO,MAAM,GACpCkC,EAAyC,SAAhCnT,KAAKC,MAAMmT,0BAEpBpT,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAK/D,KAAKC,MAAM0P,iBAAvD,eAAAO,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAwE,SAAAC,EAAOU,GAAP,IAAAtH,EAAAmK,EAAAhC,EAAA0sB,EAAA,OAAA9N,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtElH,EAAcvG,EAAKlD,MAAM0P,gBAAgBqB,GAD6BN,EAAAE,KAAA,EAE7CzN,EAAKJ,cAAc2tB,gBAAgBhnB,EAAYqoB,KAAK/gB,MAAM7N,EAAKlD,MAAM4P,SAFxB,YAEtEgE,EAFsEnD,EAAAiD,MAAA,CAAAjD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKjDzN,EAAKJ,cAAcg+B,kBAAkBr3B,GALY,cAKpEmI,EALoEnB,EAAAiD,KAAAjD,EAAAE,KAAA,GAM/CzN,EAAKJ,cAAcsvB,oBAAoBxe,EAAiB5G,MAAM4E,GAAYb,EAAMtH,EAAYyJ,GAN7C,SAMpEorB,EANoE7tB,EAAAiD,MAQzDkB,GAAG,KAClBooB,EAAUjsB,GAASutB,EAGnBmmG,EAAaA,EAAWjzH,KAAK8sB,IAZ2C,yBAAA7tB,EAAAqB,SAAAzB,EAAAtQ,SAAxE,gBAAAgS,GAAA,OAAA9B,EAAA+B,MAAAjS,KAAAkS,YAAA,2BAkB8BlS,KAAK+C,cAAcijG,yBAAyBhmG,KAAKC,MAAM4P,QAAQ7P,KAAKC,MAAM0P,gBAAgB,MAAM,MAAK,WAAnIi2F,WAEJjmG,OAAOoE,KAAK6hG,GAAuB3hG,QAAS,SAAA6jC,GAC1C,IAAMk9D,EAAkB7hG,EAAKJ,cAAckO,MAAM20F,EAAsB99D,IACvE7K,EAAU6K,GAAYk9D,EACtB0/B,EAAaA,EAAWjzH,KAAKuzF,KAI3B97F,EAAY,GAElBvJ,OAAOoE,KAAKk5B,GAAWh5B,QAAQ,SAAA+M,GAC7B,IAAMutB,EAAetB,EAAUjsB,GAC/B,GAAIutB,EAAa1pB,GAAG,GAAG,CACrB,IAAMy/G,EAAkB/1F,EAAatb,IAAIyhH,GAAYz3H,MAAM,KACvD23H,EAAgBzhI,EAAKJ,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,QAAQ,QACrG2vH,EAAgBA,EAAgBA,EAAcr3H,KAAK,KAAO,UAC1DrE,EAAUiE,KAAK,CACb/H,GAAG4L,EACH1O,MAAM,OAAOsiI,EAAc,IAC3Bl6H,MAAM0G,KAAK0wD,MAAMwyD,GACjB9mH,MAAMwD,EAAM+T,OAAO,EAAE,GAAG9P,cAAcjE,EAAM+T,OAAO,QAKzD/kB,KAAKgI,SAAS,CACZi1B,YACA/zB,YACAw7H,mJAIK,IAAAr6H,EAAArK,KAEDmJ,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAY,EACZC,aAAa,EACbE,YAAY,IACZD,cAAc,GACdE,gBAAgB,GAChBvI,OAAO,SAAAwI,GAAC,OAAIA,EAAE5H,OACdiI,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GACV,OAAI8C,WAAW9C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGXC,YAAa,SAAAT,GACX,OAAO,MAETzI,MAAM,CACJmJ,QAAS,CACPC,UAAW,CACTpC,QAAS,SAGbwC,OAAO,CACLrI,KAAK,CACHF,SAAS,GACTD,WAAW,IACXyI,WAAYzJ,KAAM0J,MAAMC,YAG5BC,QAAQ,CACNzI,KAAK,CACHF,SAAS,GACTD,WAAW,IACXyI,WAAYzJ,KAAM0J,MAAMC,aAI9BE,sBAAsB,EACtBC,sBAAsB,GACtBE,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCE,sBAAsB,CAAEC,KAAM,SAC9B44H,wBAAwBvzH,SAAgC,GAAvBtR,KAAKwH,MAAMm9H,aAC5C9jI,OAAQb,KAAKC,MAAM+B,SAAW,CAAEoK,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHpC,aAAa,SAACC,EAAMtD,GAClB,IAAM0C,EAAgBY,EAAKhF,GACrBkvE,EAAsB9qE,EAAgBa,EAAKpK,MAAM0P,gBAAgBnG,IAAkBa,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,SAASxL,EAAcyL,gBAAkB,KAC9K5K,EAAKrC,SAAS,CACZwB,gBACA8qE,yBAGJhqE,aAAa,SAACF,EAAMtD,GAClBuD,EAAKrC,SAAS,CACZwB,cAAc,KACd8qE,oBAAoB,QAGxBjpE,QAAQ,CACN,CACEomH,UAAW,GACXC,WAAY,GACZK,WAAY/xH,KAAKC,MAAM+B,SAAW,GAAK,GACvC2vH,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXG,cAAevwH,KAAMC,OAAOyV,OAC5B26G,YAAa,SACbG,QAAS,CACP,CACEh5D,GAAI,QACJ5yD,MAAO,CACL2rH,cAAe,aAQrBxoH,IAA6C,OAA7BxJ,KAAKwH,MAAMgC,gBAA0BxJ,KAAKwH,MAAMy1B,UAAUj9B,KAAKwH,MAAMgC,iBAAiBxJ,KAAKwH,MAAMy1B,UAAUj9B,KAAKwH,MAAMgC,eACtIs7H,EAAe9kI,KAAK+C,cAAciS,gBAAgB,CAAC,aAAahV,KAAKC,MAAMmT,iBAAiB,SAC5F4tF,IAAehhG,KAAKwH,MAAMgC,eAAgBxJ,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAAShV,KAAKwH,MAAMgC,cAAcyL,cAAc,wBAE5I,OACEuhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,IAGJE,KAAKwH,MAAMk9H,YAAcl7H,IACxBgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5oG,OAAQ,EACRzB,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACb1D,UAAW,SACX9H,WAAY,SACZjB,MAAO,CAAC,MAAM,OACd8N,SAAU,WACV7L,OAAQ,CAAC,MAAM,OACff,cAAe,SACfC,eAAgB,UAGduI,EACEgtG,EAAAr2G,EAAAC,cAAAo2G,EAAAr2G,EAAAu2G,SAAA,KACEF,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE3oG,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJ6N,GAAG,EACH/L,OAAO,UAGXiP,MAAOhR,KAAKwH,MAAMgC,cAClBE,YAAa1J,KAAKwH,MAAM8sE,sBAE1BkiC,EAAAr2G,EAAAC,cAAC0C,GAAA,EAAD,CACEyB,UAAW,CACTmB,GAAG,EACHhD,SAAS,EACTD,WAAW,GAEbkB,SAAU,EACVjB,SAAU,CAAC,EAAE,GACbkB,aAAc,EACdnB,WAAY,CAAC,EAAE,GACf0B,KAAO68F,EAAe,IAAM,KAC5B39F,OAAQrD,KAAKwH,MAAMy1B,UAAUj9B,KAAKwH,MAAMgC,iBAE1CgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAENtC,KAAKwH,MAAMgC,gBAIhBgtG,EAAAr2G,EAAAC,cAAAo2G,EAAAr2G,EAAAu2G,SAAA,KACEF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJ/L,OAAQ,QACRD,IAAKgjI,IAEPtuB,EAAAr2G,EAAAC,cAAC0C,GAAA,EAAD,CACEqB,KAAM,IACNI,UAAW,CACTmB,GAAG,EACHhD,SAAS,EACTD,WAAW,GAEbkB,SAAU,EACVjB,SAAU,CAAC,EAAE,GACbkB,aAAc,EACdnB,WAAY,CAAC,EAAE,GACfY,OAAQrD,KAAKwH,MAAMk9H,aAErBluB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,aAHT,iBAYZk0G,EAAAr2G,EAAAC,cAACktB,EAAA,EAAD3tB,OAAAC,OAAA,CACE2D,KAAM0K,MACF9E,EAFN,CAGE+E,YAAY,EACZ9D,KAAMpK,KAAKwH,MAAM0B,UACjB2Q,SAAU7Z,KAAKC,MAAM4Z,SACrBC,eAAgB9Z,KAAKC,MAAM4Z,oBAtRRhX,wBC6ddkiI,8MA7dbv9H,MAAQ,CACNw9H,eAAe,KACfC,oBAAoB,KACpBC,uBAAuB,KACvBC,6BAA6B,KAC7BC,gBAAgB,CACdC,EAAE,CACAC,MAAQ,CACNC,KAAK,EAAE,GACPzlI,MAAM,EAAE,GAEV0lI,WAAW,CACTD,KAAK,EAAE,EACPzlI,MAAM,EAAE,GAEV2lI,WAAW,CACTF,KAAK,IACLzlI,MAAM,EAAE,EACR4lI,WAAW,OAGfC,GAAG,CACDF,WAAW,CACTF,KAAK,IACLzlI,MAAM,KAER8lI,WAAW,CACTL,KAAK,EAAE,GACPzlI,MAAM,EAAE,IAEV+lI,KAAO,CACLN,KAAK,EACLzlI,MAAM,EAAE,GACR4lI,WAAW,OAGfhG,GAAG,CACDmG,KAAO,CACLN,KAAK,EACLzlI,MAAM,EAAE,GAEVgmI,UAAU,CACRP,KAAK,EACLzlI,MAAM,EAAE,GAEVimI,UAAU,CACRR,KAAK,EACLzlI,MAAM,GACN4lI,WAAW,WAOnB3iI,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKgmI,oMAGkBr+H,EAAUC,mEACjC5H,KAAKkD,gKAGgB+hI,GACrBjlI,KAAKgI,SAAS,CACZi9H,2MAKEgB,EAAa,GACbjB,EAAiB,GAGf7xH,EAAyC,SAAhCnT,KAAKC,MAAMmT,iBAEpB8yH,EAAqB,CACzBC,SAASnmI,KAAK+C,cAAckO,MAAM,GAClCT,WAAWxQ,KAAK+C,cAAckO,MAAM,GACpCm1H,aAAapmI,KAAK+C,cAAckO,MAAM,aAGlCjR,KAAK+C,cAAckN,aAAajQ,KAAKC,MAAMqP,cAA3C,eAAAY,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAyD,SAAAC,EAAOU,GAAP,IAAAtH,EAAAm1B,EAAAxrB,EAAAsN,EAAAnQ,EAAA0yB,EAAA6yD,EAAAnlB,EAAAu1D,EAAAC,EAAAllG,EAAAD,EAAAolG,EAAAC,EAAAC,EAAA,OAAA91G,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvDlH,EAAcvG,EAAKlD,MAAM0P,gBAAgBqB,GADcN,EAAAE,KAAA,EAE/BzN,EAAKJ,cAAcw+B,mBAAmB73B,EAAYvG,EAAKlD,MAAM4P,SAF9B,cAEvDgvB,EAFuDnuB,EAAAiD,KAAAjD,EAAAE,KAAA,EAIP8P,QAAQqD,IAAI,CAChE5gB,EAAKJ,cAAcsvB,oBAAoBwM,EAAgB7tB,EAAMtH,EAAYyJ,GACzEhQ,EAAKJ,cAAcsgC,eAAe,CAACryB,GAAO7N,EAAKlD,MAAM4P,SACrD1M,EAAKJ,cAAcg+B,kBAAkBr3B,KAPsB,cAAA2J,EAAA3C,EAAAiD,KAAAgN,EAAAhhB,OAAAsyB,EAAA,EAAAtyB,CAAA0T,EAAA,GAItD7C,EAJsDmQ,EAAA,GAI3CuiB,EAJ2CviB,EAAA,GAI/Bo1E,EAJ+Bp1E,EAAA,GAUvDiwD,EAAemlB,EAAe9yE,IAAIigB,EAAYlyB,IAAQU,MAAM,GAC5Dy0H,EAAW31H,EAAWvD,MAAM2jE,GAE9Bw1D,EAAe,EACfllG,EAAW,EAd8CxwB,EAAAE,KAAA,GAerCzN,EAAKJ,cAAcu+B,aAAa53B,GAfK,SAevDu3B,EAfuDvwB,EAAAiD,OAgBvB,OAArBstB,EAAU8xB,SACzB7xB,EAAWD,EAAUO,OACrB4kG,EAAe51H,EAAWvD,MAAMi0B,EAASje,IAAI,OAGzCojH,EAAmBj1H,KAAKgF,MAAM+vH,EAASljH,IAAImjH,GAAcn5H,MAAM,MAE/Dq5H,EAAgB3mI,OAAOoE,KAAKZ,EAAKqE,MAAM49H,iBAAiBt0H,OAAO,SAAAy0H,GAAI,OAAIA,GAAMc,IAC7EE,EAAkBj1H,SAASg1H,EAAcpyH,OAE/C+xH,EAAWM,GAAmBN,EAAWM,GAAmBN,EAAWM,GAAiB,EAAI,EAEvFpjI,EAAKJ,cAAckO,MAAMT,GAAYlN,SAAYH,EAAKJ,cAAckO,MAAM8kF,GAAgBzyF,SAAYH,EAAKJ,cAAckO,MAAMk1H,GAAU7iI,SAAYH,EAAKJ,cAAckO,MAAMm1H,GAAc9iI,UAC/L0hI,EAAeh0H,GAAS,CACtBm1H,WACA31H,aACA41H,eACArwC,kBAOFmwC,EAAmBC,SAAWD,EAAmBC,SAAS10H,KAAK00H,GAC/DD,EAAmB11H,WAAa01H,EAAmB11H,WAAWiB,KAAKjB,GACnE01H,EAAmBE,aAAeF,EAAmBE,aAAa30H,KAAK20H,IA1CZ,yBAAA11H,EAAAqB,SAAAzB,EAAAtQ,SAAzD,gBAAAgS,GAAA,OAAA9B,EAAA+B,MAAAjS,KAAAkS,YAAA,WA8CAs0H,EAAe7mI,OAAOoE,KAAKkiI,GAAYvhG,OAAQ,SAAC8hG,EAAa/jB,GACjE,IAAM7O,EAAQqyB,EAAWxjB,GAKzB,OAJI7O,EAAM4yB,EAAa5yB,QACrB4yB,EAAa/jB,KAAOnxG,SAASmxG,GAC7B+jB,EAAa5yB,MAAQtiG,SAASsiG,IAEzB4yB,GACP,CACA/jB,KAAK,EACL7O,MAAM,IAGFqxB,EAAsBuB,EAAa/jB,MAAQnxG,SAAS3R,OAAOoE,KAAK/D,KAAKwH,MAAM49H,iBAAiB,IAE5FqB,EAAwB,GAC9BzmI,KAAKC,MAAMqP,cAAcrL,QAAS,SAAA+M,GAC5Bg0H,EAAeh0H,KACjBy1H,EAAsBz1H,GAASg0H,EAAeh0H,MAIlDg0H,EAAiByB,EAGb9mI,OAAOoE,KAAKihI,GAAgBhhI,OAAO,IACrCghI,EAAc,IAAUkB,GAGtBf,EAA+B,KAC7BD,EAAyBvlI,OAAOoE,KAAK/D,KAAKwH,MAAM49H,iBAAiBt/H,IAAK,SAAA28G,GAC1E,IAAMikB,EAAiB/mI,OAAOkR,OAAO1N,EAAKqE,MAAM49H,gBAAgB3iB,IAAOvuG,MACjE1G,EAAQk5H,EAAehB,WAAagB,EAAehB,WAAa/lI,OAAOoE,KAAKZ,EAAKqE,MAAM49H,gBAAgB3iB,IAAOvuG,MAC9GxJ,EAAQ4G,SAASmxG,GACjB+I,EAAS,CAAE9gH,QAAO8C,SAKxB,OAHI9C,IAAUu6H,IACZE,EAA+B3Z,GAE1BA,IAGTxrH,KAAKgI,SAAS,CACZg9H,iBACAC,sBACAC,yBACAC,qKAIK,IAAA96H,EAAArK,KAEP,IAAKA,KAAKwH,MAAMw9H,eACd,OACExuB,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,MACdktB,UAAUluB,KAAKC,MAAM8B,QAEvBsjB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,2BAKZ,IAAMwiI,EAAkBplI,KAAKwH,MAAM49H,gBAAgBplI,KAAKwH,MAAMy9H,qBAAuBjlI,KAAKwH,MAAM49H,gBAAgBplI,KAAKwH,MAAMy9H,qBAAuBjlI,KAAKwH,MAAM49H,gBAAgB,GAE7K,OACE5uB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,EACJ7zH,GAAI,EACJhB,MAAO,EACPC,GAAI,CAAC,EAAE,GACPF,GAAI,CAAC,EAAE,GACP2O,UAAW,EACXhN,aAAc,EACd0K,YAAa,aACbxL,gBAAiB,UAEjB81G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJD,OAAQ,KACR5M,eAAgB,YAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5oG,OAAQ,KACR/N,MAAO,CAAC,EAAE,IACVkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAAD,CACEW,WAAY,CACVnZ,EAAE,EACFxB,GAAG,GAELoC,KAAM,kBACNgY,QAASna,KAAKwH,MAAM09H,uBACpB7oH,SAAW,SAAA7R,GAAC,OAAIH,EAAKs8H,uBAAuBn8H,IAC5C6P,aAAcra,KAAKwH,MAAM29H,iCAK7BxlI,OAAOoE,KAAK/D,KAAKwH,MAAMw9H,gBAAgBl/H,IAAI,SAACkL,EAAMm5D,GAChD,IAAMzgE,EAAcW,EAAKpK,MAAM0P,gBAAgBqB,GACzCqwB,EAAgBh3B,EAAK7C,MAAMw9H,eAAeh0H,GAC1C41H,EAAqBv8H,EAAKtH,cAAckO,MAAMtR,OAAOkR,OAAOu0H,GAAiBlxH,MAAMqxH,MACnFsB,EAAgBxlG,EAAc+kG,aAAan5H,MAAM25H,GACjDE,EAAaD,EAAchyH,GAAG,GAAKzD,KAAKC,IAAI,EAAErE,WAAWq0B,EAAc8kG,SAASljH,IAAI4jH,KAAmB,EACvGnY,EAAYhlH,GAAeA,EAAYtH,KAAOsH,EAAYtH,KAA9C,iBAAAuE,OAAqEqK,EAArE,QACZ+1H,EAAgB18H,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,QAAQ,QAAQ1H,KAAK,KAEpH,OACEipG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACErxG,GAAE,SAAAuB,OAAWqK,GACbhQ,cAAe,MACf6F,IAAG,SAAAF,OAAWqK,GACd06G,UAAsB,QAAV16G,EAAA,aAAArK,OAA+B0D,EAAKpK,MAAMwB,MAAMC,OAAOkF,SAAY,MAE/E4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACV8N,SAAU,YAEV4oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiC,OAAQ,OACR6L,SAAU,WACV7M,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,IAAK,MAGf02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,IAAK,IACbiC,OAAQ,OACRf,cAAe,OAGbrB,OAAOoE,KAAKqhI,GAAiBt/H,IAAI,SAAC0H,EAAMw5H,GACtC,IAAMN,EAAiBtB,EAAgB53H,GACjCy5H,EAAyB5lG,EAAc+kG,aAAan5H,MAAM5C,EAAKtH,cAAckO,MAAMy1H,EAAenB,OACpG2B,EAAkC78H,EAAKtH,cAAcS,YAAYyjI,EAAuB58H,EAAKpK,MAAM+B,SAAW,EAAIilI,EAAuBt1H,GAAG,GAAK,EAAI,GAKzJ,OAJ4BtH,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,SAAShE,EAAMiE,cAAc,0BAEnGiyH,EAAkC,KAAKA,GAGvC1wB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,EACJ1zH,eAAgB,WAChBnB,MAAO4mI,EAAe5mI,MACtByhB,GAAe,QAAVvQ,EAAkB,EAAI,KAC3BnK,IAAG,kBAAAF,OAAoBqK,EAApB,KAAArK,OAA6BqgI,GAChCG,YAAW,aAAAxgI,OAAe0D,EAAKpK,MAAMwB,MAAMC,OAAOkF,WAGrC,QAAVoK,GAAoBg2H,IAAkBrnI,OAAOoE,KAAKqhI,GAAiBphI,OAAO,IACzEwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,OACb2D,MAAO,CACL+gI,UAAU,aAEZ9kI,MAAO++B,EAAc8kG,SAASvhE,IAAIqiE,GAA0B,YAAc,UAEzEC,QASnB1wB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP+N,OAAQ,EACR9M,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBsgB,GAAe,QAAVvQ,EAAkB,CAAC,MAAM,SAAW,QACzCotG,GAAKj0C,EAAWxqE,OAAOoE,KAAKsG,EAAK7C,MAAMw9H,gBAAgBhhI,OAAO,EAAI,MAAQ,GAE1EwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,IAAK,IACbmB,eAAgB,CAAC,aAAa,aAE9Bu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,CAAC,EAAE,GACPjyH,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAEduO,IAGLwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,IAAK,IACbiB,WAAY,SACZC,cAAe,MACfe,OAAQ,CAAC,OAAO,QAChBd,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE10G,OAAQ,OACRjC,MAAOgnI,EACPpmI,gBAAiB,UAEjB81G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE10G,OAAQ,OACRjC,MAAO,OACP0B,aAAc,CAAC,gBAAgB,iBAC/B6E,MAAO,CAAC0E,WAAU,+BAAApE,OAAgCogI,EAAhC,iBAAApgI,OAA6DogI,EAA7D,oBAAApgI,OAA6FogI,EAA7F,iBAGtBvwB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACErwG,GAAI,EACJtG,MAAO,OACPiC,OAAQ,OACRhB,WAAY,SACZE,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAO30G,IAAK4sH,EAAW3sH,OAAQ,CAAC,QAAQ,YAGxCy0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACErwG,GAAI,EACJrF,WAAY,UAGA,QAAViQ,EACEwlG,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAADpoH,OAAAC,OAAA,GACMyK,EAAKpK,MADX,CAEE+Q,MAAOA,EACPtH,YAAaA,EACb0V,UAAW,CACTjd,KAAK,kBACLlC,MAAM,CACJ0D,SAAS0G,EAAKpK,MAAM+B,SAAW,EAAI,EACnC4B,aAAayG,EAAKpK,MAAM+B,SAAW,EAAI,GACvCqE,MAAM,CACJ/D,MAAM+H,EAAKpK,MAAMwB,MAAMC,OAAO4Z,UAC9B7Y,WAAW4H,EAAKpK,MAAM+B,SAAW,IAAM,IACvCU,SAAS2H,EAAKpK,MAAM+B,SAAW,OAAS,aAMhDw0G,EAAAr2G,EAAAC,cAACy0H,GAADl1H,OAAAC,OAAA,GACMyK,EAAKpK,MADX,CAEE0D,SAAU0G,EAAKpK,MAAM+B,SAAW,EAAI,EACpC4B,aAAcyG,EAAKpK,MAAM+B,SAAW,EAAI,GACxC2wH,aAAc,CACZrwH,MAAM+H,EAAKpK,MAAMwB,MAAMC,OAAO4Z,UAC9B7Y,WAAW4H,EAAKpK,MAAM+B,SAAW,IAAM,IACvCkJ,WAAWb,EAAKpK,MAAMwB,MAAM0J,MAAMC,UAClC1I,SAAS2H,EAAKpK,MAAM+B,SAAW,OAAS,gBAWvDqI,EAAKpK,MAAM+B,UACVw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,IAAMiB,WAAY,aAAcE,eAAgB,gBAOzEu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACV8N,SAAU,YAEV4oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,CAAC,IAAK,MACnB02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,IAAK,IACbkB,cAAe,OAGbrB,OAAOoE,KAAKqhI,GAAiBt/H,IAAI,SAACuhI,EAAgBL,GAChD,IAAMN,EAAiBtB,EAAgBiC,GACvC,OACE7wB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,EACJozG,GAAI,CAAC,EAAE,GACP1zH,eAAgB,WAChBnB,MAAO4mI,EAAe5mI,MACtB+G,IAAG,kBAAAF,OAAoBqgI,GACvBG,YAAW,aAAAxgI,OAAe0D,EAAKpK,MAAMwB,MAAMC,OAAOkF,UAElD4vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,UAEN+kI,UAUdrnI,KAAKC,MAAM+B,UACVw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,IAAMiB,WAAY,aAAcE,eAAgB,UAC3Du1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMh0G,WAAY,EAAGC,SAAU,cArddG,aCuFlBykI,8MAvFbvkI,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,mEACjC5H,KAAKkD,kJAIL,OACEszG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTi1H,GAAG,EACH90H,GAAG,CAAC,EAAE,GACNuG,GAAG,CAAC,EAAE,IAER7F,UAAU,EACVD,eAAe,EACfG,YAAaT,KAAKC,MAAMQ,aAExB+1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE10G,OAAQ,OACRhB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE12G,GAAI,CAAC,EAAE,IAGLC,KAAKC,MAAMmC,KACTo0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAMnC,KAAKC,MAAMmC,KACjBC,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,MACtCM,MAAOtC,KAAKC,MAAMsC,UAAYvC,KAAKC,MAAMsC,UAAY,WAErDvC,KAAKC,MAAMkB,OACbq1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE30G,IAAK9B,KAAKC,MAAMkB,MAChBrB,MAAOE,KAAKC,MAAM+B,SAAW,QAAU,QACvCD,OAAQ/B,KAAKC,MAAM+B,SAAW,QAAU,WAKhDw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,CAAC,EAAE,GACP1E,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,IAEZ1C,KAAKC,MAAMwmB,OAEd+vF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAENtC,KAAKC,MAAM2C,OAGhB4zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEv1G,MAAO,SACPoB,MAAO,WACPH,KAAM,qBACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,mBAlFhBa,aCuRnB0kI,8MApRb//H,MAAQ,CACNggI,QAAO,EACPC,eAAc,EACdC,oBAAoB,KACpBC,mCAAmC,QAIrC5kI,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAILlD,KAAK0H,gMAGkBC,EAAUC,2EACjC5H,KAAKkD,YAECmsB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClD+3H,EAAwBjgI,EAAUutC,iBAAmBl1C,KAAKC,MAAMi1C,gBAClE7lB,GAAkBu4G,IACpB5nI,KAAK0H,mRAKF1H,KAAKC,MAAM4P,SAAY7P,KAAKC,MAAMi1C,yDAC9B,aAGLyyF,EAAqC,KACnC3iH,EAAiBhlB,KAAK+C,cAAckf,qBACpC4lH,EAAsB7nI,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,kBAClEyyH,EAAgBI,EAAoB/1G,SAAW+1G,EAAoBx6E,kBAAkBn5B,SAASlP,EAAe5f,6CAG1GpF,KAAKgI,SAAS,CACnBw/H,QAAO,EACPC,2CAI8BznI,KAAK+C,cAAcmtC,oBAAoBlwC,KAAKC,MAAM4P,kBAA9E63H,WAIqBA,EAAoB1jI,OAAO,IACpD2jI,EAAqCD,EAAoB5hI,IAAK,SAACiL,GAC7D,IAAMrH,EAAcvG,EAAKJ,cAAciS,gBAAgB,CAAC,QAAQ,gBAAgB,QAAQ,kBAAkBjE,EAAGwe,cACzGu4G,EAAa,KACjB,OAAQ/2H,EAAGG,QACT,QACA,IAAK,UACH42H,EAAa,gBACf,MACA,IAAK,WACHA,EAAa,cACf,MACA,IAAK,OACHA,EAAa,OAuBjB,MApBoB,CAClBA,aACAj4G,OAAO9e,EAAGrG,MACVsG,MAAMD,EAAGwe,YACTre,OAAOH,EAAGG,OAAO+D,cACjBm+B,WAAWriC,EAAGqiC,WAAWn+B,cACzB9D,OAAOJ,EAAG2iC,SAAW,YAAc,UACnC7rC,KAAK1E,EAAKJ,cAAcmF,YAAY6I,EAAGlJ,MACvCkgI,WAAWh3H,EAAG2iC,SAAW,OAAS,YAClCs0F,gBAAgB,CACd1lI,MAAMa,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAauP,OAAOH,EAAGG,OAAOpE,eAC5D0iB,QAAQrsB,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAaC,SAASmP,EAAGG,OAAOpE,gBAElEwsB,IAAIn2B,EAAKJ,cAAc8iB,2BAA2B9U,EAAGlJ,KAAKkJ,EAAGqmB,WAC7DvhB,KAAK1S,EAAKJ,cAAcqP,YAAmC,IAAvBd,SAASP,EAAGQ,YAAiBiE,OAAO,gBACxEyyH,gBAAgB,CACd3lI,MAAMyO,EAAG2iC,SAAWvwC,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY3oB,EAAKlD,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO4a,SAE1H2iG,UAAUhlH,EAAYtH,MAAQe,EAAKJ,cAAciS,gBAAgB,CAAC,QAAQ,SAASjE,EAAGwe,YAAYta,cAAc,UAAtG,iBAAAtO,OAAmIoK,EAAGwe,YAAtI,YAQhBvvB,KAAKgI,SAAS,CACZw/H,QAAO,EACPC,gBACAC,sBACAC,2KAIK,IAAAt9H,EAAArK,KAEP,OAAKA,KAAKwH,MAAMggI,QAAWxnI,KAAKwH,MAAMigI,cAKpCjxB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKC,MAAMwmB,QAAWzmB,KAAKwH,MAAMmgI,oCAAsC3nI,KAAKwH,MAAMmgI,mCAAmC3jI,OAAO,GAAMhE,KAAKC,MAAM+I,WAC3IwtG,EAAAr2G,EAAAC,cAACwtH,EAAA,EACK5tH,KAAKC,MAAMu3G,WAEdx3G,KAAKC,MAAMwmB,OAKhBzmB,KAAKwH,MAAMmgI,oCAAsC3nI,KAAKwH,MAAMmgI,mCAAmC3jI,OAAO,EACpGwyG,EAAAr2G,EAAAC,cAACuuH,GAAA,EAADhvH,OAAAC,OAAA,CACEsoI,mBAAmB,EACnBznI,YAAa,SAACR,GAAD,OAAWoK,EAAKtH,cAAc04E,WAAWx7E,EAAMmgG,IAAI9mE,MAChE8+E,KAAM,CACJ,CACE3xF,MAAM,OACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEhjD,KAAK,SACLsC,KAAK,CAAC,eAER,CACEtC,KAAK,OACLsC,KAAK,CAAC,QACN5F,MAAM,CACJyF,GAAG,CAAC,EAAE,OAKd,CACE+gB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEhjD,KAAK,OACLsC,KAAK,CAAC,aAIZ,CACE4gB,MAAM,OACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEhjD,KAAK,OACLsC,KAAK,CAAC,WAIZ,CACE4gB,MAAM,SACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEhjD,KAAK,OACLsC,KAAK,CAAC,iBAIZ,CACE4gB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEhjD,KAAK,OACLoB,QAAO,EACPkB,KAAK,CAAC,cACN5F,MAAM,CACJoB,GAAG,EACHgB,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,UAGzC,CACEG,KAAK,SACL0D,KAAK,CAAC,UACN5F,MAAM,CACJoG,MAAM,CACJ48G,cAAc,kBAMxB,CACEt+G,QAAO,EACP8hB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEhjD,KAAK,SACLsC,KAAK,CAAC,UACN5F,MAAM,CACJ0D,SAAU,IAGd,CACExB,KAAK,YACLlC,MAAM,CACJyF,GAAG,MAKX,CACE+gB,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,QACLsC,KAAK,CAAC,aACN5F,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEwB,KAAK,OACLsC,KAAK,CAAC,cAKV7F,KAAKC,MAvIX,CAwIEu/F,KAAMx/F,KAAKwH,MAAMmgI,sCAEjB3nI,KAAKC,MAAM+I,UA/JZ,YAhH2BnG,aCorDzBslI,8MAnqDb3gI,MAAQ,CACNy1B,UAAU,KACVmD,gBAAgB,GAChBE,gBAAgB,GAChB4sF,iBAAiB,GACjBqG,gBAAgB,KAChBlyC,gBAAgB,KAChBsyC,iBAAgB,EAChByU,kBAAiB,EACjBC,mBAAmB,KACnBC,yBAAyB,KACzBC,+BAA+B,KAC/B1U,8BAA8B,UAIhC9wH,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,2DAILlD,KAAKyH,oBAAqB,sKAIpBzH,KAAKqvH,qMAGY1nH,EAAWC,kFAClC5H,KAAKkD,YAECmsB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClD24H,EAAyBp5H,KAAKC,UAAU1H,EAAUgI,mBAAqBP,KAAKC,UAAUrP,KAAKC,MAAM0P,kBACnG0f,GAAkBm5G,IACpBxoI,KAAKqI,aAAa,CAChBsrH,iBAAgB,GAChB,WACAxwH,EAAKksH,oMAKQvnH,wFAASC,iCAAS,KAC9B/H,KAAKyH,mDACKzH,KAAKgI,SAASF,EAASC,2EAE/B,kKAGwB8rH,GAC/B7zH,KAAKqI,aAAa,CAChBwrH,8NAKIlkH,EAAkB3P,KAAKC,MAAM0P,iBAAmB,IAGlD3P,KAAKwH,MAAMmsH,kBAAmB3zH,KAAKwH,MAAM4gI,2DACpC,0BAGHpoI,KAAKqI,aAAa,CACtB+/H,kBAAiB,eAIfpoI,KAAKC,MAAM4P,gCACP/H,EAAW,GACXkvC,EAAmBh3C,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,qBAGvEhV,KAAK+C,cAAc6M,gBAAgB5P,KAAKC,MAAM4P,QAAQmnC,EAAiB,SAASr3C,OAAOoE,KAAK4L,cAMlF+Q,QAAQqD,IAAI,CAEpB,GAEA/jB,KAAK+C,cAAcm9B,oBAAoBvwB,EAAgB3P,KAAKC,MAAM4P,kDANlEwxE,OACApkD,OAQFn1B,EAASm1B,UAAYA,EAErBn1B,EAASu5E,gBAAkBA,GAAmB1hF,OAAOoE,KAAKs9E,GAAiBr9E,OAAO,EAAIq9E,EAAkB,KAEpGv5E,EAASu5E,kBACXv5E,EAASygI,+BAAiC5oI,OAAOoE,KAAK+D,EAASu5E,iBAAiB38C,OAAQ,SAAC6jG,EAA+Bv3H,GACtH,IAAMy3H,EAAY3gI,EAASu5E,gBAAgBrwE,GACrCtH,EAAcW,EAAKtH,cAAciS,gBAAgB,CAAC,QAAQ,eAAe,QAAQ,kBAAkBhE,IACzG,GAAItH,EAAYo3B,WAAaz2B,EAAKpK,MAAMmT,iBAAiB,CACvD,OAAQq1H,EAAUt3H,QAChB,IAAK,UACHzH,EAAYq+H,WAAa,YACzBr+H,EAAYu+H,gBAAkB,CAC5B3lI,MAAM+H,EAAKpK,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO4a,SAEtD,MACA,IAAK,WACHriB,EAAYq+H,WAAa,OACzBr+H,EAAYu+H,gBAAkB,CAC5B3lI,MAAM+H,EAAKpK,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAMxDpiB,EAAYsH,MAAQA,EACpBtH,EAAYyH,OAASs3H,EAAUt3H,OAC/BzH,EAAYs5B,UAAYylG,EAAUrmD,cAClC14E,EAAYg/H,WAAaD,EAAUtmD,aACnComD,EAA+B7+H,EAAYuyB,WAAavyB,EAE1D,OAAO6+H,GACP,KAGJzgI,EAASs4B,gBAAkB,GAC3Bt4B,EAASw4B,gBAAkB,IAEvBrD,0BACImD,EAAkBzgC,OAAOoE,KAAKk5B,EAAUltB,eAAee,OAAO,SAAAE,GAAK,OAAM3G,EAAKtH,cAAckO,MAAMgsB,EAAUltB,cAAciB,GAAO6C,kBAAkBgB,GAAG,KAE5J/M,EAASs4B,gBAAkBA,EAErBjtB,EAAyC,SAAhCnT,KAAKC,MAAMmT,iBAEtB+pB,EAASn9B,KAAK+C,cAAckO,MAAM,GAElCqsB,EAAkBt9B,KAAK+C,cAAckO,MAAM,aAGzCjR,KAAK+C,cAAckN,aAAamwB,EAAhC,eAAAzf,EAAAhhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAgD,SAAAiD,EAAOtC,GAAP,IAAAtH,EAAAk0B,EAAAC,EAAAoD,EAAAzwB,EAAA4wB,EAAA7C,EAAA4C,EAAAD,EAAA,OAAAzQ,EAAAtwB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAC9ClH,EAAciG,EAAgBqB,GADgBwC,EAAA5C,KAAA,EAO1C8P,QAAQqD,IAAI,CACpB1Z,EAAKtH,cAAcu+B,aAAa53B,GAEhCW,EAAKtH,cAAcw+B,mBAAmB73B,EAAYW,EAAKpK,MAAM4P,WAVX,cAAA+tB,EAAApqB,EAAAG,KAAAkqB,EAAAl+B,OAAAsyB,EAAA,EAAAtyB,CAAAi+B,EAAA,GAIlDqD,EAJkDpD,EAAA,GAMlDrtB,EANkDqtB,EAAA,GAAArqB,EAAA5C,KAAA,EAatBvG,EAAKtH,cAAcsvB,oBAAoB7hB,EAAWQ,EAAMtH,EAAYyJ,GAb9C,OAa9CiuB,EAb8C5tB,EAAAG,KAe9C4qB,EAAetB,EAAUltB,cAAciB,GAAOutB,aAC9C4C,EAAc5C,EAAatb,IAAIga,EAAUG,eACzC8D,EAAWD,EAAUO,SAAWn3B,EAAKtH,cAAckO,MAAMgwB,EAAUO,QAAQl+B,QAAU+G,EAAKtH,cAAckO,MAAMgwB,EAAUO,QAAUn3B,EAAKtH,cAAckO,MAAM,IAEnJ3N,UACZ65B,EAASA,EAAO1rB,KAAKyvB,EAASj0B,MAAMk0B,KAQlCC,IACF9D,EAAkBA,EAAgB7rB,KAAK2vB,IA7BW,yBAAA5tB,EAAAzB,SAAAuB,EAAAtT,SAAhD,gBAAA4T,GAAA,OAAA+M,EAAA1O,MAAAjS,KAAAkS,YAAA,6BAwC8BlS,KAAK+C,cAAck1E,6BAA6Bj4E,KAAKC,MAAM4P,QAAQF,EAAgB,sBAAjH09G,mBAC6BrtH,KAAK+C,cAAcijG,yBAAyBhmG,KAAKC,MAAM4P,QAAQF,EAAgB,cAA5Gy9G,SACAK,EAA+BL,EAAuBztH,OAAOoE,KAAKqpH,GAAsBtnH,IAAK,SAAAgiC,GACjG,IAAMl2B,EAAUw7G,EAAqBtlF,GACrC,OAAIl2B,EAAQiD,GAAG,GACb,IAAAlO,OAAWiL,EAAQ1E,QAAQ,GAA3B,KAAAvG,OAAiCmhC,GAE1B,OAERh3B,OAAO,SAAAtG,GAAC,OAAW,OAANA,IAAe,KAE/B1C,EAASq1B,OAASA,EAElBr1B,EAASw4B,gBAAkBrD,EAAUqD,gBACrCx4B,EAASulH,sBAAwBA,EACjCvlH,EAAS2lH,6BAA+BA,UAG1C3lH,EAAS6rH,iBAAkB,EAC3B7rH,EAASsgI,kBAAmB,EAEtB7U,EAAkB5zH,OAAOoE,KAAK4L,GAAiBmB,OAAO,SAAAE,GAAK,OAAMlJ,EAASs4B,gBAAgBlM,SAASljB,KAAWrR,OAAOoE,KAAK+D,EAASw4B,iBAAiBpM,SAASljB,KACnKlJ,EAASyrH,gBAAkBA,EAG3BvzH,KAAKqI,aAAaP,2BAGlB9H,KAAKqI,aAAa,CAChBi4B,gBAAgB,GAChBF,gBAAgB,GAChBuzF,iBAAgB,EAChByU,kBAAiB,EACjB7U,gBAAgB5zH,OAAOoE,KAAK4L,yIAK1B,IAAAmtG,EAAA98G,KACAqiH,EAAwC,WAA7BriH,KAAKC,MAAMqiH,cACtBt9F,EAAiBhlB,KAAK+C,cAAckf,qBACpCkvD,EAAYnxE,KAAK+C,cAAciS,gBAAgB,CAAC,cAChD2zH,EAAU3oI,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,YACzD4zH,EAAe5oI,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,iBAC9DosE,EAAqBphF,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,iBAEjE6yH,EAAsB7nI,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,kBAClE6zH,EAAe7oI,KAAK+C,cAAciS,gBAAgB,CAAC,aAAahV,KAAKC,MAAMmT,iBAAiB,UAC5F01H,EAAc,CAAC,WAAW,cAAc,aAAah4H,OAAQ,SAAAi4H,GACjE,IAAMC,EAAalsB,EAAK/5G,cAAciS,gBAAgB,CAAC,QAAQ+zH,IAC/D,OAAOC,EAAWl3G,WAAak3G,EAAW37E,kBAAkBrpD,QAAUglI,EAAW37E,kBAAkBn5B,SAAS5iB,SAAS0T,EAAe5f,QAGtI,OACEoxG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACE9/G,GAAI,GAEH+6H,EAHH,aAqDG7oI,KAAKwH,MAAMmsH,gBAiBVnd,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGLE,KAAKC,MAAM4P,SAAW7P,KAAKwH,MAAM44B,gBAAgBp8B,OAAO,EACtDwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACP8I,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,CAAC,EAAE,GACP70H,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACNiO,GAAG,CAAC,EAAE,GACNrF,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAM21B,OACTq5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEc,WAAY,EACZ90G,WAAY,CAAC,EAAE,GACfH,MAAO,YACP4I,WAAY,UACZxI,SAAU,CAAC,EAAE,SACboG,wBAAyB,CAAEC,OAAQ/I,KAAKwH,MAAM21B,OAAOjwB,QAAQ,GAAG,sBAIlEspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,SAGjBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,WAOAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE1nF,UAAW,SACXC,QAAShvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,aAExDwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,mBAOnBk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,CAAC,EAAE,GACP70H,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACNiO,GAAG,CAAC,EAAE,GACNrF,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMy1B,UACTu5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACw0H,GAADj1H,OAAAC,OAAA,CACE+D,SAAU,GACN3D,KAAKC,MAFX,CAGEg9B,UAAWj9B,KAAKwH,MAAMy1B,aAExBu5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UA2BhBu1G,EAAAr2G,EAAAC,cAACy0H,GAADl1H,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkE,KAAM,KACNR,SAAU,EACVgvH,aAAc,CACZjwH,SAAS,GACTD,WAAW,IACXH,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDmR,UAAWj9B,KAAKwH,MAAMy1B,eAK5Bu5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,SAGjBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,iBAQEtC,KAAKwH,MAAM6lH,uBACT7W,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE1nF,UAAW,SACXC,QAAS,8DAA8DhvB,KAAKwH,MAAM6lH,uBAAyBrtH,KAAKwH,MAAM6lH,sBAAsBx4G,GAAG,GAAxE,KAAAlO,OAAkF3G,KAAKwH,MAAMimH,6BAA6BlgH,KAAK,OAA/H,KAA2I,KAElNipG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,mBASvBk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,EAAE,GACZkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,CAAC,EAAE,GACNiO,GAAG,CAAC,EAAE,GACNrF,QAAQ,OACR1H,WAAW,SACXgB,OAAO,CAAC,OAAO,SACfd,eAAe,WAGjBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMy1B,UACTu5E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEc,WAAY,EACZ90G,WAAY,CAAC,EAAE,GACfH,MAAO,YACP4I,WAAY,UACZxI,SAAU,CAAC,EAAE,SACboG,wBAAyB,CAAEC,OAAQ,mBAAmB/I,KAAKwH,MAAMy1B,UAAUM,kBAAkBrwB,QAAQ,GAAG,sBAI1GspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,SAGjBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAHT,gBAOAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE1nF,UAAW,SACXC,QAAShvB,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,qBAExDwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,oBAQrBk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPsF,GAAI,mBACJnE,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,CAAC,EAAE,MACVkB,cAAe,SACfoE,GAAI,yBAEJoxG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACElwF,MAAO,cACP+wF,WAAcx3G,KAAKC,MAAM+B,SAIrB,KAJgC,CAClCqE,MAAM,CACJ6nB,UAAU,UAIdsoF,EAAAr2G,EAAAC,cAAC6oI,GAADtpI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4Z,SAAU,6BAIhB28F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,MACVkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,KACEH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,CAAC,EAAE,GACPxhB,GAAI,CAAC,EAAE,GACP20H,UAAW,SACX1zH,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,IACVkB,cAAe,SACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CACEnrH,WAAY,EACZC,SAAU,CAAC,EAAE,GACbmG,UAAW,QAHb,gBAQF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACP9I,MAAO,CAAC,EAAE,IACVkB,cAAe,SACfC,eAAgB,YAEhBu1G,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAAD,CACEW,WAAY,CACVnZ,EAAE,EACFxB,GAAG,GAELsa,aACE,CAAC3P,MAAM,OAAO8C,MAAM,MAEtBrL,KAAM,mBACNgY,QAAS,CACP,CAACzP,MAAM,OAAO8C,MAAM,MACpB,CAAC9C,MAAM,QAAQ8C,MAAM,MACrB,CAAC9C,MAAM,SAAS8C,MAAM,MACtB,CAAC9C,MAAM,SAAS8C,MAAM,MACtB,CAAC9C,MAAM,MAAM8C,MAAM,QAErB6O,SAAW,SAAA7R,GAAC,OAAIsyG,EAAKkY,iCAAiCxqH,QAI5DgsG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,CAAC,EAAE,GACPgvH,UAAW,SACXzzH,eAAgB,SAChBmE,GAAI,yBAEJoxG,EAAAr2G,EAAAC,cAACyO,GAAA,EAADlP,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqP,cAAe,GACfuK,SAAU,wBACVC,eAAgB,wBAChB3K,mBAAoBnP,KAAKwH,MAAMqsH,8BAC/Bn+G,iBAAkB1V,KAAK+C,cAAcmwD,oBAAoB,MAAM,WAQ3EsjD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJlN,GAAI,OACJd,MAAO,CAAC,EAAE,IACV40H,UAAW,SACXzzH,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbmG,UAAW,UAGT7I,KAAKC,MAAM+B,SACThC,KAAK+C,cAAciS,gBAAgB,CAAC,aAAahV,KAAKC,MAAMmT,iBAAiB,cAE7EpT,KAAK+C,cAAciS,gBAAgB,CAAC,aAAahV,KAAKC,MAAMmT,iBAAiB,gBAOtFivG,GAAYriH,KAAKwH,MAAM44B,gBAAgBp8B,OAAO,GAAKhE,KAAKC,MAAM4P,SAAWi5H,EAAY9kI,QAAQ,GAC5FwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPsF,GAAI,QACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,UAOF+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,CAAC,SAAS,QAGvB,CAAC,WAAW,cAAc,aAAa8E,IAAK,SAACijI,EAASG,GACpD,IAAMF,EAAalsB,EAAK/5G,cAAciS,gBAAgB,CAAC,QAAQ+zH,IAC/D,OACEvyB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5vG,IAAG,QAAAF,OAAUuiI,GACbp7H,GAAIo7H,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1BvU,GAAIuU,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1BppI,MAAO,CAAC,EAAE,EAAEgpI,EAAY9kI,SAExBwyG,EAAAr2G,EAAAC,cAAC+oI,GAADxpI,OAAAC,OAAA,GACMk9G,EAAK78G,MADX,CAEEmC,KAAM4mI,EAAW5mI,KACjBQ,KAAMomI,EAAW1qB,KACjBn9G,MAAO6nI,EAAW7nI,MAClBslB,MAAOuiH,EAAWx7H,MAClB/M,YAAc,SAAAqG,GAAC,OAAIg2G,EAAK78G,MAAM8G,YAAX,SAAAJ,OAAgCqiI,EAAWnrD,iBA8B9E79E,KAAKwH,MAAM65E,iBACTm1B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP1I,GAAI,mBACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9sH,GAAI,CAAC,EAAE,IAAd,oBACA01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACgpI,GAAA,EAADzpI,OAAAC,OAAA,CACE0P,cAAe3P,OAAOoE,KAAK/D,KAAKwH,MAAM+gI,gCACtCnwB,KAAM,CACJ,CACE3xF,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,GAAI,KAEbymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACEwC,QAAO,EACP8hB,MAAM,YACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,SACLoB,KAAK,SACLsC,KAAK,CAAC,aACN5F,MAAM,CACJ0D,SAAU,IAGd,CACExB,KAAK,YACLlC,MAAM,CACJyF,GAAG,MAKX,CACE+gB,MAAM,aACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,SACLoB,KAAK,SACLsC,KAAK,CAAC,cACN5F,MAAM,CACJ0D,SAAU,IAGd,CACEJ,KAAK,OACLpB,KAAK,SACL0D,KAAK,CAAC,SACN5F,MAAM,CACJyF,GAAG,MAKX,CACE+gB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEhjD,KAAK,OACLoB,QAAO,EACPxC,KAAK,SACL0D,KAAK,CAAC,cACN5F,MAAM,CACJoB,GAAG,EACHgB,KAAKrC,KAAKC,MAAM+B,SAAW,QAAU,UAGzC,CACEG,KAAK,SACL0D,KAAK,CAAC,UACN5F,MAAM,CACJoG,MAAM,CACJ48G,cAAc,kBAMxB,CACEx8F,MAAM,GACN8xF,kBAAiB,EACjB5zG,OAA8B,OAAvB3E,KAAKC,MAAM4P,QAClB5P,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdue,YAAY,CACVve,MAAM,GAERymD,OAAO,CACL,CACEpkD,KAAK,SACLqL,MAAM,QACNkrG,UAAU,CACRxxG,SAAS,SAACjH,GAAD,MAAyC,YAA7BA,EAAMyJ,YAAYyH,SAEzClR,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbgN,UAAU,KACVvH,UAAU,UACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAW68G,EAAK78G,MAAM8G,YAAX,SAAAJ,OAAgCy6E,EAAmBvD,MAAnD,KAAAl3E,OAA4D1G,EAAMyJ,YAAYsH,eAM3GhR,KAAKC,MAjIX,CAkIE0P,gBAAiB3P,KAAKwH,MAAM+gI,oCAMtC/xB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPsF,GAAI,mBACJpE,cAAe,SACf8M,GAAK9N,KAAKwH,MAAM44B,gBAAgBp8B,OAAa,EAAJ,IAGtChE,KAAKwH,MAAM44B,gBAAgBp8B,OAAO,GAAKrE,OAAOoE,KAAK/D,KAAKwH,MAAM84B,iBAAiBt8B,OAAO,GAAKhE,KAAKwH,MAAM+rH,gBAAgBvvH,OAAO,IAC5HwyG,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9sH,GAAI,CAAC,EAAE,IAAd,oBAEJ01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,EAAGkB,cAAe,UAE3BrB,OAAOoE,KAAK/D,KAAKwH,MAAM84B,iBAAiBt8B,OAAO,GAC/CwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP1I,GAAI,iBACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,sBAOF+zG,EAAAr2G,EAAAC,cAACgpI,GAAA,EAADzpI,OAAAC,OAAA,CACE0P,cAAe3P,OAAOoE,KAAK/D,KAAKwH,MAAM84B,iBACtC7/B,YAAa,SAACR,GAAD,OAAW68G,EAAK78G,MAAM0f,YAAY1f,EAAM+Q,QACrDonG,KAAM,CACJ,CACE3xF,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACEskB,MAAM,OACN8xF,kBAAiB,EACjB5zG,OAA8B,OAAvB3E,KAAKC,MAAM4P,QAClB5P,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACE8iB,MAAM,MACN63F,KAAKqqB,EACL1oI,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdue,YAAY,CACVrd,cAAc,SACdD,WAAW,cAEbwlD,OAAO,CACL,CACEpkD,KAAK,MACL8tH,aAAY,GAEd,CACE/hH,YAAW,EACX/L,KAAK,mBACLlC,MAAM,CACJ0D,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,EACnCU,SAAS1C,KAAKC,MAAM+B,SAAW,MAAQ,GAEzCw2G,QAAkC,WAA1BxzF,EAAe9C,YAI7B,CACEuE,MAAM,UACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,YAIX,CACEskB,MAAM,UACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdue,YAAY,CACVve,MAAM,EACN60H,GAAG,CAAC,EAAE,IAERpuE,OAAO,CACL,CACEpkD,KAAK,qBAIX,CACEwC,QAAO,EACP8hB,MAAM,UACN63F,KAAKsqB,EACL3oI,MAAM,CACJH,MAAM,CAAC,IAAK,KACZ+I,UAAU,UAEZ09C,OAAO,CACL,CACEpkD,KAAK,eAIX,CACEskB,MAAM,GACN8xF,kBAAiB,EACjB5zG,OAA8B,OAAvB3E,KAAKC,MAAM4P,QAClB5P,MAAM,CACJH,MAAM,CAAyB,OAAvBE,KAAKC,MAAM4P,QAAmB,IAAO,EAAG,MAElDwO,YAAY,CACVve,MAAM,GAERymD,OAAO,CACL,CACEpkD,KAAK,SACLqL,MAAO,UACPvN,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbgN,UAAU,KACVvH,UAAU,UACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAW68G,EAAK78G,MAAM0f,YAAY1f,EAAM+Q,cAM1DhR,KAAKC,SAKfD,KAAKwH,MAAM44B,gBAAgBp8B,OAAO,GAChCwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAK9N,KAAKwH,MAAM+rH,gBAAgBvvH,OAAO,EAAI,CAAC,EAAE,GAAK,EACnDlE,MAAO,EACPsF,GAAI,mBACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOF+zG,EAAAr2G,EAAAC,cAACgpI,GAAA,EAADzpI,OAAAC,OAAA,CACE0P,cAAetP,KAAKwH,MAAM44B,gBAC1B3/B,YAAa,SAACR,GAAD,OAAW68G,EAAK78G,MAAM0f,YAAY1f,EAAM+Q,QACrDonG,KAAM,CACJ,CACE3xF,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACEskB,MAAM,OACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACE8iB,MAAM,MACN63F,KAAKqqB,EACL1oI,MAAM,CACJH,MAAM,CAAC,GAAK,MAEdue,YAAY,CACVrd,cAAc,SACdD,WAAW,cAEbwlD,OAAO,CACL,CACEpkD,KAAK,MACL8tH,aAAY,GAEd,CACE9tH,KAAK,mBACL+L,YAAW,EACXjO,MAAM,CACJ0D,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,EACnCU,SAAS1C,KAAKC,MAAM+B,SAAW,MAAQ,GAEzCw2G,QAAkC,WAA1BxzF,EAAe9C,YAI7B,CACEuE,MAAM,YACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,gBAIX,CACEwC,QAAO,EACP8hB,MAAM,UACN63F,KAAKsqB,EACL3oI,MAAM,CACJH,MAAM,CAAC,IAAK,KACZ+I,UAAU,UAEZ09C,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACEgB,QAAO,EACP8hB,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZ+I,UAAU,UAEZwV,YAAY,CACVtd,WAAW,SACXC,cAAc,UAEhBulD,OAAO,CACL,CACEpkD,KAAK,WACLlC,MAAM,CACJ0D,SAAS,IAGb,CACExB,KAAK,eACL+L,YAAW,EACXm7H,eAAc,EACdppI,MAAM,CACJyC,SAAS,EACTiB,SAAS,MAkBjB,CACE8iB,MAAM,GACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAERue,YAAY,CACVve,MAAM,GAERymD,OAAO,CACL,CACEpkD,KAAK,SACLqL,MAAM,SACNvN,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbgN,UAAU,KACVvH,UAAU,SACV5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAW68G,EAAK78G,MAAM0f,YAAY1f,EAAM+Q,cAM1DhR,KAAKC,SAKbD,KAAKwH,MAAM+rH,gBAAgBvvH,OAAO,GAClCwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMrxG,GAAG,mBAAmBtF,MAAO,EAAGkB,cAAe,UACnDw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOF+zG,EAAAr2G,EAAAC,cAACgpI,GAAA,EAADzpI,OAAAC,OAAA,CACE0P,cAAetP,KAAKwH,MAAM+rH,gBAC1B9yH,YAAa,SAACR,GAAD,OAAW68G,EAAK78G,MAAM0f,YAAY1f,EAAM+Q,QACrDonG,KAAM,CACJ,CACE3xF,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACEwC,QAAO,EACP8hB,MAAM,OACN8xF,kBAAiB,EACjBt4G,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACE8iB,MAAM,MACN63F,KAAKqqB,EACL1oI,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdue,YAAY,CACVrd,cAAc,SACdD,WAAW,cAEbwlD,OAAO,CACL,CACEpkD,KAAK,MACL8tH,aAAY,GAEd,CACE9tH,KAAK,mBACL+L,YAAW,EACXjO,MAAM,CACJ0D,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,EACnCU,SAAS1C,KAAKC,MAAM+B,SAAW,MAAQ,GAEzCw2G,QAAkC,WAA1BxzF,EAAe9C,YAI7B,CACEuE,MAAM,UACN8xF,kBAAiB,EACjB5zG,OAA8B,OAAvB3E,KAAKC,MAAM4P,QAClByuG,KAAKsqB,EACL3oI,MAAM,CACJH,MAAM,CAAC,IAAK,KACZ+I,UAAU,UAEZ09C,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJ0D,SAAS,MAKjB,CACE8iB,MAAM,gBACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAERue,YAAY,CACVve,MAAM,EACN60H,GAAG,CAAC,EAAE,IAERpuE,OAAO,CACL,CACEpkD,KAAK,WACLkE,MAAM,CACJE,SAAS,cAKjB,CACEkgB,MAAM,GACN8xF,kBAAiB,EACjB5zG,OAA8B,OAAvB3E,KAAKC,MAAM4P,QAClB5P,MAAM,CACJH,MAAM,CAAyB,OAAvBE,KAAKC,MAAM4P,QAAmB,IAAO,EAAI,MAEnDwO,YAAY,CACVve,MAAM,GAERymD,OAAO,CACL,CACEpkD,KAAK,SACLqL,MAAO,SAACvN,GACN,OAAON,OAAOoE,KAAK+4G,EAAKt1G,MAAM84B,iBAAiBpM,SAASj0B,EAAM+Q,OAAS,UAAY,WAErF/Q,MAAM,CACJH,MAAM,EACN4C,SAAS,EACTD,WAAW,EACXV,OAAO,OACPP,aAAa,EACbgN,UAAU,KACVnM,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtCvB,YAAY,SAACR,GAAD,OAAW68G,EAAK78G,MAAM0f,YAAY1f,EAAM+Q,SAEtD0nG,UAAU,CACRzxG,UAAW,SAAChH,GACV,OAAON,OAAOoE,KAAK+4G,EAAKt1G,MAAM84B,iBAAiBpM,SAASj0B,EAAM+Q,OAAS,UAAY,iBAO3FhR,KAAKC,WAOjBD,KAAKwH,MAAM44B,gBAAgBp8B,OAAO,GAChCwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPsF,GAAI,gBACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9sH,GAAI,CAAC,EAAE,IAAd,iBACA01G,EAAAr2G,EAAAC,cAACgpI,GAAA,EAADzpI,OAAAC,OAAA,CACE0P,cAAe3P,OAAOoE,KAAK/D,KAAK+C,cAAcy+F,uBAC9C4W,KAAM,CACJ,CACE3xF,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,GAAI,MAEbymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,WAGpB,CACEI,KAAK,eAIX,CACEwC,QAAO,EACP8hB,MAAM,UACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,eACLlC,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEykB,MAAM,aACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,8BACpD/U,MAAM,CACJH,MAAM,CAAC,IAAK,IACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,oBACLlC,MAAM,CACJ0D,SAAU3D,KAAKC,MAAM+B,SAAW,EAAI,MAK5C,CACEykB,MAAM,eACN63F,KAAKt+G,KAAK+C,cAAciS,gBAAgB,CAAC,WAAW,0BACpD/U,MAAM,CACJH,MAAM,CAAC,IAAK,KAEdymD,OAAO,CACL,CACEpkD,KAAK,wBACLlC,MAAM,CACJ0D,SAAS,QAgDf3D,KAAKC,MA9GX,CA+GE0P,gBAAiBwhE,MAKvBnxE,KAAKwH,MAAM44B,gBAAgBp8B,OAAO,GAChCwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPsF,GAAG,sBACHpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9sH,GAAI,CAAC,EAAE,IAAd,sBACA01G,EAAAr2G,EAAAC,cAACkpI,GAAD3pI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqP,cAAetP,KAAKwH,MAAM44B,oBAKhCpgC,KAAKC,MAAM4P,SAAWg4H,EAAoB/1G,SAAW+1G,EAAoBx6E,kBAAkBn5B,SAASlP,EAAe5f,KACjHoxG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,SACfoE,GAAI,wBAEJoxG,EAAAr2G,EAAAC,cAACmpI,GAAD5pI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEwmB,MAAO,8BACP+wF,WAAY,CACV12G,GAAG,OAOXd,KAAKC,MAAM4P,SAAW7P,KAAKwH,MAAM44B,gBAAgBp8B,OAAO,GACtDwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACPhO,MAAO,EACPsF,GAAI,eACJpE,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwtH,EAAA,EAAD,CAAO9sH,GAAI,CAAC,EAAE,IAAd,gBACA01G,EAAAr2G,EAAAC,cAACqvH,EAAA,EAAD9vH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEqP,cAAe,GACf8oG,KAAM,CACJ,CACE3xF,MAAOzmB,KAAKC,MAAM+B,SAAW,GAAK,OAClC/B,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,OACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEc,KAAK,OACLwC,QAAO,KAIb,CACE8hB,MAAM,SACN9hB,QAAO,EACP1E,MAAM,CACJH,MAAM,KAERymD,OAAO,CACL,CACEpkD,KAAK,YAIX,CACEskB,MAAM,OACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEpkD,KAAK,UAIX,CACEskB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,KACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,aACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,KAGV,CACEsD,QAAO,EACPxC,KAAK,YAIX,CACEskB,MAAM,SACNxmB,MAAM,CACJH,MAAM,KAERymD,OAAO,CACL,CACEpkD,KAAK,YAIX,CACEskB,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,IACZmB,eAAe,CAAC,SAAS,eAE3BslD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJoB,GAAG,CAAC,EAAE,GACNU,OAAO,CAAC,QAAQ,WAGpB,CACE4C,QAAO,EACPxC,KAAK,qBAz2CvBq0G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACE3kH,UAAW,CACTuyH,SAAS,EACTzyH,WAAW,GAEb4iB,YAAa,CACXvX,GAAG,EACHzL,KAAK,QAEPyB,UAAW,CACToqB,UAAU,OACVltB,cAAc,UAEhB4B,KAAM,iCAzTOC,oDCwwCZ2mI,8MA/vCbhiI,MAAQ,CACNiiI,UAAS,EACTvnD,YAAY,GACZwnD,YAAW,EACXx4H,OAAO,UACPkxE,cAAc,GACd14E,YAAY,KACZqT,WAAW,CACT+B,QAAQ,CACN9B,OAAO,KACPC,SAAQ,GAEV+iE,MAAM,CACJhjE,OAAO,KACPC,SAAQ,IAGZ0sH,WAAU,EACVxnD,aAAa,GACbE,cAAc,KACd+9B,eAAc,EACdwpB,cAAa,EACbC,cAAa,EACbrgI,cAAc,KACd62G,eAAc,EACd3+B,eAAe,KACfooD,gBAAe,EACfC,gBAAe,EACfp6H,gBAAgB,KAChByD,iBAAiB,KACjB27G,iBAAgB,EAChBib,kBAAiB,EACjBtpG,kBAAiB,EACjBupG,oBAAmB,EACnB31D,oBAAoB,KACpB9gD,oBAAoB,KACpB02G,qBAAoB,EACpBC,2BAA0B,EAC1B7U,2BAA2B,QAI7BvyH,cAAgB,OA+ZhB62H,UAAY,SAAC1oH,GACX,GAAe,OAAXA,GAAmB,CAAC,UAAU,UAAUgjB,SAAShjB,EAAOpE,eAAe,CAEzE5H,EAAK8C,SAAS,CACZkJ,SACA+4H,oBAHyB,QAc/BG,yBAA2B,SAAC1pG,GAC1Bx7B,EAAK8C,SAAS,CACZ04B,wBAIJ2pG,kBAAoB,SAACt5H,GACnB7L,EAAKolI,aAAY,+EAnbbtqI,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKuqI,sMAGkB5iI,EAAUC,sFACjC5H,KAAKkD,YAEoByE,EAAUk9G,UAAUC,SAAW9kH,KAAKC,MAAM4kH,UAAUC,QAE3E9kH,KAAKgI,SAAS,CACZ+mH,iBAAgB,GADlBpvH,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAEE,SAAAwQ,IAAA,OAAA4P,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cAAAoQ,EAAApQ,KAAA,EACMzN,EAAKwyH,aADX,wBAAA30G,EAAAjP,SAAA8O,EAAA7gB,UAK4B4H,EAAUwL,mBAAqBpT,KAAKwH,MAAM4L,mBAElE5J,EAAgB7J,OAAOoE,KAAK/D,KAAKwH,MAAMmI,iBAAiB,GAC9D3P,KAAK67G,YAAYryG,IAGbyQ,EAAuBrS,EAAU4B,gBAAkBxJ,KAAKwH,MAAMgC,cAC9DghI,EAA0B5iI,EAAUoiI,mBAAqBhqI,KAAKwH,MAAMwiI,iBACpErT,EAA0B/uH,EAAUuiI,4BAA8BnqI,KAAKwH,MAAM2iI,2BAC/ElwH,GAAwB08G,GAA2B6T,IACrDxqI,KAAKsqI,6QAOS,EAEVG,EAAkB,SAAC15H,EAAGmM,GAC1B,IAAMulC,EAA4B,YAAd1xC,EAAGI,OAGjBgM,EAAY,CAChBI,YAAa,UACbH,cAAe,gBAGbF,IACFC,EAAUE,WAAahT,EAAKtH,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrB9G,EAAKtH,cAAc2a,yBAAyBP,GAG9C9S,EAAKrC,SAAS,SAACJ,GAAD,MAAgB,CAC5BoiI,iBAAiBvnF,EACjB1lC,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAER+B,QAAQ,CACN9B,OAAO,KACPC,SAAQ,SAMVytH,EAAyB,SAAC35H,GAC9B,IAAMiM,EAASjM,EAAG6M,gBAClBvT,EAAKrC,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAER+B,QAAQnf,OAAAw4B,EAAA,EAAAx4B,CAAA,GACHiI,EAAUmV,WAAW+B,QADnB,CAEL9B,iBAMRhd,KAAKC,MAAMie,0BAA0Ble,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAM,eAAgB,EAAC,GAAO,KAAMsoI,EAAiBC,GAE3I1qI,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAER+B,QAAQnf,OAAAw4B,EAAA,EAAAx4B,CAAA,GACHiI,EAAUmV,WAAW+B,QADnB,CAEL7B,SApDU,oUA0DAgtH,kCAEV51C,EAAwBr0F,KAAKwH,MAAM8sE,oBAAoBt6C,2BAEvDtZ,QAAQqD,IAAI,CAChB/jB,KAAKC,MAAMqnC,aAAa+sD,EAAsBlyF,KAAKkyF,EAAsBxnF,QAAQwnF,EAAsB9sD,KACvGvnC,KAAKC,MAAMqnC,aAAatnC,KAAKwH,MAAMkC,YAAYvH,KAAKnC,KAAKwH,MAAMkC,YAAYmD,QAAQ7M,KAAKwH,MAAMkC,YAAY69B,8BAOlG7mB,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAc69E,4BAA4ByT,EAAsBxnF,SACrE7M,KAAK+C,cAAcguB,oBAAoB/wB,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAK,aAC7FnC,KAAK+C,cAAcmhE,mBAAmBlkE,KAAKwH,MAAMkC,YAAYvH,KAAKkyF,EAAsBxnF,QAAQ7M,KAAKC,MAAM4P,8CAN3GiyE,OACAJ,OACAyoD,OAQER,GAAY,GACXQ,GAA6B91C,EAAsBn1D,WAAwD,IAA3Cm1D,EAAsBn1D,UAAUl7B,SAC7F2mI,EAAet2C,EAAsBn1D,UAAU,GACrDyqG,EAA8C,qBAA3BgB,EAAahB,WAA4BgB,EAAahB,UACnE5nE,EAAc/hE,KAAK+C,cAAciS,gBAAgB,CAAC,SAAShV,KAAKwH,MAAMkC,YAAYvH,KAAK,gBACvFyoI,EAAiB5qI,KAAK+C,cAAco0B,kBAAkBn3B,KAAKwH,MAAMkC,YAAYvH,MACnFwnI,EAAYA,GAAaiB,KAAoB7oE,QAAuD5zC,IAAxCy8G,EAAezxF,QAAQ4oB,KAG/Ej6D,EAAW,GACXo6E,EAAc,GACdC,EAAe,GACfC,EAAgB,GAClB0nD,GAAiB,EAErBpoD,EAAiBA,GAAkB,EAC1BC,EAAa,eAAGA,GAAcrwE,SAASowE,sCAKpChhE,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAcguB,oBAAoB/wB,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAK,cAAc,CAACw/E,IAC5G3hF,KAAK+C,cAAcguB,oBAAoB/wB,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAK,sBAAsB,CAACw/E,IACpH3hF,KAAK+C,cAAcguB,oBAAoB/wB,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAK,gBAAgB,CAACnC,KAAKC,MAAM4P,QAAQ8xE,0CANjII,OACAC,OACAC,OAMEF,GAA6B,OAAfA,IAChBG,EAAYP,GAAc3hF,KAAK+C,cAAc0R,iBAAiBstE,EAAW/hF,KAAKwH,MAAMkC,YAAY/F,WAE7E,OAAjBs+E,IACFD,EAAchiF,KAAK+C,cAAc0R,iBAAiButE,EAAY,KAC9DC,EAAejiF,KAAK+C,cAAc0R,iBAAiBwtE,EAAajiF,KAAKwH,MAAMkC,YAAY/F,WACtEkR,GAAG,KAClButE,EAAcT,GAAcM,EAE5BE,EAAaR,GAAcM,EAAah1E,MAAM+0E,GAAa/+D,IAAIi/D,EAAYP,IACvEQ,EAAaR,GAAY9sE,GAAGmtE,KAC9BG,EAAaR,GAAcK,GAGzBL,EAAaD,IACfooD,GAAiB,aAzByCnoD,4BA+BlE75E,EAASs6E,cAAgBA,EAEnBwnD,EAAgBxnD,GAAiBziF,OAAOoE,KAAKq+E,GAAep+E,OAAO,EAEnEq+E,EAAgBP,GAAmBA,EAAgB99E,OAAS89E,EAAgB,GAAK,KACjF+oD,EAAmB7qI,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,iBAC/Dk1H,EAAsBW,EAAiBC,eAE7ChjI,EAAS6hI,UAAYA,EACrB7hI,EAASu4G,eAAgB,EACzBv4G,EAASiiI,gBAAiB,EAC1BjiI,EAASinH,iBAAkB,EAC3BjnH,EAASkiI,kBAAmB,EAC5BliI,EAASo6E,YAAcA,EACvBp6E,EAAS8hI,aAAeA,EACxB9hI,EAASq6E,aAAeA,EACxBr6E,EAASu6E,cAAgBA,EACzBv6E,EAAS45E,eAAiBA,EAC1B55E,EAASgiI,eAAiBA,EAC1BhiI,EAASmiI,mBAAqBA,EAC9BniI,EAASoiI,oBAAsBA,EAC/BpiI,EAAS2hI,SAAWK,GAAkBF,EAEtC9hI,EAAS4hI,WAAaQ,IAAwBJ,EAC9ChiI,EAASqiI,0BAA4BA,EACrCriI,EAASoJ,OAAS04H,GAAgB9hI,EAAS2hI,SAAW,SAAW,UAEjEzpI,KAAKgI,SAASF,mRAMRijI,EAA0B,YAC1B/qI,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAjE,eAAAwhB,EAAAxxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAkF,SAAAuS,EAAO5R,GAAP,IAAAtH,EAAA,OAAA+mB,EAAAtwB,EAAAsQ,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UAChFlH,EAAcozG,EAAK78G,MAAMykH,UAAU/0G,gBAAgBqB,GACnC8rG,EAAK/5G,cAAco0B,kBAAkBztB,EAAYsH,SACjDtH,EAAY69B,IAHoD,CAAAxkB,EAAAnS,KAAA,eAAAmS,EAAAnS,KAAA,EAI9EksG,EAAK78G,MAAMqnC,aAAa59B,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY69B,KAJI,OAMtFwjG,EAAwBrhI,EAAYo3B,WAAY,EANsC,wBAAA/d,EAAAhR,SAAA6Q,EAAA5iB,SAAlF,gBAAAgS,GAAA,OAAAmf,EAAAlf,MAAAjS,KAAAkS,YAAA,YASAshB,EAAsB7zB,OAAOoE,KAAKgnI,GAAyBjlI,IAAK,SAAAg7B,GACpE,IAAM8F,EAAiBk2E,EAAK/5G,cAAciS,gBAAgB,CAAC,aAAa8rB,IACxE,MAAO,CACLp2B,MAAMo2B,EACN1+B,KAAKwkC,EAAexkC,KACpBoL,MAAMo5B,EAAengB,WAME+M,EAAoBxvB,OAAO,IAChDoP,EAAmBogB,EAAoB,GAAG9oB,OAC1ClB,EAAgBxJ,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAMykH,UAAU/0G,gBAAgB3P,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAM4kH,UAAUC,OAAS,QAE7IxwC,EAAsBt0E,KAAKC,MAAMykH,UAAU/0G,gBAAgBnG,GACjEA,EAAgB8qE,EAAoBr4C,UACpC7oB,EAAmBkhE,EAAoBxzC,UAGzC9gC,KAAKgI,SAAS,CACZwrB,uBACA,WACAspF,EAAKkuB,eAAe53H,EAAiB5J,uLAcrB4J,8FAAiB5J,iCAAc,KAC7CmG,EAAkBhQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBACtDmB,OAAO,SAAAjK,GAAG,OAAI0+G,EAAKtlH,MAAMykH,UAAU/0G,gBAAgB9I,GAAKi6B,WAAa1tB,IACrEsxB,OAAO,SAACigF,EAAK99G,GACZ,IAAM6C,EAAc67G,EAAKtlH,MAAMykH,UAAU/0G,gBAAgB9I,GACnD24C,EAAkB+lE,EAAKtlH,MAAMuzB,oBAAoBpgB,GAAkB1J,EAAYuyB,WAOrF,OALAvyB,EAAY69B,IAAMiY,EAAgBjY,IAClC79B,EAAYsH,MAAQwuC,EAAgBxuC,MACpCtH,EAAYmD,QAAU2yC,EAAgB3yC,QACtCnD,EAAY/F,SAAW67C,EAAgB77C,SACvCghH,EAAIj7G,EAAYuyB,WAAavyB,EACtBi7G,GACN,IAEL3kH,KAAKgI,SAAS,CACZ2H,kBACAyD,oBACA,WACI5J,GACF+7G,EAAK1J,YAAYryG,oLAKJA,iGACX8qE,EAAsBt0E,KAAKwH,MAAMmI,gBAAgBnG,GACjDyhI,EAA0BjrI,KAAKC,MAAMuzB,oBAAoB8gD,EAAoBxzC,UAE7E0e,EAAkByrF,EAAwB32D,EAAoBtjE,QAE9DtH,EAAc,CAClBvH,KAAKq9C,EAAgBxuC,MACrBA,MAAMwuC,EAAgBxuC,MACtBnE,QAAQ2yC,EAAgB3yC,QACxBlJ,SAAS67C,EAAgB77C,WAIfouB,KAAOytB,EAAgBztB,KAG7BmzB,EAAc,CAClB3d,IAAIiY,EAAgBjY,IACpBplC,KAAKq9C,EAAgBxuC,MACrBA,MAAMwuC,EAAgBxuC,MACtBnE,QAAQ2yC,EAAgB3yC,SAGpBmtB,EAAoBs6C,EAAoBt6C,kBAG1CwlB,EAAgB0rF,kBAClBlxG,EAAkBkF,UAAU,GAAG/8B,KAAOq9C,EAAgB0rF,iBAGxDxhI,EAAYqwB,UAAY,CACtBjI,SAAQ,EACRozB,cACAlrB,oBACAiwG,oBAAmB,aAGfjqI,KAAKC,MAAMkrI,iBAAiB72D,EAAoBxzC,SAAS0e,EAAgBxuC,eAE/EhR,KAAKgI,SAAS,CACZ0B,cACAF,gBACA8qE,uBACA,WAEA,GAAIA,EAAoBxzC,WAAa0kF,EAAKh+G,MAAM4L,iBAAiB,CAC/D,IAAMA,EAAmBkhE,EAAoBxzC,SAC7C0kF,EAAKwlB,eAAe53H,sQAMnBpT,KAAKwH,MAAMsiI,wDACP,cAGO,EACO,EACjBsB,EAAUzrI,OAAOoE,KAAK/D,KAAKwH,MAAM46E,eAAe,GAEhDipD,EAAgB,SAACt6H,EAAGmM,GACxB,IAAMulC,EAA4B,YAAd1xC,EAAGI,OAGjBgM,EAAY,CAChBI,YAAa,QACbH,cAAa,eACbukG,WAAYrwG,SAVO,GAWnB+L,WAAY6oG,EAAKjmH,MAAMuJ,eAGrB0T,IACFC,EAAUE,WAAa6oG,EAAKnjH,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrB+0G,EAAKnjH,cAAc2a,yBAAyBP,GAG9C+oG,EAAKl+G,SAAS,SAACJ,GAAD,MAAgB,CAC5BmiI,eAAetnF,EACf1lC,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERijE,MAAM,CACJhjE,OAAO,KACPC,SAAQ,SAMVquH,EAAuB,SAACv6H,GAC5B,IAAMiM,EAASjM,EAAG6M,gBAClBsoG,EAAKl+G,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERijE,MAAMrgF,OAAAw4B,EAAA,EAAAx4B,CAAA,GACDiI,EAAUmV,WAAWijE,MADrB,CAEHhjE,iBAMRhd,KAAKC,MAAMie,0BAA0Ble,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAM,WAAY,CAACipI,GAAU,KAAMC,EAAeC,GAExItrI,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERijE,MAAMrgF,OAAAw4B,EAAA,EAAAx4B,CAAA,GACDiI,EAAUmV,WAAWijE,MADrB,CAEH/iE,SAxDU,4PA+DhBjd,KAAKgI,SAAS,CACZ6hI,cAAa,8IAKf7pI,KAAKgI,SAAS,CACZq4G,eAAc,oFAII8pB,mEAEhBA,IAA8BnqI,KAAKwH,MAAM2iI,2BAC3CnqI,KAAKgI,SAAS,CACZmiI,6KAec/pB,GAClBpgH,KAAKgI,SAAS,CACZo4G,mDAcK,IAAAwG,EAAA5mH,KAEP,IAAKA,KAAKwH,MAAM4L,iBACd,OAAO,KAGT,IAAMu2H,EAAY3pI,KAAKwH,MAAM44G,eAAiBpgH,KAAKwH,MAAMmiI,UAEnD3nD,EAAchiF,KAAKwH,MAAM26E,cAAgBxiF,OAAOkR,OAAO7Q,KAAKwH,MAAM26E,cAAcn+E,OAAO,EAAIrE,OAAOkR,OAAO7Q,KAAKwH,MAAM26E,cAAc,GAAK,KACvIF,EAAejiF,KAAKwH,MAAM46E,eAAiBziF,OAAOkR,OAAO7Q,KAAKwH,MAAM46E,eAAep+E,OAAO,EAAIrE,OAAOkR,OAAO7Q,KAAKwH,MAAM46E,eAAe,GAAK,KAC3Io+B,EAAoBmpB,GAAa3pI,KAAKwH,MAAMqiI,eAAmBF,GAAa3pI,KAAKwH,MAAM2iI,0BACvFoB,EAAkBvrI,KAAKwH,MAAM06E,aAAeliF,KAAKwH,MAAM06E,YAAYliF,KAAKwH,MAAMk6E,iBAAmB1hF,KAAKwH,MAAM06E,YAAYliF,KAAKwH,MAAMk6E,gBAAgB7sE,GAAG,GACtJ22H,EAAuBxrI,KAAKwH,MAAM4L,iBAAmBpT,KAAKwH,MAAMgsB,oBAAoBtU,KAAM,SAAAkX,GAAC,OAAIA,EAAE1rB,QAAUk8G,EAAKp/G,MAAM4L,mBAAqBpT,KAAKwH,MAAMgsB,oBAAoB,GAwGhL,OACEgjF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP8I,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,wBAKA0oG,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAADpa,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,WACNiZ,cAAc,EACdf,aAAcmxH,EACdjxH,kBAjIgB,SAAAta,GACxB,IAAMuN,EAAQvN,EAAMuN,MACd9D,EAAc,CAClBtH,KAAKnC,EAAMmK,KAAKhI,MAGlB,OACEo0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,UAEZy1G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP9D,YAAaA,EACb0V,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHvB,MAAM,MACNiC,OAAO,UAIby0G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP4R,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,mBA+FV6X,QAASna,KAAKwH,MAAMgsB,oBACpBnX,SAAUrc,KAAKgrI,eAAersH,KAAK3e,MACnCwa,qBAxFmB,SAAAva,GAE3B,IACMib,GAA4D,IADlDjb,EAAMib,YAAYf,QACN6B,QAAQ/b,EAAMib,YAAYxQ,OAAgBzK,EAAMib,YAAYxQ,MAAQ,KAEhG,IAAKwQ,EACH,OAAO,KAGT,IAAM1N,EAAQ0N,EAAY1N,MACpB9D,EAAc,CAClBtH,KAAK8Y,EAAY9Y,MAGnB,OACEo0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACEyG,MAAO,CACLoZ,KAAK,KAEPxe,eAAgB,iBACZhB,EAAMya,YAEV87F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMya,WAHZ,CAIE3Z,WAAY,SACZC,cAAe,MACfqF,MAAO,CAACoI,OAAO,WACfxN,eAAgB,eAEhBu1G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP9D,YAAaA,EACb0V,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,UAIby0G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP4R,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,uBA2CZtC,KAAKwH,MAAMmI,iBACT6mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,4BAKA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJoa,aAAa,EACbpE,cAAc,EACdiB,SAAUrc,KAAK67G,YAAYl9F,KAAK3e,MAChCwJ,cAAexJ,KAAKwH,MAAMgC,cAC1BmG,gBAAiB3P,KAAKwH,MAAMmI,qBAKjC3P,KAAKwH,MAAMunH,iBACVvY,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,2BAMX5C,KAAKC,MAAM4P,QAmCR7P,KAAKwH,MAAMunH,iBAAoB/uH,KAAKwH,MAAM8sE,sBAAwBt0E,KAAKwH,MAAMkiI,YAAc1pI,KAAKwH,MAAMiiI,WACxGjzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFxB,GAAG,EACH6I,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAOq+G,EAAmB,WAAa,WACvCl+G,MAAQk+G,EAAmBxgH,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAErF0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPuG,UAAW,QAGT8gI,EAAY,uBAAyB,uCAI3CnzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAQnC,KAAKwH,MAAMoiI,cAAgB5pI,KAAKwH,MAAMsiI,eAAkB,WAAa,WAC7ExnI,MAAStC,KAAKwH,MAAMoiI,cAAgB5pI,KAAKwH,MAAMsiI,eAAkB9pI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAE3H0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPuG,UAAW,QAJb,gBAMgB7I,KAAKwH,MAAMgC,gBAG7BgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAOnC,KAAKwH,MAAMsiI,eAAiB,WAAa,SAChDxnI,MAAQtC,KAAKwH,MAAMsiI,eAAiB9pI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAE9F0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPuG,UAAW,QAJb,2BAOE2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJjD,WAAY,EACZH,MAAO,UACPmG,QAAS,SACT9C,WAAY,UACZC,QAAU,SAAAkB,GAAC,OAAI8/G,EAAK3mH,MAAM0wH,iBAAiB,2BAA2B/J,EAAK7jH,cAAciS,gBAAgB,CAAC,WAAW,qCANvH,iBAYJwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAOnC,KAAKwH,MAAMuiI,eAAiB,WAAa,SAChDznI,MAAQtC,KAAKwH,MAAMuiI,eAAiB/pI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAE9F0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPuG,UAAW,QAJb,cAMc7I,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,OAE1CwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE1nF,UAAW,MACXC,QAAO,oFAAAroB,OAAsF3G,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,QAEzHwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrD,KAAM,QACNF,KAAM,UACNG,MAAO,UACP+D,MAAO,CACLoI,OAAO,mBA3JvB+nG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCG,KAAM,QACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACPlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,uDAQA2tG,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM23G,2BAL1B,aAgJN53G,KAAKwH,MAAMunH,iBAAmB/uH,KAAKC,MAAM4P,SAAW7P,KAAKwH,MAAMmI,iBAAmB3P,KAAKwH,MAAMgC,eAC3FgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK32G,MAAO,IAEP0gH,GAAoBxgH,KAAKwH,MAAMiiI,WAC9BjzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,sBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN0+G,YAAY,WACV,OAAOoI,EAAKp/G,MAAMkiI,WAAa9iB,EAAKgT,UAAU,WAAa,OAG/Dt5H,eAAe,EACfE,YAAcR,KAAKwH,MAAMkiI,WACzBnpI,SAAiC,YAAtBP,KAAKwH,MAAM0J,QAEtBslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC8uB,GAAA,EAAD,CACEzO,YAAa,CACXvP,OAAO,WAETkO,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAITm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,GAFd,aAQJ+zG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN0+G,YAAY,WACV,OAAOoI,EAAKp/G,MAAMiiI,SAAW7iB,EAAKgT,UAAU,UAAY,OAG5Dt5H,eAAe,EACfE,YAAcR,KAAKwH,MAAMiiI,SACzBlpI,SAAiC,WAAtBP,KAAKwH,MAAM0J,QAEtBslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC8uB,GAAA,EAAD,CACEzO,YAAa,CACXvP,OAAO,UAETkO,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAITm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,GAFd,aAYVzC,KAAKwH,MAAM64G,eAAuC,YAAtBrgH,KAAKwH,MAAM0J,QAAwBlR,KAAKwH,MAAMmiI,WAAa3pI,KAAKwH,MAAMk5B,mBAAqB1gC,KAAKwH,MAAMyiI,mBAChIzzB,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACH6I,GAAG,EACHH,QAAQ,OACR1H,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNC,MAAO,WACPH,KAAM,qBAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAEV7I,KAAKwH,MAAMgC,cANd,iIASFgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJyuB,UAAU,EACVurF,QAAS5iH,KAAKwH,MAAM44G,cACpB5yG,MAAK,8CACL6O,SAAW,SAAAvV,GAAC,OAAI8/G,EAAK/D,oBAAoB/7G,EAAE4e,OAAOk9F,cAGnD5iH,KAAKwH,MAAM64G,eAAuC,YAAtBrgH,KAAKwH,MAAM0J,QAAwBlR,KAAKwH,MAAMmiI,WAAa3pI,KAAKwH,MAAMk5B,mBAAqB1gC,KAAKwH,MAAMyiI,oBACrIzzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,EACHqH,GAAI,EACJ9I,MAAO,EACP0B,aAAc,EACdT,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5tG,UAAW,SACXlD,WAAY,UACZC,QAAS5F,KAAKqgH,cAAc1hG,KAAK3e,OAHnC,2CAWkB,YAAtBA,KAAKwH,MAAM0J,OACTlR,KAAKwH,MAAM0iI,oBACT1zB,EAAAr2G,EAAAC,cAACqrI,GAAA,EAAD9rI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEyrI,WAAW,EACXC,aAAa,EACbhC,UAAWA,EACX/xD,eAAe,EACfg0D,iBAAiB,EACjBC,qBAAqB,EACrBC,cAAe,eACfjtH,SAAU,uBACVnV,YAAa1J,KAAKwH,MAAMkC,YACxBF,cAAexJ,KAAKwH,MAAMgC,cAC1B4rF,gBAAiB,SAAA22C,GAAS,MAAI,CAACA,IAC/B34H,iBAAkBpT,KAAKC,MAAMmT,iBAC7B44H,eAAgBhsI,KAAKgsI,eAAertH,KAAK3e,MACzCmhH,gBAAiBnhH,KAAKmhH,gBAAgBxiG,KAAK3e,MAC3CqqI,kBAAmBrqI,KAAKqqI,kBAAkB1rH,KAAK3e,MAC/CoqI,yBAA0BpqI,KAAKoqI,yBAAyBzrH,KAAK3e,MAC7DisI,cAAa,gBAAAtlI,OAAkB3G,KAAKwH,MAAMgC,cAA7B,+CAAA7C,OAAwF3G,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,MAApH,OAEbwlG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,sBAMsB7I,KAAKwH,MAAMgC,cANjC,uBAYNgtG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAGL01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAHb,+CAWN2tG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAIH5I,KAAKwH,MAAMuV,WAAWijE,MAAM/iE,QAC1Bu5F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwf,EAAA,EAADjgB,OAAAC,OAAA,GAAmBI,KAAKC,MAAxB,CAA+Bse,KAAMve,KAAKC,MAAMse,KAAMM,SAAQ,qBAAwBD,WAAU,gCAAmC/W,KAAM7H,KAAKwH,MAAMuV,WAAWijE,MAAMhjE,WAErKhd,KAAKwH,MAAMuiI,eACbvzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,UACNE,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCM,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,YAErD0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACPlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,wCAMwC7I,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,MANpE,KAQAwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJC,UAAW,SACXlD,WAAY,UACZC,QAAU,SAAAkB,GAAC,OAAI8/G,EAAK3mH,MAAM8G,YAAY6/G,EAAKp/G,MAAM8sE,oBAAoBxzC,SAAS,IAAI8lF,EAAKp/G,MAAM8sE,oBAAoBr4C,aAJnH,wBASAj8B,KAAKwH,MAAMsiI,eACbtzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCM,MAAO,WACPH,KAAM,eAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAHb,+BAK8B2tG,EAAAr2G,EAAAC,cAAA,WAL9B,0BAK4D4hF,EAAY90E,QAAQ,GALhF,IAKqFlN,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,OAEjHwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,UACPuG,UAAW,UAHb,2BAK2B7I,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,MALvD,iCAOAwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,IACTmH,UAAUjH,KAAKC,MAAMwB,MAAMC,OAAOG,QAEpCpB,YAAc,SAAAqG,GAAC,OAAI8/G,EAAK5mC,UAN1B,WAaJw2B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNC,MAAO,WACPH,KAAM,mBAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACPlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAEX2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CACEhjB,MAAO,YADT,mCAGkCk0G,EAAAr2G,EAAAC,cAAA,cAAS6hF,EAAa/0E,QAAQ,GAA9B,IAAmClN,KAAKwH,MAAMgC,eAHhF,2DAGgKxJ,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,MAH5L,QAaZhR,KAAKwH,MAAM06E,YAAYliF,KAAKwH,MAAMk6E,iBAChC80B,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAIHd,KAAKwH,MAAMuV,WAAW+B,QAAQ7B,QAC5Bu5F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACwf,EAAA,EAADjgB,OAAAC,OAAA,GAAmBI,KAAKC,MAAxB,CAA+B4e,SAAQ,+BAAkCD,WAAU,wCAA2C/W,KAAM7H,KAAKwH,MAAMuV,WAAW+B,QAAQ9B,WAElKhd,KAAKwH,MAAMwiI,iBACbxzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,QACtCG,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,YAErD0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACPlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,iCAUF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,IACZH,MAAO,YACPuG,UAAW,UAHb,eAKe7I,KAAKwH,MAAM06E,YAAYliF,KAAKwH,MAAMk6E,gBAAgBx0E,QAAQ,GALzE,IAK8ElN,KAAKwH,MAAMgC,eAGvF+hI,GACE/0B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5tG,UAAW,SACXlD,WAAY,UACZC,QAAS5F,KAAK8e,QAAQH,KAAK3e,OAH7B,iBASFA,KAAKwH,MAAM06E,YAAYliF,KAAKwH,MAAMk6E,gBAAgB/vE,GAAG3R,KAAKwH,MAAM8sE,oBAAoB43D,cAClF11B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVJ,MAAO,QACPuG,UAAW,UAJb,wCAMwC7I,KAAK+C,cAAcS,YAAYxD,KAAKwH,MAAM8sE,oBAAoB43D,YAAY,GANlH,IAMuHlsI,KAAKwH,MAAMgC,cANlI,oBAWFxJ,KAAKwH,MAAM66E,eACTm0B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAHb,yBAKyB7I,KAAK+C,cAAcqP,YAA+C,IAAnCpS,KAAKwH,MAAM66E,cAAc9wE,WAAgBwrE,MAAMvnE,OAAO,qCA/uCnH3S,6CC8xBZspI,8MAzyBb3kI,MAAQ,CACN6F,MAAM,GACNm1G,MAAM,KACN4pB,UAAU,GACV7pB,QAAQ,KACR/wE,WAAW,GACXmsE,WAAW,KACX0uB,YAAW,EACX50B,YAAY,KACZ/tG,YAAY,KACZ45G,YAAY,KACZ/kF,aAAa,KACbigD,aAAa,KACbh1E,cAAc,KACds6G,eAAe,KACf8D,eAAe,KACf0O,eAAe,KACflW,eAAc,EACdzwG,gBAAgB,KAChB09C,kBAAkB,GAClBizD,gBAAe,EACfE,kBAAiB,EACjB8rB,mBAAmB,KACnBxpB,mBAAmB,KACnBE,oBAAoB,KACpBupB,oBAAoB,KACpBnlB,qBAAqB,KACrBolB,wBAAwB,QAI1BzpI,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAK0H,yLAIoB1H,KAAK+C,cAAcmtC,6BAAtCsB,SACNxxC,KAAKgI,SAAS,CACZwpC,aACA66F,YAAW,GACX,WACAlpI,EAAKuzH,oMAIgB/uH,EAAUC,2FACjC5H,KAAKkD,cAEwB0E,EAAU4B,gBAAkBxJ,KAAKwH,MAAMgC,uCAE5DE,EAAc1J,KAAKC,MAAMykH,UAAU/0G,gBAAgB3P,KAAKwH,MAAMgC,eAC9DijI,EAAkB/iI,EAAYipC,UAC9B+5F,EAAmBhjI,EAAYgpC,oBAG/BhyB,QAAQqD,IAAI,CAChB0oH,EAAkBzsI,KAAKC,MAAMqnC,aAAamlG,EAAgBtqI,KAAKsqI,EAAgB5/H,QAAQ4/H,EAAgBllG,KAAO,KAC9GmlG,EAAmB1sI,KAAKC,MAAMqnC,aAAaolG,EAAiBvqI,KAAKuqI,EAAiB7/H,QAAQ6/H,EAAiBnlG,KAAO,cAGpHvnC,KAAKgI,SAAS,CACZ0B,eACA,WACAW,EAAKqsH,uCAGDxL,EAAwBtjH,EAAUk8G,iBAAmB9jH,KAAKwH,MAAMs8G,eAChE6S,EAA0B/uH,EAAU44G,mBAAqBxgH,KAAKwH,MAAMg5G,kBACtE0K,GAAyByL,IAC3B32H,KAAK02H,qBAImBtnH,KAAKC,UAAUzH,EAAU42E,gBAAkBpvE,KAAKC,UAAUrP,KAAKwH,MAAMg3E,eAE/Fx+E,KAAK4gH,iUAI4B,oJAIhB/wF,GACnB,IAAInlB,EAAQ,KACR4S,EAAa,KACbw6C,EAAe,GACft6C,EAAe,KACnBqS,EAAS7vB,KAAK+C,cAAcwyB,KAAK1F,GACjC,IAAMujB,EAAapzC,KAAKwH,MAAMkC,YAAY0pC,WAC1C,OAAQpzC,KAAKwH,MAAMs8G,gBACjB,IAAK,UACH,OAAQ9jH,KAAKwH,MAAMgC,eACjB,IAAK,OACH8T,EAAa,kBACbE,EAAe,mBACf9S,EAAQ1K,KAAKC,MAAMse,KAAK0C,IAAIsmB,IAAIolG,gBAAgB,UAAW98G,GAC3DioC,EAAe,CAAC93D,KAAKC,MAAM4P,SAC7B,MACA,QACE,IAAM+8H,EAAc5sI,KAAKC,MAAMse,KAAK0C,IAAIsmB,IAAIolG,gBAAgB,UAAW98G,GACvE,OAAQujB,GACN,IAAK,SACH51B,EAAe,iBACfF,EAAa,sBACbw6C,EAAe,CAAC93D,KAAKwH,MAAMkC,YAAYipC,UAAU9lC,QAAQ7M,KAAKC,MAAM4P,QAAQ+8H,GAC9E,MACA,QACA,IAAK,MACHtvH,EAAa,aACbE,EAAe,mBACfs6C,EAAe,CAAC93D,KAAKC,MAAM4P,QAAQ7P,KAAKwH,MAAMkC,YAAYipC,UAAU9lC,QAAQ+/H,IAKtF,MACA,IAAK,WACHtvH,EAAa,WACbw6C,EAAe,CAACjoC,GAChBrS,EAAexd,KAAKwH,MAAMkC,YAAYgpC,WAAWvwC,KAC7CnC,KAAKwH,MAAMkC,YAAYmjI,YACzBniI,EAAQ1K,KAAKC,MAAMse,KAAK0C,IAAIsmB,IAAIolG,gBAAgB,UAAW98G,IAcjE,MAAO,CACLnlB,QACA4S,aACAw6C,eACAt6C,oOASIR,EAAShd,KAAKwH,MAAMglI,wBAEpBM,EAAoB9sI,KAAKC,MAAMykH,UAAUqoB,cAAcC,gCAClChtI,KAAKC,MAAMi1C,eAAe+3F,SAASC,oBAAoBlwH,EAAO8vH,GAAkB,eAArGK,mDAGG,CAACA,oCAEH,yLAGc3sB,mEACrBxgH,KAAKgI,SAAS,CACZw4G,0MAIoBgsB,yEAChBD,EAAsBvsI,KAAKwH,MAAMgqC,WAAWtyB,KAAM,SAAAnO,GAAE,OAAIA,EAAGlJ,KAAKiF,gBAAkB0/H,EAAwB1/H,gBAChH9M,KAAKgI,SAAS,CACZukI,sBACAC,oNAIuBz7H,EAAG8e,EAAOhS,gFAe7BupG,EAAuBr2G,EAC7B/Q,KAAKgI,SAAS,CACZo/G,wBACA,WACAtK,EAAK4Z,0SAKD5uH,EAAW,GACXk6H,EAAmC,SAA3BhiI,KAAKwH,MAAMgC,cACnB4pC,EAAapzC,KAAKwH,MAAMkC,YAAY0pC,gBAClCpzC,KAAKwH,MAAMs8G,sBACZ,mBAqCA,qBA4DA,oCAhGHh8G,EAAS06G,MAAQ,GACjB16G,EAASs4G,eAAgB,EACzBt4G,EAASulD,kBAAoB,CAAC,EAAE,GAChCvlD,EAASw4G,gBAAkB0hB,EAC3Bl6H,EAASg7G,mBAAT,wCAAAn8G,OAAsE3G,KAAKwH,MAAMgC,eACjF1B,EAAS02E,aAA8B,QAAfprC,EAAuBpzC,KAAKC,MAAMykH,UAAUntF,UAAU61G,eAAiBptI,KAAKC,MAAMykH,UAAUntF,UAAU81G,gBACvGrL,oCAAchiI,KAAK+C,cAAcy/E,cAAcxiF,KAAKC,MAAM4P,sEAAiB7P,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKwH,MAAMkC,YAAYipC,UAAUxwC,KAAKnC,KAAKC,MAAM4P,4CAAtL/H,EAASw7G,iBACLtjH,KAAKwH,MAAM4/G,sBACTkmB,EAAqB,KACrBC,EAAuB,KACtBvL,GAIHuL,EAAuBvtI,KAAKwH,MAAM4/G,qBAAqBp0E,WAAahzC,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,OAASxlD,OAAOkR,OAAO7Q,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,QAAQjmC,KAAM,SAAAu+G,GAAK,OAAIA,EAAM5wH,QAAQC,gBAAkBy4G,EAAKtlH,MAAMykH,UAAUntF,UAAUi2G,eAAe3gI,QAAQC,eAAiB2wH,EAAMr4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoB2wH,EAAMr4E,IAAIh7C,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAChhBwgI,EAAqBttI,KAAKwH,MAAM4/G,qBAAqBp0E,WAAahzC,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUtc,KAAO12B,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBy4G,EAAKtlH,MAAMykH,UAAUntF,UAAUi2G,eAAe3gI,QAAQC,eAAiBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAInpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,OAJ3eygI,EAAuBvtI,KAAKwH,MAAM4/G,qBAAqBp0E,WAAahzC,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,OAASxlD,OAAOkR,OAAO7Q,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,QAAQjmC,KAAM,SAAAu+G,GAAK,OAAIA,EAAM5wH,QAAQC,gBAAkBy4G,EAAK/9G,MAAMkC,YAAYipC,UAAU9lC,QAAQC,eAAiB2wH,EAAMr4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAK/9G,MAAMg3E,aAAa3xE,QAAQgrB,QAAQ,KAAK,IAAI/qB,kBAAoB2wH,EAAMr4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoB2wH,EAAMr4E,IAAIh7C,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAC7nBwgI,EAAqBttI,KAAKwH,MAAM4/G,qBAAqBp0E,WAAahzC,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUtc,KAAO12B,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBy4G,EAAK/9G,MAAMkC,YAAYipC,UAAU9lC,QAAQC,eAAiBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAK/9G,MAAMg3E,aAAa3xE,QAAQgrB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAInpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,MAK9kBszB,EAAkBktG,EAAqBttI,KAAK+C,cAAc0R,iBAAiBnD,SAASg8H,EAAmBljI,KAAK,IAAIpK,KAAKwH,MAAMkC,YAAY/F,UAAc4pI,EAAuBvtI,KAAK+C,cAAc0R,iBAAiBnD,SAASi8H,EAAqBnoF,IAAIh7C,KAAK,IAAIpK,KAAKwH,MAAMkC,YAAY/F,UAAY3D,KAAK+C,cAAckO,MAAM,GAC7TnJ,EAASy6G,QAAU,CACjBngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,2CAAA+D,OAA4Cy5B,EAAgBlzB,QAAQ,GAApE,KAAAvG,OAA0E3G,KAAKwH,MAAMgC,cAArF,qHAGN1B,EAASy6G,QAAU,CACjBngH,KAAK,cACLI,UAAU,CACRF,MAAM,YAERM,KAAI,kIAMRkF,EAASs4G,eAAgB,EACzBt4G,EAASw4G,gBAAiB,EAC1Bx4G,EAASg7G,mBAAqB,GAC9Bh7G,EAASulD,kBAAoB,CAAC,IAAI,OAClCvlD,EAAS02E,aAAex+E,KAAKwH,MAAMkC,YAAYgpC,qBAClB1yC,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKwH,MAAMkC,YAAYgpC,WAAWvwC,KAAKnC,KAAKC,MAAM4P,oBAAlH/H,EAASw7G,mBAEHt+F,EAAiBhlB,KAAK+C,cAAckf,qBACpCwrH,EAAezoH,EAAe7iB,KAC9BurI,EAAgB1tI,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAegQ,EAAe5f,KAClHuoI,EAAkB3tI,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,oBAAoB04H,EAAc,SACxG5lI,EAAS06G,MAAQ,CACf,CACEpgH,KAAK,WACL0pB,WAAU,EACV2rF,YAAW,YAAA9wG,OAAa3G,KAAKwH,MAAMgC,cAAxB,UAAA7C,OAA8C8mI,EAA9C,aAEb,CACErrI,KAAK,WACL0pB,WAAU,EACV2rF,YAAW,2CAEb,CACEr1G,KAAK,SACL0pB,WAAU,EACV2rF,YAAW,QAAA9wG,OAAS3G,KAAKwH,MAAMgC,cAApB,UAAA7C,OAA0CgnI,EAA1C,eAGX3tI,KAAKwH,MAAM4/G,sCACPwmB,EAAuB5tI,KAAKwH,MAAM4/G,qBAAqBp0E,WAAahzC,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,OAASxlD,OAAOkR,OAAO7Q,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,QAAQjmC,KAAM,SAAAu+G,GAAK,OAAIA,EAAM5wH,QAAQC,gBAAkBy4G,EAAK/9G,MAAMkC,YAAYgpC,WAAW7lC,QAAQC,eAAiB2wH,EAAMr4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAK/9G,MAAMg3E,aAAa3xE,QAAQgrB,QAAQ,KAAK,IAAI/qB,kBAAoB2wH,EAAMr4E,IAAI3R,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoB2wH,EAAMr4E,IAAIh7C,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KAC9nB+gI,EAAqB7tI,KAAKwH,MAAM4/G,qBAAqBp0E,WAAahzC,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUtc,KAAO12B,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBy4G,EAAK/9G,MAAMkC,YAAYgpC,WAAW7lC,QAAQC,eAAiBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAK/9G,MAAMg3E,aAAa3xE,QAAQgrB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAIE,OAAOv0B,KAAM,SAAA+Z,GAAC,OAAIA,EAAEnsB,cAAconB,SAASqxF,EAAKtlH,MAAM4P,QAAQgoB,QAAQ,KAAK,IAAI/qB,kBAAoBymC,EAAInpC,KAAK0C,gBAAgB,qEAAqEA,gBAAkB,KACnlBghI,EAAkBD,EAAqB7tI,KAAK+C,cAAc0R,iBAAiBnD,SAASu8H,EAAmBzjI,KAAK,IAAIpK,KAAKwH,MAAMkC,YAAY/F,UAAa3D,KAAKwH,MAAM4/G,qBAAqBp0E,WAAahzC,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,QAAUnlD,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,OAAO4oF,SAAW/tI,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAM4/G,qBAAqBp0E,UAAUmS,OAAO4oF,SAAStmG,aAAa/8B,MAAM1K,KAAKwH,MAAMkC,YAAY/F,UAAciqI,EAAuB5tI,KAAK+C,cAAc0R,iBAAiBnD,SAASs8H,EAAqBxoF,IAAIh7C,KAAK,IAAIpK,KAAKwH,MAAMkC,YAAY/F,UAAa3D,KAAK+C,cAAckO,MAAM,GAChnBnJ,EAASy6G,QAAU,CACjBngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,2CAAA+D,OAA4CmnI,EAAgB5gI,QAAQ,GAApE,KAAAvG,OAA0E3G,KAAKwH,MAAMgC,cAArF,iIAGF5G,EAAO,QACHwwC,SACD,kDACHxwC,EAAI,kGAIJA,EAAI,mGAGRkF,EAASy6G,QAAU,CACjB3/G,OACAR,KAAK,cACLI,UAAU,CACRF,MAAM,gEAMZwF,EAASulD,kBAAoB,CAAC,EAAE,GAChCvlD,EAASskI,UAAYpsI,KAAKwH,MAAMgqC,WAAW1gC,OAAQ,SAAAC,GAAE,MAAkB,aAAdA,EAAGG,SAA0BH,EAAGkkC,QAAUlkC,EAAGwe,YAAYta,gBAAkBswG,EAAK/9G,MAAMgC,cAAcyL,gBAAgBnP,IAAK,SAAAiL,GAEhL,MAAO,CACLvD,MAFY+3G,EAAKxiH,cAAcqP,YAAyB,IAAbrB,EAAGQ,WAAgBiE,OAAO,oBAAoB,MAAMzE,EAAGrG,MAAMwC,QAAQ,GAAG,IAAI6D,EAAGC,MAG1H5G,KAAK2G,EACLrG,MAAMqG,EAAGlJ,QAIbC,EAASwkI,mBAAqBxkI,EAASskI,UAAUpoI,OAAO,EAAI8D,EAASskI,UAAU,GAAK,KACpFtkI,EAASykI,oBAAsBzkI,EAASwkI,mBAAqBxkI,EAASwkI,mBAAmBliI,KAAO,KAChGtC,EAAS0kI,wBAA0B1kI,EAASykI,oBAAsBzkI,EAASykI,oBAAoB1kI,KAAO,sEAMrGC,EAASw7G,cACZx7G,EAASw7G,YAActjH,KAAK+C,cAAckO,MAAM,IAKlDjR,KAAKgI,SAASF,4QAIR6H,EAAkBhQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAiB+0B,OAAQ,SAACpV,EAAOte,GACxF,IAAMtH,EAAc87G,EAAKvlH,MAAMykH,UAAU/0G,gBAAgBqB,GAQzD,OAPItH,EAAYooB,SACdxC,EAAOniB,KAAPxN,OAAAw4B,EAAA,EAAAx4B,CAAA,CACE+K,MAAMsG,EACNxD,MAAMwD,GACHtH,IAGA4lB,GACP,IAEItK,EAAiBhlB,KAAK+C,cAAckf,qBACpC+rH,EAAehuI,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAMykH,UAAU/0G,gBAAgB3P,KAAKC,MAAM4kH,UAAUC,QACxGt7G,EAAgBwkI,EAAehuI,KAAKC,MAAM4kH,UAAUC,OAAU9kH,KAAKC,MAAMuJ,eAAiBxJ,KAAKwH,MAAMgC,eAAiBmG,EAAgB,GAAGjF,MACzIk9G,EAAiBj4G,EAAgBuP,KAAM,SAAA+Z,GAAC,OAAIA,EAAEvuB,QAAUlB,IACxDykI,EAAiBD,EAAiF,UAArC,WAA5BhpH,EAAe9C,SAAwB,UAAY,WACpF4hG,EAAiB9jH,KAAKC,MAAMiR,QAAUlR,KAAKwH,MAAM0J,QAAU+8H,EAC3DvkI,EAAc1J,KAAKC,MAAMykH,UAAU/0G,gBAAgBnG,GAIzDxJ,KAAKgI,SAAS,CACZ0B,cACAF,gBACAo+G,iBACA9D,iBACAn0G,mBACA,WACA61G,EAAK0oB,8YAQG1kI,GACVxJ,KAAKgI,SAAS,CACZwB,oDAIMs6G,GACR9jH,KAAKgI,SAAS,CACZ87G,oDAIK,IAAAoC,EAAAlmH,KACDwkI,IAAcxkI,KAAKC,MAAMukI,UACzB2J,EAAuC,SAA9BnuI,KAAKwH,MAAMs8G,eACpBwH,EAA0C,YAA9BtrH,KAAKwH,MAAMs8G,eACvByH,EAA2C,aAA9BvrH,KAAKwH,MAAMs8G,eACxB9+F,EAAiBhlB,KAAK+C,cAAckf,qBACpCmR,EAAmBpO,EAAe5f,GAExC,OACEoxG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjB,KAAKwH,MAAMmI,gBAmBV6mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGbjB,KAAKwH,MAAMmI,gBAAgB3L,OAU1BwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChBnB,MAAO,CAAC,EAAE0kI,EAAY,EAAI,UAGvBxkI,KAAKC,MAAMuJ,eACVgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,iBAKA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,CACEwF,GAAI,UACApF,KAAKC,MAFX,CAGEuf,aAAa,EACbpE,cAAc,EACdiB,SAAUrc,KAAK67G,YAAYl9F,KAAK3e,MAChCwJ,cAAexJ,KAAKwH,MAAMgC,cAC1BmG,gBAAiB3P,KAAKC,MAAMykH,UAAU/0G,oBAM5C3P,KAAKwH,MAAMgC,eACTgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,IAGJE,KAAKC,MAAMiR,QACVslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,sBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJ/M,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,MAER6C,UAAW,CACTF,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdE,KAAM,UACNL,UAAW,UACXH,KAAM,gBACNhB,YAAa,UACbX,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,YAClCr5H,SAAyC,YAA9BP,KAAKwH,MAAMs8G,kBAExBtN,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,MAER6C,UAAW,CACTF,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdE,KAAM,WACNL,UAAW,SACXH,KAAM,cACNhB,YAAa,UACbX,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,aAClCr5H,SAAyC,aAA9BP,KAAKwH,MAAMs8G,kBAExBtN,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,MAER6C,UAAW,CACTF,WAAW,EACXC,SAAS,CAAC,EAAE,IAEdE,KAAM,OACNR,KAAM,YACNG,UAAW,SACXnB,YAAa,UACbX,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,SAClCr5H,SAAyC,SAA9BP,KAAKwH,MAAMs8G,oBAO7B9jH,KAAKwH,MAAM6lD,kBAAkBn5B,SAASd,GAqClCpzB,KAAKwH,MAAMkC,aAAe1J,KAAKwH,MAAM87G,aAAetjH,KAAKwH,MAAMg3E,aAClEg4B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPgO,GAAI,CAAC,EAAE,IAGJw9G,GAAaC,EACZ/U,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEid,MAAOld,KAAKwH,MAAM0V,MAClBslG,MAAOxiH,KAAKwH,MAAMg7G,MAClBD,QAASviH,KAAKwH,MAAM+6G,QACpBrxG,OAAQlR,KAAKwH,MAAMs8G,eACnBp6G,YAAa1J,KAAKwH,MAAMkC,YACxB60B,aAAcv+B,KAAKwH,MAAM87G,YACzB9kC,aAAcx+E,KAAKwH,MAAMg3E,aACzB4hC,cAAepgH,KAAKwH,MAAM44G,cAC1BE,eAAgBtgH,KAAKwH,MAAM84G,eAC3Bv4G,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzC8iH,mBAAoB9iH,KAAKwH,MAAMs7G,mBAC/BtC,iBAAkBxgH,KAAKwgH,iBAAiB7hG,KAAK3e,MAC7CgjH,oBAAqBhjH,KAAKwH,MAAMw7G,oBAChCpC,oBAAqB5gH,KAAK4gH,oBAAoBjiG,KAAK3e,MACnD8d,qBAAsB9d,KAAK8d,qBAAqBa,KAAK3e,QAGnDsrH,EACE9U,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACw4G,EAAA,EAADj5G,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE06G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUl5G,KAAKwH,MAAMgC,kBAIvB+hH,GACF/U,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAGJi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,WACNG,MAAO,WACPD,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,UAExCw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,sBAMsB7I,KAAKwH,MAAMgC,cANjC,oBAaR2kI,GACF33B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAGJE,KAAKwH,MAAM6kI,WAkBRrsI,KAAKwH,MAAM4kI,UAAUpoI,OACvBwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,uBAGA0oG,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAADpa,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmb,cAAc,EACdjZ,KAAM,eACNgY,QAASna,KAAKwH,MAAM4kI,UACpB/vH,SAAUrc,KAAKouI,kBAAkBzvH,KAAK3e,MACtCqa,aAAcra,KAAKwH,MAAM8kI,sBAGzBtsI,KAAKwH,MAAM+kI,sBACRvsI,KAAKwH,MAAM+kI,oBAAoB74F,SAC9B8iE,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,EACH9I,MAAM,GAERsC,KAAM,aACNQ,KAAM,0IAGR4zG,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,CACEsR,OAAQ,OACRrO,UAAWskH,IACX9oG,YAAa,CACXzV,GAAG,EACH7H,WAAW,SACXE,eAAe,UAEjB8d,eAAgB,CACdtc,WAAW,EACX3C,MAAM,CAAC,EAAE,EAAE,GACXuC,KAAK,SACLN,OAAO,OACPW,SAAS,CAAC,EAAE,GACZ8L,UAAU,KACVhN,aAAa,EACbyF,UAAU,SACVyD,MAAM,oBAERmT,OAAQ,GACRP,WAAY,OACZW,oBAAoB,EACpBT,aAAc,mBACdzV,SAAU/H,KAAKquI,aAAa1vH,KAAK3e,MACjC+d,0BAA2B/d,KAAKsuI,yBAAyB3vH,KAAK3e,OAC1DA,KAAKC,OAETu2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,MACfD,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJc,KAAM,OACNE,KAAM,QACNC,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,YAErD0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,IACZC,SAAU,OACVJ,MAAO,YACPuG,UAAW,UAJb,uCAcZ2tG,EAAAr2G,EAAAC,cAACsI,EAAA,EAAD,CACEhJ,UAAW,CACTkJ,GAAG,EACH9I,MAAM,GAERsC,KAAM,UACNQ,KAAM,yCAtGR4zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,+BAiGtB4zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,qBA9OV4zG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFuM,GAAG,EACHhO,MAAM,IAGR02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,UACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,OAMM2tG,EAAAr2G,EAAAC,cAAA,cAASJ,KAAK+C,cAAc0K,WAAWuX,EAAe7iB,MAAtD,YANN,yDAMyIq0G,EAAAr2G,EAAAC,cAAA,cAASJ,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,oBAAoBhV,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAeoe,IAAmB,SAAjL,YANzI,KAQAojF,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,IACT4C,SAAS,CAAC,EAAE,IAEdjC,YAAa,SAAAqG,GAAC,OAAIo/G,EAAKjmH,MAAMsuI,mBAAmBroB,EAAKnjH,cAAciS,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAeoe,OANrI,sBA/IhBojF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPuG,UAAW,UAJb,gCAzBN2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,+BAxaMC,aCkwBb2rI,8MArwBbhnI,MAAQ,CACNg7G,MAAM,KACND,QAAQ,KACRksB,SAAS,KACTxxG,UAAU,KACV0gF,WAAW,KACXlG,YAAY,KACZ/tG,YAAY,KACZ60B,aAAa,KACbigD,aAAa,KACbh1E,cAAc,KACds6G,eAAe,KACfwS,eAAe,KACfz6C,gBAAgB,KAChB6yD,gBAAgB,KAChBC,iBAAiB,KACjBnuB,kBAAiB,EACjBsC,mBAAmB,KACnBE,oBAAoB,KACpBoE,sBAAqB,KAIvBrkH,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK0H,gMAIkBC,EAAUC,0FACjC5H,KAAKkD,cAE2B0E,EAAU+mI,mBAAqB3uI,KAAKwH,MAAMmnI,0CAElEnlI,EAAgBxJ,KAAKwH,MAAMmnI,iBAAiBpyD,WAC5C7yE,EAAc/J,OAAOkR,OAAO7Q,KAAKC,MAAMuzB,qBAAqB,GAAGhqB,YAC1CxJ,KAAK+C,cAAc2tB,gBAAgBlnB,EAAcxJ,KAAKC,MAAM4P,gBAAjF0uB,SACAulF,EAAkB9jH,KAAKwH,MAAMs8G,eAA4D9jH,KAAKwH,MAAMs8G,eAArD9jH,KAAKC,MAAM4kH,UAAUC,QAAU,QACpF9kH,KAAKgI,SAAS,CACZ0B,cACA60B,eACA/0B,gBACAs6G,2BAIE6S,EAA0B/uH,EAAU44G,mBAAqBxgH,KAAKwH,MAAMg5G,iBACpE0K,EAAwBtjH,EAAUk8G,iBAAmB9jH,KAAKwH,MAAMs8G,eAChE8qB,EAAoBhnI,EAAU+1G,aAAe39G,KAAKwH,MAAMm2G,YAAc39G,KAAKwH,MAAMm2G,WAAW9oG,GAAG,GAC/Fg6H,EAAkBz/H,KAAKC,UAAUzH,EAAU6mI,YAAcr/H,KAAKC,UAAUrP,KAAKwH,MAAMinI,WAAazuI,KAAKwH,MAAMm2G,YAAc39G,KAAKwH,MAAMm2G,WAAW9oG,GAAG,IACpJq2G,GAAyB0jB,GAAqBC,GAAmBlY,IACnE32H,KAAK02H,aAGqBtnH,KAAKC,UAAUzH,EAAU42E,gBAAkBpvE,KAAKC,UAAUrP,KAAKwH,MAAMg3E,eAE/Fx+E,KAAK4gH,wMAIS/wF,iFAChBA,EAAS7vB,KAAK+C,cAAckO,MAAM4e,IACtBvsB,UAAWusB,EAAOhb,GAAG,wBAG3B7U,KAAKwH,MAAMqK,YAAc7R,KAAKwH,MAAMsnI,SAAW9uI,KAAKwH,MAAMunI,kCAEtDD,EAAU9uI,KAAKwH,MAAMsnI,QACrBj9H,EAAa7R,KAAKwH,MAAMqK,WAE9Bm9H,GADIA,EAAiBn/G,EAAO5M,IAAIpR,IACAH,MAAMs9H,EAAe/hI,MAAM6hI,sBAEpD,CACLj/G,SACAm/G,mDAKC,0RAGiBrxB,iCAAW,KAC/B8wB,EAAW,KACXzrB,EAAsB,OAC1BrF,EAAaA,GAAc39G,KAAKwH,MAAMm2G,cAEpB39G,KAAK+C,cAAckO,MAAM0sG,GAAY9oG,GAAG,yBAChD7U,KAAKwH,MAAMs8G,sBACZ,gBAMA,kBACA,2CANHd,EAAsB,CACpB1gH,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAClDlpB,KAAI,kBAAA+D,OAAmBg3G,EAAWzwG,QAAQ,GAAtC,2DAKA2iB,EAAS7vB,KAAK+C,cAAcixD,qBAAqB2pD,EAAW39G,KAAKwH,MAAMkC,YAAY/F,oBACxE3D,KAAKivI,YAAYp/G,kBAAlC4+G,YAGIzrB,EADEyrB,EAASO,eAAe58G,IAAIpyB,KAAKwH,MAAMunI,WACnB,CACpBzsI,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAClDlpB,KAAI,kBAAA+D,OAAmB3G,KAAK+C,cAAc0R,iBAAiBg6H,EAASO,eAAe,IAAI9hI,QAAQ,GAA3F,KAAAvG,OAAiG3G,KAAKwH,MAAMs8G,iBAG5F,CACpBlhH,KAAI,uBACJN,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO6a,0EAU9DhsB,KAAKgI,SAAS,CACZymI,WACA9wB,aACAqF,gNAIuBnzF,iFACrBvS,EAAa,KACbw6C,EAAe,KACnBjoC,EAAS7vB,KAAK+C,cAAckO,MAAM4e,GAC5Bq/G,EAAclvI,KAAK+C,cAAckO,MAAM,GAAG+wD,IAAI,KAAKtwD,MAAM,GAAGxE,QAAQ,QAClElN,KAAKwH,MAAMs8G,sBACZ,gBAIA,kBACA,2CAJHxmG,EAAa,WACbw6C,EAAe,CAAC93D,KAAKwH,MAAMkC,YAAYmD,QAAQyE,SAAStR,KAAKwH,MAAMmnI,iBAAiB7xD,qBAAqB98E,KAAK+C,cAAc8wD,aAAahkC,wCAIzIvS,EAAa,qBACP6xH,EAAsBnvI,KAAKwH,MAAMmnI,iBAAiB/xD,OAAO58E,KAAKwH,MAAMs8G,0BACnD9jH,KAAKivI,YAAYp/G,gBAAlC4+G,+BAEAA,EAASO,eAAe58G,IAAIpyB,KAAKwH,MAAMunI,4BACzCj3E,EAAe,CAAC93D,KAAKwH,MAAMkC,YAAYmD,QAAQ7M,KAAK+C,cAAc8wD,aAAahkC,GAAQs/G,EAAoBtiI,QAAS7M,KAAK+C,cAAc8wD,aAAa46E,EAASO,gBAAiBE,oDAEvK,mFAOR,CACL5xH,aACAw6C,sMAImB0oD,mEACrBxgH,KAAKgI,SAAS,CACZw4G,6MAIuBzvG,EAAG8e,EAAOhS,8GAC/B0kG,EAAU,KACR6sB,aAAmBpvI,KAAK+C,cAAciS,gBAAgB,CAAC,YAAY,uBACnEq6H,EAAcrvI,KAAK+C,cAAc0R,iBAAiBob,EAAO7vB,KAAKwH,MAAMkC,YAAY/F,eAC9E3D,KAAKwH,MAAMs8G,sBACZ,gBAaA,kBAYA,2CAxBGwrB,EAAiBv+H,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkB3J,EAAKqE,MAAMmnI,iBAAiB/xD,OAA5B,MAA4C/vE,UAAY,KAC1K0iI,EAAmBx+H,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkB3J,EAAKqE,MAAMmnI,iBAAiB/xD,OAA5B,QAA8C/vE,UAAY,KAC9K2iI,EAAoBF,EAAiBtvI,KAAK+C,cAAc0R,iBAAiBnD,SAASg+H,EAAellI,KAAK,IAAIpK,KAAKwH,MAAMg3E,aAAa76E,UAAY0rI,EAC9II,EAAsBF,EAAmBvvI,KAAK+C,cAAc0R,iBAAiBnD,SAASi+H,EAAiBnlI,KAAK,IAAIpK,KAAKwH,MAAMg3E,aAAa76E,UAAY0rI,EAC1J9sB,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,wCAAA+D,OAAyC6oI,EAAkBtiI,QAAQ,GAAnE,gCAAAvG,OAAoG8oI,EAAoBviI,QAAQ,GAAhI,2CAAAvG,OAA4KyoI,EAA5K,qDAAAzoI,OAA4O3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,QAApQ,8DAIAioH,EAAmB1vI,KAAKwH,MAAMmnI,iBAAiB/xD,OAAO58E,KAAKwH,MAAMs8G,gBACjE6rB,EAAiB5+H,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkB4iI,EAAiB7iI,UAAY,KAC/I+iI,EAAsBD,EAAiB3vI,KAAK+C,cAAc0R,iBAAiBnD,SAASq+H,EAAevlI,KAAK,IAAIslI,EAAiBG,aAAalsI,UAAY3D,KAAK+C,cAAc0R,iBAAiBoJ,EAAO,GAAG6xH,EAAiBG,aAAalsI,UACxO4+G,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,wCAAA+D,OAAyCipI,EAAoB1iI,QAAQ,GAArE,KAAAvG,OAA2E3G,KAAKwH,MAAMs8G,eAAtF,uHAAAn9G,OAA0NyoI,EAA1N,qDAAAzoI,OAA0R3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,QAAlT,8DAKAqoH,EAAqB9vI,KAAKwH,MAAMmnI,iBAAiB/xD,OAAO58E,KAAKwH,MAAMs8G,gBACnEisB,EAAmBh/H,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBgjI,EAAmBjjI,UAAY,KACnJmjI,EAAwBD,EAAmB/vI,KAAK+C,cAAc0R,iBAAiBnD,SAASy+H,EAAiB3lI,KAAK,IAAI0lI,EAAmBD,aAAalsI,UAAY3D,KAAK+C,cAAc0R,iBAAiBoJ,EAAO,GAAGiyH,EAAmBD,aAAalsI,UAClP4+G,EAAU,CACRngH,KAAK,UACLI,UAAU,CACRF,MAAMtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAEpDlpB,KAAI,wCAAA+D,OAAyCqpI,EAAsB9iI,QAAQ,GAAvE,KAAAvG,OAA6E3G,KAAKwH,MAAMs8G,eAAxF,6HAAAn9G,OAAkOyoI,EAAlO,qDAAAzoI,OAAkS3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,QAA1T,kGAQN+6F,EAAQxiH,KAAKwH,MAAMg7G,OACjB,GAAG12F,WAAY,EAEfs7F,GAAuB,YACFpnH,KAAK+C,cAAc2tB,gBAAgB1wB,KAAKwH,MAAMgC,cAAcxJ,KAAKC,MAAM4P,iBAA5F0uB,SAINv+B,KAAKgI,SAAS,CACZw6G,QACAD,UACAhkF,eACA6oF,iVAKEt+E,EAAM,KACJ05E,EAAQ,GACVD,EAAU,KACVusB,EAAU,KACVC,EAAY,KACZl9H,EAAa,KACbL,EAAc,KACdgtE,EAAe,KACfyxD,EAAmB,KACnBntB,EAAqB,KAEnB4sB,EAAmB1vI,KAAKwH,MAAMmnI,iBAAiB/xD,OAA5B,MACnBkzD,EAAqB9vI,KAAKwH,MAAMmnI,iBAAiB/xD,OAA5B,QACrBszD,EAAsBR,EAAiBG,aACvCM,EAAwBL,EAAmBD,uBAE3CnvH,QAAQqD,IAAI,CAChB/jB,KAAKC,MAAMqnC,aAAaooG,EAAiBvtI,KAAKutI,EAAiB7iI,QAAQ6iI,EAAiBnoG,KACxFvnC,KAAKC,MAAMqnC,aAAawoG,EAAmB3tI,KAAK2tI,EAAmBjjI,QAAQijI,EAAmBvoG,KAC9FvnC,KAAKC,MAAMqnC,aAAa4oG,EAAoB/tI,KAAK+tI,EAAoBrjI,QAAQqjI,EAAoB3oG,KACjGvnC,KAAKC,MAAMqnC,aAAa6oG,EAAsBhuI,KAAKguI,EAAsBtjI,QAAQsjI,EAAsB5oG,gCAQ/F7mB,QAAQqD,IAAI,CAEpB/jB,KAAK+C,cAAc2tB,gBAAgBg/G,EAAiBvtI,KAAKnC,KAAKC,MAAM4P,SAEpE7P,KAAK+C,cAAc2tB,gBAAgBo/G,EAAmB3tI,KAAKnC,KAAKC,MAAM4P,SAEtE7P,KAAK+C,cAAc2tB,gBAAgBw/G,EAAoB/tI,KAAKnC,KAAKC,MAAM4P,SAEvE7P,KAAK+C,cAAc2tB,gBAAgBy/G,EAAsBhuI,KAAKnC,KAAKC,MAAM4P,+CAZzEugI,OACAC,OACAC,OACAC,OAaIC,EAAkBJ,GAAqBC,GAAuBD,EAAkBv7H,GAAG,IAAMw7H,EAAoBx7H,GAAG,QAG9G7U,KAAKwH,MAAMs8G,sBACZ,iBAGA,oBAGA,0CALHtlC,EAAex+E,KAAKC,MAAMykH,UAAUptF,6CAGpCknD,EAAesxD,EAAmBD,iDAGlCrxD,EAAekxD,EAAiBG,iFAM9BV,EAAsBnvI,KAAKwH,MAAMmnI,iBAAiB/xD,OAAO58E,KAAKwH,MAAMs8G,iBAEtEtlC,uBACE2wD,oCAKQzuH,QAAQqD,IAAI,CACpB/jB,KAAK+C,cAAcguB,oBAAoBytD,EAAar8E,KAAK,cACzDnC,KAAK+C,cAAcguB,oBAAoBytD,EAAar8E,KAAK,aAAa,CAACgtI,EAAoBtiI,UAC3F7M,KAAK+C,cAAcguB,oBAAoBytD,EAAar8E,KAAK,eAAe,CAACnC,KAAKwH,MAAMkC,YAAYmD,QAAQsiI,EAAoBtiI,gDAN5HiiI,OACAC,QACAl9H,UASM2sH,EAAwC,UAA9Bx+H,KAAKwH,MAAMs8G,eACrBhnC,EAAsB98E,KAAKwH,MAAMmnI,iBAAiB7xD,oBAClDtqE,GAA6B,IAApBsqE,EAA2BzqE,KAAKg5B,OAAjC,MACdx5B,EAAa7R,KAAK+C,cAAc0R,iBAAiB5C,EAAW7R,KAAKwH,MAAMkC,YAAY/F,UAC7E8sI,EAAWjS,EAAU3sH,EAAa7R,KAAK+C,cAAckO,MAAM,GAAGS,MAAMG,GAAYoR,IAAIpR,GAC1Fi3B,EAAM9oC,KAAK+C,cAAckO,MAAM,KAAKhE,MAAMwjI,GAAUxjI,MAAM,KAAKgW,IAAIzQ,IAIjEs8H,IACFA,EAAU9uI,KAAK+C,cAAc0R,iBAAiBq6H,EAAQ,kBAIlD9uI,KAAKwH,MAAMs8G,sBACZ,iBAiCA,oBAgCA,0CAhEHhB,EAAkB,sCAClBP,EAAU,CACRngH,KAAK,iBACLQ,KAAI,SAAA+D,OAAU3G,KAAKwH,MAAMgC,cAArB,gYAAA7C,OAAia3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,QAAzb,4BAGN+6F,EAAMr1G,KAAK,CACT/K,KAAK,WACLq1G,YAAYqL,EACZh3F,UAAU9rB,KAAKwH,MAAMg5G,mBAGvBgC,EAAMr1G,KAAK,CACT/K,KAAK,WACL0pB,UAAU0kH,EACV/4B,YAAW,kCAGb+K,EAAMr1G,KAAK,CACT/K,KAAK,SACLq1G,YAAW,6CACX3rF,UAAUwkH,GAA4BA,EAAyBz7H,GAAG,GAClE7O,KAAI,0CAAAW,OAA2C3G,KAAKwH,MAAMmnI,iBAAiB/xD,OAA5B,MAA4CizD,aAAahjI,QAApG,OAGN21G,EAAMr1G,KAAK,CACT/K,KAAK,SACLq1G,YAAW,+CACX3rF,UAAUykH,GAA8BA,EAA2B17H,GAAG,GACtE7O,KAAI,0CAAAW,OAA2C3G,KAAKwH,MAAMmnI,iBAAiB/xD,OAA5B,QAA8CizD,aAAahjI,QAAtG,2CAIF7M,KAAKwH,MAAMinI,UACbwB,EAAmBjwI,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAMinI,SAAS5+G,OAAO7vB,KAAKwH,MAAMkC,YAAY/F,UACzG6N,EAAcxR,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAMinI,SAASO,eAAexwD,EAAa76E,UAClG4+G,EAAU,CACRngH,KAAK,eACLQ,KAAI,wBAAA+D,OAAyBspI,EAAiB/iI,QAAQ,GAAlD,KAAAvG,OAAwD3G,KAAKwH,MAAMgC,cAAnE,wDAAA7C,OAAuI6K,EAAYtE,QAAQ,GAA3J,KAAAvG,OAAiK3G,KAAKwH,MAAMgC,cAA5K,oFAGN+4G,EAAU,CACRngH,KAAK,eACLQ,KAAI,iCAAA+D,OAAkC3G,KAAKwH,MAAMgC,cAA7C,kGAKR+4G,EAAQ3/G,MAAR,GAAA+D,OAAiBmiC,EAAG,4BAAAniC,OAA+B3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,QAAvD,kFAAA9gB,OAA+ImiC,EAAI57B,QAAQ,GAA3J,cAA4K,KAAhM,2JAAAvG,OAA8V3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,QAAtX,iGAGAq7F,EAAkB,6CAClBN,EAAMr1G,KAAK,CACT/K,KAAK,WACLq1G,YAAYqL,EACZh3F,UAAU9rB,KAAKwH,MAAMg5G,mBAGvBgC,EAAMr1G,KAAK,CACT/K,KAAK,WACL0pB,UAAUukH,GAAuBA,EAAoBx7H,GAAG,GACxD4iG,YAAW,gCAAA9wG,OAAiC3G,KAAKwH,MAAMgC,qDAIrDxJ,KAAKwH,MAAMinI,UACbwB,EAAmBjwI,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAMinI,SAAS5+G,OAAO7vB,KAAKwH,MAAMkC,YAAY/F,UACzG6N,EAAcxR,KAAK+C,cAAc0R,iBAAiBzU,KAAKwH,MAAMinI,SAASO,eAAexwD,EAAa76E,UACrE,GAC7B4+G,EAAU,CACRngH,KAAK,cACLQ,KAAI,wBAAA+D,OAAyBspI,EAAiB/iI,QAAQ,GAAlD,KAAAvG,OAAwD3G,KAAKwH,MAAMgC,cAAnE,sDAAA7C,OAAqI6K,EAAYtE,QAAQ,GAAzJ,KAAAvG,OAA+J3G,KAAKwH,MAAMgC,cAA1K,aAAA7C,OAAwN,aAAAA,OAHjM,GAGiM,iCAAxN,6FAGN47G,EAAU,CACRngH,KAAK,cACLQ,KAAI,+BAAA+D,OAAgC3G,KAAKwH,MAAMgC,cAA3C,oHAIR+4G,EAAQ3/G,MAAR,GAAA+D,OAAiBmiC,EAAG,4BAAAniC,OAA+B3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,QAAvD,8EAAA9gB,OAA2ImiC,EAAI57B,QAAQ,GAAvJ,KAA+J,KAAnL,oKAAAvG,OAA0V3G,KAAKC,MAAMwB,MAAMC,OAAO+lB,QAAlX,iGAGAq7F,EAAkB,2CAClBN,EAAMr1G,KAAK,CACT/K,KAAK,WACLq1G,YAAYqL,EACZh3F,UAAU9rB,KAAKwH,MAAMg5G,mBAGvBgC,EAAMr1G,KAAK,CACT/K,KAAK,WACL0pB,UAAUskH,GAAqBA,EAAkBv7H,GAAG,GACpD4iG,YAAW,8BAAA9wG,OAA+B3G,KAAKwH,MAAMgC,mFAO9B,EAC7BxJ,KAAKgI,SAAS,CACZ8gC,MACA05E,QACAD,UACAusB,UACAC,YACAl9H,aACA2sE,eACAskC,qBACAsE,sBAV2B,4QAgBzBrgE,EAAWz1C,SAASe,KAAKg5B,MAAM,KAC/BwwC,EAAkB77E,KAAKC,MAAMykH,UAAUxoC,UAAUx3C,OAAQ,SAACpV,EAAOkI,EAAEzxB,GACvE,GAAIyxB,EAAEslD,oBAAoB/1B,EAAS,CACjC,IAAMg0B,EAAiB1wE,EAAKtH,cAAcqP,YAAkC,IAAtBolB,EAAEslD,qBAA0BC,MAAMvnE,OAAO,uBAAuB,OAChHpT,EAAI,iBAAAuE,OAAoB6wB,EAAE+kD,WAAtB,QACJ/uE,EAAK,eAAA7G,OAAkB6wB,EAAE+kD,WAApB,mBAAA51E,OAAgDo0E,GAC3DzrD,EAAOniB,KAAK,CACV/K,OACAoL,QACApD,KAAKotB,EACL9sB,MAAMqwE,IAGV,OAAOzrD,GACP,aAEsBtvB,KAAK+C,cAAcm9B,6BAArCjD,SACAyxG,EAAkB7yD,EAAgB73E,OAAS63E,EAAgB,GAAK,KAEtE77E,KAAKgI,SAAS,CACZi1B,YACAyxG,kBACA7yD,mBACA,WACI6yD,GACFrkI,EAAKqmI,eAAehC,sLAKLryD,yEACbsyD,EAAmBtyD,EAASjyE,KAClCpK,KAAKgI,SAAS,CACZ2mI,0JAIM7qB,GACR9jH,KAAKgI,SAAS,CACZ87G,oDAIK,IAAAhH,EAAA98G,KAED2wI,EAAuC,SAA9B3wI,KAAKwH,MAAMs8G,eACpB8sB,EAA2C,UAA9B5wI,KAAKwH,MAAMs8G,eACxB+sB,EAA6C,YAA9B7wI,KAAKwH,MAAMs8G,eAC1B2V,EAAWkX,EAAS3wI,KAAKwH,MAAMs8G,eAAd,OAAAn9G,OAAsC3G,KAAKwH,MAAMs8G,gBAwGxE,OACEtN,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjB,KAAKwH,MAAMq0E,gBAmBV26B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGbjB,KAAKwH,MAAMq0E,gBAAgB73E,OAU1BwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,oBAGA0oG,EAAAr2G,EAAAC,cAAC2Z,EAAA,EAADpa,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEkC,KAAM,WACNiZ,cAAc,EACdjB,QAASna,KAAKwH,MAAMq0E,gBACpBthE,kBAlKM,SAAAta,GACxB,IAAMuN,EAAQvN,EAAMuN,MACd9D,EAAc,CAClBtH,KAAKnC,EAAMmK,KAAKhI,MAGlB,OACEo0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,UAEZy1G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP9D,YAAaA,EACb0V,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHvB,MAAM,MACNiC,OAAO,UAIby0G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP4R,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,mBAgIA+X,aAAcra,KAAKwH,MAAMknI,gBACzBryH,SAAUrc,KAAK0wI,eAAe/xH,KAAK3e,MACnCwa,qBAzHS,SAAAva,GAE3B,IACMib,GAA4D,IADlDjb,EAAMib,YAAYf,QACN6B,QAAQ/b,EAAMib,YAAYxQ,OAAgBzK,EAAMib,YAAYxQ,MAAQ,KAEhG,IAAKwQ,EACH,OAAO,KAGT,IAAM1N,EAAQ0N,EAAY1N,MACpB9D,EAAc,CAClBtH,KAAK8Y,EAAY9Y,MAGnB,OACEo0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACEyG,MAAO,CACLoZ,KAAK,KAEPxe,eAAgB,iBACZhB,EAAMya,YAEV87F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CACE2B,EAAG,EACHzB,MAAO,GACHG,EAAMya,WAHZ,CAIE3Z,WAAY,SACZC,cAAe,MACfqF,MAAO,CAACoI,OAAO,WACfxN,eAAgB,eAEhBu1G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP9D,YAAaA,EACb0V,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,UAIby0G,EAAAr2G,EAAAC,cAAC2nH,EAAA,EAAD,CACE/2G,MAAOxD,EACP4R,UAAW,CACTjd,KAAK,YACLlC,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZD,WAAW,IACXH,MAAM,uBA4EFtC,KAAKwH,MAAMmnI,kBACTn4B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,kBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOorI,EAAS,EAAI,GAEtB7wI,MAAO,CAAC,EAAE,OACVi9G,QAAS,gBACTK,SAAU,kBACVp7G,SAAUhC,KAAKC,MAAM+B,SACrB8uI,WAAY,qDACZ7uI,WAAY,CACV6L,GAAG,EACH/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUowI,EACVlwI,YAAc,SAAAqG,GAAC,OAAIg2G,EAAK8c,UAAU,WAEpCpjB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOqrI,EAAa,EAAI,GAE1B9wI,MAAO,CAAC,EAAE,OACVi9G,QAAS,YACTK,SAAU,mBACVp7G,SAAUhC,KAAKC,MAAM+B,SACrB8uI,WAAY,wDACZ7uI,WAAY,CACV6L,GAAG,EACH/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUqwI,EACVnwI,YAAc,SAAAqG,GAAC,OAAIg2G,EAAK8c,UAAU,YAEpCpjB,EAAAr2G,EAAAC,cAACurH,EAAA,EAAD,CACErmH,YAAa,CACX1E,GAAG,EACH2E,OAAOsrI,EAAe,EAAI,GAE5B/wI,MAAO,CAAC,EAAE,OACVi9G,QAAS,cACT/6G,SAAUhC,KAAKC,MAAM+B,SACrBo7G,SAAU,qBACV0zB,WAAY,yDACZ7uI,WAAY,CACV6L,GAAG,EACH/L,OAAO/B,KAAKC,MAAM+B,SAAW,OAAS,QAExCzB,SAAUswI,EACVpwI,YAAc,SAAAqG,GAAC,OAAIg2G,EAAK8c,UAAU,eAIpC55H,KAAKwH,MAAMkC,aAAe1J,KAAKwH,MAAM+2B,cAAgBv+B,KAAKwH,MAAMg3E,cAC9Dg4B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJkF,GAAI,EACJhO,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEiR,OAAQuoH,EACRv8G,MAAOld,KAAKwH,MAAM0V,MAClBslG,MAAOxiH,KAAKwH,MAAMg7G,MAClBD,QAASviH,KAAKwH,MAAM+6G,QACpB74G,YAAa1J,KAAKwH,MAAMkC,YACxB60B,aAAcv+B,KAAKwH,MAAM+2B,aACzBigD,aAAcx+E,KAAKwH,MAAMg3E,aACzBz2E,SAAU/H,KAAKonH,qBAAqBzoG,KAAK3e,MACzCwgH,iBAAkBxgH,KAAKwgH,iBAAiB7hG,KAAK3e,MAC7C8iH,mBAAoB9iH,KAAKwH,MAAMs7G,mBAC/BE,oBAAqBhjH,KAAKwH,MAAMw7G,oBAChCpC,oBAAqB5gH,KAAK4gH,oBAAoBjiG,KAAK3e,MACnD8d,qBAAsB9d,KAAK8d,qBAAqBa,KAAK3e,QAErDw2G,EAAAr2G,EAAAC,cAACw4G,EAAA,EAADj5G,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE06G,YAAY,EACZ7B,iBAAkB,GAClBI,SAAUl5G,KAAKwH,MAAMgC,qBA7HvCgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPuG,UAAW,UAJb,mCAzBN2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,yCA5mBMC,gHCgTbkuI,8MAhTbvpI,MAAQ,CACNkC,YAAY,KACZ0rH,kBAAkB,KAClBC,kBAAkB,KAClB4U,oBAAmB,EACnB3U,2BAA2B,QAI7BvyH,cAAgB,OA0ChBiuI,gBAAkB,SAACxnI,GACjB,IAAMynI,EAAc/rI,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,mBAChE9P,EAAKjF,MAAM8G,YAAX,SAAAJ,OAAgCsqI,EAAYpzD,MAA5C,KAAAl3E,OAAqD6C,OAGvD+rH,sDAAkB,SAAAn1G,EAAOg1G,GAAP,IAAAprB,EAAAqrB,EAAAC,EAAA,OAAA7kG,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,OACVo5F,EAAY9kG,EAAKjF,MAAMykH,UAAU/0G,gBAAgBylH,GAEnDC,EAAoB,KAClBC,EAA6B,IAE6C,qBAA7CpwH,EAAKjF,MAAMykH,UAAUlxF,oBAAsCtuB,EAAKjF,MAAMykH,UAAUlxF,oBAAsB7zB,OAAOoE,KAAKmB,EAAKjF,MAAMuzB,sBAE5IvvB,QAAS,SAAA68B,GAC3B,IACM0e,EAD2Bt6C,EAAKjF,MAAMuzB,oBAAoBsN,GAChBkpE,EAAU/tE,WAC1D,IAAKujB,EACH,OAAO,SAIFA,EAAgBp9C,KAElBizH,IACHA,EAAoB71E,EAAgBztB,KAAK/gB,OAE3CwuC,EAAgB1e,SAAWA,EAC3B0e,EAAgBvjB,UAAY+tE,EAAU/tE,UACtCq5F,EAA2B91E,EAAgBztB,KAAK/gB,OAASwuC,IAG3Dt6C,EAAK8C,SAAS,CACZ0B,YAAY,KACZ0rH,oBACAE,8BACA,WACApwH,EAAKswH,gBAAgBH,KA/BP,wBAAA/0G,EAAAvO,SAAAqO,EAAApgB,iEAmClBw1H,sDAAkB,SAAA30G,EAAOw0G,GAAP,IAAA/6B,EAAA0P,EAAAtgG,EAAAw7C,EAAAlrB,EAAA,OAAAvJ,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cAEV0pF,EAAkBp1F,EAAKsC,MAAM8tH,2BAA2BD,GACxDrrB,EAAY9kG,EAAKjF,MAAMykH,UAAU/0G,gBAAgBzK,EAAKsC,MAAM4tH,oBAE5D1rH,EAAc,CAClBsH,MAAMspF,EAAgBr+D,UACtBpvB,QAAQytF,EAAgBztF,QACxBlJ,SAAS22F,EAAgB32F,WAIfouB,KAAOuoE,EAAgBvoE,KAG7BmzB,EAAc,CAClB3d,IAAIyiE,EAAUziE,IACdplC,KAAK6nG,EAAUh5F,MACfA,MAAMg5F,EAAUh5F,MAChBnE,QAAQm9F,EAAUn9F,SAGdmtB,EAAoB90B,EAAKjF,MAAMykH,UAAU1qF,kBAG3CgwE,EAAUkhC,kBACZlxG,EAAkBkF,UAAU,GAAG/8B,KAAO6nG,EAAUkhC,iBAGlDxhI,EAAYqwB,UAAY,CACtBjI,SAAQ,EACRozB,cACAlrB,oBACAiwG,oBAAmB,GAjCLjpH,EAAApQ,KAAA,GAoCV1L,EAAKjF,MAAMkrI,iBAAiB7wC,EAAgBx5D,SAASkpE,EAAU/tE,WApCrD,QAsChB/2B,EAAK8C,SAAS,CACZ0B,cACA2rH,sBAxCc,yBAAAr0G,EAAAjP,SAAA8O,EAAA7gB,iEA4ClBqqI,kBAAoB,WAClBnlI,EAAK8C,SAAS,CACZiiI,oBAAmB,gFA7HjBjqI,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,mKAK9CD,KAAKkD,qBACClD,KAAK21H,gRAILP,EAAoBp1H,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAMykH,UAAU/0G,gBAAgB3P,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAM4kH,UAAUC,OAASnlH,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAiB,YAEvM3P,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAjE,eAAAgR,EAAAhhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAkF,SAAAiD,EAAOtC,GAAP,IAAAtH,EAAA,OAAA+mB,EAAAtwB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,UAChFlH,EAAcvG,EAAKlD,MAAMykH,UAAU/0G,gBAAgBqB,GACnC7N,EAAKJ,cAAco0B,kBAAkBztB,EAAYsH,SACjDtH,EAAY69B,IAHoD,CAAA/zB,EAAA5C,KAAA,eAAA4C,EAAA5C,KAAA,EAI9EzN,EAAKlD,MAAMqnC,aAAa59B,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY69B,KAJI,wBAAA/zB,EAAAzB,SAAAuB,EAAAtT,SAAlF,gBAAAgS,GAAA,OAAA2O,EAAA1O,MAAAjS,KAAAkS,YAAA,WAQFkjH,GAAqBA,IAAsBp1H,KAAKC,MAAM4kH,UAAUC,QAClE9kH,KAAKgxI,gBAAgB5b,GAGvBp1H,KAAKu1H,gBAAgBH,wLAGEztH,EAAUC,sEACjC5H,KAAKkD,cAEoByE,EAAUk9G,UAAUC,SAAW9kH,KAAKC,MAAM4kH,UAAUC,wCAErE9kH,KAAK21H,mJAgGb,OAAK31H,KAAKwH,MAAM4tH,kBAKd5e,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP8I,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,4BAGA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJoa,aAAa,EACbpE,cAAc,EACdiB,SAAUrc,KAAKgxI,gBACfxnI,cAAexJ,KAAKwH,MAAM4tH,kBAC1BzlH,gBAAiB3P,KAAKC,MAAMykH,UAAU/0G,oBAIxC3P,KAAKwH,MAAM8tH,4BAA8Bt1H,KAAKwH,MAAM6tH,mBAClD7e,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,6BAGA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJoa,aAAa,EACbnD,SAAUrc,KAAKw1H,gBACfhsH,cAAexJ,KAAKwH,MAAM6tH,kBAC1B1lH,gBAAiB3P,KAAKwH,MAAM8tH,+BAKlCt1H,KAAKwH,MAAM4tH,mBAAqBp1H,KAAKwH,MAAM6tH,kBACzC7e,EAAAr2G,EAAAC,cAACqrI,GAAA,EAAD9rI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0rI,aAAa,EACb/zD,eAAe,EACfg0D,iBAAiB,EACjBliI,YAAa1J,KAAKwH,MAAMkC,YACxB2gI,kBAAmBrqI,KAAKqqI,kBACxB7gI,cAAexJ,KAAKwH,MAAM4tH,kBAC1BhiH,iBAAkBpT,KAAKC,MAAMmT,mBAG1BpT,KAAKC,MAAM4P,QAoCV2mG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAIH5I,KAAKwH,MAAMyiI,mBACTzzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,YAErD0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,QAMQ7I,KAAKwH,MAAM4tH,kBANnB,sCAUF5e,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,sBAMsB7I,KAAKwH,MAAM4tH,kBANjC,sBAvER5e,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,QACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,uDAQA2tG,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM23G,2BAL1B,cA+DR,OAxJH,YAlJgB/0G,aC2xBdquI,8MAxwBb1pI,MAAQ,CACNiiI,UAAS,EACTvnD,YAAY,GACZwnD,YAAW,EACXx4H,OAAO,UACPkxE,cAAc,GACd14E,YAAY,KACZqT,WAAW,CACTijE,MAAM,CACJhjE,OAAO,KACPC,SAAQ,IAGZ2sH,cAAa,EACbpgI,cAAc,KACdsgI,gBAAe,EACfC,gBAAe,EACfE,oBAAmB,EACnB31D,oBAAoB,KACpB61D,2BAA0B,EAC1B7U,2BAA2B,QAI7BvyH,cAAgB,OAwGhBwyH,sDAAkB,SAAAn1G,EAAO5W,GAAP,IAAA8qE,EAAA22D,EAAAzrF,EAAA91C,EAAAw7C,EAAAlrB,EAAA,OAAAvJ,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,cAEV0jE,EAAsBpvE,EAAKjF,MAAMykH,UAAU/0G,gBAAgBnG,GAC3DyhI,EAA2B/lI,EAAKjF,MAAMuzB,oBAAoB8gD,EAAoBxzC,UAE9E0e,EAAkByrF,EAAwB32D,EAAoBr4C,YAE9DvyB,EAAc,CAClBsH,MAAMsjE,EAAoBr4C,UAC1BpvB,QAAQynE,EAAoBznE,QAC5BlJ,SAAS2wE,EAAoB3wE,WAInBouB,KAAOytB,EAAgBztB,KAG7BmzB,EAAc,CAClB3d,IAAI+sC,EAAoB/sC,IACxBplC,KAAKmyE,EAAoBnyE,KACzB6O,MAAMsjE,EAAoBtjE,MAC1BnE,QAAQynE,EAAoBznE,SAGxBmtB,EAAoBs6C,EAAoBt6C,kBAG1CwlB,EAAgB0rF,kBAClBlxG,EAAkBkF,UAAU,GAAG/8B,KAAOq9C,EAAgB0rF,iBAGxDxhI,EAAYqwB,UAAY,CACtBjI,SAAQ,EACRozB,cACAlrB,oBACAiwG,oBAAmB,GAnCL3pH,EAAA1P,KAAA,GAsCV1L,EAAKjF,MAAMkrI,iBAAiB72D,EAAoBxzC,SAAS0e,EAAgBvjB,WAtC/D,QAwChB/2B,EAAK8C,SAAS,CACZ0B,cACAF,gBACA8qE,wBA3Cc,yBAAAh0D,EAAAvO,SAAAqO,EAAApgB,iEA+ClBggF,2BAAQ,SAAAn/D,IAAA,IAAAuqH,EAAAC,EAAAC,EAAA,OAAA76G,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,UACD1L,EAAKsC,MAAMsiI,eADV,CAAA9oH,EAAApQ,KAAA,eAAAoQ,EAAAK,OAAA,SAEG,MAFH,QAKU,EACO,EACjB+pH,EAAUzrI,OAAOoE,KAAKmB,EAAKsC,MAAM46E,eAAe,GAEhDipD,EAAgB,SAACt6H,EAAGmM,GACxB,IAAMulC,EAA4B,YAAd1xC,EAAGI,OAGjBgM,EAAY,CAChBC,cAAa,iBACbG,YAAa,QACbF,WAAYnY,EAAKjF,MAAMuJ,cACvBm4G,WAAYrwG,SAXO,IAcjB4L,IACFC,EAAUE,WAAanY,EAAKnC,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrBjM,EAAKnC,cAAc2a,yBAAyBP,GAG9CjY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmiI,eAAetnF,EACf1lC,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERijE,MAAM,CACJhjE,OAAO,KACPC,SAAQ,SAMVquH,EAAuB,SAACv6H,GAC5B,IAAMiM,EAASjM,EAAG6M,gBAClB1Y,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERijE,MAAMrgF,OAAAw4B,EAAA,EAAAx4B,CAAA,GACDiI,EAAUmV,WAAWijE,MADrB,CAEHhjE,iBAMR9X,EAAKjF,MAAMie,0BAA0BhZ,EAAKsC,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAM,WAAY,CAACipI,GAAU,KAAMC,EAAeC,GAExIpmI,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERijE,MAAMrgF,OAAAw4B,EAAA,EAAAx4B,CAAA,GACDiI,EAAUmV,WAAWijE,MADrB,CAEH/iE,SAxDU,SALV,wBAAA+D,EAAAjP,SAAA8O,EAAA7gB,WAmER45H,UAAY,SAAC1oH,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAUgjB,SAAShjB,EAAOpE,gBAC1D5H,EAAK8C,SAAS,CACZkJ,cAKNm5H,kBAAoB,WAClBnlI,EAAKolI,cACLplI,EAAK8C,SAAS,CACZiiI,oBAAmB,gFAlOjBjqI,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,mKAK9CD,KAAKkD,qBACClD,KAAK21H,0SAKLthC,EAAwBr0F,KAAKwH,MAAM8sE,oBAAoBt6C,2BAEvDtZ,QAAQqD,IAAI,CAChB/jB,KAAKC,MAAMqnC,aAAa+sD,EAAsBlyF,KAAKkyF,EAAsBxnF,QAAQwnF,EAAsB9sD,KACvGvnC,KAAKC,MAAMqnC,aAAatnC,KAAKwH,MAAM8sE,oBAAoBnyE,KAAKnC,KAAKwH,MAAM8sE,oBAAoBznE,QAAQ7M,KAAKwH,MAAM8sE,oBAAoB/sC,8BAG3E7mB,QAAQqD,IAAI,CACnE/jB,KAAK+C,cAAcguB,oBAAoB/wB,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAK,aAC7FnC,KAAK+C,cAAcmhE,mBAAmBlkE,KAAKwH,MAAM8sE,oBAAoBnyE,KAAKkyF,EAAsBxnF,QAAQ7M,KAAKC,MAAM4P,iDAF9G6xE,OAAeyoD,OAKhBriI,EAAW,GACXs6E,EAAgB,GAChBF,EAAc,GAChB4nD,GAAiB,EAEE,OAAnBpoD,mBACOC,EAAa,eAAGA,GAAcD,qCACChhE,QAAQqD,IAAI,CAChD/jB,KAAK+C,cAAcguB,oBAAoB/wB,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAK,cAAc,CAACw/E,IAC5G3hF,KAAK+C,cAAcguB,oBAAoB/wB,KAAKwH,MAAM8sE,oBAAoBt6C,kBAAkB73B,KAAK,gBAAgB,CAACnC,KAAKC,MAAM4P,QAAQ8xE,0CAF9HI,OAAWE,OAIZF,GAA6B,OAAfA,IAChBG,EAAYP,GAAc3hF,KAAK+C,cAAc0R,iBAAiBstE,EAAW/hF,KAAKwH,MAAM8sE,oBAAoB3wE,WAErF,OAAjBs+E,IACFA,EAAejiF,KAAK+C,cAAc0R,iBAAiBwtE,EAAajiF,KAAKwH,MAAM8sE,oBAAoB3wE,WAC9EkR,GAAG,KAElButE,EAAcT,GAAcM,EAExBN,EAAaD,IACfooD,GAAiB,YAf+BnoD,4BAqBxD75E,EAASs6E,cAAgBA,UAGrBwnD,EAAgBxnD,GAAiBziF,OAAOoE,KAAKq+E,GAAep+E,OAAO,EAEnEmtI,EAAqBnxI,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,mBACjEo8H,EAA+BD,EAAmBrG,eAExDhjI,EAASiiI,gBAAiB,EAC1BjiI,EAASo6E,YAAcA,EACvBp6E,EAASgiI,eAAiBA,EAC1BhiI,EAAS8hI,aAAeA,EACxB9hI,EAAS4hI,YAAcE,GAAgBwH,EACvCtpI,EAAS2hI,SAAWK,GAAkBF,EACtC9hI,EAASoJ,OAAS04H,EAAe,SAAW,UAC5C9hI,EAASqiI,0BAA4BA,EAErCnqI,KAAKgI,SAASF,uQAIR0B,EAAgBxJ,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAMykH,UAAU/0G,gBAAgB3P,KAAKC,MAAM4kH,UAAUC,QAAU9kH,KAAKC,MAAM4kH,UAAUC,OAASnlH,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAiB,YAEnM3P,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAK/D,KAAKC,MAAMykH,UAAU/0G,iBAAjE,eAAA4hB,EAAA5xB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAkF,SAAAuR,EAAO5Q,GAAP,IAAAtH,EAAA,OAAA+mB,EAAAtwB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,UAChFlH,EAAcvG,EAAKlD,MAAMykH,UAAU/0G,gBAAgBqB,GACnC7N,EAAKJ,cAAco0B,kBAAkBztB,EAAYsH,SACjDtH,EAAY69B,IAHoD,CAAAzlB,EAAAlR,KAAA,eAAAkR,EAAAlR,KAAA,EAI9EzN,EAAKlD,MAAMqnC,aAAa59B,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY69B,KAJI,wBAAAzlB,EAAA/P,SAAA6P,EAAA5hB,SAAlF,gBAAAohB,GAAA,OAAAmQ,EAAAtf,MAAAjS,KAAAkS,YAAA,WAQNlS,KAAKu1H,gBAAgB/rH,wLAGE7B,EAAUC,sEACjC5H,KAAKkD,cAEoByE,EAAUk9G,UAAUC,SAAW9kH,KAAKC,MAAM4kH,UAAUC,wCAErE9kH,KAAK21H,oBAGgB/tH,EAAU4B,gBAAkBxJ,KAAKwH,MAAMgC,eAElExJ,KAAKsqI,oJAqIA,IAAAjgI,EAAArK,KAEP,IAAKA,KAAKwH,MAAMgC,cACd,OAAO,KAGT,IACM4nI,EADqBpxI,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,mBACf81H,eAElDM,EAAUprI,KAAKwH,MAAM46E,eAAiBziF,OAAOoE,KAAK/D,KAAKwH,MAAM46E,eAAep+E,OAAO,EAAIrE,OAAOoE,KAAK/D,KAAKwH,MAAM46E,eAAe,GAAK,KAClIH,EAAejiF,KAAKwH,MAAM46E,eAAiBziF,OAAOkR,OAAO7Q,KAAKwH,MAAM46E,eAAep+E,OAAO,EAAIrE,OAAOkR,OAAO7Q,KAAKwH,MAAM46E,eAAe,GAAK,KAEjJ,OACEo0B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP8I,GAAI,CAAC,EAAE,GACP7H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,4BAGA0oG,EAAAr2G,EAAAC,cAAC6e,EAAA,EAADtf,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEmF,GAAI,aACJoa,aAAa,EACbpE,cAAc,EACdiB,SAAUrc,KAAKu1H,gBACf/rH,cAAexJ,KAAKwH,MAAMgC,cAC1BmG,gBAAiB3P,KAAKC,MAAMykH,UAAU/0G,qBAIvC3P,KAAKwH,MAAMkiI,YAAc1pI,KAAKwH,MAAMiiI,WACnCjzB,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFxB,GAAG,EACH6I,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAOnC,KAAKwH,MAAM2iI,0BAA4B,WAAa,WAC3D7nI,MAAQtC,KAAKwH,MAAM2iI,0BAA4BnqI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAEzG0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPuG,UAAW,QAJb,yCASF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAOnC,KAAKwH,MAAMoiI,aAAe,WAAa,WAC9CtnI,MAAQtC,KAAKwH,MAAMoiI,aAAe5pI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAE5F0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPuG,UAAW,QAJb,gBAMgB7I,KAAKwH,MAAM8sE,oBAAoBtjE,QAGjDwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAOnC,KAAKwH,MAAMsiI,eAAiB,WAAa,SAChDxnI,MAAQtC,KAAKwH,MAAMsiI,eAAiB9pI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAE9F0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPuG,UAAW,QAJb,sCASF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAOnC,KAAKwH,MAAMuiI,eAAiB,WAAa,SAChDznI,MAAQtC,KAAKwH,MAAMuiI,eAAiB/pI,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UAAY,aAE9F0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJhD,SAAU,EACVJ,MAAO,WACPuG,UAAW,QAJb,cAMc7I,KAAKwH,MAAMgC,cANzB,SAaRxJ,KAAKwH,MAAMgC,cACTgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK32G,MAAO,GAERE,KAAKwH,MAAM2iI,4BAA8BnqI,KAAKwH,MAAMkiI,YAAc1pI,KAAKwH,MAAMiiI,WAC3EjzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ5H,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,sBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN0+G,YAAY,WACV,OAAOn0G,EAAK7C,MAAMkiI,WAAar/H,EAAKuvH,UAAU,WAAa,OAG/Dt5H,eAAe,EACfE,YAAcR,KAAKwH,MAAMkiI,WACzBnpI,SAAiC,YAAtBP,KAAKwH,MAAM0J,QAEtBslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC8uB,GAAA,EAAD,CACEzO,YAAa,CACXvP,OAAO,WAETkO,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAITm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,GAFd,aAQJ+zG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN0+G,YAAY,WACV,OAAOn0G,EAAK7C,MAAMiiI,SAAWp/H,EAAKuvH,UAAU,UAAY,OAG5Dt5H,eAAe,EACfE,YAAcR,KAAKwH,MAAMiiI,SACzBlpI,SAAiC,WAAtBP,KAAKwH,MAAM0J,QAEtBslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC8uB,GAAA,EAAD,CACEzO,YAAa,CACXvP,OAAO,UAETkO,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAITm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,GAFd,aAYY,YAAtBzC,KAAKwH,MAAM0J,OACTkgI,EACE56B,EAAAr2G,EAAAC,cAACqrI,GAAA,EAAD9rI,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE0rI,aAAa,EACbv2C,gBAAiB,GACjBxd,eAAe,EACfg0D,iBAAiB,EACjBE,cAAe,eACfjtH,SAAU,uBACVnV,YAAa1J,KAAKwH,MAAMkC,YACxBF,cAAexJ,KAAKwH,MAAMgC,cAC1B23G,gBAAiBnhH,KAAKsqI,YAAY3rH,KAAK3e,MACvCoT,iBAAkBpT,KAAKC,MAAMmT,iBAC7Bi3H,kBAAmBrqI,KAAKqqI,kBAAkB1rH,KAAK3e,MAC/CisI,cAAa,gBAAAtlI,OAAkB3G,KAAKwH,MAAM8sE,oBAAoBtjE,MAAjD,+CAAArK,OAAoG3G,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,MAAhI,OAGVhR,KAAKC,MAAM4P,QAoCV2mG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAIHsqI,EACE50B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNC,MAAO,WACPH,KAAM,mBAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAGT7I,KAAKwH,MAAMsiI,eACTtzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CACEhjB,MAAO,YADT,qFAIAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CACEhjB,MAAO,YADT,mCAGmC2/E,EAAa/0E,QAAQ,GAHxD,IAG6DlN,KAAKwH,MAAM8sE,oBAAoBtjE,MAH5F,kEAK+C,qBAApChR,KAAKwH,MAAM06E,YAAYkpD,IAC9B50B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CACEhjB,MAAO,YAEPk0G,EAAAr2G,EAAAC,cAAA,WAHF,eAGqBJ,KAAKwH,MAAM06E,YAAYkpD,GAASl+H,QAAQ,GAH7D,IAGkElN,KAAKwH,MAAM8sE,oBAAoBtjE,UAQ3GhR,KAAKwH,MAAMyiI,mBACbzzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,YAErD0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,wCAMwC7I,KAAKwH,MAAM8sE,oBAAoBtjE,MANvE,qBAUFwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,sBAMsB7I,KAAKwH,MAAM8sE,oBAAoBtjE,MANrD,sBA9GRwlG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGL4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,QACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,uDAQA2tG,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKC,MAAM23G,2BAL1B,cAuGVpB,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAGL01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAHb,iDAWN2tG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFT,GAAG,IAIHd,KAAKwH,MAAMuV,WAAWijE,MAAM/iE,QAC1Bu5F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACwf,EAAA,EAADjgB,OAAAC,OAAA,GAAmBI,KAAKC,MAAxB,CAA+B4e,SAAQ,qBAAwBD,WAAU,gCAAmC/W,KAAM7H,KAAKwH,MAAMuV,WAAWijE,MAAMhjE,WAE9Ihd,KAAKwH,MAAMuiI,eACbvzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,UACNG,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,YAErD0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,wCAMwC7I,KAAKwH,MAAMgC,cANnD,QAQAgtG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJC,UAAW,SACXlD,WAAY,UACZC,QAAU,SAAAkB,GAAC,OAAIuD,EAAKpK,MAAM8G,YAAYsD,EAAK7C,MAAM8sE,oBAAoBxzC,SAAS,IAAIz2B,EAAK7C,MAAM8sE,oBAAoBr4C,aAJnH,wBASAj8B,KAAKwH,MAAMsiI,eACbtzB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNC,MAAO,WACPH,KAAM,eAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,+BAM8B2tG,EAAAr2G,EAAAC,cAAA,WAN9B,0BAM4DJ,KAAKwH,MAAMkC,YAAYqoB,KAAK/gB,MANxF,QAQAwlG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,IACTmH,UAAUjH,KAAKC,MAAMwB,MAAMC,OAAOG,QAEpCpB,YAAc,SAAAqG,GAAC,OAAIuD,EAAK21E,UAN1B,WAaJw2B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNC,MAAO,WACPH,KAAM,mBAERq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAEX2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CACEhjB,MAAO,YADT,mCAGmC2/E,EAAa/0E,QAAQ,GAHxD,IAG6DlN,KAAKwH,MAAM8sE,oBAAoBtjE,MAH5F,qEAK+C,qBAApChR,KAAKwH,MAAM06E,YAAYkpD,IAC9B50B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CACEhjB,MAAO,YAEPk0G,EAAAr2G,EAAAC,cAAA,WAHF,eAGqBJ,KAAKwH,MAAM06E,YAAYkpD,GAASl+H,QAAQ,GAH7D,IAGkElN,KAAKwH,MAAM8sE,oBAAoBtjE,YAYnH,cAlwBanO,6IC6xCdwuI,8MAzyCb7pI,MAAQ,CACN8pI,QAAQ,GACRv0H,WAAY,CACVC,OAAO,KACPC,SAAQ,EACRs0H,YAAY,IAEdrgI,OAAO,SACPsgI,WAAU,EACVC,WAAW,KACXC,WAAW,KACXC,WAAU,EACVC,aAAa,GACbloI,YAAY,KACZ60B,aAAa,KACbigD,aAAa,KACbqzD,aAAY,EACZC,aAAa,KACbC,cAAc,KACdC,kBAAkB,GAClBC,kBAAiB,EACjBn5F,OAAO,CACL,CACE32C,KAAK,QACLoB,KAAK,WAEP,CACEpB,KAAK,YACLoB,KAAK,WAEP,CACEpB,KAAK,gBACLoB,KAAK,eAMXR,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,yCAItCiR,GACRlR,KAAKgI,SAAS,CACZkJ,SACAwgI,WAAW,KACXD,WAAW,KACXM,cAAc,KACdE,iBAAiB,2JAKnBjyI,KAAKgI,SAAS,CACZ+U,WAAY,CACVC,OAAO,KACPC,SAAQ,EACRs0H,YAAY,6PAMhBvxI,KAAKkD,YACLlD,KAAK0hI,qMAGkB/5H,EAAUC,mEACjC5H,KAAKkD,YACLlD,KAAKkyI,eACLlyI,KAAKmyI,cAEoBvqI,EAAUqqI,mBAAqBjyI,KAAKwH,MAAMyqI,kBAAoBjyI,KAAKwH,MAAMyqI,kBAEhGjyI,KAAK0hI,qSAKDh4H,EAAc1J,KAAK+C,cAAciS,gBAAgB,CAAC,YAAY,SAC9Do9H,EAAuBpyI,KAAKC,MAAMykH,UAAUntF,UAAU66G,qBACtD56E,EAAYx3D,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,8BACrChV,KAAK+C,cAAcw0D,sBAAsB,eAAgB,eAAgB,CAACC,YAAWN,QAAS,yBAAnHm7E,SACAC,EAA6BD,EAAavhI,OAAQ,SAAAvP,GAAC,OAAIA,EAAEkmC,aAAa8qG,eAAezlI,gBAAkBslI,EAAqBvlI,QAAQC,gBAAgBhH,IAAK,SAAAvE,GAAC,OAAIA,EAAEkmC,aAAa+qG,QAG7KR,EAAoB,aACpBhyI,KAAK+C,cAAckN,aAAaqiI,EAAhC,eAAApiI,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA4D,SAAAiD,EAAOgnB,GAAP,IAAA9c,EAAAnK,EAAAsN,EAAA0+C,EAAA29D,EAAAyV,EAAAC,EAAAC,EAAAnwG,EAAA,OAAA/R,EAAAtwB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAC1D4M,EAD0D,cAAA7W,OAC7B2zB,GAD6B9mB,EAAA5C,KAAA,EAE1DzN,EAAKlD,MAAMqnC,aAAa9pB,EAAa8c,EAAgB83G,EAAqB7qG,KAFhB,cAAA/zB,EAAA5C,KAAA,EAUtD8P,QAAQqD,IAAI,CAElB5gB,EAAKJ,cAAcguB,oBAAoBvT,EAAa,SACpDra,EAAKJ,cAAcguB,oBAAoBvT,EAAa,aACpDra,EAAKJ,cAAcguB,oBAAoBvT,EAAa,iBACpDra,EAAKJ,cAAc2tB,gBAAgBhnB,EAAYsH,MAAMspB,GACrDn3B,EAAKJ,cAAcguB,oBAAoBvT,EAAa,uBAhBQ,OAAAnK,EAAAG,EAAAG,KAAAgN,EAAAhhB,OAAAsyB,EAAA,EAAAtyB,CAAA0T,EAAA,GAK9DgsD,EAL8D1+C,EAAA,GAM9Dq8G,EAN8Dr8G,EAAA,GAO9D8xH,EAP8D9xH,EAAA,GAQ9D+xH,EAR8D/xH,EAAA,GAS9DgyH,EAT8DhyH,EAAA,GAmB5D6hB,EAAiBr/B,EAAKJ,cAAckO,MAAM,GAC1C0hI,IACFnwG,EAAiBmwG,EAAejuG,OAAQ,SAAC6G,EAAM1b,GAE7C,OADA0b,EAAQA,EAAM95B,KAAKoe,IAEnB1sB,EAAKJ,cAAckO,MAAM,IAE3BuxB,EAAiBr/B,EAAKJ,cAAc0R,iBAAiB+tB,EAAe94B,EAAY/F,WAKlFquI,EAAkB7kI,KAAK,CACrBkyD,QACA29D,YACAx/G,eACAi1H,gBACAjwG,iBACAlI,kBACAo4G,qBAtC8D,yBAAAl/H,EAAAzB,SAAAuB,EAAAtT,SAA5D,gBAAAgS,GAAA,OAAA9B,EAAA+B,MAAAjS,KAAAkS,YAAA,6BAyCqBlS,KAAK+C,cAAc2tB,gBAAgB,OAAO1wB,KAAKC,MAAM4P,iBAA1E0uB,SAINv+B,KAAKgI,SAAS,CACZ0B,cACA60B,eACAyzG,gKAKF,IAAMR,EAAY7xI,OAAOkR,OAAO7Q,KAAKwH,MAAM8pI,SAASttI,OAAO,EACvDwtI,IAAcxxI,KAAKwH,MAAMgqI,WAC3BxxI,KAAKgI,SAAS,CACZwpI,2DAKe3hH,GAMnB,MALe,CACbnlB,MAAM,KACN4S,WAAW,UACXw6C,aAAa,CAACjoC,0CAKJ9e,GAAG,IAAA1G,EAAArK,KAEf,GAAkB,YAAd+Q,EAAGI,OAAqB,CAC1BnR,KAAK0hI,gBAEL,IAAMkR,EAAmB7hI,EAAGiiC,WAAajiC,EAAGiiC,UAAUtc,KAAO3lB,EAAGiiC,UAAUtc,KAAKxX,KAAM,SAAAq0B,GAAG,OAAIA,EAAI1mC,QAAQC,gBAAkBzC,EAAK7C,MAAMkC,YAAYmD,QAAQC,gBAAkB,KAC3K,GAAI8lI,EAAiB,CACnB,IAAMb,EAAgB/xI,KAAK+C,cAAc0R,iBAAiBnD,SAASshI,EAAiBxoI,KAAK,IAAIpK,KAAKwH,MAAMkC,YAAY/F,UACpH3D,KAAKgI,SAAS,CACZ+pI,4DAMQhhI,EAAG8e,EAAOhS,GAEN,YAAd9M,EAAGI,QACLnR,KAAK0hI,8DAIan+H,GAAwB,IAAnBsvI,EAAmB3gI,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GACxC4gI,EAAe,KACnB,OAAQvvI,GACN,IAAK,UACHuvI,EAAe,sBACjB,MACA,IAAK,YACHA,EAAe,+BACjB,MACA,IAAK,SACHA,EAAe,SACjB,MACA,IAAK,OACHA,EAAe,QACjB,MACA,IAAK,UACL,IAAK,QACHA,EAAe,SACjB,MACA,QACEA,EAAe,KAQnB,OAJKD,GAAgBC,IACnBA,EAAe,IAAIr5G,OAAOq5G,IAGrBA,wCAGI,IAAAh2B,EAAA98G,KAEX,IAAKA,KAAKwH,MAAMsqI,aACd,OAAO,EAGT,IAAMh5F,EAAS94C,KAAKwH,MAAMsxC,OACtB+4F,EAAclyI,OAAOkR,OAAO7Q,KAAKwH,MAAMsqI,cAAc9tI,SAAW80C,EAAO90C,OAEvE6tI,GACFlyI,OAAOkR,OAAO7Q,KAAKwH,MAAMsqI,cAAc7tI,QAAS,SAAC05G,EAAWo1B,GAC1D,IAAMC,EAAYl6F,EAAOi6F,GACnBD,EAAeh2B,EAAKm2B,sBAAsBD,EAAUzvI,MACpD2vI,GAAaJ,GAAkD,OAAnCn1B,EAAW3pE,MAAM8+F,GACnDjB,EAAcA,GAAeqB,IAK7BrB,IAAgB7xI,KAAKwH,MAAMqqI,aAC7B7xI,KAAKgI,SAAS,CACZ6pI,oDAKM/qI,EAAEisI,GACZ,IAAII,EAAcrsI,EAAE4e,OAAOhb,MAC3B1K,KAAKgI,SAAS,CACZmrI,oDAIQrsI,EAAEisI,GACZ,IAAIp1B,EAAa72G,EAAE4e,OAAOhb,MAE1B1K,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5BkqI,aAAanyI,OAAAw4B,EAAA,EAAAx4B,CAAA,GACRiI,EAAUkqI,aADHnyI,OAAAyzI,GAAA,EAAAzzI,CAAA,GAETozI,EAAYp1B,8CAMjB,GAA8B,OAA1B39G,KAAKwH,MAAMkqI,WAAoB,CACjC,IAAIJ,EAAUtxI,KAAKwH,MAAM8pI,QACzB,GAAIA,EAAQtxI,KAAKwH,MAAMkqI,YAAY,QAC1BJ,EAAQtxI,KAAKwH,MAAMkqI,YAC1BJ,EAAU3xI,OAAOkR,OAAOygI,GAIxBtxI,KAAKgI,SAAS,CACZspI,UACAI,WALiB,KAMjBI,aALmB,6CAWhB,IAAAvsB,EAAAvlH,KA2BT,GAxBeL,OACEkR,OAAO7Q,KAAKwH,MAAMsqI,cAAchhI,OAAQ,SAAAtG,GAAC,OAAIA,EAAExG,OAAO,IACtD8B,IAAK,SAAC63G,EAAWo1B,GAChB,IAAMC,EAAYztB,EAAK/9G,MAAMsxC,OAAOi6F,GACpC,OAAQC,EAAUzvI,MAChB,IAAK,YACHo6G,EAAaA,EAAWxyD,MAAM,KAChC,MACA,IAAK,YACHwyD,EAAaA,EAAWxyD,MAAM,KAAKrlD,IAAK,SAAA0vB,GAAC,OAAI+vF,EAAKxiH,cAAcwyB,KAAKC,KACvE,MACA,IAAK,UACHmoF,EAAa4H,EAAKxiH,cAAcwyB,KAAKooF,GACvC,MACA,QACoC,OAA9Bq1B,EAAUzvI,KAAKwhB,QAAQ,KACzB44F,EAAaA,EAAWxyD,MAAM,MAKpC,OAAOwyD,IAGd35G,OAAOhE,KAAKwH,MAAMsxC,OAAO90C,OAClC,OAAO,EAGT,IAAMkN,EAAS,CACbmiI,QAAQ,KACR/4G,gBAAgB,KAChBwe,OAAO94C,KAAKwH,MAAMsqI,cAIdR,EAAU3xI,OAAOkR,OAAO7Q,KAAKwH,MAAM8pI,SAEX,OAA1BtxI,KAAKwH,MAAMkqI,WACbJ,EAAQnkI,KAAK+D,GAEbogI,EAAQtxI,KAAKwH,MAAMkqI,YAAcxgI,EAMnClR,KAAKgI,SAAS,CACZspI,UACAK,WAdgB,EAehBD,WANiB,KAOjBI,aANmB,6CAUTJ,GAEZ,IAAK1xI,KAAKwH,MAAM8pI,QAAQI,GACtB,OAAO,EAGT,GAAIA,IAAe1xI,KAAKwH,MAAMkqI,WAC5B,OAAO,EAGT,IAGMI,EAHS9xI,KAAKwH,MAAM8pI,QAAQI,GAGN54F,OAE5B94C,KAAKgI,SAAS,CACZ2pI,WAJgB,EAKhBD,aACAI,uDAIUL,GAEZ,GAAIA,IAAezxI,KAAKwH,MAAMiqI,WAAW,CACvC,IAAMW,EAAuBpyI,KAAKC,MAAMykH,UAAUntF,UAAU66G,qBACtDkB,EAAmBtzI,KAAKwH,MAAMwqI,kBAAkBP,GAChDjzD,EAAe,CACnBj3C,IAAI6qG,EAAqB7qG,IACzBplC,KAAKmxI,EAAiB91H,aACtB3Q,QAAQymI,EAAiBh5G,iBAE3Bt6B,KAAKgI,SAAS,CACZypI,aACAjzD,eACAuzD,cAAc,6CAKPJ,GACX,GAAIA,IAAc3xI,KAAKwH,MAAMmqI,UAC3B,OAAO,EAKT3xI,KAAKgI,SAAS,CACZ2pI,YACAD,WAJiB,oFAQF5qI,6FACjBA,EAAEuH,iBAEI+jI,EAAuBpyI,KAAKC,MAAMykH,UAAUntF,UAAU66G,qBACtDmB,EAAcvzI,KAAK+C,cAAciS,gBAAgB,CAAC,YAAY,OAAO,YAErEjN,EAAW,SAACgJ,EAAGmM,EAAMq0H,GACzB,IAAM9uF,EAA4B,YAAd1xC,EAAGI,OACjBmgI,EAAU3xI,OAAOkR,OAAO20G,EAAKh+G,MAAM8pI,SACnCkC,EAAeliI,SAASigI,KAAejgI,SAASk0G,EAAKh+G,MAAM8pI,QAAQttI,QAAQ,EAC3EiuI,EAAmBxvF,GAAe+wF,EAExC,GAAI/wF,EAAY,CACd,IAAMgxF,EAAsB1iI,EAAGiiC,UAAUmS,QAAUp0C,EAAGiiC,UAAUmS,OAAOuuF,aAAe3iI,EAAGiiC,UAAUmS,OAAOuuF,aAAajsG,aAAa,GAAxG,KAAA9gC,OAAkHoK,EAAGiiC,UAAUtc,KAAK,GAAGtsB,KAAK2a,QAAQ,KAChLusH,EAAQC,GAAaj3G,gBAAkBm5G,OAGvCnC,EAAQC,GAAa8B,SAAU,EAKjC7tB,EAAKx9G,SAAS,CACZspI,UACAW,oBACA,WACIuB,GACFhuB,EAAK9mG,uBAKLf,EAAkB,SAAC5M,EAAGwgI,GAC1B,IAAMv0H,EAASjM,EAAG6M,gBAEZb,EAAapd,OAAOC,OAAO,GAAG4lH,EAAKh+G,MAAMuV,YAC/CA,EAAWC,OAASA,EACpBD,EAAWw0H,YAAYpkI,KAAKokI,GAC5B/rB,EAAKx9G,SAAS,CACZ+U,gBAIJ/c,KAAKwH,MAAM8pI,QAAQrtI,QAAQ,SAACiN,EAAOqgI,GACjC,IAAMoC,EAAeziI,EAAO4nC,OAAO,GAC7B86F,EAAmB1iI,EAAO4nC,OAAO,GACjC25F,EAAgBvhI,EAAO4nC,OAAO,GAE9B+6F,EAAWruB,EAAKvlH,MAAMse,KAAK0C,IAAIsmB,IAAIi7F,iBACvC,CAAC,UAAU,UAAU,UAAU,WAC/B,CAACmR,EAAaJ,EAAYK,EAAiBnB,IAEvC36E,EAAe,CAACs6E,EAAqBvlI,QAL3B,8CAK2CgnI,GAC3DruB,EAAKziH,cAAcmb,0BAA0B,eAAgB,gBAAiB45C,EAAc,SAAC/mD,EAAGmM,GAAJ,OAAcnV,EAASgJ,EAAGmM,EAAMq0H,IAAc,SAACxgI,GAAD,OAAQ4M,EAAgB5M,EAAGwgI,OAGvKvxI,KAAKgI,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAUmV,WADL,CAERE,SAAQ,0BAIL,uIAGA,IAAAipG,EAAAlmH,KAED8zI,EAAmB9zI,KAAKC,MAAM4P,QAAU7P,KAAKwH,MAAMwqI,kBAAkBlhI,OAAQ,SAAA0mB,GAAC,OAAIA,EAAE6nC,MAAMvyD,gBAAkBo5G,EAAKjmH,MAAM4P,QAAQ/C,gBAAkB,GACjJinI,EAAiB/zI,KAAKC,MAAM4P,QAAU7P,KAAKwH,MAAMwqI,kBAAkBlhI,OAAQ,SAAA0mB,GAAC,OAAIA,EAAEwlG,UAAUlwH,gBAAkBo5G,EAAKjmH,MAAM4P,QAAQ/C,gBAAkB,GAEzJ,OACE0pG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,EAAE,KACViB,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,sBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,SACNR,KAAM,cACNG,UAAW,UACXnB,YAAa,UACbb,SAAiC,WAAtBP,KAAKwH,MAAM0J,OACtBzQ,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,cAEpCpjB,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,UACNL,UAAW,UACXH,KAAM,gBACNhB,YAAa,UACbb,SAAiC,YAAtBP,KAAKwH,MAAM0J,OACtBzQ,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,eAEpCpjB,EAAAr2G,EAAAC,cAACX,EAAA,EAADE,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEP,UAAW,CACTK,GAAG,EACHF,GAAG,EACHC,MAAM,KAER8C,KAAM,QACNL,UAAW,SACXH,KAAM,cACNhB,YAAa,UACbb,SAAiC,UAAtBP,KAAKwH,MAAM0J,OACtBzQ,YAAc,SAAAqG,GAAC,OAAIo/G,EAAK0T,UAAU,eAIxCpjB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgB,GAAI,CAAC,EAAE,GACPoL,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,GACf4D,MAAO,CACL48G,cAAc,eAGfjjH,KAAKwH,MAAM0J,SAGhBslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,UAGS,WAAtBhB,KAAKwH,MAAM0J,OACTslG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP0xI,UAAWxxI,KAAKwH,MAAMgqI,UACtBwC,SAAUh0I,KAAKi0I,aAAat1H,KAAK3e,OAG/BL,OAAOkR,OAAO7Q,KAAKwH,MAAM8pI,SAASxrI,IAAK,SAACoL,EAAOqgI,GAC7C,OACE/6B,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACH+N,GAAG,EACHhO,MAAM,GAERw3G,iBAAkB,CAChB5xG,GAAG,EACH5E,GAAG,EACHG,eAAe,UAEjBu2G,WAAY,CACV90G,SAAS,EACTD,WAAW,GAEbnC,eAAe,EACfuG,IAAG,UAAAF,OAAY4qI,GACf9qH,MAAQy/F,EAAK1+G,MAAMkqI,aAAeH,EAAc,gBAAkB,KAClE9wI,YAAc,SAAAqG,GAAC,OAAoIo/G,EAAKguB,cAAc3C,KAGpKrrB,EAAK1+G,MAAMkqI,aAAeH,EACxB/6B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdilH,EAAK1+G,MAAMsxC,OAAOhzC,IAAK,SAAC+oB,EAAMkkH,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQjgH,SAASrF,EAAMtrB,MAAQ,SAAW,OACjEuvI,EAAe5sB,EAAK+sB,sBAAsBpkH,EAAMtrB,MAAK,GAC3D,OACEizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhB6F,IAAG,SAAAF,OAAWosI,GACdvlI,MAAK,GAAA7G,OAAKkoB,EAAM1sB,KAAX,MAAAwE,OAAoBkoB,EAAMtrB,KAA1B,MAELizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRv3B,MAAO,EACPyD,KAAM4wI,EACNC,QAAStB,EACT5mI,YAAa,aACbxL,gBAAiB,SACjB+8G,YAAW,GAAA92G,OAAKkoB,EAAM1sB,KAAX,MAAAwE,OAAoBkoB,EAAMtrB,KAA1B,KACX8Y,SAAW,SAAAvV,GAAC,OAAIo/G,EAAKmuB,YAAYvtI,EAAEisI,IACnCroI,MAAOw7G,EAAK1+G,MAAMsqI,cAAgB5rB,EAAK1+G,MAAMsqI,aAAaiB,GAAc7sB,EAAK1+G,MAAMsqI,aAAaiB,GAAc,QAMxHv8B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdiQ,EAAOopB,gBACLk8E,EAAAr2G,EAAAC,cAACuiH,EAAA,EAAD,CACEjgH,SAAU,EACVJ,MAAO4jH,EAAKjmH,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UACnDnmB,WAAYugH,EAAKjmH,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,UACxDlG,KAAMsgG,EAAKnjH,cAAcgsD,uBAAuB79C,EAAOopB,kBAJzD,eAMeppB,EAAOopB,kBAEnB4rF,EAAK1+G,MAAMuV,WAAWE,SACzBu5F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXvF,GAAG,CAAC,EAAE,GACNwD,KAAK,SACLzD,MAAM,CAAC,EAAE,QACToH,UAAUg/G,EAAK1+G,MAAMqqI,aAEvBpxI,YAAaylH,EAAKouB,UAAU31H,KAAKunG,IAPnC,iBAWA1P,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJtG,MAAO,MACPqD,WAAY,MACZC,QAASsgH,EAAKquB,aAAa51H,KAAKunG,IAJlC,sBAcV1P,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACGyP,EAAKnjH,cAAcmF,YAAYgJ,EAAO4nC,OAAO,IADhD,MACwDotE,EAAKnjH,cAAcmF,YAAYgJ,EAAO4nC,OAAO,IADrG,MAC6G5nC,EAAO4nC,OAAO,GAD3H,IACiI5nC,EAAOopB,gBAAkB,aAAe,IAGvKppB,EAAOopB,gBACLk8E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,MACHR,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,OACNjB,MAAO,SACPmB,KAAM6jH,EAAKjmH,MAAM+B,SAAW,QAAU,QACtCM,MAAO4jH,EAAKjmH,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,aAGrDo6F,EAAK1+G,MAAMuV,WAAWE,SAAWipG,EAAK1+G,MAAMuV,WAAWw0H,aAAerrB,EAAK1+G,MAAMuV,WAAWw0H,YAAYr9G,SAAS5iB,SAASigI,IAC5H/6B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,SACX6O,EAAOmiI,QACT78B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,MACHR,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,MACPH,KAAM,QACNjB,MAAO,SACPmB,KAAO6jH,EAAKjmH,MAAM+B,SAAW,QAAU,WAI3Cw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,CAAC,MAAM,OACVC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAkBwlH,EAAKjmH,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAEhE20G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,OACNjB,MAAO,SACPoB,MAAO,SACPD,KAAO6jH,EAAKjmH,MAAM+B,SAAW,QAAU,gBAazDhC,KAAKwH,MAAMyqI,mBAAqBjyI,KAAKwH,MAAMuV,WAAWE,WAAajd,KAAKwH,MAAM8pI,SAAW3xI,OAAOkR,OAAO7Q,KAAKwH,MAAM8pI,SAASttI,OAAOhE,KAAKwH,MAAMoqI,eAC7Ip7B,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACH+N,GAAG,EACHhO,MAAM,GAERw3G,iBAAkB,CAChB5xG,GAAG,EACH5E,GAAG,EACHG,eAAe,UAEjBu2G,WAAY,CACV90G,SAAS,EACTD,WAAW,GAEbnC,eAAe,EACfG,YAAc,SAAAqG,GAAC,OAAIo/G,EAAKsuB,cAAa,IACrC/tH,MAAQzmB,KAAKwH,MAAMmqI,UAAY,eAAiB,MAG9C3xI,KAAKwH,MAAMmqI,UACTn7B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjB,KAAKwH,MAAMsxC,OAAOhzC,IAAK,SAAC+oB,EAAMkkH,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQjgH,SAASrF,EAAMtrB,MAAQ,SAAW,OACjEuvI,EAAe5sB,EAAK+sB,sBAAsBpkH,EAAMtrB,MAAK,GAC3D,OACEizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhB6F,IAAG,SAAAF,OAAWosI,GACdvlI,MAAK,GAAA7G,OAAKkoB,EAAM1sB,KAAX,MAAAwE,OAAoBkoB,EAAMtrB,KAA1B,MAELizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRv3B,MAAO,EACPyD,KAAM4wI,EACNC,QAAStB,EACT5mI,YAAa,aACbxL,gBAAiB,SACjB+8G,YAAW,GAAA92G,OAAKkoB,EAAM1sB,KAAX,MAAAwE,OAAoBkoB,EAAMtrB,KAA1B,KACX8Y,SAAW,SAAAvV,GAAC,OAAIo/G,EAAKmuB,YAAYvtI,EAAEisI,IACnCroI,MAAOw7G,EAAK1+G,MAAMsqI,cAAgB5rB,EAAK1+G,MAAMsqI,aAAaiB,GAAc7sB,EAAK1+G,MAAMsqI,aAAaiB,GAAc,QAMxHv8B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACXvF,GAAG,CAAC,EAAE,GACNwD,KAAK,SACLzD,MAAM,CAAC,EAAE,QACToH,UAAUlH,KAAKwH,MAAMqqI,aAEvBpxI,YAAaT,KAAKs0I,UAAU31H,KAAK3e,OAPnC,kBAcJw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,qBAGAD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,CAAC,MAAM,OACVC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAkBV,KAAKC,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAEhE20G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,MACNjB,MAAO,SACPoB,MAAO,SACPD,KAAOrC,KAAKC,MAAM+B,SAAW,QAAU,aASvDw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGdjB,KAAKwH,MAAMyqI,iBACTz7B,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHD,MAAM,CAAC,EAAE,UAGX02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,UACNjB,MAAO,SACPmB,KAAOrC,KAAKC,MAAM+B,SAAW,QAAU,QACvCM,MAAOtC,KAAKC,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,YAErD0qF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJnG,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPuG,UAAW,UALb,8CAWF7I,KAAKwH,MAAMuV,YAAc/c,KAAKwH,MAAMuV,WAAWE,QACjDu5F,EAAAr2G,EAAAC,cAACwf,EAAA,EAADjgB,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4H,KAAM7H,KAAKwH,MAAMuV,WAAWC,OAC5B6B,SAAQ,0BACRD,WAAU,mCACVF,kBAAmB1e,KAAK0e,kBAAkBC,KAAK3e,SAGjDw2G,EAAAr2G,EAAAC,cAAC2iH,EAAA,EAAD,CACEz9G,YAAa,CACX/B,KAAK,SACLzD,MAAM,CAAC,EAAE,QACToH,UAAUlH,KAAKwH,MAAMgqI,YAJzB,sBAagB,YAAtBxxI,KAAKwH,MAAM0J,OACb4iI,EAAiB9vI,OAAO,EACtB8vI,EAAiBhuI,IAAK,SAAC04E,EAAa+yD,GAClC,OACE/6B,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACH+N,GAAG,EACHhO,MAAM,GAERw3G,iBAAkB,CAChB5xG,GAAG,EACH5E,GAAG,EACHG,eAAe,UAEjBu2G,WAAY,CACV90G,SAAS,EACTD,WAAW,GAEbnC,eAAe,EACfuG,IAAG,UAAAF,OAAY4qI,GACf9wI,YAAc,SAAAqG,GAAC,OAAIo/G,EAAKuuB,cAAclD,IACtC9qH,MAAQy/F,EAAK1+G,MAAMiqI,aAAeF,EAAc,gBAAkB,MAGhErrB,EAAK1+G,MAAMiqI,aAAeF,EACxB/6B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBwM,MAAK,oBAELgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRq9G,UAAQ,EACR50I,MAAO,EACPyD,KAAM,UACN2I,YAAa,aACbxL,gBAAiB,SACjBgK,MAAO8zE,EAAalkD,mBAItB4rF,EAAK1+G,MAAMsxC,OAAOhzC,IAAK,SAAC+oB,EAAMkkH,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQjgH,SAASrF,EAAMtrB,MAAQ,SAAW,OACvE,OACEizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhB6F,IAAG,SAAAF,OAAWosI,GACdvlI,MAAK,GAAA7G,OAAKkoB,EAAM1sB,KAAX,MAAAwE,OAAoBkoB,EAAMtrB,KAA1B,MAELizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRq9G,UAAQ,EACR50I,MAAO,EACPyD,KAAM4wI,EACNjoI,YAAa,aACbxL,gBAAiB,SACjBgK,MAAO8zE,EAAa3vD,EAAM1sB,WAMpCq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBwM,MAAK,mBAELgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRq9G,UAAQ,EACR50I,MAAO,EACPyD,KAAM,UACN2I,YAAa,aACbxL,gBAAiB,SACjBgK,MAAO8zE,EAAah8C,eAAet1B,QAAQ,MAG/CspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBwM,MAAK,qBAELgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRq9G,UAAQ,EACR50I,MAAO,EACPyD,KAAM,UACN2I,YAAa,aACbxL,gBAAiB,SACjBgK,MAAO8zE,EAAak0D,iBAAiBxlI,QAAQ,MAGjDspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChByqH,UAAW,yBAEXlV,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACinH,EAAD1nH,OAAAC,OAAA,GACMsmH,EAAKjmH,MADX,CAEEiR,OAAQg1G,EAAK1+G,MAAM0J,OACnBxH,YAAaw8G,EAAK1+G,MAAMkC,YACxB60B,aAAc2nF,EAAK1+G,MAAM+2B,aACzBigD,aAAc0nC,EAAK1+G,MAAMg3E,aACzBz2E,SAAUm+G,EAAKyuB,gBAAgBh2H,KAAKunG,GACpCpoG,qBAAsBooG,EAAKpoG,qBAAqBa,KAAKunG,GACrDpD,mBAAoB,iDAEpBtM,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,IAGJi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZC,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,QACNF,KAAM,WACNG,MAAO,aAETk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAJb,kDAeZ2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACGyP,EAAKnjH,cAAcmF,YAAYs2E,EAAanf,OAD/C,MAC0D6mD,EAAKnjH,cAAcmF,YAAYs2E,EAAaw+C,WADtG,MACqHx+C,EAAai0D,eAElIj8B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,CAAC,MAAM,OACVC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAkBwlH,EAAKjmH,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAEhE20G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,SACNjB,MAAO,SACPoB,MAAO,SACPD,KAAO6jH,EAAKjmH,MAAM+B,SAAW,QAAU,eAUvDw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5tG,UAAW,UADb,0CAMoB,UAAtB7I,KAAKwH,MAAM0J,QACX6iI,EAAe/vI,OAAO,EACpB+vI,EAAejuI,IAAK,SAAC04E,EAAa+yD,GAChC,OACE/6B,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACH+N,GAAG,EACHhO,MAAM,GAERw3G,iBAAkB,CAChB5xG,GAAG,EACH5E,GAAG,EACHG,eAAe,UAEjBu2G,WAAY,CACV90G,SAAS,EACTD,WAAW,GAEbnC,eAAe,EACfuG,IAAG,UAAAF,OAAY4qI,GACf9wI,YAAc,SAAAqG,GAAC,OAAIo/G,EAAKuuB,cAAclD,IACtC9qH,MAAQy/F,EAAK1+G,MAAMiqI,aAAeF,EAAc,gBAAkB,MAGhErrB,EAAK1+G,MAAMiqI,aAAeF,EACxB/6B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBwM,MAAK,oBAELgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRq9G,UAAQ,EACR50I,MAAO,EACPyD,KAAM,UACN2I,YAAa,aACbxL,gBAAiB,SACjBgK,MAAO8zE,EAAalkD,mBAItB4rF,EAAK1+G,MAAMsxC,OAAOhzC,IAAK,SAAC+oB,EAAMkkH,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQjgH,SAASrF,EAAMtrB,MAAQ,SAAW,OACvE,OACEizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhB6F,IAAG,SAAAF,OAAWosI,GACdvlI,MAAK,GAAA7G,OAAKkoB,EAAM1sB,KAAX,MAAAwE,OAAoBkoB,EAAMtrB,KAA1B,MAELizG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRq9G,UAAQ,EACR50I,MAAO,EACPyD,KAAM4wI,EACNjoI,YAAa,aACbxL,gBAAiB,SACjBgK,MAAO8zE,EAAa3vD,EAAM1sB,WAMpCq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBwM,MAAK,mBAELgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRq9G,UAAQ,EACR50I,MAAO,EACPyD,KAAM,UACN2I,YAAa,aACbxL,gBAAiB,SACjBgK,MAAO8zE,EAAah8C,eAAet1B,QAAQ,MAG/CspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLvG,MAAM,OACN2I,QAAQ,OACR1H,WAAW,UACXC,cAAc,UAEhBwM,MAAK,qBAELgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRq9G,UAAQ,EACR50I,MAAO,EACPyD,KAAM,UACN2I,YAAa,aACbxL,gBAAiB,SACjBgK,MAAO8zE,EAAak0D,iBAAiBxlI,QAAQ,MAGjDspG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChByqH,UAAW,yBAEXlV,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdilH,EAAK1+G,MAAMuqI,eACTv7B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO4jH,EAAKjmH,MAAMwB,MAAMC,OAAOC,aAAawP,OAAO2a,WAJrD,iCAMiCo6F,EAAK1+G,MAAMuqI,cAAc7kI,QAAQ,GANlE,IAMuEg5G,EAAK1+G,MAAMkC,YAAYsH,OAKhGwtE,EAAak0D,kBAAoBl0D,EAAak0D,iBAAiB79H,GAAG,MAChE2hG,EAAAr2G,EAAAC,cAACyc,EAAA,EAADld,OAAAC,OAAA,CACEie,OAAQ,IACJqoG,EAAKjmH,MAFX,CAGE4C,UAAWskH,IACXpoG,eAAgB,CACd1c,KAAK,SACLqI,MAAM,QACNzD,UAAU,UAEZqW,WAAY,QACZpM,OAAQg1G,EAAK1+G,MAAM0J,OACnBnJ,SAAUm+G,EAAK0I,cAAcjwG,KAAKunG,GAClC1oG,aAAcghE,EAAahhE,gBAG7Bg5F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,YAJT,4BAcVk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACGyP,EAAKnjH,cAAcmF,YAAYs2E,EAAanf,OAD/C,MAC0D6mD,EAAKnjH,cAAcmF,YAAYs2E,EAAaw+C,WADtG,MACqHx+C,EAAai0D,eAElIj8B,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,CAAC,MAAM,OACVC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAkBwlH,EAAKjmH,MAAMwB,MAAMC,OAAOC,aAAaC,SAASC,QAEhE20G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,SACNjB,MAAO,SACPoB,MAAO,SACPD,KAAO6jH,EAAKjmH,MAAM+B,SAAW,QAAU,eAUvDw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE5tG,UAAW,UADb,oDA7xCahG,2JC0oBhB+xI,8MA5oBbptI,MAAQ,CACN+3H,cAAc,CACZI,IAAI,CACFnyH,MAAM,MAERqnI,IAAI,CACFrnI,MAAM,MAERsnI,KAAK,CACHtnI,MAAM,MAERunI,KAAK,CACHvnI,MAAM,OAGVyP,SAAQ,EACR+3H,WAAW,GACXjV,YAAY,GACZkV,cAAc,GACd9U,YAAY,KACZ+U,cAAc,KACd5U,eAAe,KACf3c,gBAAgB,QAIlB5gH,cAAgB,OAwBhBoyI,uBAAyB,WACvB,IAAID,EAAgBhwI,EAAKnC,cAAckO,MAAM/L,EAAKsC,MAAMwtI,YAAY/nI,MAAM/H,EAAKsC,MAAMu4H,aAAa98G,IAAI,MAClGiyH,EAAc5xI,UAChB4xI,EAAgBhwI,EAAKnC,cAAckO,MAAM,IAE3C/L,EAAK8C,SAAS,CACZktI,qBAIJE,oBAAsB,SAACtuI,GACrB,IAAMmuI,EAAgBnuI,EAAE4e,OAAOhb,MAAM1G,SAAWV,MAAMwD,EAAE4e,OAAOhb,OAAS0G,KAAKgF,MAAMtP,EAAE4e,OAAOhb,OAAS,GACrGxF,EAAK8C,SAAS,CACZitI,qBAIJI,iBAAmB,SAACvuI,GAClB,IAAMkuI,EAAaluI,EAAE4e,OAAOhb,MAAM1G,SAAWV,MAAMwD,EAAE4e,OAAOhb,OAAS0G,KAAKgF,MAAMtP,EAAE4e,OAAOhb,OAAS,GAClGxF,EAAK8C,SAAS,CACZgtI,kBAIJ/T,aAAe,SAACn6H,GAA0B,IAAxBw5H,EAAwBpuH,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACzB6tH,EAAcj5H,EAAE4e,OAAOhb,MAAM1G,SAAWV,MAAMwD,EAAE4e,OAAOhb,OAAS5D,EAAE4e,OAAOhb,MAAQ,GACjFy1H,EAAc7uH,SAASyuH,IAAc,GAAKzuH,SAASyuH,IAAc,KACvE76H,EAAK8C,SAAS,CACZ+3H,cACAI,cACAG,sBAIJY,aAAe,SAACZ,GACdp7H,EAAK+7H,aAAa,CAChBv7G,OAAO,CACLhb,MAAM41H,IAERA,+EA5DEtgI,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,iMAGkByE,EAAUC,2EACjC5H,KAAKkD,YAECoyI,EAAoB1tI,EAAUotI,aAAeh1I,KAAKwH,MAAMwtI,WACxDO,EAAqB3tI,EAAUm4H,cAAgB//H,KAAKwH,MAAMu4H,aAC5DuV,GAAqBC,IACvBv1I,KAAKm1I,sTAgDHn1I,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMytI,eAAe3xI,SAAWtD,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMwtI,YAAY1xI,SAAWtD,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMytI,eAAe7iH,IAAI,IAAMpyB,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMwtI,YAAY5iH,IAAI,KAAOpyB,KAAKwH,MAAM24H,sDACvP,iBAGTngI,KAAKgI,SAAS,CACZiV,SAAQ,IAGJ0oG,EAAkB,GAClBhC,EAAkB,GAElBsxB,EAAgBj1I,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMytI,eACpD7tE,EAAiBpnE,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM0tI,eACrD7tE,EAAgBrnE,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,sBAEjDhV,KAAK+C,cAAcuoC,0BAA0B,mBAAmB,uBAA9FkqG,SACJA,EAAwBx1I,KAAK+C,cAAc0R,iBAAiB+gI,EAAsB,IAAIvoI,MAAM,OAEtFwoI,EAAgBz1I,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,8BAC7EhV,KAAK+C,cAAckN,aAAatQ,OAAOoE,KAAK0xI,GAA5C,eAAAvlI,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA4D,SAAAC,EAAO62D,GAAP,IAAAnpC,EAAAysC,EAAAirE,EAAAriI,EAAAsN,EAAAwsB,EAAAwoG,EAAAr2G,EAAA1B,EAAAC,EAAA+nF,EAAA50C,EAAApG,EAAAgrE,EAAA5xB,EAAAj7C,EAAA88C,EAAAxB,EAAA2B,EAAAF,EAAAG,EAAAF,EAAAx8C,EAAAw6C,EAAA,OAAAtzF,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC1DotB,EAAcy3G,EAActuE,GAC7Bw8C,EAAgB3lF,EAAYN,YAC/BimF,EAAgB3lF,EAAYN,UAAY,MAGpC+sC,EAAYtnE,EAAKlD,MAAM+8B,kBAAkBgB,EAAYN,UAAYv6B,EAAKlD,MAAM+8B,kBAAkBgB,EAAYN,UAAUypC,GAAc,MANxE,CAAAz2D,EAAAE,KAAA,YAS/BzN,EAAKJ,cAAco0B,kBAAkB6G,EAAY77B,QACjD67B,EAAYuJ,IAVmB,CAAA72B,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAWtDzN,EAAKlD,MAAMqnC,aAAatJ,EAAY77B,KAAK67B,EAAYnxB,QAAQmxB,EAAYuJ,KAXnB,cAaxDmuG,EAAwBvyI,EAAKJ,cAAc2lC,eAAe1K,EAAYotC,iBAbd16D,EAAAE,KAAA,GAkBpD8P,QAAQqD,IAAI,CACpB5gB,EAAKJ,cAAc4qF,uBAAuB+nD,GAC1CvyI,EAAKJ,cAAcuoC,0BAA0Bm/B,EAAUnlC,IAAInjC,KAAM,eAAgB,CAACsoE,EAAUY,GAAGx+D,YApBnC,eAAAwG,EAAA3C,EAAAiD,KAAAgN,EAAAhhB,OAAAsyB,EAAA,EAAAtyB,CAAA0T,EAAA,GAgB5D85B,EAhB4DxsB,EAAA,GAiB5Dg1H,EAjB4Dh1H,EAAA,GAuB9Dg1H,EAAsBxyI,EAAKJ,cAAc0R,iBAAiBkhI,EAAoB,IAExEr2G,EAAgB21G,EAAchyH,IAAIkqB,GAAqBlqB,IAAI0yH,GAzBHjlI,EAAAE,KAAA,GAkCpD8P,QAAQqD,IAAI,CACpB5gB,EAAKJ,cAAc0lE,mBAAmBzqC,GACtC76B,EAAKJ,cAAcmmE,sBAAsBlrC,GACzC76B,EAAKJ,cAAculE,oBAAoBtqC,EAAY77B,MACnDgB,EAAKJ,cAAcikE,oBAAoBG,EAAW7nC,EAAc8nC,GAChEjkE,EAAKJ,cAAcuoC,0BAA0BtN,EAAY77B,KAAK,kBAC9DgB,EAAKJ,cAAcuoC,0BAA0B,kBAAkB,wBAAwB,CAACtN,EAAYnxB,YAxCxC,QAAA+wB,EAAAltB,EAAAiD,KAAAkqB,EAAAl+B,OAAAsyB,EAAA,EAAAtyB,CAAAi+B,EAAA,GA4B5DgoF,EA5B4D/nF,EAAA,GA6B5DmzC,EA7B4DnzC,EAAA,GA8B5D+sC,EA9B4D/sC,EAAA,GA+B5D+3G,EA/B4D/3G,EAAA,GAgC5DmmF,EAhC4DnmF,EAAA,GAiC5DkrC,EAjC4DlrC,EAAA,GA6CxDgoF,EAAqB+vB,EAAcvtE,eAEnCg8C,EAAyB1kH,OAAOoE,KAAKitE,GAAetsC,OAAQ,SAACwgF,EAAiBl0G,GAClF,IAAMtH,EAAcsnE,EAAchgE,GAElC,OADAk0G,EAAiBl0G,GAAS7N,EAAKJ,cAAc0R,iBAAiB/K,EAAYkI,QAAQlI,EAAY/F,UACvFuhH,GACP,IAEFn8C,EAAc5lE,EAAKJ,cAAc0R,iBAAiBs0D,EAAY,IAC9D68C,EAAkBziH,EAAKJ,cAAc0R,iBAAiBmxG,EAAgB,IACtEh7C,EAAmBznE,EAAKJ,cAAc0R,iBAAiBm2D,EAAiB,IAClEo7C,EAAwBwvB,EAAsBvoI,MAAM87D,GAEpD+8C,EAAiBxmF,EAAcrc,IAAI2nD,EAAiBn5D,KAAK6tB,IAEzD2mF,EAAmB9iH,EAAKJ,cAAckO,MAAM40G,GAAoB5iG,IAAI+gG,IACtE+B,EAA0BC,EAAsB/4G,MAAMg5G,IAC9BpxG,GAAGmxG,KAC7BD,EAA0BC,GAGtBz8C,EAAkB5pE,OAAOoE,KAAKsgH,GAAwBrgH,OAASrE,OAAOoE,KAAKsgH,GAAwBv+G,IAAK,SAAAkL,GAC5G,IAAIpO,EAAI,GACR,GAAKO,EAAKJ,cAAckO,MAAM80G,GAAyBziH,SAAW0N,EAAMlE,gBAAkBu6D,EAAc7nC,YAAY1yB,eAE7G,GAAIkkE,EAAchgE,GAAO+4D,KAAK,CACnC,IAAIo8C,EAAuBn1C,EAAchgE,GAAO+4D,KAAK98D,MAAM64G,GACvDK,EAAqBtxG,GAAGm8D,EAAchgE,GAAO+4D,QAC/Co8C,EAAuBn1C,EAAchgE,GAAO+4D,MAE9CnnE,GAAI,IAAA+D,OAAQw/G,EAAqBj5G,QAAQ,GAArC,KAAAvG,OAA2CqK,EAA3C,cANJpO,GAAI,IAAA+D,OAAQo/G,EAAwB74G,QAAQ,GAAxC,KAAAvG,OAA8CqK,EAA9C,QAQN,OAAOpO,IACN2K,KAAK,UAAY,IAEdw2G,EAAmBpkH,OAAOoE,KAAKitE,GAAehtE,OAASrE,OAAOoE,KAAKitE,GAAelrE,IAAK,SAAAkL,GAC3F,GAAIA,EAAMlE,gBAAkBu6D,EAAc7nC,YAAY1yB,cACpD,SAAAnG,OAAUq/G,EAAsB94G,QAAQ,GAAxC,KAAAvG,OAA8CqK,EAA9C,QAEA,IAAMo1G,EAAwBp1C,EAAchgE,GAAO+4D,KACnD,SAAApjE,OAAUy/G,EAAsBl5G,QAAQ,GAAxC,KAAAvG,OAA8CqK,EAA9C,UAEDzD,KAAK,UAAY,IAEpBo2G,EAAgB3lF,EAAYN,UAAUypC,GAAcsD,EACpDk5C,EAAgB3lF,EAAYN,UAAUypC,GAAY6J,cAAgBA,EAClE2yC,EAAgB3lF,EAAYN,UAAUypC,GAAY4G,YAAcnD,EAChE+4C,EAAgB3lF,EAAYN,UAAUypC,GAAYu/C,gBAAkBpnF,EACpEqkF,EAAgB3lF,EAAYN,UAAUypC,GAAYoC,gBAAkBA,EACpEo6C,EAAgB3lF,EAAYN,UAAUypC,GAAY48C,iBAAmBA,EACrEJ,EAAgB3lF,EAAYN,UAAUypC,GAAY97C,MAAQuqH,EAAcvqH,MAAMne,QAAQ,GAAG,IACzFy2G,EAAgB3lF,EAAYN,UAAUypC,GAAYs+C,OAAS18C,EAAY97D,MAAM,KAAKC,QAAQ,GAAG,IAC7Fy2G,EAAgB3lF,EAAYN,UAAUypC,GAAYu+C,WAAaE,EAAgB34G,MAAM,KAAKC,QAAQ,GAAG,IACrGy2G,EAAgB3lF,EAAYN,UAAUypC,GAAY2+C,eAAiB3iH,EAAKJ,cAAckO,MAAMG,KAAKC,IAAIy0G,EAAe74G,MAAM,KAAK,MAAMC,QAAQ,GAAG,IAEhJy4G,EAAe,GAAAh/G,OAAIivI,EAAcvqH,MAAMne,QAAQ,GAAhC,KAAAvG,OAAsCoiE,EAAY97D,MAAM,KAAKC,QAAQ,GAArE,KAAAvG,OAA2Eq3B,EAAYN,SAAvF,KAAA/2B,OAAmGwgE,IAAgB,CAChIA,aACAnpC,eAtG4D,yBAAAttB,EAAAqB,SAAAzB,EAAAtQ,SAA5D,gBAAAgS,GAAA,OAAA9B,EAAA+B,MAAAjS,KAAAkS,YAAA,YA2GAm0G,EAAoB1mH,OAAOoE,KAAK4hH,GAAiB/4E,OAAO05E,UAAU5hF,OACtE,SAACigF,EAAK99G,GAEJ,OADA89G,EAAI99G,GAAO8+G,EAAgB9+G,GACpB89G,GAET,IAII4B,EAAwB,GAC9B5mH,OAAOkR,OAAOw1G,GAAmBpiH,QAAS,SAAAuiH,GACnCD,EAAsBC,EAAExoF,YAAYN,YACvC6oF,EAAsBC,EAAExoF,YAAYN,UAAY,IAElD6oF,EAAsBC,EAAExoF,YAAYN,UAAU8oF,EAAEr/C,YAAcw8C,EAAgB6C,EAAExoF,YAAYN,UAAU8oF,EAAEr/C,cAI1GnnE,KAAKgI,SAAS,CACZiV,SAAQ,EACR0mG,gBAAgB4C,wIAIX,IAAAl8G,EAAArK,KACDkoC,EAAiBloC,KAAK+C,cAAciS,gBAAgB,CAAC,aAAa,QAAQ,cAChF,OACEwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPwG,SAAU,CAAC,OAAO,SAElBkwG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,4CAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEplG,IAAK,EACLoxG,KAAM,IACN3iH,MAAO,OACPyD,KAAM,SACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZyJ,YAAa,aACbxL,gBAAiB,SACjB8N,UAAW,kBACX9D,MAAO1K,KAAKwH,MAAMytI,cAClBx3B,YAAW,wBACXphG,SAAUrc,KAAKo1I,oBAAoBz2H,KAAK3e,MACxCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOopB,eAGjD0rF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,YAGYo6B,EAHZ,0BAKAsuE,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEplG,IAAK,EACLoxG,KAAM,IACN3iH,MAAO,OACPyD,KAAM,SACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZyJ,YAAa,aACbxL,gBAAiB,SACjB8N,UAAW,kBACX9D,MAAO1K,KAAKwH,MAAMwtI,WAClB34H,SAAUrc,KAAKq1I,iBAAiB12H,KAAK3e,MACrCy9G,YAAW,UAAA92G,OAAYuhC,EAAZ,WACX3iC,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOopB,eAGjD0rF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,GAEP02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,GADN,sBAKA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEplG,IAAK,EACLoxG,KAAM,EACN3iH,MAAO,OACPyD,KAAM,SACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZoH,YAAa,MACb05H,YAAa,QACb7iI,gBAAiB,SACjB8N,UAAW,kBACX9D,MAAO1K,KAAKwH,MAAMu4H,YAClBtiB,YAAa,yBACbphG,SAAUrc,KAAKihI,aAAatiH,KAAK3e,MACjCkM,aAAclM,KAAKwH,MAAM24H,aAAengI,KAAKwH,MAAMu4H,aAAe//H,KAAKwH,MAAMu4H,YAAY/7H,OAAO,EAAI,MAAQ,gBAG3GhE,KAAKwH,MAAM24H,aAAengI,KAAKwH,MAAMu4H,aAAe//H,KAAKwH,MAAMu4H,YAAY/7H,OAAO,GACjFwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJ4B,SAAU,EACVJ,MAAO,OAHT,8CASJk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdtB,OAAOoE,KAAK/D,KAAKwH,MAAM+3H,eAAez5H,IAAK,SAAAq8H,GACzC,IAAMqB,EAAan5H,EAAK7C,MAAM+3H,cAAc4C,GACtC5hI,EAAW8J,EAAK7C,MAAM84H,iBAAiB6B,EACvCriI,EAAS,EAAEH,OAAOoE,KAAKsG,EAAK7C,MAAM+3H,eAAev7H,OAAQ,IAC/D,OACEwyG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACT6B,EAAE,EACFzB,MAAMA,GAERS,SAAUA,EACVD,eAAe,EACfuG,IAAG,eAAAF,OAAiBw7H,GACpB1hI,YAAa,SAAAqG,GAAC,OAAIuD,EAAK62H,aAAaiB,KAEpC3rB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZoG,UAAW,SACXvG,MAAO+H,EAAKpK,MAAMM,SAAW,YAAc,UAE1CijI,EAAWh2H,YAQ1BgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPmB,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACqjI,GAAA,EAAD,CACEn+H,YAAa,CACXxE,GAAG,EACHF,GAAG,CAAC,EAAG,GACPyB,KAAK,SACLb,aAAa,EACbyF,UAAU,OACVC,SAAUlH,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMytI,eAAe3xI,SAAWtD,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMwtI,YAAY1xI,SAAWtD,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMytI,eAAe7iH,IAAI,IAAMpyB,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMwtI,YAAY5iH,IAAI,KAAOpyB,KAAKwH,MAAM24H,aAExQuD,WAAY,kBACZC,UAAW3jI,KAAKwH,MAAMyV,QACtBxc,YAAc,SAAAqG,GAAC,OAAIuD,EAAKwrI,oBAAoB/uI,QAKhD9G,KAAKwH,MAAMm8G,iBACTnN,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP9M,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE2H,GAAI,EACJt+G,MAAO,EACPgO,GAAI,CAAC,EAAE,GACP5B,YAAa,UACbq7G,aAAc,yBAEd/Q,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CACEhM,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,IAFjB,qBAOF+zG,EAAAr2G,EAAAC,cAAConH,EAAA,EAAD7nH,OAAAC,OAAA,CACEa,YAAa,KACbgnH,iBAAkB,GAClBC,UAAW,CACThlH,SAAS,CAAC,OAAO,SAEnB01G,KAAM,CACJ,CACE3xF,MAAM,WACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,eACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACEI,KAAK,gBAEP,CACEwC,QAAO,EACPxC,KAAK,oBACLlC,MAAM,CACJyF,GAAG,EACH3D,OAAO,YAKf,CACE0kB,MAAM,QACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,YACLlC,MAAM,CACJoB,GAAG,EACHU,OAAO,CAAC,QAAQ,SAGpB,CACE4C,QAAO,EACPxC,KAAK,eAIX,CACEwC,QAAO,EACP8hB,MAAM,SACNxmB,MAAM,CACJH,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,OACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,aAI1B,CACElB,QAAO,EACP8hB,MAAM,eACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,KAEfymD,OAAO,CACL,CACEhjD,KAAK,SACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,eACpB5F,MAAM,CACJ4D,aAAa,EACbC,UAAU,CACR7C,eAAe,cAEjB0C,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAK3C,CACE2C,QAAO,EACP8hB,MAAM,UACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEpkD,KAAK,SACL+L,YAAW,EACX3K,KAAK,aACLsC,KAAK,CAAC,cAAc,iBACpB5F,MAAM,MAMZ,CACE0E,QAAO,EACP8hB,MAAM,oBACNxmB,MAAM,CACJH,MAAM,CAAC,IAAM,MAEfymD,OAAO,CACL,CACEhjD,KAAK,OACLpB,KAAK,SACL+L,YAAW,EACXjO,MAAM,CACJyC,SAAS,EACT60G,WAAW,KAEb1xG,KAAK,CAAC,cAAc,uBAI1B,CACElB,QAAO,EACP8hB,MAAM,YACNxmB,MAAM,CACJqC,MAAM,YACNxC,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,SACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,mBACpB5F,MAAM,CACJ4D,aAAa,EACbvB,MAAM,YACNwB,UAAU,CACR7C,eAAe,cAEjB0C,SAAS3D,KAAKC,MAAM+B,SAAW,EAAI,MAK3C,CACE2C,QAAO,EACP8hB,MAAM,aACNxmB,MAAM,CACJqC,MAAM,YACNxC,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,OACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,kBACpB5F,MAAM,CACJqC,MAAM,YACNwB,UAAU,CACR7C,eAAe,kBAMzB,CACEwlB,MAAM,QACNxmB,MAAM,CACJqC,MAAM,YACNxC,MAAM,CAAC,GAAI,MAEbymD,OAAO,CACL,CACEhjD,KAAK,OACLpB,KAAK,SACL+L,YAAW,EACXrI,KAAK,CAAC,cAAc,SACpB5F,MAAM,CACJqC,MAAM,YACNwB,UAAU,CACR7C,eAAe,kBAMzB,CACEwlB,MAAM,oBACNxmB,MAAM,CACJqC,MAAM,YACNxC,MAAM,CAAC,IAAK,MAEdymD,OAAO,CACL,CACEhjD,KAAK,OACL2K,YAAW,EACXjO,MAAM,CACJyC,SAAS,CAAC,EAAE,GACZ60G,WAAW,IACXj1G,MAAM,aAERH,KAAK,SACL0D,KAAK,CAAC,cAAc,wBAKxB7F,KAAKC,MAtNX,CAuNE+8B,kBAAmBh9B,KAAKwH,MAAMm8G,4BApoBV9gH,kCC6E9BkhC,GAAM+xG,8/CAEN1oI,GAAgB,CACpB2oI,QAAS,OACTl2E,QAAS,OACT5jC,UAAW,MACXyvB,QAAS,uBACTsqF,SAAU,2BACVC,YAAa,2BACbC,WAAY,6BACZC,WAAY,kCACZC,MAAO,CACL/5G,IAAI,IACJg6G,UAAS,GAEX50I,MAAO,CACL60I,iBAAiB,GAEnB1qF,aAAc,CACZ2qF,KAAM,CACJ10G,gBAAiB,EACjBvI,IAAK,wBAEPk9G,KAAM,CACJ30G,gBAAiB,EACjBvI,IAAK,6BAEPm9G,QAAS,CACP50G,gBAAiB,IACjBvI,IAAK,iCAGT4yB,QAAS,4BACTkwD,UAAW,CACTs6B,IAAK,2BACLC,IAAK,iBACLC,IAAK,YACLC,IAAK,SACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,YACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,eACLC,IAAK,eAEP5gH,KAAM,CAEJO,eAAe,EACfN,iBAAiB,GAEnB4gH,WAAY,CAEVC,SAAU,CACR1lH,SAAS,EACTg/G,WAAY,qBAEd2G,MAAO,CACL3lH,SAAS,EACTg/G,WAAY,yBAEd4G,OAAQ,CACN5lH,SAAS,EACT1vB,KAAM,aACN0uI,WAAY,qBAEd6G,SAAU,CACR7lH,SAAS,EACT1vB,KAAM,eACN0uI,WAAY,gCAEd8G,YAAa,CACX9lH,SAAS,EACTg/G,WAAY,6BAEd+G,cAAe,CACb/lH,SAAS,EACTgmH,UAAW,oBACXhH,WAAY,wBAEdiH,WAAY,CACVjmH,SAAS,EACT1vB,KAAM,eACND,KAAM,kBACN2uI,WAAY,wBAEdkH,OAAQ,CACNlmH,SAAS,EAET3vB,KAAM,kBACN2uI,WAAY,gCAEdmH,UAAW,CACTnmH,SAAS,EACTg/G,WAAY,2BAEdoH,OAAQ,CACNpmH,SAAS,EACTg/G,WAAY,qBAEdqH,UAAW,CACTrmH,SAAS,EACTg/G,WAAY,uBAEdsH,MAAO,CACLtmH,SAAS,EACT1vB,KAAM,YACN0uI,WAAY,+BAEduH,OAAQ,CACNvmH,SAAS,EACTg/G,WAAY,mBAEdwH,OAAQ,CACNxmH,SAAS,EACTg/G,WAAY,mBAEdyH,WAAY,CACVzmH,SAAS,EACTg/G,WAAY,uBAEd0H,OAAQ,CACN1mH,SAAS,EACTg/G,WAAY,mBAGhB2H,uBAAwB,CACtB7gG,SAAU,iDAEZqnE,SAAU,CACRy5B,WAAY,sBACZC,SAAU,0BACVC,gBAAiB,oDACjB/mI,WAAY,2DACZgnI,YAAa,2DACbC,SAAS,0EACTC,WAAY,kFACZC,mBAAoB,8EACpB3uG,kBAAmB,mFACnB4uG,WAAY,4FACZjzG,YAAY,oGACZkzG,eAAgB,qGAChB1gB,sBAAuB,iHACvB2gB,YAAa,iIACb37G,eAAgB,8HAChB47G,YAAa,kIACbC,0BAA2B,6IAC3BC,eAAgB,8JAChBC,cAAe,wLACfC,8BAA+B,qNAC/BC,mCAAkC,oRAClC9Q,QAAS,8TACT+Q,UAAS,0aACTC,kBAAiB,2bACjB/Q,aAAc,ucACdgR,kCAAiC,yfAEnC1sF,UAAW,CACTC,OAAQ,CACNhI,OAAQ,CACNrzB,SAAS,EACTg7B,cAAc,EACdM,sBAAsB,GAExBysF,SAAU,CACR/nH,SAAS,KAIfgoH,OAAQ,CAENC,wBAAwB,EACxBC,qBAAqB,EACrB3vH,QAAS,CACPyH,SAAS,EACTu7B,kBAAmB,CAAC,IAEtB4sF,QAAS,CAEPnoH,SAAS,EACTy/B,UAAW,SAGf2oF,UAAW,CACTC,UAAW,aACX14I,MAAO,CACLmgG,KAAM,QACN00C,iBAAiB,IAGrB8D,WAAY,CACVC,MAAM,EACNvoH,SAAS,EACT+kC,WAAY,SACZxJ,kBAAmB,CAAC,GACpB8sF,UAAW,cACXl6I,MAAO,CACLqwB,UAAW,OACXgqH,mBAAoB,CAClB3oE,OACA4oE,eACAC,eACAC,iBACAC,iBACAC,iBACAC,oBAGJjrF,UAAW,CACTkrF,GAAI,CACFpjC,YAAW,+gBAEbqjC,GAAI,CACFrjC,YAAa,mSAEfsjC,EAAG,CACDtjC,YAAW,+mBAUflgF,UAAW,CACTyjH,UAAW,OACXZ,WAAY,CACVa,GAAG,CACD94I,KAAK,gBACL+0D,QAAQ,YAEVgkF,GAAG,CACD/4I,KAAK,gBACL+0D,QAAQ,aAKhBh/C,MAAO,CACL4Z,SAAS,EACTjU,OAAQ,CACN+2E,QAAS,EACTpnF,MAAO,QACPqwE,MAAO,mBACP18E,MAAO,6BACPg6I,cAAe,kCAEjB77C,MAAO,CACLz5F,KAAM,CAAC,MAAO,MAAO,QACrB+xC,SAAU,8CAEZwjG,aAAc,CACZz3I,SAAU,GACV4jC,IAAK8zG,GACLl5I,KAAM,4BACN6O,MAAO,4BACPnE,QAAS,8CAEX2qF,gBAAiB,CACfjwD,IAAK+zG,GACLn5I,KAAM,mBACN0K,QAAS,8CAEX0uI,cAAe,CACbh0G,IAAKi0G,GACLr5I,KAAM,mBACN0K,QAAS,8CAEX4uI,YAAa,CACXl0G,IAAKm0G,GACLv5I,KAAM,eACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAK+zG,GACLn5I,KAAM,mBACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,mBAIZwN,gBAAiB,CACfgsI,aAAc,CACZh4I,SAAU,GACVmuB,SAAS,EACTmK,UAAW,MACXjrB,MAAO,eACPnE,QAAS,6CACTuoF,gBAAiB,CACfR,QAAS,EACTK,UAAW,IAGf2mD,cAAe,CACbj4I,SAAU,GACVmuB,SAAS,EACTmK,UAAW,OACXjrB,MAAO,gBACPnE,QAAS,6CACTuoF,gBAAiB,CACfR,QAAS,EACTK,UAAW,IAGf4mD,cAAe,CACbl4I,SAAU,GACVmuB,SAAS,EACTmK,UAAW,OACXjrB,MAAO,gBACPnE,QAAS,6CACTuoF,gBAAiB,CACfR,QAAS,EACTK,UAAW,MAKnBx1B,OAAQ,CACNq/C,IAAK,CACHj/C,QAAS,EACT2B,WAAY,KACZO,YAAa,SACb5/D,KAAM,iBACNoB,KAAM,CACJ,CAAEpB,KAAM,SAAUoB,KAAM,WACxB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,SAAUoB,KAAM,WACxB,CAAEpB,KAAM,UAAWoB,KAAM,UAG7Bu4I,KAAM,CACJj8E,QAAS,EACT19D,KAAM,WACNq/D,WAAY,KACZO,YAAa,SACbx+D,KAAM,CACJ,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,WAAYoB,KAAM,aAG9Bw4I,IAAK,CACHl8E,QAAS,EACT2B,WAAY,KACZO,YAAa,SACb5/D,KAAM,qBACNoB,KAAM,CACJ,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,UAAWoB,KAAM,WACzB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,QAASoB,KAAM,WACvB,CAAEpB,KAAM,WAAYoB,KAAM,cAIhC4tE,UAAW,CACTQ,KAAM,CACJpqC,IAAKoqC,EACLhuE,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTq5E,SAAS,EACT6wC,SAAS,EACTt+G,SAAU,OACVu+G,WAAW,EACXz8H,aAAa,EACb+kF,gBAAgB,EAChBptB,iBAAkB,QAClB9pB,kBAAmB,CAAC,EAAG,KACvB/4B,sBAAuB,MACvBhyB,MAAO,sBACPF,KAAM,yBACN2jF,UAAW,CACTs5C,EAAG,6CACH6c,IAAK,8CAEPrvI,QAAS,6CACT0rF,eAAgB,CACd8mC,EAAG,CAAC,cAAe,eAAgB,gBACnC6c,IAAK,CAAC,eAAgB,gBAAiB,mBAG3CC,KAAM,CACJ50G,IAAK40G,GACLx4I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTq5E,SAAS,EACT6wC,SAAS,EACTC,WAAW,EACXz8H,aAAa,EACb+4E,eAAgB,GAChB76D,SAAU,WACV6mE,gBAAgB,EAChBl3C,kBAAmB,CAAC,GACpB8pB,iBAAkB,QAClB7iD,sBAAuB,MACvBhyB,MAAO,sBACPuK,QAAS,8CAGXuvI,IAAK,CACH70G,IAAK87C,GACLryE,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTq5E,SAAS,EACT6wC,SAAS,EACTC,WAAW,EACXv+G,SAAU,OACVle,aAAa,EACb+4E,eAAgB,GAChBgM,gBAAgB,EAChBl3C,kBAAmB,CAAC,GACpB/qD,MAAO,mBACP60E,iBAAkB,QAClB7iD,sBAAuB,MACvBznB,QAAS,8CAGXwvI,QAAS,CACP90G,IAAK+0G,GACL34I,SAAU,GACVwnG,SAAS,EACT6wC,SAAS,EACTlqH,SAAS,EACTmqH,WAAW,EACXjrI,MAAO,UACPwO,aAAa,EACbke,SAAU,SACV6mE,gBAAgB,EAChBl3C,kBAAmB,CAAC,GACpB8pB,iBAAkB,SAClB70E,MAAO,qBACPgyB,sBAAuB,MACvBznB,QAAS,6CACTujF,gBAAiB,6CACjBmI,eAAgB,CACd8mC,EAAG,CAAC,gBAAiB,gBAAiB,kBAG1Ckd,OAAQ,CACNh1G,IAAK87C,GACL1/E,SAAU,GACVwnG,SAAS,EACT6wC,SAAS,EACTlqH,SAAS,EACT9gB,MAAO,SACPirI,WAAW,EACXz8H,aAAa,EACbke,SAAU,SACV66D,eAAgB,GAChBgM,gBAAgB,EAChBptB,iBAAkB,SAClB70E,MAAO,qBACPgyB,sBAAuB,MACvB+4B,kBAAmB,CAAC,IAAK,OAEzBxgD,QAAS,6CACTujF,gBAAiB,+CAGrB74D,UAAW,CACT2kH,IAAK,CACHM,qBAAsB,CACpBj1G,IAAKi1G,GACL3vI,QAAS,8CAEX4vI,kBAAmB,CACjBl1G,IAAKk1G,GAEL5vI,QAAS,8CAEX6vI,cAAe,CACbtlH,UAAW,EACXmQ,IAAKo1G,GACL9vI,QAAS,8CAEX+vI,gBAAiB,CACfr1G,IAAKs1G,GACLhwI,QAAS,+CAGbwyH,EAAG,CACDgO,eAAgB,CACd9lG,IAAK8lG,GACLxgI,QAAS,8CAEXiwI,iBAAkB,CAChBv1G,IAAKu1G,GAELjwI,QAAS,8CAEXkwI,aAAc,CACZx1G,IAAKy1G,GACLnwI,QAAS,8CAEXowI,WAAY,CACV11G,IAAK01G,GACLpwI,QAAS,8CAEX0tI,YAAa,CACXhzG,IAAKgzG,GACL1tI,QAAS,8CAEX2tI,YAAa,CACXjzG,IAAKizG,GACL3tI,QAAS,8CAGXqwI,SAAU,CACR31G,IAAK21G,GACLrwI,QAAS,8CAGX8tI,cAAe,CACbpzG,IAAKozG,GACL9tI,QAAS,8CAGXswI,cAAe,CACb51G,IAAK41G,GACLtwI,QAAS,8CAGX+tI,eAAgB,CACdrzG,IAAKqzG,GACL/tI,QAAS,8CAGXuwI,aAAc,CACZ71G,IAAK61G,GACLvwI,QAAS,8CAGX4tI,cAAe,CACblzG,IAAKkzG,GACL5tI,QAAS,8CAGX6tI,cAAe,CACbnzG,IAAKmzG,GACL7tI,QAAS,8CAEXwwI,YAAa,CACX91G,IAAK81G,GACLxwI,QAAS,8CAGX+vI,gBAAiB,CACfr1G,IAAKs1G,GACLhwI,QAAS,8CAEX6vI,cAAe,CACbn1G,IAAKo1G,GACL9vI,QAAS,8CAEXywI,sBAAuB,CACrB/1G,IAAK+1G,GACLzwI,QAAS,8CAEX0wI,gBAAgB,CACdh2G,IAAIg2G,GACJ1wI,QAAQ,8CAEV2wI,iBAAiB,CACfj2G,IAAIi2G,GACJ3wI,QAAQ,8CAEV4wI,sBAAsB,CACpBl2G,IAAIk2G,GACJ5wI,QAAQ,gDAId+vE,OAAQ,CACNkiC,IAAK,CACH4+B,cAAe,CACbC,YAAa,0BACb9kD,UACE,6EACF+kD,cAAe,CACbC,aAAc,6CACd70C,cAAe,SAIrB8yC,KAAM,CACJ4B,cAAe,CACbC,YAAa,0BACb9kD,UACE,6EACF+kD,cAAe,CACbC,aAAc,6CACd70C,cAAe,UAKvB80C,YAAa,CACX37I,KAAM,2BACNuuH,SAAU,uBACVpS,KAAM,mLACNwS,OAAQ,wBACRE,WACE,6EACFD,WACE,oFACFF,WAAY,yBACZ1I,UAAW,CACT,CACE7J,KAAM,gBACNsS,IAAK,6hBAEP,CACEtS,KAAM,uCACNsS,IAAK,0dAIX1zF,SAAU,CACRmuC,GAAI,CACF/oE,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,IAAK,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtB/J,KAAM,KACNs6E,MAAO,SACPz7E,KAAM,WACNjB,MAAO,2BACP68I,OAAQ,0BACR9tB,SAAU,SACV/tH,KAAM,iBACNkuH,SAAU,CACR,mCACA,0BACA,8BACA,+BACA,iCAEF5Y,YAAa,CACX9rF,SAAU,4DACVuzF,MAAO,0EACPC,QAAS,4EACTwK,YAAa,2FACbC,aAAc,qGACdwG,KAAM,uIACNhmG,QAAS,4IACT0e,IAAI,4NAGRwoC,GAAI,CACFhvE,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,IAChBzwI,IAAK,CAAC,KAAM,MAAO,QAErB/J,KAAM,KACNs6E,MAAO,SACPz7E,KAAM,aACNjB,MAAO,2BACP68I,OAAQ,0BACR9tB,SAAU,SACV/tH,KAAM,iBACNkuH,SAAU,CACR,6CACA,qDACA,8BACA,gCAEF5Y,YAAa,CACX9rF,SAAU,4DACVuzF,MAAO,0EACPC,QAAS,4EACTwK,YAAa,2FACbC,aAAc,qGACdwG,KAAM,iIACNhmG,QAAS,+IACT0e,IAAI,6NAIVm1G,WAAY,CACVC,KAAM,CACJ97I,KAAM,6BACN+7I,SAAU,kCACVC,aAAc,8BACdC,iBAAkB,oCAEpBC,OAAQ,CACNl8I,KAAM,+BACN+7I,SAAU,oCACVC,aAAc,gCACdC,iBAAkB,sCAEpBnhH,SAAU,CACR96B,KAAM,iCACN+7I,SAAU,sCACVC,aAAc,qCACdC,iBAAkB,2CAEpBE,KAAM,CACJn8I,KAAM,6BACN+7I,SAAU,kCACVC,aAAc,8BACdC,iBAAkB,oCAEpBhxI,MAAO,CACLjL,KAAM,8BACN+7I,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBG,MAAO,CACLp8I,KAAM,8BACN+7I,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBI,MAAO,CACLr8I,KAAM,8BACN+7I,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBn/B,MAAO,CACL98G,KAAM,8BACN+7I,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBK,YAAa,CACXt8I,KAAM,oCACN+7I,SAAU,yCACVC,aAAc,qCACdC,iBAAkB,2CACjBM,SAAU,CACXv8I,KAAM,iCACN+7I,SAAU,sCACVC,aAAc,kCACdC,iBAAkB,wCACjB1uF,UAAW,CACZvtD,KAAM,kCACN+7I,SAAU,uCACVC,aAAc,mCACdC,iBAAkB,yCACjBO,SAAU,CACXx8I,KAAM,iCACN+7I,SAAU,sCACVC,aAAc,kCACdC,iBAAkB,yCAGtBQ,kBAAmB,CACjB3hH,SAAU,CACR9F,UAAW,EACXohF,SAAS,EACTxnG,MAAO,QACPzN,KAAM,UACNu7I,YAAa,GACbphH,SAAU,OACVp7B,MAAO,UACPy8I,YAAY,EACZxyE,cAAc,EACdyyE,aAAc,KACdl+G,SAAU,WACVgnF,UAAWuL,GACX5tH,SAAU,WACV4nD,kBAAmB,CAAC,GACpB4xF,kBAAkB,EAClBx4H,MAAO,qBACPy4H,WAAY,kBACZ98I,KAAM,oCACNg8I,aAAc,qCACdC,iBAAkB,uCAClB//B,KAAM,sEACN6gC,UAAW,mKACXC,SAAU,oLAEZlB,KAAM,CACJ9mH,UAAW,EACXpmB,MAAO,MACPwnG,SAAS,EACT13E,SAAU,OACVg+G,YAAa,GACbx8I,MAAO,UACPiB,KAAM,WACNw7I,YAAY,EACZxyE,cAAc,EACdyyE,aAAc,KACdv4H,MAAO,aACPhhB,SAAU,WACV4nD,kBAAmB,GACnB4xF,kBAAkB,EAClBn3B,UAAWqgB,GACX+W,WAAY,kBACZ98I,KAAM,gCACNg8I,aAAc,iCACdC,iBAAkB,mCAClB//B,KAAM,8CACN8gC,SAAU,4lBACVD,UAAW,0JAEb1I,QAAS,CACPzlI,MAAO,MACPwnG,SAAS,EACTphF,UAAW,IACX0nH,YAAa,GACbh+G,SAAU,OACVx+B,MAAO,UACPiB,KAAM,WACNw7I,YAAY,EACZxyE,cAAc,EACdyyE,aAAc,KACdv4H,MAAO,aACPhhB,SAAU,WACV4nD,kBAAmB,GACnB4xF,kBAAkB,EAClBn3B,UAAWqgB,GACX+W,WAAY,kBACZ98I,KAAM,gCACNg8I,aAAc,gCACdC,iBAAkB,gCAClB//B,KAAM,yDACN8gC,SAAU,4lBACVD,UAAW,2JAGf5uF,WAAY,CACVrzB,SAAU,CACRlsB,MAAO,MACPwnG,SAAS,EACTj1G,KAAM,UACNu7I,YAAa,GACbphH,SAAU,OACVp7B,MAAO,UACPy8I,YAAY,EACZt4H,MAAO,WACP8lD,cAAc,EACdyyE,aAAc,KACdl3B,UAAWuL,GACX5tH,SAAU,WACV4nD,kBAAmB,CAAC,GACpB4xF,kBAAkB,EAClBC,WAAY,kBACZ98I,KAAM,oCACNg8I,aAAc,qCACdC,iBAAkB,uCAClB//B,KAAM,sEACN6gC,UAAW,mKACXC,SAAU,oLAEZlB,KAAM,CACJltI,MAAO,MACPwnG,SAAS,EACTsmC,YAAa,GACbx8I,MAAO,UACPiB,KAAM,WACNw7I,YAAY,EACZxyE,cAAc,EACdyyE,aAAc,KACdv4H,MAAO,aACPhhB,SAAU,WACVw5I,kBAAkB,EAClBn3B,UAAWqgB,GACX96E,kBAAmB,CAAC,EAAG,KACvB6xF,WAAY,kBACZ98I,KAAM,gCACNg8I,aAAc,iCACdC,iBAAkB,mCAClB//B,KAAM,8CACN8gC,SAAU,4lBACVD,UAAW,0JAEbZ,KAAM,CACJvtI,MAAO,MACPwnG,SAAS,EACTsmC,YAAa,GACbx8I,MAAO,UACPiB,KAAM,WACNw7I,YAAY,EACZC,aAAc,KACdzyE,cAAc,EACd9mE,SAAU,WACV4nD,kBAAmB,CAAC,GACpB5mC,MAAO,gBACPw4H,kBAAkB,EAClBn3B,UAAWqgB,GACX+W,WAAY,mBACZ98I,KAAM,gCACNg8I,aAAc,iCACdC,iBAAkB,mCAClB//B,KAAM,oDACN8gC,SAAU,6aACVD,UAAW,yGAmBf9xI,MAAO,CACLykB,SAAS,EACTu7B,kBAAmB,CAAC,EAAG,KACvBiyC,MAAO,CACLjjE,IAAK,IACLub,SAAU,CACRynF,EAAG,kCACH6c,IAAK,4CAGTruC,KAAM,CACJxxE,IAAK,IACLub,SAAU,CACRynF,EAAG,iCACH6c,IAAK,2CAGTjrF,KAAM,CACJ50B,IAAK,IACLub,SAAU,CACRynF,EAAG,iCACH6c,IAAK,2CAGTmD,SAAU,CACRhjH,IAAK,KACLub,SAAU,CACRynF,EAAG,qCACH6c,IAAK,+CAGTnnC,OAAQ,CACN14E,IAAK,IACLub,SAAU,CACRynF,EAAG,qCAGPl2E,OAAQ,CACNm2F,QAAQ,KACR1kF,QAAS72B,GAAIw7G,mBAAqB,CAAEC,cAAa,UAAA74I,OAAYo9B,GAAIw7G,qBAAyB,IAE5FE,SAAU,CAYRC,GAAI,CACFlyI,MAAO,UACPmyI,oBAAqB,GACrB94F,aAAc,WACdD,eAAgB,WAChBg5F,wBAAwB,EACxBC,iBAAkB,CAChBtB,KAAM,CACJ13F,aAAc,aAGlBi5F,kBAAmB,CAAC,OAAQ,QAC5BxwI,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,SAEzDywI,GAAI,CACFvyI,MAAO,UACPq5C,aAAc,KACdD,eAAgB,WAChBk5F,kBAAmB,CAAC,OAAQ,QAC5BF,wBAAwB,EACxBC,iBAAkB,CAChBtB,KAAM,CACJ33F,eAAgB,aAGpBt3C,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAC9EqwI,oBAAqB,CACnB,CACEh8I,SAAU,GACV+5B,SAAU,WACVv7B,KAAM,mBACNmN,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAEjE,CACE3L,SAAU,GACV+5B,SAAU,SACVv7B,KAAM,oBACNmN,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,WAK/EstE,OAAQ,CACNkiC,IAAK,CACH9tG,MAAM,MACNrN,SAAU,GACVmuB,SAAS,EACTxvB,MAAO,CACLy7I,IAAK,CAAC,IAAK,IAAK,IAChB7zB,IAAK,UACL58G,IAAK,CAAC,KAAM,MAAO,QAErB0yI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCr5F,eAAgB,aAChB/5C,QAAS,6CACTqzI,mBAAoB,8KAEtBC,IAAK,CACHnvI,MAAM,MACNrN,SAAU,GACVmuB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,OACL6zB,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,eAERT,QAAS,8CAEXuzI,MAAO,CACLz8I,SAAU,GACVmuB,SAAS,EACT9gB,MAAM,QACNxD,MAAO,QACPlL,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,EAAG,IAAK,KACdzwI,IAAK,CAAC,MAAO,OAAQ,QAEvBlL,KAAM,0BACN2S,oBAAqB,gBACrBlI,QAAS,8CAEXwzI,IAAK,CACHrvI,MAAM,MACNxD,MAAO,MACP7J,SAAU,GACVmuB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,IAAK,KAAM,QAEnBT,QAAS,8CAEXuvI,IAAK,CACHprI,MAAM,MACNxD,MAAO,MACP7J,SAAU,GACVmuB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,IAAK,MAAO,QAEpBT,QAAS,8CAEXyzI,IAAK,CACHtvI,MAAO,MACPxD,MAAO,MACP7J,SAAU,GACVmuB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,OACL6zB,IAAK,CAAC,EAAG,EAAG,GACZzwI,IAAK,CAAC,IAAK,KAAM,OAEnBT,QAAS,8CAEX0zI,IAAK,CACH58I,SAAU,GACV6J,MAAO,MACPwD,MAAO,MACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,IAAK,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEX+yG,SAAU,CACRj8G,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,WACPwD,MAAO,WACP5O,KAAM,6BACNE,MAAO,CACL4nH,IAAK,OACL6zB,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,eAERT,QAAS,8CAEXgzG,QAAS,CACPl8G,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,UACPwD,MAAO,UACP1O,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEXkzG,UAAW,CACTp8G,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,YACPwD,MAAO,YACP5O,KAAM,8BACNE,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,kBAERT,QAAS,8CAEXozG,SAAU,CACRt8G,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,WACPwD,MAAO,WACP5O,KAAM,6BACNE,MAAO,CACL4nH,IAAK,OACL6zB,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,eAERT,QAAS,8CAEXqzG,QAAS,CACPv8G,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,UACPwD,MAAO,UACP1O,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,IAAK,OAAQ,QAErBT,QAAS,8CAEX2zI,KAAM,CACJ78I,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,OACPwD,MAAO,OACP5O,KAAM,yBACNE,MAAO,CACL4nH,IAAK,OACL6zB,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,eAERT,QAAS,8CAEX4zI,MAAO,CACL98I,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,QACPwD,MAAO,QACP1O,MAAO,CACL4nH,IAAK,OACL6zB,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,eAERT,QAAS,8CAEXmzG,OAAQ,CACNr8G,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,OACPwD,MAAO,OACP1O,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,KAAM,MAAO,QAErByH,oBAAqB,cACrBlI,QAAS,6CACTujF,gBAAiB,6CACjBojB,oBAAqB,8CAEvBktC,OAAQ,CACN/8I,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,SACPwD,MAAO,SACP5O,KAAM,2BACNE,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,MAAO,OAAQ,QAEvByH,oBAAqB,gBACrBlI,QAAS,6CACTujF,gBAAiB,8CAEnBuwD,MAAO,CACLh9I,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,QACPwD,MAAO,QACP5O,KAAM,0BACNE,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEX+zI,MAAO,CACLj9I,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,QACP1O,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,GAAI,KACfzwI,IAAK,CAAC,kBAERT,QAAS,8CAEXg0I,IAAK,CACH7vI,MAAO,MACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,KAAM,MAAO,QAErB0yI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCpzI,QAAS,KACT+5C,eAAgB,cAElBk1F,KAAM,CACJn4I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,IAAK,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtB0yI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCr5F,eAAgB,aAChB/5C,QAAS,6CACTqzI,mBACE,8KAEJY,KAAM,CACJn9I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,IAAK,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtB0yI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCr5F,eAAgB,aAChB/5C,QAAS,6CACTqzI,mBACE,8KAEJa,KAAM,CACJp9I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,SACL6zB,IAAK,CAAC,EAAG,GAAI,KACbzwI,IAAK,CAAC,MAAO,MAAO,QAEtB0yI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCr5F,eAAgB,aAChB/5C,QAAS,8CAEXm0I,KAAM,CACJr9I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,MAAO,MAAO,QAEtB0yI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCr5F,eAAgB,aAChB/5C,QAAS,8CAEXo0I,KAAM,CACJt9I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,IAAK,IAChBzwI,IAAK,CAAC,KAAM,MAAO,QAErBs5C,eAAgB,aAChB7xC,oBAAqB,eACrBirI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCpzI,QAAS,6CACTqzI,mBACE,8KAEJgB,KAAM,CACJv9I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,GAAI,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtBs5C,eAAgB,aAChB7xC,oBAAqB,eACrBirI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCpzI,QAAS,6CACTqzI,mBACE,8KAEJ/D,KAAM,CACJx4I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,EAAG,IAAK,KACdzwI,IAAK,CAAC,MAAO,OAAQ,QAEvBs5C,eAAgB,aAChB7xC,oBAAqB,eACrBirI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCpzI,QAAS,8CAEXs0I,QAAS,CACPx9I,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,UACP1O,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,GAAI,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtBs5C,eAAgB,aAChBxkD,KAAM,4BACN2S,oBAAqB,eACrBirI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCpzI,QAAS,8CAEX8kE,KAAM,CACJhuE,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,GAAI,KACdzwI,IAAK,CAAC,MAAO,MAAO,QAEtBs5C,eAAgB,aAChB7xC,oBAAqB,eACrBirI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCpzI,QAAS,8CAEXu0I,IAAK,CACHpwI,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,IAAK,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtB+zI,eAAgB,CAAC,SACjBz6F,eAAgB,aAChBxkD,KAAM,wBACN2S,oBAAqB,cACrBirI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCpzI,QAAS,8CAEXyyG,IAAK,CACHtuG,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTxvB,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,IAAK,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtB+zI,eAAgB,CAAC,SACjBz6F,eAAgB,aAChB7xC,oBAAqB,cACrBirI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCpzI,QAAS,8CAEX0vI,OAAQ,CACN54I,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,SACP1O,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,GAAI,IAAK,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtBs5C,eAAgB,aAChBo5F,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCpzI,QAAS,8CAEXy0I,4BAA6B,CAC3B39I,SAAU,GACVmuB,SAAS,EACT3vB,KAAM,WACNG,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,EAAG,GACdzwI,IAAK,CAAC,IAAK,OAAQ,QAErBs5C,eAAgB,aAChB51C,MAAO,8BAGXxE,UAAW,CACT+0I,SAAU,CACRpqI,QAAQ,EACR2a,SAAS,EACTtkB,MAAO,WACPlL,MAAO,CACLy7I,IAAK,CAAC,EAAG,IAAK,KACdzwI,IAAK,CAAC,MAAO,OAAQ,SAGzBk0I,kBAAmB,CACjB1vH,SAAS,EACTtkB,MAAO,oBACPo5C,eAAgB,sBAMhBtkD,MAAO,CACL4nH,IAAK,UACL6zB,IAAK,CAAC,IAAK,GAAI,KACfzwI,IAAK,CAAC,MAAO,MAAO,QAEtBm0I,UAAW,CAAC,OAAQ,sBAEtBC,iBAAkB,CAChB5vH,SAAS,EACTtkB,MAAO,kBACPlL,MAAO,CACLy7I,IAAK,CAAC,EAAG,IAAK,KACdzwI,IAAK,CAAC,MAAO,OAAQ,QAEvBm0I,UAAW,CAAC,OAAQ,0BAEtBE,QAAS,CACPxqI,QAAQ,EACR2a,SAAS,EACTtkB,MAAO,UACPlL,MAAO,CACLy7I,IAAK,CAAC,EAAG,IAAK,KACdzwI,IAAK,CAAC,MAAO,MAAO,SAGxBs0I,IAAK,CACHp0I,MAAO,MACPskB,SAAS,EACT1vB,KAAM,WACNE,MAAO,CACLy7I,IAAK,CAAC,IAAK,GAAI,IACfzwI,IAAK,CAAC,MAAO,MAAO,SAGxBu0I,KAAM,CACJ1qI,QAAQ,EACR3J,MAAO,OACPskB,SAAS,EACTxvB,MAAO,CACLy7I,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,MAAO,KAAM,SAGvBw0I,MAAO,CACLt0I,MAAO,QACPskB,SAAS,GAEXiwH,KAAM,CACJv0I,MAAO,UACP2J,QAAQ,EACR2a,SAAS,EACTxvB,MAAO,CACLy7I,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,MAAO,MAAO,SAGxB00I,OAAQ,CACN7qI,QAAQ,EACR2a,SAAS,EACT1vB,KAAM,WACNoL,MAAO,UACPlL,MAAO,CACLy7I,IAAK,CAAC,IAAK,GAAI,KACfzwI,IAAK,CAAC,MAAO,MAAO,SAGxB20I,MAAO,CACL9qI,QAAQ,EACR2a,SAAS,EACTtkB,MAAO,QACPpL,KAAM,YACNE,MAAO,CACLy7I,IAAK,CAAC,IAAK,IAAK,KAChBzwI,IAAK,CAAC,MAAO,MAAO,SAGxBiyG,KAAM,CACJpoG,QAAQ,EACR2a,SAAS,EACTtkB,MAAO,OACPpL,KAAM,WACNE,MAAO,CACLy7I,IAAK,CAAC,EAAG,IAAK,KACdzwI,IAAK,CAAC,MAAO,OAAQ,SAGzBqyG,OAAQ,CACNxoG,QAAQ,EACR2a,SAAS,EACTtkB,MAAO,SACPlL,MAAO,CACLy7I,IAAK,CAAC,GAAI,GAAI,IACdzwI,IAAK,CAAC,IAAK,KAAM,SAGrB40I,QAAS,CACP/qI,QAAQ,EACR2a,SAAS,EACTtkB,MAAO,UACPlL,MAAO,CACLy7I,IAAK,CAAC,EAAG,EAAG,GACZzwI,IAAK,CAAC,IAAK,KAAM,QAGrB60I,KAAM,CACJhrI,QAAQ,EACR2a,SAAS,EACTtkB,MAAO,OACPpL,KAAM,WACNE,MAAO,CACLy7I,IAAK,CAAC,EAAG,EAAG,GACZzwI,IAAK,CAAC,IAAK,KAAM,QAGrB4K,MAAO,CACL1K,MAAO,GACPskB,SAAS,EACTxvB,MAAO,CACLy7I,IAAK,CAAC,EAAG,GAAI,KACbzwI,IAAK,CAAC,MAAO,OAAQ,SAGzBykB,KAAM,CACJvkB,MAAO,OACPskB,SAAS,EACTxvB,MAAO,CACLy7I,IAAK,CAAC,EAAG,GAAI,KACbzwI,IAAK,CAAC,MAAO,OAAQ,WAK7BgqB,SAAU,CACR6hB,QAAS,CACPnoB,iBAAkB,CAChBc,SAAS,EACTu7B,kBAAmB,CAAC,IAEtBxrD,OAAQ,CACNugJ,eAAe,EACfC,yBAAyB,GAE3Bj4H,QAAS,CACPk4H,UAAU,EACVC,iBAAkB,IAClBC,uBAAuB,EACvBC,yBAAyB,EACzBJ,yBAAyB,EAEzBK,4BAA6B,CAC3BC,UAAW,CACT7wH,SAAS,EACTyV,IAAKq7G,GACLzgJ,KAAM,iBACN0gJ,SAAU,cACVh2I,QAAS,8CAGX+vE,OAAQ,CACNkiC,IAAK,CACHhtF,SAAS,EACToqC,WAAY,aACZ30B,IAAKu7G,GACLD,SAAU,mBACV1gJ,KAAM,0BACN0K,QAAS,8CAGXivI,KAAM,CACJhqH,SAAS,EACTyV,IAAKu7G,GACL5mF,WAAY,iBACZ/5D,KAAM,2BACN0gJ,SAAU,0BACVh2I,QAAS,gDAKfk2I,cAAe,CACbjxH,SAAS,EACTyV,IAAKy7G,GACL7gJ,KAAM,kBACN0gJ,SAAU,sBACVh2I,QAAS,+CAGbwd,QAAS,CACP+3H,eAAe,EACfa,sBAAuB,IACvBC,4BAA6B,KAE/BC,gBAAiB,CACfrxH,SAAS,GAEXynH,cAAe,CACbznH,SAAS,EACTymE,eAAgB,CAAC,cAAe,eAAgB,iBAElD6qD,UAAW,CACTtxH,SAAS,EACTyV,IAAK87G,MAIX7kI,QAAS,CACP6uC,kBAAmB,CACjBgyE,EAAG,CACDx/D,QAAS,KACT19D,KAAM,WACN85B,UAAW,MACX35B,MAAO,UACP4f,SAAU,SACV1D,QAAS,UACTsH,SAAU,YACVixC,cAAe,IACfr7B,UAAW,oBAEb4nH,GAAI,CACFnhJ,KAAM,QACNG,MAAO,UACP25B,UAAW,MACX/Z,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,0BAEb6nH,EAAG,CACDphJ,KAAM,UACNG,MAAO,UACP25B,UAAW,MACX/Z,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,4BAEb8nH,EAAG,CACDrhJ,KAAM,UACNG,MAAO,UACP25B,UAAW,MACX/Z,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,4BAEbwgH,IAAK,CACHr8E,QAAS,KACT19D,KAAM,UACNG,MAAO,UACPkc,QAAS,UACTyd,UAAW,QACXnW,SAAU,UACV5D,SAAU,UACV60C,cAAe,IACfr7B,UAAW,0BAEb+nH,EAAG,CACDthJ,KAAM,WACNG,MAAO,UACP25B,UAAW,MACX4jC,QAAS,SACTrhD,QAAS,UACT0D,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,6BAEbgoH,KAAM,CACJvhJ,KAAM,UACN85B,UAAW,MACX35B,MAAO,UACP4f,SAAU,SACV4D,SAAU,YACVixC,cAAe,IACfr7B,UAAW,oBAEbioH,MAAO,CACLxhJ,KAAM,SACNG,MAAO,UACPu9D,QAAS,SACTrhD,QAAS,UACTyd,UAAW,QACXnW,SAAU,UACV5D,SAAU,UACV60C,cAAe,IACfr7B,UAAW,yBAGfkoH,UAAU,EACV/hH,gBAAiB,EACjB/O,cAAe,QACfkmE,eAAgB,QAChB6qD,sBAAuB,EACvBC,gBAAiB,CAAC,EAAG,KACrB9sG,iBAAkB,QAClB+sG,sBAAuB,EACvB/hH,UAAW,CACTgiH,OAAQ,CACNn9I,IAAKk9B,GAAIkgH,qBACTloH,IAAK,CACH0nH,EAAG,+BACHH,GAAI,8BACJjkB,EAAG,gCACHqkB,KAAM,gCACNxH,IAAK,gCACLyH,MAAO,iCAGXlN,QAAS,CACP3kH,SAAS,EAETjrB,IAAKk9B,GAAIkgH,qBACThgH,QAAS,CACPi4G,IAAK,0BACLyH,MAAO,0CAETO,aAAc,CACZ7kB,EAAG,IACH6c,IAAK,EACLuH,EAAG,MACHE,MAAO,GAET7nH,UAAW,CACTogH,IAAK,2BAEPngH,IAAK,CAMHsjG,EAAG,wCACHokB,EAAG,wCACHvH,IAAK,wCACLyH,MAAO,0CAQXQ,MAAO,CACL7xG,UAAW,CACT+sF,EAAG,iCACHikB,GAAI,2CAGRhnH,IAAK,CACHxK,SAAS,EACT0K,kBAAmB,CAAC,IAEtB4nH,SAAU,CACRtyH,SAAS,EACTjrB,IAAKk9B,GAAIsgH,uBACT/xG,UAAW,CACT4pG,IAAK,qCACLyH,MAAO,yCAGXW,UAAW,CACTxyH,SAAS,EACT/tB,KAAM,CACJggC,GAAIwgH,wBACJxgH,GAAIygH,yBACJzgH,GAAI0gH,yBACJ1gH,GAAI2gH,0BAENpyG,UAAW,CACT+sF,EAAG,+BACHqkB,KAAM,+BACND,EAAG,sCACHH,GAAI,sCAENr/G,QAAS,CACPo7F,EAAG,uBACHqkB,KAAM,uBACND,EAAG,8BACHH,GAAI,+BAGRqB,SAAU,CACRznH,SAAS,CACPpL,SAAQ,EACR8lB,SAAS,kEACTmQ,SAAS,CACPC,aAAa,CACX,KACA,MACA,YACA,cACA,cACA,eACA,oBAKRsI,SAAU,CACRZ,UAAW,CACT,6CACA,8CAEFpd,UAAW,CACTqd,UAAW,oCAEbi1F,KAAM,CACJj1F,UAAW,2DAEbk1F,QAAS,CACPl1F,UAAS,+lBA6BTm1F,gBAAe,wrBAgCnBC,SAAU,CACRjzH,SAAS,EACTkzH,aAAa,EACbxoH,kBAAmB,CAAC,EAAG,IACvByoH,gBAAiB,CAAC,YAAY,UAC9B3yG,UAAW,CACTooB,OAAQ,mDAEV78C,OAAQ,CACN43B,OAAO,EACPwU,OAAQlmB,GAAImhH,uBACZC,OAAQphH,GAAIqhH,yBACZzqF,MAAO,yCAIXlM,SAAU,CACR38B,SAAS,EACT0K,kBAAmB,CAAC,GACpB6oH,WAAY,SAACjuH,EAAWi2B,GACtB,IAAIi4F,EAAc,KAClB,OAAQluH,GACN,KAAK,EACHkuH,EAAc,UACd,MACF,QACEA,EAAcj4F,EAAkBj2B,GAC5Bi2B,EAAkBj2B,GAAWtqB,cAC7B,UAGR,OAAOw4I,GAETznI,OAAQ,CACN0nI,UAAWnhI,OAAOmV,SAAS2K,OAC3B6xG,QAAS,OACTyP,MAAO,uCACPC,qBAAqB,EACrBjnI,QAAS,cAKjB2mC,OAAQ,CACN25D,IAAK,CACHv4D,OAAQ,CACN7tB,GAAI,MACJzsB,KAAM,MACNvB,MAAO,QAGX40G,IAAK,CACH/4D,OAAQ,CACN7tB,GAAI,MACJzsB,KAAM,MACNvB,MAAO,SAIbg7I,cAAe,CAab,CACE5zH,SAAS,EACTs+B,IAAK,cACLx3B,MAAO,cACP/iB,KAAM,yBACN4Q,MAAO,2BACP5e,KAAM,kCACN1G,MAAO,mCACPyB,KAAM,+CAGV47I,MAAO,CACLF,OAAQ,CACNxsH,SAAS,EACTtkB,MAAO,SACPqwE,MAAO,SACP8nE,aAAcziC,EACd71D,kBAAmB,CAAC,GACpBlsD,MAAO,kBACPg6I,cAAe,2BACf78B,KAAM,wEACNr+G,MAAO,CACLqlH,kBAAkB,MAClBN,QAAQ,CACNz9E,IAAKq+G,GACLjiJ,SAAU,GACVqN,MAAO,UACPwuB,YAAa,OACb3yB,QAAS,8CAEX0qB,UAAU,CACRsuH,aAAa,CACX77E,WAAW,EACXziC,IAAIs+G,KAGRliC,gBAAgB,CACdnE,MAAM,CACJ9hF,SAAS,OACT6J,IAAIu+G,GACJx8E,aAAa,CAAC,QACd8B,gBAAgB,QAChBjpE,KAAM,+BACN6O,MAAO,+BACPnE,QAAQ,6CACRk5I,aAAa,CACXz8E,aAAa,CAAC,OACdnnE,KAAK,6BACL0K,QAAQ,8CAEViyB,aAAa,CACXyI,IAAK87C,GACLlhF,KAAM,gBACN6O,MAAO,gBACPnE,QAAS,+CAGbkzG,UAAU,CACRriF,SAAS,SACT6J,IAAIu+G,GACJx8E,aAAa,CAAC,QACd8B,gBAAgB,YAChBjpE,KAAM,qCACN6O,MAAO,qCACPnE,QAAQ,6CACRiyB,aAAa,CACXyI,IAAK87C,GACLlhF,KAAM,sBACN6O,MAAO,sBACPnE,QAAS,+CAGb+yG,SAAS,CACPliF,SAAS,SACT6J,IAAIu+G,GACJx8E,aAAa,CAAC,QACd8B,gBAAgB,WAChBjpE,KAAM,oCACN6O,MAAO,oCACPnE,QAAQ,6CACRiyB,aAAa,CACXyI,IAAK87C,GACLlhF,KAAM,qBACN6O,MAAO,qBACPnE,QAAS,+CAGbgzG,QAAQ,CACNniF,SAAS,SACT6J,IAAIu+G,GACJx8E,aAAa,CAAC,QACd8B,gBAAgB,UAChBjpE,KAAM,mCACN6O,MAAO,mCACPnE,QAAQ,6CACRiyB,aAAa,CACXyI,IAAK87C,GACLlhF,KAAM,oBACN6O,MAAO,oBACPnE,QAAS,+CAGbmzG,OAAO,CACLtiF,SAAS,SACT6J,IAAIu+G,GACJx8E,aAAa,CAAC,QACd8B,gBAAgB,OAChBjpE,KAAM,gCACN6O,MAAO,gCACPnE,QAAQ,6CACRiyB,aAAa,CACXyI,IAAK87C,GACLlhF,KAAM,iBACN6O,MAAO,iBACPnE,QAAS,+CAGbizG,OAAO,CACLpiF,SAAS,SACT6J,IAAIu+G,GACJx8E,aAAa,CAAC,QACd8B,gBAAgB,SAChBjpE,KAAM,kCACN6O,MAAO,kCACPnE,QAAQ,6CACRiyB,aAAa,CACXyI,IAAK87C,GACLlhF,KAAM,mBACN6O,MAAO,mBACPnE,QAAS,+CAGbozG,SAAS,CACPviF,SAAS,SACT6J,IAAIu+G,GACJx8E,aAAa,CAAC,QACd8B,gBAAgB,WAChBjpE,KAAM,oCACN6O,MAAO,oCACPnE,QAAQ,6CACRk5I,aAAa,CACXz8E,aAAa,CAAC,QACdnnE,KAAK,kCACL0K,QAAQ,8CAEViyB,aAAa,CACXyI,IAAK87C,GACLlhF,KAAM,qBACN6O,MAAO,qBACPnE,QAAS,+CAGbqzG,QAAQ,CACNxiF,SAAS,SACT6J,IAAIu+G,GACJx8E,aAAa,CAAC,QACd8B,gBAAgB,UAChBjpE,KAAM,mCACN6O,MAAO,mCACPnE,QAAQ,6CACRk5I,aAAa,CACXz8E,aAAa,CAAC,OACdnnE,KAAK,iCACL0K,QAAQ,8CAEViyB,aAAa,CACXyI,IAAK87C,GACLlhF,KAAM,oBACN6O,MAAO,oBACPnE,QAAS,kDAsBnBm5I,iBAAiB,CACf5jJ,KAAM,OACN0vB,SAAS,EACT+rD,MAAO,oBACPxwB,kBAAmB,CAAC,GACpB7/C,MAAO,0BACPm4I,aAAc/Q,GACdt2B,KAAM,iEACNr+G,MAAO,IAITi/G,MAAO,CACLptF,SAAS,EACT1vB,KAAM,SACNoL,MAAO,UACPqwE,MAAO,UACP8nE,aAAch+B,EACdt6D,kBAAmB,CAAC,GACpBixD,KAAM,gDACNr+G,MAAO,CACL0P,gBAAiB,CACfgiE,KAAM,CACJm2C,UAAWwS,GACXhjG,SAAU,CACRiQ,IAAKq+G,GACLjiJ,SAAU,GACVxB,KAAM,UACNq1D,UAAW,SACXh4B,YAAa,OACb3yB,QAAS,8CAEXuuH,eAAgB,CACd5jE,UAAW,SACXjwB,IAAK0+G,GACL9jJ,KAAM,wBACN0K,QAAS,8CAEX06B,IAAKoqC,EACLxvE,KAAM,OACN6O,MAAO,OACPrN,SAAU,GACVmuB,SAAS,EACTtkB,MAAO,OACPpL,KAAM,yBACNyK,QAAS,6CACT6sH,SACE,4EAEJqiB,IAAK,CACHj0B,UAAWiO,GACXz+F,SAAU,CACR3zB,SAAU,GACVxB,KAAM,YACNm2H,cAAe,EACf/wF,IAAK2+G,GACLztB,aAAc,IACdj5F,YAAa,OACb3yB,QAAS,8CAEX1K,KAAM,MACN6O,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTyV,IAAK4+G,GACL34I,MAAO,8BACPpL,KAAM,iCACNyK,QAAS,6CACT6sH,SACE,mFAKV0sB,aAAc,CACZt0H,SAAS,EACT1vB,KAAM,SACNoL,MAAO,UACPm4I,aAAch+B,EACdt6D,kBAAmB,CAAC,KACpBwwB,MAAO,kBACPygC,KAAM,yDACNr+G,MAAO,CACL0P,gBAAiB,CACfosI,IAAK,CACHj0B,UAAWiO,GACXz+F,SAAU,CACR3zB,SAAU,GACVxB,KAAM,YACNm2H,cAAe,EACf/wF,IAAK2+G,GACLztB,aAAc,GACdj5F,YAAa,OACb3yB,QAAS,8CAEX1K,KAAM,MACN6O,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTyV,IAAK4+G,GACL34I,MAAO,+BACPpL,KAAM,iCACNyK,QAAS,6CACT6sH,SAAU,2FAKlB2sB,YAAa,CACXv0H,SAAS,EACT1vB,KAAM,WACNy7E,MAAO,WACPrwE,MAAO,WACP6/C,kBAAmB,CAAC,GACpBixD,KAAM,0DACNqnC,aAAcxmB,GACdl/H,MAAO,CACL0P,gBAAiB,CACfgsI,aAAc,CACZh4I,SAAU,GACV4jC,IAAK++G,GACLnkJ,KAAM,eACN6O,MAAO,eAEPnE,QAAS,6CACT20H,YAAa,6CAEblhD,WAAY,CACVw+B,IAAK,CACHv3E,IAAK87C,GACLlhF,KAAM,MACN6O,MAAO,MACPrN,SAAU,GAEVkJ,QAAS,gDAKfgvI,cAAe,CACbl4I,SAAU,GACV4jC,IAAK++G,GACLnkJ,KAAM,gBACN6O,MAAO,gBAEPnE,QAAS,6CACT20H,YAAa,6CACblhD,WAAY,CACVw+B,IAAK,CACHv3E,IAAK87C,GACLlhF,KAAM,MACN6O,MAAO,MACPrN,SAAU,GAEVkJ,QAAS,kDAOnB0xE,YAAa,CAEX1nB,WAAY,SAEZspB,2BAA4B,QAC5B3B,aAAc,CACZj3C,IAAKg/G,GACLpkJ,KAAM,yBAEN0K,QAAS,8CAEXmxE,cAAe,CACbz2C,IAAKi/G,GACLrkJ,KAAM,uBAEN0K,QAAS,gDAIf45I,WAAY,CACV30H,SAAS,EACT0mF,SAAS,EACTp2G,KAAM,cACNoL,MAAO,cACP6/C,kBAAmB,CAAC,GACpBwwB,MAAO,uBACP8nE,aAActU,GACd/yB,KAAM,qJACNr+G,MAAO,CACLs3B,UAAW,CACT66G,qBAAsB,CACpB7qG,IAAKm/G,GACL75I,QAAS,iDAKjB85I,cAAe,CACb70H,SAAS,EACT+rD,MAAO,iBACPxwB,kBAAmB,CAAC,EAAG,KACvBs4F,aAAcxZ,GACd3+H,MAAO,iCACPrM,MAAO,+BACPm9G,KAAM,2FACNr+G,MAAO,CACLs3B,UAAW,CACT61G,eAAgB,CACd7lG,IAAK6lG,GACLjrI,KAAM,iBAEN0K,QAAS,8CAEX2gI,eAAgB,CACdjmG,IAAKimG,GACLrrI,KAAM,iBAEN0K,QAAS,8CAEXwgI,eAAgB,CACd9lG,IAAK8lG,GACLlrI,KAAM,iBACN0K,QAAS,8CAEXiwI,iBAAkB,CAChB36I,KAAM,mBACN0K,QAAS,8CAEX+5I,YAAa,CACXzkJ,KAAM,cACN0K,QAAS,+CAGbkgI,cAAc,CACZC,uBAAwB,sEAE1Br9H,gBAAiB,CAmBfixI,MAAO,CACLz+I,KAAM,QACN6O,MAAO,QACPrN,SAAU,GACVmuB,SAAS,EACT+6G,WAAW,EACXz5F,WAAY,SACZT,UAAW,CACTpL,IAAK87C,GACLlhF,KAAM,QACN0K,QAAS,8CAEX6lC,WAAY,CACVnL,IAAKs/G,GACL1kJ,KAAM,aACN0K,QAAS,+CAGbq0I,KAAM,CACJ/+I,KAAM,OACN6O,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTshB,WAAY,MACZT,UAAU,CACRxwC,KAAK,MACL0K,QAAQ,8CAEV6lC,WAAY,CACVnL,IAAKs/G,GACL1kJ,KAAM,YACN0K,QAAS,+CAuBbiyG,IAAK,CACH38G,KAAM,MACN6O,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACT+6G,WAAW,EACXz5F,WAAY,MACZT,UAAW,CACTpL,IAAKu3E,EACL38G,KAAM,MAEN0K,QAAS,8CAEX6lC,WAAY,CACVnL,IAAKs/G,GACL1kJ,KAAM,WAEN0K,QAAS,+CAGbivI,KAAM,CACJn4I,SAAU,EACVxB,KAAM,OACN6O,MAAO,OACP8gB,SAAS,EACTshB,WAAY,MACZT,UAAW,CACTpL,IAAKu0G,GACL35I,KAAM,OAEN0K,QAAS,8CAEX6lC,WAAY,CACVnL,IAAKs/G,GACL1kJ,KAAM,YAEN0K,QAAS,+CAGb8kE,KAAM,CACJhuE,SAAU,GACVxB,KAAM,OACN6O,MAAO,OACP8gB,SAAS,EACTshB,WAAY,MACZT,UAAW,CACTpL,IAAKoqC,EACLxvE,KAAM,OACN0K,QAAS,8CAEX6lC,WAAY,CACVnL,IAAKs/G,GACL1kJ,KAAM,YACN0K,QAAS,kDAyBnBi6I,WAAY,CACVh1H,SAAS,EACTtkB,MAAO,cACPqwE,MAAO,cACPxwB,kBAAmB,CAAC,EAAG,IACvBs4F,aAAc7hB,GACd3iI,MAAO,yBACPm9G,KAAM,iEACNr+G,MAAO,CACLg5H,cAAe,CACb92H,KAAM,MACN6O,MAAO,MACPrN,SAAU,GACVu1H,WAAY,WAEdC,aAAc,CACZ5xF,IAAK25G,GACL/+I,KAAM,OACNwB,SAAU,GACVqN,MAAO,OACPooH,aAAc,WACdvsH,QAAS,gDAIfk6I,cAAe,CACbj1H,SAAS,EACTu7B,kBAAmB,CAAC,GACpB7/C,MAAO,iBACPqwE,MAAO,iBACP8nE,aAAcnX,GACdrtI,MAAO,kCACPm9G,KAAM,8DACNzhC,aAAc,6DACd58E,MAAO,CACLq3B,SAAU,CACR3zB,SAAU,GACV4jC,IAAKy/G,GACL7kJ,KAAM,YACN0K,QAAS,8CAEXqvE,UAAW,CACT,CACEK,WAAY,MACZO,oBAAqB,WACrBF,OAAQ,CACNqqE,MAAO,CACL1/G,IAAK2/G,GACL/kJ,KAAM,oCACN0K,QAAS,6CACTgjI,aAAc,CACZlsI,SAAU,GACV4jC,IAAK4/G,GACLhlJ,KAAM,wCACN0K,QAAS,+CAGbu6I,QAAS,CACP7/G,IAAK2/G,GACL/kJ,KAAM,sCACN0K,QAAS,6CACTgjI,aAAc,CACZlsI,SAAU,GACV4jC,IAAK4/G,GACLhlJ,KAAM,0CACN0K,QAAS,oDAQvBo1E,aAAc,CACZnwD,SAAS,EACT1vB,KAAM,UACNilJ,cAAc,EACdvc,gBAAgB,EAChBz9E,kBAAmB,CAAC,GACpBwwB,MAAO,gBACPrwE,MAAO,gBACPm4I,aAAcnc,GACdlrB,KAAM,6FACNr+G,MAAO,CACL0P,gBAAiB,CACfgsI,aAAc,CACZh4I,SAAU,GACVm9B,SAAU,OACV7E,UAAW,MACXiwG,YAAa,IACblyG,kBAAmB,CACjBuN,IAAK+/G,GACLnlJ,KAAM,qBACN0K,QAAS,6CAETqyB,UAAW,CACT,CACE/8B,KAAM,UACNwnI,WAAW,EACXn8H,MAAO,UACPi0D,WAAY,uBAKpBm6E,cAAe,CACbj4I,SAAU,EACVm9B,SAAU,OACV7E,UAAW,OACXiwG,YAAa,IACblyG,kBAAmB,CACjBuN,IAAK+/G,GACLnlJ,KAAM,sBACN0K,QAAS,6CAETqyB,UAAW,CACT,CACE/8B,KAAM,UACNqL,MAAO,UACPm8H,WAAW,EACXloE,WAAY,0CAQ1BtnC,eAAgB,CACdrI,SAAS,EACTu1H,cAAc,EACdjlJ,KAAM,eACN0oI,gBAAgB,EAChBz9E,kBAAmB,CAAC,GACpBwwB,MAAO,kBACPrwE,MAAO,kBACPm4I,aAAczU,GACd5yB,KAAM,8FACNr+G,MAAO,CACL0P,gBAAiB,CACfgsI,aAAc,CACZh4I,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,MACX95B,KAAM,iBACN6O,MAAO,iBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,wBACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,cAKdy5I,cAAe,CACbj4I,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,OACX95B,KAAM,kBACN6O,MAAO,kBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,yBACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,cAKd05I,cAAe,CACbl4I,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,OACX95B,KAAM,kBACN6O,MAAO,kBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,yBACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,cAKdslJ,cAAe,CACb9jJ,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,OACX95B,KAAM,kBACN6O,MAAO,kBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,yBACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,cAKdulJ,cAAe,CACb/jJ,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,OACX95B,KAAM,kBACN6O,MAAO,kBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,yBACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,cAKdwlJ,cAAe,CACbhkJ,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,OACX95B,KAAM,kBACN6O,MAAO,kBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,yBACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,cAKdylJ,YAAa,CACXjkJ,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,MACX95B,KAAM,gBACN6O,MAAO,gBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,4BACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,cAKd0lJ,aAAc,CACZlkJ,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,OACX95B,KAAM,iBACN6O,MAAO,iBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,6BACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,cAKd2lJ,aAAc,CACZnkJ,SAAU,GACV4jC,IAAKggH,GACLzmH,SAAU,OACV7E,UAAW,OACX95B,KAAM,iBACN6O,MAAO,iBACPnE,QAAS,6CACTmtB,kBAAmB,CACjBuN,IAAKigH,GACLrlJ,KAAM,6BACN0K,QAAS,6CACTqyB,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,iBAQpB4lJ,eAAgB,CACdj2H,SAAS,EACT1vB,KAAM,YACNy7E,MAAO,UACPxwB,kBAAmB,CAAC,GACpB7/C,MAAO,kBACP8wG,KAAM,yEACNqnC,aAAc5U,GACd9wI,MAAO,CACL+5B,kBAAmB,CACjB73B,KAAM,kBACNolC,IAAKygH,GACLn7I,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,uBAIZqxB,oBAAqB,CAAC,OAAQ,QAC9B7jB,gBAAiB,CACfs4I,UAAW,CACTtkJ,SAAU,GACVmuB,SAAS,EACT4L,SAAU,OACVzB,UAAW,MACXsL,IAAK2gH,GACLl3I,MAAO,aACP5O,KAAM,4BACN8oI,gBAAiB,oBACjBr+H,QAAS,8CAEXs7I,KAAM,CACJxkJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,OACPirB,UAAW,MACXyB,SAAU,WACVwtG,gBAAiB,4BACjBr+H,QAAS,8CAEXu7I,KAAM,CACJzkJ,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,OACPirB,UAAW,MACXyB,SAAU,UACVwtG,gBAAiB,2BACjBr+H,QAAS,8CAEXw7I,KAAM,CACJ1kJ,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,OACP0sB,SAAU,OACVzB,UAAW,MACXivG,gBAAiB,wBACjBr+H,QAAS,8CAEXy7I,OAAQ,CACN3kJ,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,SACPu2B,IAAK+gH,GAAO/gH,IACZtL,UAAW,MACXyB,SAAU,QACVt7B,KAAM,yBACN8oI,gBAAiB,yBACjBr+H,QAAS,8CAEX07I,OAAQ,CACN5kJ,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,SACPirB,UAAW,MACXsL,IAAK+gH,GAAO/gH,IACZ7J,SAAU,QACVt7B,KAAM,yBACN8oI,gBAAiB,yBACjBr+H,QAAS,8CAEX27I,WAAY,CACV7kJ,SAAU,GACVmuB,SAAS,EACT4L,SAAU,OACV6J,IAAK2gH,GACLjsH,UAAW,OACXjrB,MAAO,cACP5O,KAAM,6BACN8oI,gBAAiB,oBACjBr+H,QAAS,8CAEX47I,MAAO,CACL9kJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACPirB,UAAW,OACXyB,SAAU,WACVwtG,gBAAiB,4BACjBr+H,QAAS,8CAEX67I,MAAO,CACL/kJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACPirB,UAAW,OACXyB,SAAU,UACVwtG,gBAAiB,2BACjBr+H,QAAS,8CAEX87I,MAAO,CACLhlJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACP0sB,SAAU,OACVzB,UAAW,OACXivG,gBAAiB,wBACjBr+H,QAAS,8CAEX+7I,QAAS,CACPjlJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,UACP0sB,SAAU,QACV6J,IAAKqhH,GAAQrhH,IACbtL,UAAW,OACX75B,KAAM,0BACN8oI,gBAAiB,yBACjBr+H,QAAS,8CAEXg8I,QAAS,CACPllJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,UACP0sB,SAAU,QACV6J,IAAKqhH,GAAQrhH,IACbtL,UAAW,OACX75B,KAAM,0BACN8oI,gBAAiB,yBACjBr+H,QAAS,8CAEXi8I,MAAO,CACLnlJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACPirB,UAAW,OACXyB,SAAU,WACVwtG,gBAAiB,4BACjBr+H,QAAS,8CAEXk8I,MAAO,CACLplJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACPirB,UAAW,OACXyB,SAAU,UACVwtG,gBAAiB,2BACjBr+H,QAAS,8CAEXm8I,MAAO,CACLrlJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACP0sB,SAAU,OACVzB,UAAW,OACXivG,gBAAiB,wBACjBr+H,QAAS,8CAEXo8I,QAAS,CACPtlJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,UACPu2B,IAAK0hH,GAAQ1hH,IACb7J,SAAU,QACVzB,UAAW,OACX75B,KAAM,0BACN8oI,gBAAiB,yBACjBr+H,QAAS,8CAEXq8I,QAAS,CACPvlJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,UACPu2B,IAAK0hH,GAAQ1hH,IACb7J,SAAU,QACVzB,UAAW,OACX75B,KAAM,0BACN8oI,gBAAiB,yBACjBr+H,QAAS,8CAEXs8I,WAAY,CACVxlJ,SAAU,GACVmuB,SAAS,EACTyV,IAAK2gH,GACLxqH,SAAU,OACVzB,UAAW,OACXjrB,MAAO,mBACPwiB,oBAAqB,CAAC,QACtB03G,gBAAiB,oBACjB9oI,KAAM,kCACNyK,QAAS,8CAEXu8I,MAAO,CACLzlJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACP0sB,SAAU,OACVzB,UAAW,OACXivG,gBAAiB,wBACjBr+H,QAAS,8CAEXw8I,QAAS,CACP1lJ,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,UACPu2B,IAAK8hH,GACLptH,UAAW,OACXyB,SAAU,QACVlK,oBAAqB,CAAC,QACtBpxB,KAAM,4BACN8oI,gBAAiB,yBACjBr+H,QAAS,8CAEXy8I,WAAY,CACV3lJ,SAAU,GACVmuB,SAAS,EACTyV,IAAK2gH,GACLxqH,SAAU,OACVzB,UAAW,OACXjrB,MAAO,mBACPwiB,oBAAqB,CAAC,QACtB03G,gBAAiB,oBACjB9oI,KAAM,kCACNyK,QAAS,8CAEX08I,MAAO,CACL5lJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACP0sB,SAAU,OACVzB,UAAW,OACXivG,gBAAiB,wBACjBr+H,QAAS,8CAEX28I,QAAS,CACP7lJ,SAAU,GACVmuB,SAAS,EACTyV,IAAKiiH,GACLx4I,MAAO,UACPirB,UAAW,OACXyB,SAAU,QACVt7B,KAAM,4BACN8oI,gBAAiB,yBACjBr+H,QAAS,8CAEX48I,MAAO,CACL9lJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACPirB,UAAW,OACXyB,SAAU,WACVwtG,gBAAiB,4BACjBr+H,QAAS,8CAEX68I,MAAO,CACL/lJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACPirB,UAAW,OACXyB,SAAU,UACVwtG,gBAAiB,2BACjBr+H,QAAS,8CAEX88I,MAAO,CACLhmJ,SAAU,EACVmuB,SAAS,EACT9gB,MAAO,QACP0sB,SAAU,OACVzB,UAAW,OACXivG,gBAAiB,wBACjBr+H,QAAS,iDAKjB+8I,SAAU,CACR93H,SAAS,EACT+rD,MAAO,YACPrwE,MAAO,YACP6/C,kBAAmB,CAAC,GACpBjrD,KAAM,mBACNk8G,KAAM,oEACNqnC,aAAc/sC,IACdr6B,YAAa,CACXo8B,YAAY,EACZsC,eAAe,IAGnB4sC,UAAW,CACT/3H,SAAS,EACT1vB,KAAM,OACNy7E,MAAO,aACPrwE,MAAO,aACP6/C,kBAAmB,CAAC,GACpBixD,KAAM,kDACNqnC,aAAcxwB,GACdl1H,MAAO,CACL0P,gBAAiB,CACfwwI,IAAK,CAAEnvI,MAAO,OACd8tG,IAAK,CAAE9tG,MAAO,OACdgwI,KAAM,CAAEhwI,MAAO,QACf+vI,KAAM,CAAE/vI,MAAO,QACf8qI,KAAM,CAAE9qI,MAAO,QACf84I,KAAM,CAAE94I,MAAO,QACf8vI,KAAM,CAAE9vI,MAAO,QACfiwI,KAAM,CAAEjwI,MAAO,QACfkwI,KAAM,CAAElwI,MAAO,QACf+4I,KAAM,CAAE/4I,MAAO,QACfg5I,KAAM,CAAEh5I,MAAO,QACfi5I,OAAQ,CAAEj5I,MAAO,QACjBk5I,IAAK,CAAEl5I,MAAO,OACdm5I,MAAO,CAAEn5I,MAAO,SAChBo5I,KAAM,CAAEp5I,MAAO,QACfq5I,IAAK,CAAEr5I,MAAO,OACds5I,IAAK,CAAEt5I,MAAO,OACdu5I,KAAM,CAAEv5I,MAAO,QACfw5I,IAAK,CAAEx5I,MAAO,OACdy5I,IAAK,CAAEz5I,MAAO,OACd05I,IAAK,CAAE15I,MAAO,OACd25I,IAAK,CAAE35I,MAAO,OACd45I,IAAK,CAAE55I,MAAO,OACd65I,IAAK,CAAE75I,MAAO,OACd85I,IAAK,CAAE95I,MAAO,OACd+5I,IAAK,CAAE/5I,MAAO,OACdg6I,IAAK,CAAEh6I,MAAO,OACdi6I,IAAK,CAAEj6I,MAAO,OACdk6I,IAAK,CAAEl6I,MAAO,OACdm6I,IAAK,CAAEn6I,MAAO,OACdo6I,MAAO,CAAEp6I,MAAO,SAChBq6I,IAAK,CAAEr6I,MAAO,OACds6I,IAAK,CAAEt6I,MAAO,OACdu6I,IAAK,CAAEv6I,MAAO,OACdw6I,IAAK,CAAEx6I,MAAO,OACdy6I,IAAK,CAAEz6I,MAAO,OACd06I,KAAM,CAAE16I,MAAO,QACf26I,IAAK,CAAE36I,MAAO,OACd46I,IAAK,CAAE56I,MAAO,OACd66I,KAAM,CAAE76I,MAAO,QACf86I,KAAM,CAAE96I,MAAO,QACf+6I,KAAM,CAAE/6I,MAAO,QACfg7I,IAAK,CAAEh7I,MAAO,OACdi7I,KAAM,CAAEj7I,MAAO,QACfk7I,IAAK,CAAEl7I,MAAO,OACdm7I,IAAK,CAAEn7I,MAAO,OACdo7I,IAAK,CAAEp7I,MAAO,OACdq7I,IAAK,CAAEr7I,MAAO,OACds7I,IAAK,CAAEt7I,MAAO,OACdu7I,IAAK,CAAEv7I,MAAO,OACdw7I,IAAK,CAAEx7I,MAAO,OACdy7I,MAAO,CAAEz7I,MAAO,SAChB07I,KAAM,CAAE17I,MAAO,QACf27I,IAAK,CAAE37I,MAAO,OACd47I,IAAK,CAAE57I,MAAO,OACd67I,IAAK,CAAE77I,MAAO,OACd87I,IAAK,CAAE97I,MAAO,OACd+7I,KAAM,CAAE/7I,MAAO,QACfg8I,IAAK,CAAEh8I,MAAO,OACdi8I,IAAK,CAAEj8I,MAAO,OACdk8I,KAAM,CAAEl8I,MAAO,QACfm8I,KAAM,CAAEn8I,MAAO,QACfo8I,GAAI,CAAEp8I,MAAO,MACbq8I,IAAK,CAAEr8I,MAAO,OACds8I,IAAK,CAAEt8I,MAAO,OACdu8I,IAAK,CAAEv8I,MAAO,OACdw8I,IAAK,CAAEx8I,MAAO,OACdy8I,IAAK,CAAEz8I,MAAO,OACd08I,IAAK,CAAE18I,MAAO,OACd28I,IAAK,CAAE38I,MAAO,OACd48I,IAAK,CAAE58I,MAAO,OACd68I,IAAK,CAAE78I,MAAO,OACd88I,IAAK,CAAE98I,MAAO,OACd+8I,IAAK,CAAE/8I,MAAO,OACdg9I,IAAK,CAAEh9I,MAAO,OACdi9I,MAAO,CAAEj9I,MAAO,SAChBk9I,IAAK,CAAEl9I,MAAO,OACdm9I,IAAK,CAAEn9I,MAAO,OACdo9I,IAAK,CAAEp9I,MAAO,OACdq9I,KAAM,CAAEr9I,MAAO,QACfs9I,IAAK,CAAEt9I,MAAO,OACdu9I,IAAK,CAAEv9I,MAAO,OACdw9I,IAAK,CAAEx9I,MAAO,SAGlButE,YAAa,KAGjBkwE,UAAW,CACTpI,YAAa,CACX74I,MAAO,eACPrM,MAAO,oCACPutJ,UAAW,2CAEb3H,cAAe,CACbv5I,MAAO,iBACPrM,MAAO,kCACPutJ,UAAW,oCAGft0C,SAAU,CAERjhE,QAAS,CACPw1G,KAAM,CACJrgG,gBAAiB,KACjBktD,iBAAiB,EACjBv7G,MAAO,CACLm9G,SAAU,kBACVL,QAAS,iBAGb6xC,KAAM,CACJtgG,gBAAiB,KACjBktD,iBAAiB,EACjBv7G,MAAO,CACLm9G,SAAU,wBACVL,QAAS,gBAGb8xC,OAAQ,CACNvgG,gBAAiB,gBACjBktD,iBAAiB,EACjBv7G,MAAO,CACLm9G,SAAU,6BACVL,QAAS,kBACT96G,WAAY,CACVkrB,QAAS,CAAC,IAAK,WAKvB6U,UAAW,CACT8sH,KAAM,CACJh9H,SAAS,EACTsrF,SAAU,2BACVn7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENi8G,QAAS,WACTgyC,WAAY,MACZje,WAAY,gBACZ11B,iBAAkB,CAAC,QACnBc,mBAAoB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC/DZ,gBAAiB,CAAC,OAAQ,MAAO,OACjCe,gBAAiB,GACjBt4E,IAAK,OACLirH,UAAW,CACT3U,KAAM,CACJ4U,UAAW,kBAEbC,KAAM,CACJD,UAAW,mBAGfn0C,QAAS,SAAA76G,GACP,IAAM2sB,EAAO,GACb,GAAI3sB,EAAM44G,gBAAkB54G,EAAM44G,eAChC,OAAQ54G,EAAM44G,gBACZ,IAAK,OACHjsF,EAAKkkH,WAAL,8BACA,MACF,IAAK,OACHlkH,EAAKkkH,WAAL,4BAMN,OAAOlkH,GAETytF,cAAe,SAACp6G,EAAOmN,EAAegsG,GACpC,IAAMr1E,EAAM32B,EAAcgtG,SAASp4E,UAAU8sH,KAAK/qH,IAE5CorH,EADY/hJ,EAAcgtG,SAASp4E,UAAU8sH,KAAKE,UAAUjrH,GAC9BkrH,UAG9BpxI,EAAS,CACbuxI,KAAI,YAAAzoJ,OAAc1G,EAAM4P,SACxBw/I,aAAcj2C,EAAU5vG,cAAgB4vG,EAAU5vG,cAAgBvJ,EAAMyJ,YAAYolJ,MAAQ7uJ,EAAMyJ,YAAYolJ,KAAKO,aAAepvJ,EAAMyJ,YAAYolJ,KAAKO,aAAepvJ,EAAMuJ,cAC9K2lJ,oBACAG,YAAaliJ,EAAcs+C,SAI7B,MACE,GAAA/kD,OAXU,oCAWV,KACAhH,OAAOoE,KAAK8Z,GACT/X,IACC,SAAAypJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB3xI,EAAO0xI,MAE9DhiJ,KAAK,MAGZ+sG,OAAQ,SAACd,EAAY3pF,EAAQ5vB,EAAOmN,GAElC,IADmBugB,SAASC,eAAe,eAC1B,CACf,IAAM6hI,EAAY9hI,SAASvtB,cAAc,OA2BzC,GA1BAqvJ,EAAUz5H,UAAV,68BAAArvB,OASe6yG,EATf,2dAAA7yG,OAgBsByG,EAAcgtG,SAASp4E,UAAU8sH,KAAK1xC,SAhB5D,oQAuBAzvF,SAASu2D,KAAKC,YAAYsrE,IAGrB9hI,SAASC,eAAe,oBAAqB,CAChD,IAAM8hI,EAAY/hI,SAASvtB,cAAc,SACzCsvJ,EAAUtqJ,GAAK,mBACfsqJ,EAAU15H,UAAV,4aAaArI,SAASu2D,KAAKC,YAAYurE,OAKlCC,KAAM,CACJ79H,SAAS,EACTsrF,SAAU,2BACVn7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENi8G,QAAS,WACTgyC,WAAY,MACZje,WAAU,0BACV11B,iBAAkB,CAAC,OAAQ,QAC3Bw0C,MAAO,CACLhtJ,KAAM,iBACNN,MAAO,OACPktB,QAAS,WAEX8rF,gBAAiB,CAAC,MAAO,MAAO,QAChCY,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFpB,QAAS,SAAA76G,GACP,IAAM2sB,EAAO,GACb,OAAQ3sB,EAAM44G,gBACZ,IAAK,OACHjsF,EAAKsvF,mBAAqB,CAAC,MAAO,OAClCtvF,EAAKkkH,WAAL,qBACA,MACF,IAAK,OACHlkH,EAAKsvF,mBAAqB,CACxB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFtvF,EAAKkkH,WAAL,gBAKJ,OAAOlkH,GAETytF,cAAe,SAACp6G,EAAOmN,EAAegsG,GACpC,MAAO,CACLy2C,YAAa,OACbj3F,YAAa34D,EAAM4P,QACnBigJ,WAAY/rH,GAAIgsH,mBAChB71C,QAASj6G,EAAM+B,SAAW,SAAW,UACrCguJ,YAAW,GAAArpJ,OAAKyG,EAAcs+C,QAAnB,0BACXukG,UAAW72C,EAAU5vG,cACjB4vG,EAAU5vG,cACVvJ,EAAMyJ,YAAYimJ,MAAQ1vJ,EAAMyJ,YAAYimJ,KAAKM,UAC/ChwJ,EAAMyJ,YAAYimJ,KAAKM,UACvBhwJ,EAAMuJ,gBAGhB8wG,OAAQ,SAACd,EAAY3pF,EAAQ5vB,EAAOmN,GAClC,IAAI8iJ,KAAe12C,GAChBvgD,GAAG,IADN,eAAA/oD,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KACW,SAAA+P,EAAMq9G,GAAN,IAAA16H,EAAAsR,EAAA7C,EAAA,OAAAif,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,OACD7N,EAAgB,IAAIE,IAAchD,GACpCoU,EAAgB,KAChB7C,EAAc,KAHX8O,EAAA6R,GAKCsrG,EAAMl6H,KALP+c,EAAA1P,KAMA,wBANA0P,EAAA6R,GAAA,yBAQHlyB,EAAMk6G,oBARH75F,EAAA1P,KAAA,EAUmB3Q,EAAMwyD,mBAVzB,cAUHp+C,EAVGiM,EAAA3M,KAYHnC,EAAcisH,EAAM0yB,QAAQC,SAAS5+I,YACrCA,EAAczO,EACXkO,MAAMO,EAAY0R,YAClBD,IACClgB,EAAckO,MACZG,KAAK4wD,IAAI,GAAI1wD,SAAS+C,IAAgB6O,aAGzCA,WAGHkB,OAAOw1F,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAAnzG,OAAK6K,EAAL,KAAA7K,OAAoB1G,EAAMuJ,cAA1B,2BAChBuwG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YA5BR55F,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,qCAAAf,EAAAvO,SAAAqO,EAAApgB,SADX,gBAAAmhB,GAAA,OAAAjR,EAAA+B,MAAAjS,KAAAkS,YAAA,IAqCGm+I,SAGPC,QAAS,CACPx+H,SAAS,EACTsrF,SAAU,8BACVn7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENi8G,QAAS,WACTgyC,WAAY,MACZje,WAAU,+BACV11B,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAChEe,gBAAiB,CAAEk0C,0CAA2C,IAC9DxsH,IAAK,OACL6rH,MAAO,CACLhtJ,KAAM,UACN4sB,QAAS,WAEXw/H,UAAW,CACT3U,KAAM,CACJpwF,OAAQlmB,GAAIysH,2BACZl3H,IAAK,8BAEP41H,KAAM,CACJjlG,OAAQlmB,GAAI0sH,2BACZn3H,IAAK,+BAGTwhF,QAAS,SAAA76G,GACP,IAAM2sB,EAAO,GAEPisF,EAAiB54G,EAAM44G,gBAAkB54G,EAAM44G,eACjD3/B,EAAyB,SAAnB2/B,EAA4B,OAAS,OAE/C,GAAI54G,EAAM84G,iBAAmB94G,EAAM84G,gBAAgBruG,MACjD,OAAQzK,EAAM84G,gBAAgBruG,MAAMuK,eAClC,IAAK,MACH2X,EAAKgjI,MAAQ,CACXhtJ,KAAM,UACN4sB,QAAS,WAEX5C,EAAKkkH,WAAL,KAAAnqI,OAAuBuyE,EAAvB,oBACA,MACF,IAAK,MACHA,EAAM,OACNtsD,EAAKgjI,MAAQ,CACXhtJ,KAAM,UACN4sB,QAAS,WAEX5C,EAAKkkH,WAAL,KAAAnqI,OAAuBuyE,EAAvB,oBACA,MACF,IAAK,MAEDtsD,EAAKgjI,MADgB,SAAnB/2C,EACW,CACXj2G,KAAM,OACNN,MAAO,WACPktB,QAAS,WAGE,CACX5sB,KAAM,UACN4sB,QAAS,WAGb5C,EAAKkkH,WAAL,KAAAnqI,OAAuBuyE,EAAvB,oBAMN,OAAOtsD,GAETytF,cAAe,SAACp6G,EAAOmN,EAAegsG,GACpC,IAAMr1E,EAAM32B,EAAcgtG,SAASp4E,UAAUsuH,QAAQvsH,IAC/CirH,EACJ5hJ,EAAcgtG,SAASp4E,UAAUsuH,QAAQtB,UAAUjrH,GAEjD2sH,EAAe,KAEnB,GAAIt3C,EAAUL,iBAAmBK,EAAUL,gBAAgBruG,MACzD,OAAQ0uG,EAAUL,gBAAgBruG,MAAMuK,eACtC,IAAK,MACHy7I,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,QACEA,EAAe,MAKrB,IAAIC,EAAqBv3C,EAAU5vG,cAC/B4vG,EAAU5vG,cAAcsD,cACxB7M,EAAMyJ,YAAY4mJ,SAClBrwJ,EAAMyJ,YAAY4mJ,QAAQM,aACxB3wJ,EAAMyJ,YAAY4mJ,QAAQM,aAC1B3wJ,EAAMuJ,cACZmnJ,EAAqBA,EAAmB17I,cAOxC,MAAO,CACLg1C,OANa+kG,EAAU/kG,OAOvB0mG,qBACAE,cAPoB5wJ,EAAM4P,QAQ1B6gJ,eACAI,kBARwB7wJ,EAAM4P,QAS9BkhJ,0BAR+B,EAS/BjxJ,MAAO,OACPiC,OAAQ,SAIZu4G,OAAQ,SAACd,EAAY3pF,EAAQ5vB,EAAOmN,GAClC,GAAIgX,OAAO4sI,cAAe,CAExB,IADsBrjI,SAASC,eAAe,kBAC1B,CAClB,IAAM6hI,EAAY9hI,SAASvtB,cAAc,OAmBzC,GAlBAqvJ,EAAUz5H,UAAV,szCAAArvB,OAQsByG,EAAcgtG,SAASp4E,UAAUsuH,QAAQlzC,SAR/D,iQAeAzvF,SAASu2D,KAAKC,YAAYsrE,IAGrB9hI,SAASC,eAAe,uBAAwB,CACnD,IAAMqjI,EAAetjI,SAASvtB,cAAc,SAC5C6wJ,EAAa7rJ,GAAK,sBAClB6rJ,EAAaj7H,UAAb,6cAaArI,SAASu2D,KAAKC,YAAY8sE,IAI9B7sI,OAAO4sI,cAAc12C,OAAOd,EAAY,+BAI9C03C,QAAS,CACPp/H,SAAS,EACTsrF,SAAU,8BACVn7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENi8G,QAAS,WACTgyC,WAAY,MACZje,WAAY,eACZ11B,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,OAAQ,MAAO,OACjCv3E,IAAK,OACLirH,UAAW,CACT3U,KAAM,CACJ/gH,IAAK,iCACL2wB,OAAQlmB,GAAIotH,4BAEdjC,KAAM,CACJ51H,IAAK,yBACL2wB,OAAQlmB,GAAIqtH,6BAGhBt2C,QAAS,SAAA76G,GACP,IAAM2sB,EAAO,GACb,GAAI3sB,EAAM44G,gBAAkB54G,EAAM44G,eAChC,OAAQ54G,EAAM44G,gBACZ,IAAK,OACH,GAAI54G,EAAM84G,iBAAmB94G,EAAM84G,gBAAgBruG,MACjD,OAAQzK,EAAM84G,gBAAgBruG,MAAMuK,eAClC,IAAK,MACH2X,EAAKgjI,MAAQ,CACXhtJ,KAAM,OACNN,MAAO,WACPktB,QAAS,WAEX5C,EAAKkkH,WAAL,yBACA,MACF,IAAK,MACHlkH,EAAKgjI,MAAQ,CACXhtJ,KAAM,OAERgqB,EAAKkkH,WAAL,yBACA,MACF,QACElkH,EAAKgjI,MAAQ,KACbhjI,EAAKkkH,WAAL,6BAIN,MACF,IAAK,OACHlkH,EAAKgjI,MAAQ,KACbhjI,EAAKkkH,WAAL,aAMN,OAAOlkH,GAETytF,cAAe,SAACp6G,EAAOmN,EAAegsG,GACpC,IAAMr1E,EAAM32B,EAAcgtG,SAASp4E,UAAUkvH,QAAQntH,IAC/CirH,EACJ5hJ,EAAcgtG,SAASp4E,UAAUkvH,QAAQlC,UAAUjrH,GAE/ClmB,EAAS,CACbosC,OAFa+kG,EAAU/kG,OAGvB2mG,aAAcx3C,EAAU5vG,cACpB4vG,EAAU5vG,cAAcsD,cACxB7M,EAAMyJ,YAAYwnJ,SAClBjxJ,EAAMyJ,YAAYwnJ,QAAQN,aACxB3wJ,EAAMyJ,YAAYwnJ,QAAQN,aAC1B3wJ,EAAMuJ,cAAcsD,cAC1B+jJ,cAAe5wJ,EAAM4P,QACrBwhJ,iBAAkB,MAClBC,uBAAuB,GAGnBn4G,EAAU,CACdw1G,KAAM,CACJhY,IAAK,oBACLK,IAAK,sBAEP4X,KAAM,qBAGF71C,EACJK,EAAUL,iBAAmBK,EAAUL,gBAAgBruG,MACnD0uG,EAAUL,gBAAgBruG,MAAMuK,cAChC,KAGN,GAAImkG,EAAUP,eACZ,OAAQO,EAAUP,gBAChB,IAAK,OAGH,OAFAh7F,EAAO0zI,sBACLp4G,EAAQigE,EAAUP,gBAAlB,IACME,GACN,IAAK,MACL,IAAK,MACHl7F,EAAO0zI,sBACLp4G,EAAQigE,EAAUP,gBAAgBE,GACpC,MACF,QACEl7F,EAAO0zI,sBAAwB5xJ,OAAOkR,OACpCsoC,EAAQigE,EAAUP,iBAClBtrG,KAAK,KAGX,MACF,IAAK,OACL,QACEsQ,EAAO0zI,sBACLp4G,EAAQigE,EAAUP,gBAM1B,OAAQE,GACN,IAAK,MACHl7F,EAAOwzI,iBAAmB,MAC1B,MACF,IAAK,MACHxzI,EAAOwzI,iBAAmB,MAC1B,MACF,QACExzI,EAAOwzI,iBAAmB,MAI9B,IAAI/3H,EAAM01H,EAAU11H,IAgBpB,OAbek4H,UAAUC,UAAUz1I,QAAQ,WAAa,IAGnD2R,SAAS+jI,OAAO19G,MACf,+CAGFrmB,SAAS+jI,OACP,qEACFp4H,GAAO,gBAKT,GAAA3yB,OAAG2yB,EAAH,KACA35B,OAAOoE,KAAK8Z,GACT/X,IACC,SAAAypJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB3xI,EAAO0xI,MAE9DhiJ,KAAK,MAGZ+sG,OAAQ,SAACd,EAAY3pF,EAAQ5vB,EAAOmN,GAElC,IADsBugB,SAASC,eAAe,kBAC1B,CAClB,IAAM6hI,EAAY9hI,SAASvtB,cAAc,OA8BzC,GA7BAqvJ,EAAUz5H,UAAV,iqBAAArvB,OAQiB6yG,EARjB,yeAAA7yG,OAewByG,EAAcgtG,SAASp4E,UAAUkvH,QAAQ9zC,SAfjE,iwBA0BAzvF,SAASu2D,KAAKC,YAAYsrE,IAGrB9hI,SAASC,eAAe,uBAAwB,CACnD,IAAM+jI,EAAehkI,SAASvtB,cAAc,SAC5CuxJ,EAAavsJ,GAAK,sBAClBusJ,EAAa37H,UAAb,qbAaArI,SAASu2D,KAAKC,YAAYwtE,OAKlCjU,cAAe,CACb5rH,SAAS,EACTsrF,SAAU,oCACVn7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENi8G,QAAS,WACTgyC,WAAY,MACZje,WAAY,gBACZ11B,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Be,gBAAiB,CAAEu1C,uCAAwC,IAC3Dv3C,cAAe,SACbp6G,EACAmN,EACAgsG,EACAC,EACAC,GAEA,IAAMu4C,EAAczkJ,EAAcwvE,OAAOw8B,EAAU5vG,eAC7C84G,EAAgBl+F,OAAO0tI,mBACzB1tI,OAAO0tI,mBAAmBxvC,cAC1B,KAEJ,OAAKuvC,EAAYnU,cAIV,CACLtmH,UAAWhqB,EAAcoR,QAAQqjB,gBACjC3G,QAAS9tB,EAAcoR,QAAQqjB,gBAC/B3f,SACEogG,GACoB,aAAlBA,GACAl+F,OAAO0tI,mBAAmBC,UAAUzvC,EAAcx1G,eAChDsX,OAAO0tI,mBAAmBC,UAC1B3tI,OAAO0tI,mBAAmBxvC,cAAcx1G,eACxCoV,SACAkC,OAAOsd,SACbi8G,YAAakU,EAAYnU,cAAcC,YACvCC,cAAeiU,EAAYnU,cAAcE,cACzCoU,yBAA0BH,EAAYnU,cAAc7kD,UACpDo5D,oBAAqB,CAACJ,EAAYnU,cAAc7kD,WAChDq5D,gCAAgC,EAChC74C,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cApBtB,MAuBXgB,OAAQ,SAACd,EAAY3pF,GACfzL,OAAOs5H,eAAiBlkC,IACtB3pF,IACF2pF,EAAW24C,sBAAwBnlJ,WAAW6iB,IAEhDzL,OAAOs5H,cAAcpjC,OAAOd,EAAY,WAI9C44C,UAAW,CACTtgI,SAAS,EACTsrF,SAAU,4BACVn7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENi8G,QAAS,YACTgyC,WAAY,MACZje,WAAY,gBACZ11B,iBAAkB,CAAC,UACnBE,gBAAiB,CACf,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OAEF+2C,iBAAkB,CAEhBvgI,SAAS,EACTwI,gBAAiB,6CACjBg4H,eAAgB,CACd,CACEt5G,aAAc,UACd72C,KAAM,gBACNoB,KAAM,WAER,CACEy1C,aAAc,UACd72C,KAAM,gBACNoB,KAAM,WAER,CACEy1C,aAAc,UACd72C,KAAM,eACNoB,KAAM,WAER,CACEy1C,aAAc,UACd72C,KAAM,eACNoB,KAAM,aAIZ84G,gBAAiB,CACfk2C,iDAAkD,GAClDC,gDAAiD,CAC/C/1C,cAAe9uF,SAASu2D,KACxBs4B,QAAS,SAACv8G,EAAOmN,EAAeytG,GAG9B,IADA,IAAMhuF,EAAUc,SAAS8kI,iBAAiB,wBACjC/lJ,EAAI,EAAGA,EAAImgB,EAAQ7oB,OAAQ0I,IAClCmgB,EAAQngB,GAAGgmJ,SASb,IADA,IAAMC,EAAUhlI,SAAS8kI,iBAAiB,qBACjC/lJ,EAAI,EAAGA,EAAIimJ,EAAQ3uJ,OAAQ0I,IAClCimJ,EAAQjmJ,GAAGgmJ,SAGb,IAAMh9B,EAAWz1H,EAAMy1H,SACnBz1H,EAAMy1H,SADO,iBAAA/uH,OAEI1G,EAAMuJ,eAC3B,IAAKmkB,SAASC,eAAe8nG,GAAW,CACtC,IAAMv1H,EAAIwtB,SAASvtB,cAAc,KACjCD,EAAEiF,GAAKswH,EACPv1H,EAAEylB,KAAOi1F,EAAaR,cAAcp6G,EAAOmN,GAC3CjN,EAAEulB,OAAS,SACXvlB,EAAEwlB,IAAM,+BACRxlB,EAAEqb,UAAY,kDACdrb,EAAEsmB,MAAQ,kBACVtmB,EAAEkG,MAAQ,gBACVsnB,SAASu2D,KAAKC,YAAYhkF,OAKlCk6G,cAAe,SAACp6G,EAAOmN,GAAoC8E,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,OACnD+pB,EAAYh8B,EAAMg8B,UAAYh8B,EAAMg8B,UAAY,MAChDpe,EAAS,CACb+0I,KAAM,KACNrvJ,KAAM,OACNq+F,KAAM,SACNngG,MAAO,cACPoxJ,iBAAiB,EAEjBC,aAAY,GAAAnsJ,OAAKs1B,EAAL,KAAAt1B,OAAkB1G,EAAMuJ,eACpCid,MAAK,QAAA9f,OAAUs1B,EAAV,SAAAt1B,OAA2B1G,EAAMuJ,eACtCupJ,YAAW,GAAApsJ,OAAKs1B,EAAL,KAAAt1B,OAAkB1G,EAAMuJ,eACnCwpJ,aAAc,6CACdx0I,QAC4C,IAA1CpR,EAAcoR,QAAQqjB,gBAAwB,UAAY,QAK9D,MACE,GAAAl7B,OAHU,uCAGV,KACAhH,OAAOoE,KAAK8Z,GACT/X,IACC,SAAAypJ,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB3xI,EAAO0xI,MAE9DhiJ,KAAK,MAGZ+sG,OAAQ,SAACd,EAAY3pF,EAAQ5vB,GAC3B,IAAMy1H,EAAWz1H,EAAMy1H,SACnBz1H,EAAMy1H,SADO,iBAAA/uH,OAEI1G,EAAMuJ,eACrBrJ,EAAIwtB,SAASC,eAAe8nG,GAC9Bv1H,GACFA,EAAE8yJ,UAgCRC,QAAS,CACPphI,SAAS,EACTsrF,SAAU,8BACVn7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENi8G,QAAS,WACTgyC,WAAY,MACZje,WAAY,aACZ11B,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Bv3E,IAAK,aACLs4E,gBAAiB,CACf82C,mDAAoD,IAEtD94C,cAAe,SACbp6G,EACAmN,EACAgsG,EACAg6C,EACA95C,GAEA,MAAO,CACLv1E,IAAK,aACL69D,KAAM,MACN5wF,MAAO/Q,EAAMyJ,YAAYmD,QACzBovB,UAAW,MACXm3H,WAAYA,GAA0B,aACtC95C,QAASA,GAAoB,eAGjCgB,OAAQ,SAACd,EAAY3pF,EAAQ5vB,GACvBmkB,OAAOivI,iBACLxjI,IACF2pF,EAAW3pF,OAASA,EAAO3M,YAE7BkB,OAAOivI,eAAe/4C,OAAOd,EAAY,WAI/C85C,MAAO,CACLxhI,SAAS,EACTsrF,SAAU,4BACVn7G,WAAY,CACVnC,MAAO,CAAC,OAAQ,QAChBiC,OAAQ,CAAC,OAAQ,QACjBjB,GAAI,OAENi8G,QAAS,WACTgyC,WAAY,MACZje,WAAY,aACZ11B,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Bv3E,IAAK,aACLs4E,gBAAiB,CAAEk3C,0CAA2C,IAC9Dl5C,cAAe,SACbp6G,EACAmN,EACAgsG,EACAg6C,EACA95C,GAEA,MAAO,CACLk6C,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1B1pG,OAAQ,KACR2pG,uBAAwB,OAG5Bt5C,OAAQ,SAACd,EAAY3pF,EAAQ5vB,GAC3B,GAAImkB,OAAOyvI,YAAa,CACtB,IAAMC,EAAS,eACf,IAAKnmI,SAASC,eAAekmI,GAAS,CACpC,IAAMC,EAAuBpmI,SAASvtB,cAAc,OACpD2zJ,EAAqB3uJ,GAAK0uJ,EAC1BnmI,SAASu2D,KAAKC,YAAY4vE,GAG5B3vI,OAAOyvI,YAAYpoI,QAAQuoI,IACzBx6C,EACA7rF,SAASC,eAAekmI,UASvB1mJ,ucCnzITo6G,6MAEJhgH,MAAQ,KAGRzE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KAEHynH,EAAmBznH,KAAKC,MAAMwnH,iBAC7BA,GAAqBA,EAAiBzjH,SACzCyjH,EAAmB9nH,OAAOoE,KAAK/D,KAAKC,MAAM+8B,oBAE5C,IAAMoD,EAAgBpgC,KAAKC,MAAMmgC,gBACjC,OACE/7B,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,0BAA0BtF,MAAO,EAAGkB,cAAe,UAC1DqD,EAAAlE,EAAAC,cAAC6zJ,EAAA,EAADt0J,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEm4G,KAAMp4G,KAAKC,MAAMm4G,KACjBp2G,SAAUhC,KAAKC,MAAM+B,SACrB0lH,UAAW1nH,KAAKC,MAAMynH,aAGvB1nH,KAAKC,MAAMqrH,UAEXlrF,GACD/7B,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,gBAAgBpE,cAAe,UAEpCo/B,EAAgBt6B,IAAK,SAAAkL,GACnB,IAAMtH,EAAcvG,EAAKlD,MAAM+8B,kBAAkBhsB,EAAM0sB,UAAU1sB,EAAMA,OACvE,OACE3M,EAAAlE,EAAAC,cAAC8zJ,EAAA,EAADv0J,OAAAC,OAAA,GACMuD,EAAKlD,MADX,CAEE+Q,MAAOA,EAAMA,MACbs8D,cAAc,EACdxvC,QAAS9sB,EAAM8sB,QACfJ,SAAU1sB,EAAM0sB,SAChBh0B,YAAaA,EACbyuG,MAAK,eAAAxxG,OAAiBqK,EAAM0sB,UAC5Bu6E,OAAM,gBAAAtxG,OAAkBqK,EAAM0sB,UAC9Bq6E,eAAgB50G,EAAKlD,MAAM83G,gBAAkBsS,IAC7CxjH,IAAG,WAAAF,OAAaqK,EAAM0sB,SAAnB,KAAA/2B,OAA+BqK,EAAMA,MAAMA,EAAM8sB,SACpDC,cAA+B,OAAhB/sB,EAAM8sB,QAAep0B,EAAY2hE,GAAG3hE,EAAY4nE,SAQxEjtE,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,gBAAgBpE,cAAe,UAErCymH,EAAiB3hH,IAAI,SAAA43B,GACnB,IAAMC,EAAiBx6B,EAAKlD,MAAM+8B,kBAAkBU,GACpD,IAAKC,EACH,OAAO,KAET,IAAMG,EAAU36B,EAAKlD,MAAMqoD,aAAe,KAC1C,OAAO3oD,OAAOoE,KAAK45B,GAAgB73B,IAAK,SAAAkL,GACtC,OACE3M,EAAAlE,EAAAC,cAAC8zJ,EAAA,EAADv0J,OAAAC,OAAA,GACMuD,EAAKlD,MADX,CAEE+Q,MAAOA,EACP8sB,QAASA,EACTJ,SAAUA,EACVy6E,MAAK,eAAAxxG,OAAiB+2B,GACtBh0B,YAAai0B,EAAe3sB,GAC5BinG,OAAM,gBAAAtxG,OAAkB+2B,GACxB72B,IAAG,WAAAF,OAAa+2B,EAAb,KAAA/2B,OAAyBqK,GAC5B+mG,eAAgB50G,EAAKlD,MAAM83G,gBAAkBsS,oBArFtCxnH,aAmGZ2kH,sOC0mCA2gC,EAAA,CAAEt7I,QAptCD,6CAotCU06B,IAntCd,CACV,CACEsR,UAAY,EACZC,OAAU,GACV32C,KAAQ,OACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,WAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,UACRoB,KAAQ,WAEV,CACEpB,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,UACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,SAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,wBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,UACRoB,KAAQ,YAGZpB,KAAQ,uBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,cACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,qBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,MACRoB,KAAQ,WAEV,CACEpB,KAAQ,MACRoB,KAAQ,WAEV,CACEpB,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,eACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,SAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,eACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,WACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,QACRoB,KAAQ,YAGZpB,KAAQ,sBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,UACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,iBACRoB,KAAQ,YAGZpB,KAAQ,kBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,eACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,cACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,kBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,8BACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,qBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,aACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,QACRoB,KAAQ,YAGZpB,KAAQ,YACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,sBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,gBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,SACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,WAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,UACRoB,KAAQ,YAGZpB,KAAQ,sBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,iBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,MACRoB,KAAQ,WAEV,CACEpB,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,WACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,SAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,cACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,qBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,aACRoB,KAAQ,WAEV,CACEpB,KAAQ,WACRoB,KAAQ,WAEV,CACEpB,KAAQ,cACRoB,KAAQ,YAGZpB,KAAQ,QACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,kBACRoB,KAAQ,YAGZpB,KAAQ,mBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,sBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,UACRoB,KAAQ,YAGZpB,KAAQ,qBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,WAEV,CACEpB,KAAQ,GACRoB,KAAQ,WAEV,CACEpB,KAAQ,GACRoB,KAAQ,WAEV,CACEpB,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,QACRoB,KAAQ,WAEV,CACEpB,KAAQ,UACRoB,KAAQ,YAGZpB,KAAQ,YACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,eACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,uBACRoB,KAAQ,YAGZpB,KAAQ,wBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,oBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,QACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,qBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,2BACRoB,KAAQ,YAGZpB,KAAQ,oBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,GACV32C,KAAQ,WACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,SAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,OACnB31C,KAAQ,YAEV,CACEu1C,OAAU,CACR,CACE32C,KAAQ,cACRoB,KAAQ,WAEV,CACEpB,KAAQ,eACRoB,KAAQ,WAEV,CACEpB,KAAQ,qBACRoB,KAAQ,WAEV,CACEpB,KAAQ,+BACRoB,KAAQ,WAEV,CACEpB,KAAQ,QACRoB,KAAQ,UAEV,CACEpB,KAAQ,UACRoB,KAAQ,UAEV,CACEpB,KAAQ,YACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,cACbzgB,gBAAmB,aACnB31C,KAAQ,eAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,sBACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,cACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,iBACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,SACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,aACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,aACRoB,KAAQ,YAGZpB,KAAQ,OACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,WACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,eACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,SACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,WACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,eACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,iBACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,SACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,QACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,WACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,cACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,iBACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,cACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,aACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,WACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,cACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,mBACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,cACRoB,KAAQ,YAGZpB,KAAQ,kBACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,kBACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,kBACRoB,KAAQ,YAGZpB,KAAQ,kBACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,WACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,WACRoB,KAAQ,YAGZpB,KAAQ,WACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,iBACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,iBACRoB,KAAQ,YAGZpB,KAAQ,iBACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,uBACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,uBACRoB,KAAQ,YAGZpB,KAAQ,6BACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,2BACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,2BACRoB,KAAQ,YAGZpB,KAAQ,mBACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,QACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,eACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,mBACRoB,KAAQ,YAGZpB,KAAQ,kBACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,QACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,OACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,UACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,OACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,KACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,WACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACE4wJ,WAAa,EACbr7G,OAAU,CACR,CACEs7G,SAAW,EACXjyJ,KAAQ,QACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,UACRoB,KAAQ,WAEV,CACE6wJ,SAAW,EACXjyJ,KAAQ,SACRoB,KAAQ,YAGZpB,KAAQ,WACRw3D,UAAa,qEACbp2D,KAAQ,SAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,aACRoB,KAAQ,YAGZpB,KAAQ,OACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,SACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,mBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,eACRoB,KAAQ,YAGZpB,KAAQ,SACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,cACRoB,KAAQ,YAGZpB,KAAQ,cACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,WACRoB,KAAQ,WAEV,CACEpB,KAAQ,cACRoB,KAAQ,YAGZpB,KAAQ,oBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,YAEV,CACEs1C,UAAY,EACZC,OAAU,CACR,CACE32C,KAAQ,WACRoB,KAAQ,WAEV,CACEpB,KAAQ,cACRoB,KAAQ,WAEV,CACEpB,KAAQ,mBACRoB,KAAQ,YAGZpB,KAAQ,kBACR42C,QAAW,CACT,CACE52C,KAAQ,GACRoB,KAAQ,YAGZ01C,SAAW,EACX0gB,UAAa,aACbzgB,gBAAmB,aACnB31C,KAAQ,gCC/sCG8/E,EAAA,CAAEx2E,QAFD,6CAEU06B,IADd,CAAC,CAACsR,UAAW,EAAKC,OAAS,GAAG32C,KAAO,OAAO42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,GAAG32C,KAAO,OAAO42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,UAAU42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,SAAS01C,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,SAASoB,KAAO,YAAYpB,KAAO,WAAW42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAKC,OAAS,GAAG32C,KAAO,cAAc42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,eAAe42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,SAAS01C,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAKC,OAAS,GAAG32C,KAAO,WAAW42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAO42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAO42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,QAAQoB,KAAO,YAAYpB,KAAO,UAAU42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAKC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,YAAY42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAKC,OAAS,GAAG32C,KAAO,UAAU42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,SAAS01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,aAAaoB,KAAO,YAAYpB,KAAO,eAAe42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAKC,OAAS,GAAG32C,KAAO,QAAQ42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAKC,OAAS,GAAG32C,KAAO,SAAS42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAO42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAO42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,WAAW42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,SAAS01C,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAO42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAO42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,GAAG32C,KAAO,QAAQ42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAKC,OAAS,GAAG32C,KAAO,YAAY42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,UAAU42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,SAAS01C,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACs1C,UAAW,EAAKC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,YAAY42C,QAAU,CAAC,CAAC52C,KAAO,GAAGoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,OAAO31C,KAAO,YAAY,CAACs1C,UAAW,EAAMC,OAAS,CAAC,CAAC32C,KAAO,MAAMoB,KAAO,WAAW,CAACpB,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAO42C,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,YAAY,CAACu1C,OAAS,CAAC,CAAC32C,KAAO,UAAUoB,KAAO,YAAY01C,SAAU,EAAMC,gBAAkB,aAAa31C,KAAO,eAAe,CAAC4wJ,WAAY,EAAMr7G,OAAS,CAAC,CAACs7G,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAMjyJ,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOoB,KAAO,SAAS,CAAC4wJ,WAAY,EAAMr7G,OAAS,CAAC,CAACs7G,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAMjyJ,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,OAAOoB,KAAO,SAAS,CAAC4wJ,WAAY,EAAMr7G,OAAS,CAAC,CAACs7G,SAAU,EAAKjyJ,KAAO,YAAYoB,KAAO,YAAYpB,KAAO,kBAAkBoB,KAAO,SAAS,CAAC4wJ,WAAY,EAAMr7G,OAAS,CAAC,CAACs7G,SAAU,EAAKjyJ,KAAO,QAAQoB,KAAO,YAAYpB,KAAO,cAAcoB,KAAO,SAAS,CAAC4wJ,WAAY,EAAKr7G,OAAS,CAAC,CAACs7G,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,UAAU,CAAC6wJ,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAMjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAMjyJ,KAAO,MAAMoB,KAAO,UAAUpB,KAAO,UAAUoB,KAAO,SAAS,CAAC4wJ,WAAY,EAAMr7G,OAAS,CAAC,CAACs7G,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAMjyJ,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,WAAWoB,KAAO,SAAS,CAAC4wJ,WAAY,EAAMr7G,OAAS,CAAC,CAACs7G,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAKjyJ,KAAO,MAAMoB,KAAO,WAAW,CAAC6wJ,SAAU,EAAMjyJ,KAAO,MAAMoB,KAAO,YAAYpB,KAAO,WAAWoB,KAAO,iFCc3kLoM,EAAkB,CAEtB8zI,EAAE,CACAvF,KAAK,CACHp/B,IAAI,CACFv3E,IAAIu3E,EACJ9tG,MAAM,MACNrN,SAAS,GACTmuB,SAAQ,EACRuiI,mBAAkB,EAClB/xJ,MAAM,oBACNuK,QAAQ,6CACRud,QAAQ,CACNm4H,iBAAiB,KAEnBuM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZqE,UAAU,CACRtjJ,MAAM,OAER+gB,KAAK,CACHwV,IAAI++G,EACJt1I,MAAM,eACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE+6B,IAAI+0G,EACJn6I,KAAK,OACL2vB,SAAQ,EACR9gB,MAAM,QACNnE,QAAQ,6CACRlJ,SAAS,GACTu7B,UAAU,OAOlBq/G,KAAK,IAIPoF,MAAM,CACJzF,KAAK,CACHp/B,IAAI,CACFv3E,IAAIu3E,EACJ9tG,MAAM,MACNrN,SAAS,GACTmuB,SAAQ,EACRuiI,mBAAkB,EAClB/xJ,MAAM,oBACNuK,QAAQ,6CACRud,QAAQ,CACNm4H,iBAAiB,KAEnBuM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZqE,UAAU,CACRtjJ,MAAM,OAER+gB,KAAK,CACHwV,IAAI++G,EACJt1I,MAAM,eACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE+6B,IAAI+0G,EACJn6I,KAAK,SACL2vB,SAAQ,EACR9gB,MAAM,QACNnE,QAAQ,6CACRlJ,SAAS,GACTu7B,UAAU,OAmDlBq/G,KAAK,IAIPrC,IAAI,CACFgC,KAAK,CACHp/B,IAAI,CACFv3E,IAAIu3E,EACJ9tG,MAAM,MACNrN,SAAS,GACTmuB,SAAQ,EACRuiI,mBAAkB,EAClB/xJ,MAAM,oBACNuK,QAAQ,6CACRud,QAAQ,CACNm4H,iBAAiB,KAEnBuM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZqE,UAAU,CACRtjJ,MAAM,OAER+gB,KAAK,CACHwV,IAAI++G,EACJt1I,MAAM,eACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE+6B,IAAIgtH,EACJ5wJ,SAAS,GACTxB,KAAK,QACL2vB,SAAQ,EACR9gB,MAAM,QACNkuB,UAAU,CACRmzB,aAAa,CACXlwD,KAAK,qBACL0b,OAAO,KAGXhR,QAAQ,8CAEV,CACE06B,IAAI+0G,EACJn6I,KAAK,SACL2vB,SAAQ,EACR9gB,MAAM,QACNnE,QAAQ,6CACRlJ,SAAS,GACTu7B,UAAU,MAMhB48G,KAAK,CACHv0G,IAAIu0G,EACJn4I,SAAS,EACTqN,MAAM,OACN8gB,SAAQ,EACRuiI,mBAAkB,EAClB/xJ,MAAM,qBACNuK,QAAQ,6CACRud,QAAQ,CACNm4H,iBAAiB,KAEnBuM,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZqE,UAAU,CACRtjJ,MAAM,QAER+gB,KAAK,CACHwV,IAAI++G,EACJt1I,MAAM,gBACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE+6B,IAAIgtH,EACJ5wJ,SAAS,GACTxB,KAAK,QACL2vB,SAAQ,EACR9gB,MAAM,SACNkuB,UAAU,CACRmzB,aAAa,CACXlwD,KAAK,qBACL0b,OAAO,KAGXhR,QAAQ,8CAEV,CACE06B,IAAI+0G,EACJn6I,KAAK,SACL2vB,SAAQ,EACR9gB,MAAM,SACNnE,QAAQ,6CACRlJ,SAAS,GACTu7B,UAAU,MAMhBgiH,KAAK,CACH35G,IAAI25G,EACJlwI,MAAM,OACNrN,SAAS,GACTmuB,SAAQ,EACRuiI,mBAAkB,EAClB/xJ,MAAM,oBACNuK,QAAQ,6CACRud,QAAQ,CACNm4H,iBAAiB,KAEnBuM,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZqE,UAAU,CACRtjJ,MAAM,QAER+gB,KAAK,CACHwV,IAAI++G,EACJt1I,MAAM,gBACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE+6B,IAAIgtH,EACJ5wJ,SAAS,GACTxB,KAAK,QACL2vB,SAAQ,EACR9gB,MAAM,SACNkuB,UAAU,CACRmzB,aAAa,CACXlwD,KAAK,qBACL0b,OAAO,KAGXhR,QAAQ,8CAEV,CACE06B,IAAI+0G,EACJ34I,SAAS,GACTmuB,SAAQ,EACR9gB,MAAM,QACN7O,KAAK,SACL0K,QAAQ,6CACRqyB,UAAU,OAOlBq/G,KAAK,IAKP+E,GAAG,CACDpF,KAAK,CACHp/B,IAAI,CACFv3E,IAAIu3E,EACJ9tG,MAAM,MACNrN,SAAS,GACTmuB,SAAQ,EACRuiI,mBAAkB,EAClB/xJ,MAAM,oBACNuK,QAAQ,6CACRud,QAAQ,CACNm4H,iBAAiB,KAEnBuM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZqE,UAAU,CACRtjJ,MAAM,OAER+gB,KAAK,CACHwV,IAAI++G,EACJt1I,MAAM,eACNnE,QAAQ,8CAEVL,UAAU,CACR,CACE7I,SAAS,GACTqN,MAAM,OACN8gB,SAAQ,EACRyV,IAAIitH,EAAOjtH,IACXplC,KAAK,WACL0K,QAAQ,6CACRqyB,UAAU,CACRmzB,aAAa,CACXlwD,KAAK,qBACL0b,OAAO,QAMjBi+H,KAAM,CACJv0G,IAAKu0G,EACL9qI,MAAO,OACPrN,SAAU,EACVmuB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbqE,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXL,UAAW,CACT,CACE7I,SAAU,GACVmuB,SAAS,EACT9gB,MAAO,QACPu2B,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTqyB,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,SAOpB0gI,KAAM,IAIRmF,KAAM,CACJxF,KAAM,CACJp/B,IAAK,CACHv3E,IAAKu3E,EACL9tG,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbqE,UAAW,CACTtjJ,MAAO,OAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,gHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,UACP7O,KAAM,iBACN0K,QAAS,8CAEX++F,aAAc,CACZ,CACEzpG,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,WACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,OAKhBmc,kBAAmB,CACjBhpB,MAAO,UACPu2B,IAAKygH,EACL7lJ,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEslB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE0pB,IAAKmtH,EACL5iI,SAAS,EACT3vB,KAAM,UACN0K,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE0pB,IAAK+0G,EACLn6I,KAAM,OACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEqI,IAAK+0G,EACLn6I,KAAM,SACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,SACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEqI,IAAKotH,EACLxyJ,KAAM,MACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEqI,IAAKktH,EACLtyJ,KAAM,OACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,QAMlBi+H,KAAM,CACJv0G,IAAKu0G,EACLn4I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEX++F,aAAc,CACZ,CACErkE,IAAKktH,EACLtyJ,KAAM,OACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,YACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACErK,KAAM,WACN2vB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZ16B,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE1b,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEqI,IAAK+0G,EACL34I,SAAU,GACVmuB,SAAS,EACT3vB,KAAM,SACN6O,MAAO,UACPnE,QAAS,6CACTqyB,UAAW,IAIb,CACE/8B,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,SACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,QAMlBijI,KAAM,CACJn9I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACErK,KAAM,WACN2vB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZ16B,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE1b,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEqI,IAAK+0G,EACL34I,SAAU,GACVxB,KAAM,SACN2vB,SAAS,EACT9gB,MAAO,UACPnE,QAAS,6CACTqyB,UAAW,MAMjB8hH,KAAM,CACJr9I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnBO,oBAAoB,EACpBtyJ,MAAO,qBAEPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACErK,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACE/8B,KAAM,SACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,UACPrN,SAAU,GACVu7B,UAAW,MAMjB6hH,KAAM,CACJp9I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnBO,oBAAoB,EACpBtyJ,MAAO,sBACPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACErK,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEqI,IAAK+0G,EACLxqH,SAAS,EACT3vB,KAAM,SACN6O,MAAO,UACPnE,QAAS,6CACTlJ,SAAU,GACVu7B,UAAW,MAMjBgiH,KAAM,CACJ35G,IAAK25G,EACLlwI,MAAO,OACPrN,SAAU,GACVmuB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbqE,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXL,UAAW,CACT,CACEslB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE0pB,IAAK+0G,EACLn6I,KAAM,SACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,MAMjB+hH,KAAM,CACJt9I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEslB,SAAS,EACT9gB,MAAO,QACPu2B,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTlJ,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE0pB,IAAKmtH,EACL/wJ,SAAU,GACVqN,MAAO,QACP8gB,SAAS,EACT3vB,KAAM,UACN0K,QAAS,6CACTqyB,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE0pB,IAAK+0G,EACLn6I,KAAM,OACN2vB,SAAS,EACT9gB,MAAO,QACPnE,QAAS,6CACTlJ,SAAU,GACVu7B,UAAW,IAIb,CACEqI,IAAK+0G,EACLxqH,SAAS,EACT3vB,KAAM,SACN6O,MAAO,UACPnE,QAAS,6CACTlJ,SAAU,GACVu7B,UAAW,MAMjBkiH,IAAK,CACHh3H,QAAS,GACTpZ,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTyV,IAAK87C,EAAM97C,IACXu3G,YAAa,GACbuV,mBAAmB,EACnB/xJ,MAAO,mBACPF,KAAM,wBACNyK,QAAS,6CACTklB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEXL,UAAW,CACT,CACE+6B,IAAKgtH,EACL5wJ,SAAU,GACVmuB,SAAS,EACT3vB,KAAM,QACN6O,MAAO,QACPkuB,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,KAGZhR,QAAS,8CAEX,CACE06B,IAAKstH,EACLlxJ,SAAU,GACVxB,KAAM,OACN6O,MAAO,OACP8gB,SAAS,EACToN,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,KAGZhR,QAAS,gDAIfyyG,IAAK,CACHl1F,QAAS,GACTpZ,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTyV,IAAK87C,EAAM97C,IACXu3G,YAAa,GACbuV,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTklB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEXL,UAAW,CACT,CACE+6B,IAAKgtH,EACL5wJ,SAAU,GACVmuB,SAAS,EACT3vB,KAAM,QACN6O,MAAO,QACPkuB,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,KAGZhR,QAAS,8CAEX,CACE06B,IAAKstH,EACLlxJ,SAAU,GACVxB,KAAM,OACN6O,MAAO,OACP8gB,SAAS,EACToN,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,KAGZhR,QAAS,iDAKjB0xI,KAAM,CACJz/B,IAAK,CACHv3E,IAAKu3E,EACLn7G,SAAU,GACVqN,MAAO,MACP8gB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbqE,UAAW,CACTtjJ,MAAO,OAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,cACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,UACP7O,KAAM,gBACN0K,QAAS,8CAEX++F,aAAc,CACZ,CACEzpG,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,WACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,UACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACErK,KAAM,WACN2vB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZ16B,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE1b,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,IAIb,CACE/8B,KAAM,MACN2vB,SAAS,EACTyV,IAAKotH,EACL9nJ,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,IAIb,CACE/8B,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,QAMlBi+H,KAAM,CACJv0G,IAAKu0G,EACLn4I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,iBACN0K,QAAS,8CAEX++F,aAAc,CACZ,CACEzpG,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,YACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACErK,KAAM,WACN2vB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZ16B,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE1b,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACE/8B,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,SACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,QAMlBijI,KAAM,CACJn9I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,iBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,UACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACErK,KAAM,WACN2vB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZ16B,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE1b,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,QAQrBmgG,EAAG,CACD6e,KAAM,CACJp/B,IAAK,CACHv3E,IAAKu3E,EACL9tG,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbqE,UAAW,CACTtjJ,MAAO,OAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,gHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,UACP7O,KAAM,iBACN0K,QAAS,8CAEX++F,aAAc,CACZ,CACEzpG,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,WACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,OAKhBmc,kBAAmB,CACjBhpB,MAAO,UACPu2B,IAAKygH,EACL7lJ,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,IACX3uE,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE0pB,IAAKmtH,EACL5iI,SAAS,EACT3vB,KAAM,UACN0K,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE4iF,UAAW,IACXl5D,IAAK+0G,EACLn6I,KAAM,OACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXl5D,IAAK+0G,EACLn6I,KAAM,SACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,SACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEqI,IAAKotH,EACLxyJ,KAAM,MACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXl5D,IAAKktH,EACLtyJ,KAAM,OACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,QAMlBi+H,KAAM,CACJv0G,IAAKu0G,EACLn4I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEX++F,aAAc,CACZ,CACErkE,IAAKktH,EACLtyJ,KAAM,OACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,YACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,EACX3uE,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE4iF,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXl5D,IAAK+0G,EACL34I,SAAU,GACVmuB,SAAS,EACT3vB,KAAM,SACN6O,MAAO,UACPnE,QAAS,6CACTqyB,UAAW,IAIb,CACEuhE,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,SACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,QAMlBijI,KAAM,CACJn9I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,IACXt+F,KAAM,WACN2vB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZ16B,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE4iF,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXl5D,IAAK+0G,EACL34I,SAAU,GACVxB,KAAM,SACN2vB,SAAS,EACT9gB,MAAO,UACPnE,QAAS,6CACTqyB,UAAW,MAMjB8hH,KAAM,CACJr9I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnBO,oBAAoB,EACpBtyJ,MAAO,qBAEPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXt+F,KAAM,SACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,UACPrN,SAAU,GACVu7B,UAAW,MAMjB6hH,KAAM,CACJp9I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnBO,oBAAoB,EACpBtyJ,MAAO,sBACPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXl5D,IAAK+0G,EACLxqH,SAAS,EACT3vB,KAAM,SACN6O,MAAO,UACPnE,QAAS,6CACTlJ,SAAU,GACVu7B,UAAW,MAMjBgiH,KAAM,CACJ35G,IAAK25G,EACLlwI,MAAO,OACPrN,SAAU,GACVmuB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbqE,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXL,UAAW,CACT,CACEi0F,UAAW,IACX3uE,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE4iF,UAAW,IACXl5D,IAAK+0G,EACLn6I,KAAM,SACN2vB,SAAS,EACTjlB,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,MAMjB+hH,KAAM,CACJt9I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,gBACPnE,QAAS,8CAEXktB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTk2B,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,IACX3uE,SAAS,EACT9gB,MAAO,QACPu2B,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTlJ,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE0pB,IAAKmtH,EACL/wJ,SAAU,GACVqN,MAAO,QACP8gB,SAAS,EACT3vB,KAAM,UACN0K,QAAS,6CACTqyB,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE4iF,UAAW,IACXl5D,IAAK+0G,EACLn6I,KAAM,OACN2vB,SAAS,EACT9gB,MAAO,QACPnE,QAAS,6CACTlJ,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXl5D,IAAK+0G,EACLxqH,SAAS,EACT3vB,KAAM,SACN6O,MAAO,UACPnE,QAAS,6CACTlJ,SAAU,GACVu7B,UAAW,MAMjBkiH,IAAK,CACHh3H,QAAS,GACTpZ,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTyV,IAAK87C,EAAM97C,IACXu3G,YAAa,GACbgW,mBAAmB,EACnBT,mBAAmB,EACnB/xJ,MAAO,mBACPF,KAAM,wBACNyK,QAAS,6CACTklB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEXL,UAAW,CAiBT,CACE+6B,IAAKstH,EACLlxJ,SAAU,GACVxB,KAAM,OACN6O,MAAO,OACP8gB,SAAS,EACToN,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,KAGZhR,QAAS,8CAEX,CACE06B,IAAK+0G,EACL34I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACT3vB,KAAM,SACN+8B,UAAW,GAEXryB,QAAS,gDAIfyyG,IAAK,CACHl1F,QAAS,GACTpZ,MAAO,MACPrN,SAAU,GACVmuB,SAAS,EACTyV,IAAK87C,EAAM97C,IACXu3G,YAAa,GACbgW,mBAAmB,EACnBT,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTklB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEXL,UAAW,CACT,CACE+6B,IAAKgtH,EACL5wJ,SAAU,GACVmuB,SAAS,EACT3vB,KAAM,QACN6O,MAAO,QACPkuB,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,KAGZhR,QAAS,8CAEX,CACE06B,IAAKstH,EACLlxJ,SAAU,GACVxB,KAAM,OACN6O,MAAO,OACP8gB,SAAS,EACToN,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,KAGZhR,QAAS,8CAEX,CACE06B,IAAK+0G,EACL34I,SAAU,GACVqN,MAAO,OACP8gB,SAAS,EACToN,UAAW,GACX/8B,KAAM,SACN0K,QAAS,iDAKjB0xI,KAAM,CACJz/B,IAAK,CACHv3E,IAAKu3E,EACLn7G,SAAU,GACVqN,MAAO,MACP8gB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,oBACPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbqE,UAAW,CACTtjJ,MAAO,OAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,cACPnE,QAAS,8CAEX68H,WAAY,CACV53G,SAAS,EACTijI,yBAA0B,oCAC1BC,0BAA2B,sCAE7Bj7H,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,UACP7O,KAAM,gBACN0K,QAAS,8CAEX++F,aAAc,CACZ,CACEzpG,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,WACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,UACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,IACX3uE,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZplC,KAAM,WACN0K,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE4iF,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,IAIb,CACE/8B,KAAM,MACN2vB,SAAS,EACTyV,IAAKotH,EACL9nJ,QAAS,6CACTmE,MAAO,OACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,QAMlBi+H,KAAM,CACJv0G,IAAKu0G,EACLn4I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTuiI,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTud,QAAS,CACPm4H,iBAAkB,KAEpBuM,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEX68H,WAAY,CACV53G,SAAS,EACTijI,yBAA0B,oCAC1BC,0BAA2B,sCAE7Bj7H,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,iBACN0K,QAAS,8CAEX++F,aAAc,CACZ,CACEzpG,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,YACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,OAKhBmc,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,WACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,EACXt+F,KAAM,WACN2vB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZ16B,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE4iF,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,IAIb,CACEuhE,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAKktH,EACL5nJ,QAAS,6CACTmE,MAAO,SACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,QACN0b,OAAQ,QAMlBijI,KAAM,CACJn9I,SAAU,EACVqN,MAAO,OACP8gB,SAAS,EACTyV,IAAK87C,EAAM97C,IACX8sH,mBAAmB,EACnB/xJ,MAAO,qBACPuK,QAAS,6CACTiiJ,KAAM,CACJO,aAAc,QAEhBiF,UAAW,CACTtjJ,MAAO,QAET+gB,KAAM,CACJwV,IAAK++G,EACLt1I,MAAO,eACPnE,QAAS,8CAEX68H,WAAY,CACV53G,SAAS,EACTijI,yBAA0B,oCAC1BC,0BAA2B,sCAE7Bj7H,UAAW,CACTjI,SAAS,EACTozB,YAAa,CACX3d,IAAKggH,EACLv2I,MAAO,WACP7O,KAAM,iBACN0K,QAAS,8CAEXmtB,kBAAmB,CACjBuN,IAAKygH,EACLh3I,MAAO,UACP7O,KAAM,kBACN0K,QAAS,6CACTqtB,aAAc,GACdgF,UAAW,CACT,CACE1xB,MAAO,UACPrL,KAAM,wBAKdqK,UAAW,CACT,CACEi0F,UAAW,IACXt+F,KAAM,WACN2vB,SAAS,EACTyV,IAAKitH,EAAOjtH,IACZ16B,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,qBACN0b,OAAQ,MAId,CACE1b,KAAM,UACN2vB,SAAS,EACTyV,IAAKmtH,EACL7nJ,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,CACTmzB,aAAc,CACZlwD,KAAM,aACN0b,OAAQ,MAId,CACE4iF,UAAW,IACXt+F,KAAM,OACN2vB,SAAS,EACTyV,IAAK+0G,EACLzvI,QAAS,6CACTmE,MAAO,QACPrN,SAAU,GACVu7B,UAAW,SAURvvB,0+jBC1uEAslJ,6MA3VbztJ,MAAQ,2EAGN,OACEgvG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAWC,IAAO7W,gBAAiBw5G,GAAI,CAAC,EAAE,GAAIr+G,GAAI,CAAC,EAAE,GAAIwhB,GAAI,CAAC,MAAO,QACxEi1F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAWC,IAAO5W,iBACvB2xG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK7oG,SAAU,WAAYC,OAAQ,IACjC2oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,SAAUD,WAAY,SAAUuF,SAAU,CAAC,OAAQ,QAAS1F,GAAI,OAAQw9G,GAAI,EAAGv1G,UAAW,SAAU0Y,GAAI,CAAC,MAAO,QACnIi1F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQy+C,GAAT,CAAYhqJ,WAAY,YAAaqsG,WAAY,QAASzpG,GAAI,QAASpL,SAAU,CAAC,QAAQ,GAAImG,UAAW,SAAUvG,MAAO,SAA1H,oBAGAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ0+C,GAAT,CAAY1yJ,WAAY,MAAO80G,WAAY,CAAC,QAAS,OAAQ70G,SAAU,CAAC,EAAE,GAAImG,UAAW,SAAUvG,MAAO,SAA1G,+BAIFk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,SAAUD,WAAY,SAAUuF,SAAU,CAAC,OAAQ,QAAS1F,GAAI,OAAQiI,UAAW,UACtG2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAWC,IAAOzW,cAAejE,WAAY,SAAUjB,MAAO,OAAQouB,UAAW,CAAC,OAAO,QAASxtB,gBAAiB,QAAS4B,MAAO,YAAaf,EAAG,CAAC,EAAE,GAAIiN,UAAW,wCAAyChN,aAAc,OAAQ6E,MAAO,CAACuH,SAAS,aACxP4oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,kBAAmBg5G,GAAI,GAC9B5H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM2H,GAAI,GAAV,wZAGA5H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM2H,GAAI,GAAV,sgBAGA5H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM2H,GAAI,GAAV,ikBAGA5H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM2H,GAAI,GAAV,iuBAGA5H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,+mCAKFD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,kBAAmBvF,GAAI,CAAC,EAAE,IACjC22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,sBAIA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,sGAIA22G,EAAAr2G,EAAAC,cAAA,MAAIob,UAAWC,IAAO1W,MACpByxG,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,4CADF,yKAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,iDADF,mjBAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,wCADF,sLAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,mDADF,4IAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,sDADF,mHAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,yDADF,6JAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,yCADF,mOAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,2CADF,wJAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,wCADF,iFAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,4CADF,4CAGAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,0DADF,sJAMJo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,sBAAuBvF,GAAI,CAAC,EAAE,IACrC22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,mCAIA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,mjBAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,WAAYvF,GAAI,CAAC,EAAE,IAC1B22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,gBAKF8zG,EAAAr2G,EAAAC,cAAA,MAAIob,UAAWC,IAAO1W,MACpByxG,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,+BAA8Bo2G,EAAAr2G,EAAAC,cAAA,WADhC,qTAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,2BAA0Bo2G,EAAAr2G,EAAAC,cAAA,WAD5B,kGAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,2CAA0Co2G,EAAAr2G,EAAAC,cAAA,WAD5C,qzBAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,kDAAiDo2G,EAAAr2G,EAAAC,cAAA,WADnD,uMAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,iEAAgEo2G,EAAAr2G,EAAAC,cAAA,WADlE,oWAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,4CAA2Co2G,EAAAr2G,EAAAC,cAAA,WAD7C,8EAGEo2G,EAAAr2G,EAAAC,cAAA,MAAIob,UAAWC,IAAO1W,KAAMsB,MAAO,CAAC+uJ,UAAU,gBAC5C5+C,EAAAr2G,EAAAC,cAAA,0GACAo2G,EAAAr2G,EAAAC,cAAA,kMACAo2G,EAAAr2G,EAAAC,cAAA,4KAGJo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,kDAAiDo2G,EAAAr2G,EAAAC,cAAA,WADnD,iFAGEo2G,EAAAr2G,EAAAC,cAAA,MAAIob,UAAWC,IAAO1W,KAAMsB,MAAO,CAAC+uJ,UAAU,gBAC5C5+C,EAAAr2G,EAAAC,cAAA,mNACAo2G,EAAAr2G,EAAAC,cAAA,oKACAo2G,EAAAr2G,EAAAC,cAAA,gQACAo2G,EAAAr2G,EAAAC,cAAA,wOACAo2G,EAAAr2G,EAAAC,cAAA,0LACAo2G,EAAAr2G,EAAAC,cAAA,2JACAo2G,EAAAr2G,EAAAC,cAAA,qLACAo2G,EAAAr2G,EAAAC,cAAA,mEACAo2G,EAAAr2G,EAAAC,cAAA,uVACAo2G,EAAAr2G,EAAAC,cAAA,qNACAo2G,EAAAr2G,EAAAC,cAAA,0OACAo2G,EAAAr2G,EAAAC,cAAA,yHAIJo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,+CAA8Co2G,EAAAr2G,EAAAC,cAAA,WADhD,sCAGEo2G,EAAAr2G,EAAAC,cAAA,MAAIob,UAAWC,IAAO1W,KAAMsB,MAAO,CAAC+uJ,UAAU,gBAC5C5+C,EAAAr2G,EAAAC,cAAA,0LACAo2G,EAAAr2G,EAAAC,cAAA,+PACAo2G,EAAAr2G,EAAAC,cAAA,mUACAo2G,EAAAr2G,EAAAC,cAAA,yIACAo2G,EAAAr2G,EAAAC,cAAA,6QARJ,uXAYAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,iDAAgDo2G,EAAAr2G,EAAAC,cAAA,WADlD,sCAGEo2G,EAAAr2G,EAAAC,cAAA,MAAIob,UAAWC,IAAO1W,KAAMsB,MAAO,CAAC+uJ,UAAU,gBAC5C5+C,EAAAr2G,EAAAC,cAAA,0HACAo2G,EAAAr2G,EAAAC,cAAA,4GAGJo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,oCAAmCo2G,EAAAr2G,EAAAC,cAAA,WADrC,80BAMFo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,iBAAkBvF,GAAI,CAAC,EAAE,IAChC22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,qBAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,sLAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,qBAAsBvF,GAAI,CAAC,EAAE,IACpC22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,yBAGA8zG,EAAAr2G,EAAAC,cAAA,MAAIob,UAAWC,IAAO1W,MACpByxG,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,iEAAgEo2G,EAAAr2G,EAAAC,cAAA,WADlE,sjBAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,8EAA6Eo2G,EAAAr2G,EAAAC,cAAA,WAD/E,snCAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,iCAAgCo2G,EAAAr2G,EAAAC,cAAA,WADlC,wVAOJo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,iCAAkCvF,GAAI,CAAC,EAAE,IAChD22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,uCAGA8zG,EAAAr2G,EAAAC,cAAA,MAAIob,UAAWC,IAAO1W,MACpByxG,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,0CAAyCo2G,EAAAr2G,EAAAC,cAAA,WAD3C,uRAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,mCAAkCo2G,EAAAr2G,EAAAC,cAAA,WADpC,mOAIAo2G,EAAAr2G,EAAAC,cAAA,UACEo2G,EAAAr2G,EAAAC,cAAA,+BAA8Bo2G,EAAAr2G,EAAAC,cAAA,WADhC,sRAOJo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,qBAAsBvF,GAAI,CAAC,EAAE,IACpC22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,yBAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,sqBAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,kBAAmBvF,GAAI,CAAC,EAAE,IACjC22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,sBAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,klCAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,0BAA2BvF,GAAI,CAAC,EAAE,IACzC22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,+BAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,4rBAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,+lBAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,2ZAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,weAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,sWAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,gjCAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,8mBAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,6MAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,0CAA2CvF,GAAI,CAAC,EAAE,IACzD22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,sDAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,wwCAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,0CAA2CvF,GAAI,CAAC,EAAE,IACzD22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,+BAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,yyBAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,iCAAkCvF,GAAI,CAAC,EAAE,IAChD22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,0CAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,woBAIA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,62DAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,40BAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,2xBAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,4bAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,mPAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,2aAGA22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,giCAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,gBAAiBvF,GAAI,CAAC,EAAE,IAC/B22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,qBAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,mzBAKF22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKrxG,GAAI,gBAAiBvF,GAAI,CAAC,EAAE,IAC/B22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYxrH,MAAO,YAAauG,UAAW,OAAQpG,WAAY,EAAG80G,WAAY,UAAW70G,SAAU,CAAC,EAAE,IAAtG,qBAGA8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM52G,GAAI,GAAV,62DASV22G,EAAAr2G,EAAAC,cAAC69G,EAAA,EAAD,cAtVUp7G,6BCDHwyJ,EAAA,CACbhvI,YAAa,CAAC,OAAQ,QAEtBhL,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrC+K,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERvb,MAAO,CACLwb,MAAO,2CACPvb,UAAW,qCACXwb,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnChnB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BknB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,oBAAqB,qBAClCC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPtgB,SAAU,IAEZxF,OAAQ,CACN+lB,QAAS,UACTG,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAK/L,KAAK,GAC1BqM,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACX9M,UAAW,UACX+M,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,UACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIPxmB,KAAM,UACN2C,OAAQ,UACR+jB,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACd7Q,gBAAiB,UACjB8Q,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVtjB,QAAS,UACTggB,QAAS,UACT/kB,OAAQ,UACRmE,KAAM,UACNokB,QAAS,UACTC,QAAS,UACTlT,OAAQ,UACRnM,OAAQ,UACRsf,OAAQ,UACRC,UAAW,UACXC,WAAY,UACZK,YAAa,UACbC,WAAY,UACZC,WAAY,UACZC,aAAc,UACdN,eAAgB,UAChBC,eAAgB,UAChBF,gBAAiB,UACjBQ,aAAc,UACdC,WAAY,UACZN,gBAAiB,iCACjBjpB,aAAc,CACZuP,OAAQ,CACNia,KAAM,UACNC,KAAM,UACNkqI,KAAM,UACNjqI,MAAO,UACPxpB,OAAQ,UACRypB,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnBjqB,SAAU,CACRupB,KAAM,UACNC,KAAM,UACNkqI,KAAM,UACNjqI,MAAO,UACPxpB,OAAQ,UACRypB,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnB1a,OAAQ,CACN2a,UAAW,UACXC,QAAS,UACTC,OAAQ,YAGZC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZzE,KAAM,CACJrlB,MAAO,UACP4J,YAAa,UACbxL,gBAAiB,WAEnB6rB,QAAS,CACPjqB,MAAO+pB,YAAM,GAAKjD,IAAMzB,MACxBjnB,gBAAiB4rB,YAAK,GAAKlD,IAAMzB,MACjCzb,YAAakd,IAAMzB,MAErB6E,QAAS,CACPlqB,MAAO+pB,YAAM,GAAKI,IAAO9E,MACzBjnB,gBAAiB4rB,YAAK,GAAKG,IAAO9E,MAClCzb,YAAaugB,IAAO9E,MAEtB+E,OAAQ,CACNpqB,MAAO+pB,YAAM,GAAKM,IAAIhF,MACtBjnB,gBAAiB4rB,YAAK,GAAKK,IAAIhF,MAC/Bzb,YAAaygB,IAAIhF,MAEnBiF,KAAM,CACJtqB,MAAO,UACP4J,YAAa,UACbxL,gBAAiB,YAGrBmsB,QAAS,CACPpF,QAAS,CACPnlB,MAAOolB,IAAK9kB,KACZlC,gBAAiBgnB,IAAKC,KAEtBmF,eAAgBpF,IAAKC,KACrBoF,mBAAoBrF,IAAK9kB,MAE3BoqB,OAAQ,CACN1qB,MAAOimB,IAAWD,MAClByE,mBAAoBxE,IAAWD,OAEjCiE,QAAS,CACPO,eAAgB1D,IAAMzB,KACtBoF,mBAAoB3D,IAAMxmB,MAE5B8pB,OAAQ,CACNI,eAAgBH,IAAIhF,KACpBoF,mBAAoBJ,IAAI/pB,OAG5BqqB,YAAa,CACXC,MAAO,CACLxqB,SAAU,UACVX,OAAQ,OACRoF,SAAU,OACVgmB,QAAS,UAEXC,OAAQ,CACN1qB,SAAU,OACVX,OAAQ,OACRoF,SAAU,QAEZkmB,MAAO,CACL3qB,SAAU,SACVX,OAAQ,OACRoF,SAAU,OACV3F,aAAc,gLChPC+zJ,cAEnB,SAAAA,EAAYC,GAAQ,IAAAtwJ,EAAAvF,OAAA0wB,EAAA,EAAA1wB,CAAAK,KAAAu1J,GAAA,IACLE,EAA+BD,EAApCE,IAAYl8C,EAAwBg8C,EAAxBh8C,WAAem8C,EADjBh2J,OAAAi2J,EAAA,EAAAj2J,CAC0B61J,EAD1B,6BAElBtwJ,EAAAvF,OAAA+oH,EAAA,EAAA/oH,CAAAK,KAAAL,OAAAgpH,EAAA,EAAAhpH,CAAA41J,GAAAl8G,KAAAr5C,KAAM21J,KAEDvd,MAAQ,KACblzI,EAAKuwJ,MAAQA,EACbvwJ,EAAKs0G,WAAaA,EANAt0G,6LAUblF,KAAKo4I,QACRp4I,KAAKo4I,MAAQ,IAAIp4I,KAAKy1J,MAAM,CAC1BI,eAAgB,2BAGd71J,KAAKo4I,MAAM0d,8BACX91J,KAAKo4I,MAAM2d,4RAIV,IAAIr1I,QAAJ,eAAAxQ,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAa,SAAAwQ,EAAOC,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,OAClBkQ,EAAQ3d,EAAKi1I,MAAMl2H,UADD,wBAAAlB,EAAAjP,SAAA8O,EAAA7gB,SAAb,gBAAAmhB,EAAAC,GAAA,OAAAlR,EAAA+B,MAAAjS,KAAAkS,YAAA,kLAKQgQ,yFACQliB,KAAKo4I,MAAM4d,0BAA5BxnG,0CAESxuD,KAAKo4I,MAAM6d,iBAAiB,CACvCC,SAAS1nG,EAAS0nG,SAClBC,WAAW3nG,EAAS2nG,qFAGjB,0QAIDn2J,KAAKo4I,MAAMge,iJAGL53I,GACZ7e,OAAA+hB,EAAA,EAAA/hB,QAAAgpH,EAAA,EAAAhpH,CAAA41J,EAAA32D,WAAA,0BAAA5+F,MAAAq5C,KAAAr5C,KAA8B,CAAEq2J,iBAAiB,WA3CTC,KCAvBC,cAEnB,SAAAA,EAAYf,GAAQ,IAAAtwJ,EAAAvF,OAAA0wB,EAAA,EAAA1wB,CAAAK,KAAAu2J,GAAA,IACLC,EAAgChB,EAArCE,IAAgBl3I,EAAqBg3I,EAArBh3I,QAAYm3I,EADlBh2J,OAAAi2J,EAAA,EAAAj2J,CAC2B61J,EAD3B,0BAElBtwJ,EAAAvF,OAAA+oH,EAAA,EAAA/oH,CAAAK,KAAAL,OAAAgpH,EAAA,EAAAhpH,CAAA42J,GAAAl9G,KAAAr5C,KAAM21J,KAEDxd,UAAY,KACjBjzI,EAAKsxJ,UAAYA,EACjBtxJ,EAAKsZ,QAAUA,EANGtZ,mMAUblF,KAAKm4I,YACRn4I,KAAKm4I,UAAY,IAAIn4I,KAAKw2J,UAAUx2J,KAAKwe,mBAEpBxe,KAAKy2J,0BAAtBv0I,0CAEEA,EAASw0I,yCACRx0I,uRAKF,IAAIxB,QAAJ,eAAAxQ,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAa,SAAAwQ,EAAOC,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,OAClBkQ,EAAQ3d,EAAKg1I,UAAUse,eADL,wBAAAz1I,EAAAjP,SAAA8O,EAAA7gB,SAAb,gBAAAmhB,EAAAC,GAAA,OAAAlR,EAAA+B,MAAAjS,KAAAkS,YAAA,kLAKQgQ,6EACXA,kCACqBA,EAASy0I,0BAA1BC,YACUA,EAAS5yJ,gDAChB4yJ,EAAS,oCAGb,yQAIgB52J,KAAKy2J,0BAAtBv0I,0CAEEA,EAAS20I,0CACR30I,2IAIG1D,GACZxe,KAAK82J,YAAY,CACfpB,IAAK11J,KAAKw2J,UACVh4I,YAEF7e,OAAA+hB,EAAA,EAAA/hB,QAAAgpH,EAAA,EAAAhpH,CAAA42J,EAAA33D,WAAA,0BAAA5+F,MAAAq5C,KAAAr5C,KAA8B,CAAEq2J,iBAAiB,WAnDLC,eCA3BS,cAEnB,SAAAA,EAAYC,GAAkB,IAAA9xJ,EAAA,OAAAvF,OAAA0wB,EAAA,EAAA1wB,CAAAK,KAAA+2J,IAC5B7xJ,EAAAvF,OAAA+oH,EAAA,EAAA/oH,CAAAK,KAAAL,OAAAgpH,EAAA,EAAAhpH,CAAAo3J,GAAA9kJ,MAAAjS,KAASkS,aACJ+kJ,YAAa,EAClB/xJ,EAAK8xJ,iBAAmBA,EACxB9xJ,EAAKgd,SAAW,IAAIhd,EAAK8xJ,iBACzB9xJ,EAAKgyJ,eALuBhyJ,yLASvBlF,KAAKkiB,WACRliB,KAAKkiB,SAAW,IAAIliB,KAAKg3J,mBAGvBh3J,KAAKkiB,yCACDliB,KAAKkiB,SAASi1I,2CACbn3J,KAAKkiB,6PAKVliB,KAAKkiB,yCACMliB,KAAKkiB,SAASk1I,ySAKzBp3J,KAAKkiB,yCACMliB,KAAKkiB,SAASu0I,0SAKzBz2J,KAAKkiB,yCACMliB,KAAKkiB,SAASm1I,ySAKzBr3J,KAAKkiB,yCACMliB,KAAKkiB,SAAS09C,gTAKzB5/D,KAAKkiB,yCACiBliB,KAAKkiB,SAASo1I,0BAAhCA,SACNt3J,KAAKi3J,YAAa,oBACXK,mPAKLt3J,KAAKkiB,gCACPliB,KAAKkiB,SAASq1I,+BACPv3J,KAAKkiB,mHAxD+Bo0I,KCA5BkB,cAEnB,SAAAA,EAAYhC,GAAQ,IAAAtwJ,EAAAvF,OAAA0wB,EAAA,EAAA1wB,CAAAK,KAAAw3J,GAAA,IACLC,EAAiEjC,EAAtEE,IAAiB3f,EAAqDyf,EAArDzf,QAAS2hB,EAA4ClC,EAA5CkC,UAAWx8H,EAAiCs6H,EAAjCt6H,QAASy8H,EAAwBnC,EAAxBmC,WAAehC,EADnDh2J,OAAAi2J,EAAA,EAAAj2J,CAC4D61J,EAD5D,6DAElBtwJ,EAAAvF,OAAA+oH,EAAA,EAAA/oH,CAAAK,KAAAL,OAAAgpH,EAAA,EAAAhpH,CAAA63J,GAAAn+G,KAAAr5C,KAAM21J,KAEDzzI,SAAW,KAChBhd,EAAK0yJ,WAAa,KAClB1yJ,EAAK6wI,QAAUA,EACf7wI,EAAKg2B,QAAUA,EACfh2B,EAAKwyJ,UAAYA,EACjBxyJ,EAAKyyJ,WAAaA,EAClBzyJ,EAAKuyJ,WAAaA,EAVAvyJ,+LAcblF,KAAK43J,aACR53J,KAAK43J,WAAa,IAAI53J,KAAKy3J,WAAW,CACpCI,UAAU,EACV9hB,QAAS/1I,KAAK+1I,QACd2hB,UAAW13J,KAAK03J,UAChBC,WAAY33J,KAAK23J,gBAIfz1I,EAAWliB,KAAKy2J,+CAEdv0I,EAASw0I,yCACRx0I,2IAQT,OAHKliB,KAAKkiB,WACRliB,KAAKkiB,SAAWliB,KAAK43J,WAAWE,iBAAiB93J,KAAK03J,UAAW13J,KAAKk7B,UAEjEl7B,KAAKkiB,oFAGGA,6EACXA,kCAEqBA,EAASiJ,KAAK,mCAA/ByrI,YACUA,EAAS5yJ,gDAChB4yJ,EAAS,oCAGb,8PAID10I,EAAWliB,KAAKy2J,sCAEpBz2J,KAAK43J,WAAWG,sBACV71I,EAAS81I,wCACR91I,2IAIG1D,GACZxe,KAAK82J,YAAY,CACft4I,UACAk3I,IAAK11J,KAAKy3J,WACV1hB,QAAS/1I,KAAK+1I,QACd76G,QAASl7B,KAAKk7B,QACdw8H,UAAW13J,KAAK03J,UAChBC,WAAY33J,KAAK23J,aAEnBh4J,OAAA+hB,EAAA,EAAA/hB,QAAAgpH,EAAA,EAAAhpH,CAAA63J,EAAA54D,WAAA,0BAAA5+F,MAAAq5C,KAAAr5C,KAA8B,CAAEq2J,iBAAiB,WApEJC,gBCA5B2B,eAEnB,SAAAA,EAAYzC,GAAQ,IAAAtwJ,EAAAvF,OAAA0wB,EAAA,EAAA1wB,CAAAK,KAAAi4J,GAAA,IACLC,EAA6D1C,EAAlEE,IAA4CyC,GAAsB3C,EAAtCvlH,eAAsCulH,EAAtB2C,UAAaxC,EAD/Ch2J,OAAAi2J,EAAA,EAAAj2J,CACwD61J,EADxD,4CAElBtwJ,EAAAvF,OAAA+oH,EAAA,EAAA/oH,CAAAK,KAAAL,OAAAgpH,EAAA,EAAAhpH,CAAAs4J,GAAA5+G,KAAAr5C,KAAM21J,KAEDzzI,SAAW,KAChBhd,EAAKgzJ,sBAAwBA,EAC7BhzJ,EAAKizJ,SAAWA,EANEjzJ,yLAUblF,KAAKkiB,WACRliB,KAAKkiB,SAAW,IAAIliB,KAAKk4J,sBAAsB,CAC7CC,SAASn4J,KAAKm4J,aAIdn4J,KAAKkiB,yCACDliB,KAAKkiB,SAASw0I,yCACb12J,KAAKkiB,mRAKPliB,KAAKkiB,0PAIRliB,KAAKkiB,gCACPliB,KAAKkiB,SAAS81I,0BACPh4J,KAAKkiB,mHA/BkCo0I,KCelD8B,GAMEC,aANFD,kBACAE,GAKED,aALFC,qBACAC,GAIEF,aAJFE,gBACAC,GAGEH,aAHFG,gBACAC,GAEEJ,aAFFI,mBACAC,GACEL,aADFK,gBAGI30H,GAAM+xG,8/CAEN6iB,GAAgB50H,GAAI60H,gCACpBC,GAAiB90H,GAAI+0H,8BACrB7oH,GAAiB7iC,IAAcoR,QAAQqjB,gBACvCk3H,GAAkBh1H,GAAIi1H,gCACtBC,GAAel1H,GAAIm1H,yBACnBC,GAAgBp1H,GAAIq1H,yBAEpBC,GAAuB,GAE7B15J,OAAOoE,KAAKqJ,IAAcoR,QAAQwjB,UAAUgiH,OAAOjoH,KAAK93B,QAAQ,SAACmzB,EAAUrxB,GACzEqxB,EAAY9lB,SAAS8lB,GACrBiiI,GAAqBjiI,GAAahqB,IAAcoR,QAAQwjB,UAAUgiH,OAAOjoH,IAAI3E,GAAW2M,GAAIkgH,uBAG9F,IAAMqV,GAAW,IAAIlB,GAAkB,CACrC57H,kBAAmBpvB,IAAcoR,QAAQslI,kBAGrCyV,GAAS,IAAIjB,GAAqB,CACtCkB,YAAaH,GAAqBppH,MAI9BwpH,GAAS,IAAIlB,GAAgB,CACjC7C,IAAKgE,IACLL,wBACAppH,kBACA0oH,iBACAE,oBAGIc,GAAS,IAAInB,GAAgB,CACjCa,wBACAppH,oBAGI2pH,GAAgB,IAAI3B,GAAuB,CAC/ChoH,kBACAopH,wBACA3D,IAAKwC,IACLC,SAASp0H,GAAIkgH,qBACb4V,OAAQ,qCAGJC,GAAY,IAAIrB,GAAmB,CACvC/C,IAAKqE,IACL9vG,OAAQ8uG,GACRiB,sBAAsB,IAGlBC,GAAS,IAAIvB,GAAgB,CACjChD,IAAKwE,IACLC,OAAQlB,GACRz6I,QAAS26I,KAGL3C,GAAY,IAAID,EAAmB,CACvCb,IAAK0E,IACL57I,QAASpR,IAAcoR,QAAQ6uC,kBAAkBpd,IAAgB9tC,KAAK2K,gBAGlE8qJ,GAAa,IAAIJ,EAAoB,CACzC9B,IAAK+B,IACLI,UAAU,EACV38H,QAAS+U,GACT8lG,QAAS3oI,IAAc2oI,QACvB2hB,UAAW2B,GAAqBppH,IAChC0nH,WAAY,8CAGRlC,GAAQ,IAAIF,EAAe,CAC/BG,IAAK2E,IACL7gD,WAAW,CACT8gD,SAAU,aACVC,eAAe,EACf/7I,QAAS,CACPg8I,KAAMptJ,IAAcoR,QAAQ6uC,kBAAkBpd,IAAgB9tC,KAAK2K,cACnEouB,QAAS+U,GACTq1G,YAAal4I,IAAcoR,QAAQ6uC,kBAAkBpd,IAAgB9tC,KAAK2K,eAE5E2tJ,iBAAiB,KAMNljB,GAAA,CACb+hB,YACAC,UACAK,iBACA5hB,OANa,IAAI+e,EAAoBC,qBAOrCY,cACAkC,aACAG,UACAzD,aACAf,SACAgE,UACAE,mFCtFae,oLAxBX,OACElkD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKpwG,MAVa,CAClBuH,SAAU,QACVtB,OAAQ,EACRC,KAAM,EACNF,MAAO,EACPvM,MAAO,OACP+N,OAAQ,MAIiBnN,gBAAiB,uBAAwBa,EAAG,GACnEi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKl1G,EAAG,GACNi1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,UAAUG,MAAM,OAAOD,KAAK,QAEzCm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,UACnBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMh0G,WAAY,QAAlB,0CAGA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,+CAC0C,IACxCD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAWjf,MAAO,CAAE48G,cAAe,eAAnC,IACIjjH,KAAKC,MAAMue,QAAQiZ,QAAQt1B,KAD/B,KAEa,IAJf,sEArBqB+7G,IAAMr7G,WCexB83J,oLAZX,OACEnkD,EAAAr2G,EAAAC,cAAA,YAC8C,IAA1CJ,KAAKC,MAAMue,QAAQo8I,oBAAgC56J,KAAKC,MAAMse,MAC9Di4F,EAAAr2G,EAAAC,cAACy6J,GAAD,CACEr8I,QAASxe,KAAKC,MAAMue,kBANN0/F,IAAMr7G,iFCiIjBi4J,8MA/HbC,cAAgB,WACd,OACEvkD,EAAAr2G,EAAAC,cAACo2G,EAAAr2G,EAAMu2G,SAAP,KACEF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ0+C,GAAT,CACEzyJ,SAAU,EACVD,WAAY,EACZ80G,WAAY,UACZz2G,GAAI,GAJN,uCASCk6J,KAAWC,iBACVzkD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,GAAV,8GAE6C,IAC3C01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,qBACLa,MAAM,oBACNf,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACF6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,iCACLa,MAAM,gBACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACH6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,+BACLa,MAAM,kBACNf,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BA6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,GAAV,qGAE0C,IACxC01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,8BACLa,MAAM,yBACNf,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACF6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,2BACLa,MAAM,2BACNf,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACF6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,iCACLa,MAAM,yBACNf,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACL6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,iCACLa,MAAM,0BACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCA6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAWmrG,MAAI,GAAf,0BADF,2DAE8C,IAC5Cja,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,qBACLa,MAAM,oBACNf,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACF6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,iCACLa,MAAM,gBACNf,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACH6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,+BACLa,MAAM,kBACNf,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACE6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAD,CAAW/K,UAAW99G,KAAKC,MAAMs6G,YAC/B/D,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACGh+G,KAAK+6J,0BAxHe78C,IAAMr7G,WCiDxBq4J,oLAxCX,OACE1kD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMl1G,EAAG,EAAG+E,SAAU,SACpBkwG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAOtwG,KAAR,CACEg1J,UAAQ,EACR/4J,KAAM,QACNE,MAAO,YACPsL,SAAU,WACVxB,IAAK,EACLC,MAAO,EACPzD,GAAI,EACJvH,GAAI,EACJuE,QAAS5F,KAAKC,MAAMs6G,aAGtB/D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,SAAUC,eAAgB,iBAC7Cu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMx1G,eAAgB,SAAUH,GAAI,GAClC01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,UAAUG,MAAM,OAAOD,KAAK,QAGzCm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ0+C,GAAT,CAAYr0J,GAAI,GAAhB,uBAEA01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,GAAV,4GAKA01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpB6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgB/4J,KAAK,SAArB,qCAjCc67G,IAAMr7G,WC0CnBw4J,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApBl3I,OAAOsd,SAChB45H,EAAoD,qBAA/Bl3I,OAAOsd,SAAS65H,WACL,qBAAhBn3I,OAAO7F,OACvB+8I,EAAgE,qBAA3Cl3I,OAAO7F,KAAK6c,gBAAgBmgI,YAA8Bn3I,OAAO7F,KAAK6c,gBAAgBmgI,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhBp3I,OAAO7F,MAA+D,qBAAhC6F,OAAO7F,KAAK6c,kBACL,qBAAxChX,OAAO7F,KAAK6c,gBAAgBqgI,SAA2Br3I,OAAO7F,KAAK6c,gBAAgBqgI,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhBt3I,OAAO7F,MAA+D,qBAAhC6F,OAAO7F,KAAK6c,kBACI,qBAAjDhX,OAAO7F,KAAK6c,gBAAgBsgI,kBAAoCt3I,OAAO7F,KAAK6c,gBAAgBsgI,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1Bv3I,OAAOw3I,eAM9B,MAJ+B,qBAApBx3I,OAAOsd,WAChBi6H,EAAgD,qBAA7Bv3I,OAAOsd,SAASm6H,UAA4Bz3I,OAAOsd,SAASm6H,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAczhB,KAAKmX,UAAUC,YAGtCsK,UAAW,WACT,IAAMA,IAAY,WAAW1hB,KAAKmX,UAAUC,WAE5C,OAAOsK,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmB3hB,KAAKmX,UAAUC,YAAertI,OAAO63I,UAI1D,OAAOD,IC0BIE,8MA7DbnB,cAAgB,WACd,OACEvkD,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ0+C,GAAT,CAAYr0J,GAAI,GAAhB,iBACiBoE,EAAKjF,MAAMue,QAAQ6Y,SAASl1B,KAD7C,cAC8D,IAC3Dk5J,GAAYC,cAAZ,uBAGH9kD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,GAAV,iCACiC,IAC/B01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAWjf,MAAO,CAAE48G,cAAe,eAChC/9G,EAAKjF,MAAMue,QAAQ6Y,SAASl1B,MAClB,IAJf,wCAKmC,IACjCq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAWjf,MAAO,CAAE48G,cAAe,eAChC,IACA/9G,EAAKjF,MAAMue,QAAQiZ,QAAQt1B,MACjB,IATf,YAaCk5J,GAAYC,gBAAkBa,KAAYlB,iBACzCzkD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKpoF,GAAI,UAAW9sB,EAAG,EAAGkH,QAAS,CAAC,OAAQ,UAC1C+tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK7oG,SAAU,WAAY9N,MAAO,OAChC02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAM,UAGlBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMh0G,WAAY,GAAlB,oCACA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMh0G,WAAY,GAAlB,sCAMJ,KAEJ+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKhuG,QAAS,CAAC,QAAS,SACtB+tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQ7wG,QAASV,EAAKjF,MAAMs6G,WAAYz6G,MAAO,GAA/C,iFASN,OACE02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAD,CAAW/K,UAAW99G,KAAKC,MAAMs6G,YAC/B/D,EAAAr2G,EAAAC,cAACo2G,EAAAr2G,EAAMu2G,SAAP,KACG12G,KAAK+6J,0BAtDc78C,IAAMr7G,kDCiDvBu5J,OA3Df,SAA6Bn8J,GAC3B,OACEu2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU9K,OAAX,CAAkBt3F,MAAO,6CAA8CiqG,SAAU,wDAAyD2rC,UAAW,0EACrJ7lD,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,CAAC,SAAU,OAC9BC,eAAgB,gBAChBH,GAAI,CAAC,EAAG,IACR01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKh3F,KAAM,MAAO3f,MAAO,EAAG8I,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIzM,GAAI,GACtDm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMx1G,eAAgB,SAAU6M,GAAI,GAClC0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAK,cACLG,MAAM,UACND,KAAK,SAGTm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAS/zG,SAAU,EAAGmG,UAAW,UAAjC,oBACA2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,EAAGmG,UAAW,UAA9B,6FAKF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKh3F,KAAM,MAAO3f,MAAO,EAAG8I,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIzM,GAAI,GACtDm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMx1G,eAAgB,SAAU6M,GAAI,GAClC0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAK,qBACLG,MAAM,UACND,KAAK,SAGTm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAS/zG,SAAU,EAAGmG,UAAW,UAAjC,0BACA2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,EAAGmG,UAAW,UAA9B,6DAIF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKh3F,KAAM,MAAO3f,MAAO,EAAG8I,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIzM,GAAI,GACtDm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMx1G,eAAgB,SAAU6M,GAAI,GAClC0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAK,iBACLG,MAAM,UACND,KAAK,QAEPm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAK,gBACLG,MAAM,UACND,KAAK,SAGTm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAS/zG,SAAU,EAAGmG,UAAW,UAAjC,wBACA2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,EAAGmG,UAAW,UAA9B,qGC1CN6Z,GAAY,WAAc,QAAA6T,EAAArkB,UAAAlO,OAAV/D,EAAU,IAAAu2B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVx2B,EAAUw2B,GAAAvkB,UAAAukB,IAEjB,SAAS6lI,GAAsBr8J,GAC5C,IAAMs8J,EAAUC,2BAEXD,EAAQxlD,QAAWwlD,EAAQr/I,MAErBq/I,EAAQr/I,MACjBwF,GAAU,gBAAiB65I,GAE3B75I,GAAU,kBAAmB65I,GAJ7B75I,GAAU,kBAAmB65I,GAO/B,IAAME,EAAY,eAAAvsJ,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAG,SAAA+P,EAAOkiG,EAAcngH,GAArB,IAAAu6J,EAAA,OAAAjsI,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,cACf8rJ,EAAmC,aAAlBp6C,EAA+BngH,EAAOmgH,EACvD1+F,eACFA,aAAaoxC,QAAQ,iBAAkB0nG,GACvC94I,aAAaoxC,QAAQ,gBAAiBstD,IAGpCriH,EAAMw8J,cAA8C,oBAAvBx8J,EAAMw8J,cACrCx8J,EAAMw8J,aAAan6C,EAAco6C,GAIK,oBAA7Bz8J,EAAM08J,oBACf18J,EAAM08J,qBAbWr8I,EAAAe,OAAA,SAgBZihG,GAhBY,wBAAAhiG,EAAAvO,SAAAqO,EAAApgB,SAAH,gBAAAmhB,EAAAC,GAAA,OAAAlR,EAAA+B,MAAAjS,KAAAkS,YAAA,GAoBZ0qJ,EAAc,eAAAvpJ,EAAA1T,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAG,SAAAwQ,IAAA,OAAA4P,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,OACrB2rJ,EAAQK,iBACJ38J,EAAMw8J,cAA8C,oBAAvBx8J,EAAMw8J,cACrCx8J,EAAMw8J,aAAa,SAAS,UAHT,wBAAAz7I,EAAAjP,SAAA8O,EAAA7gB,SAAH,yBAAAqT,EAAApB,MAAAjS,KAAAkS,YAAA,GAUd4pJ,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBkB,EAAaxB,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BsB,IAAiBvlB,GAAWS,OAAO91H,SAAS66I,KAC5CrB,EAAmBL,GAAYK,mBAC/BsB,EAAwBH,GAAcf,GAAWD,GAAYH,GAAoBF,EAEjFyB,EAAoBh9J,EAAMg9J,kBAC1BC,EAAej9J,EAAMi9J,aAEvB3lB,GAAW0iB,SACTiD,GACF3lB,GAAW0iB,OAAO9/I,QAAUo9H,GAAW0iB,OAAO9/I,SAAW,GACzDo9H,GAAW0iB,OAAO9/I,QAAQgjJ,uBAAwB,IAElD5lB,GAAW0iB,OAAO9/I,QAAUo9H,GAAW0iB,OAAO9/I,SAAW,GACzDo9H,GAAW0iB,OAAO9/I,QAAQgjJ,uBAAwB,IAItD,IAAIC,EAAsBz9J,OAAOoE,KAAKwzI,IAAYzmI,OAAO,SAAA0mB,GAAC,MAAU,WAANA,IAO9D,GALIylI,IACFG,EAAsBA,EAAoBtsJ,OAAO,SAAA0kB,GAAC,OAA4F,IAAxFynI,EAAkBn3J,IAAI,SAAC0E,GAAQ,OAAOA,EAAEsC,gBAAkBkP,QAAQwZ,EAAE1oB,kBAIxHgwJ,EAAa,CACf,IAAMO,EAAgBD,EAAoBphJ,QAAQ,YAElDohJ,EAAoBv0G,OAAOw0G,EAAc,GAEzC,IAAMC,EAAcF,EAAoBphJ,QAAQ,UAChDohJ,EAAoBv0G,OAAOy0G,EAAY,GAEvCF,EAAoBr6F,QAAQ,cACvB,CACL,IAAMu6F,EAAcF,EAAoBphJ,QAAQ,UAEhDohJ,EAAoBv0G,OAAOy0G,EAAY,GAGzC,IAAMzwI,EAAUuwI,EAAoBt3J,IAAK,SAACw8G,EAAcv8G,GACtD,OAAQu8G,GACN,IAAK,WACH,GAAI06C,EAAuB,CACzB,IAAI76J,EAAO,KACP06J,EACF16J,EAAO,WACE25J,EACT35J,EAAO,QACE05J,EACT15J,EAAO,SACEu5J,EACTv5J,EAAO,WACEq5J,IACTr5J,EAAO,eAGT,IAAMo7J,EAAgBnwJ,IAAcmqI,WAAWp1I,EAAK2K,eACpD,GAAIywJ,GAAiBA,EAAczrI,QAAQ,CACzC,IAAM0rI,EAAaD,EAAcn7J,KAAOm7J,EAAcn7J,KAAnC,GAAAuE,OAA6CxE,EAAK2K,cAAlD,QACnB,OACE0pG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP+G,IAAG,UAAAF,OAAYxE,GACflB,eAAgB,gBAChBoF,MAAO,CACLoZ,KAAK,UAEPze,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACurH,GAAA,EAAD,CACErmH,YAAa,CACXC,OAAO,GAETw3G,QAAS56G,EACTH,UAAU,EACVlC,MAAO,CAAC,EAAE,KACVmC,WAAY,CAACnC,MAAM,OAAOiC,OAAO,QACjCq7G,SAAQ,qBAAAz2G,OAAuB62J,GAC/B/8J,YAAWd,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAG,SAAAC,IAAA,OAAAmgB,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkB6rJ,EAAan6C,EAAcngH,GAA7C,cAAAuO,EAAA2Q,OAAA,SAAA3Q,EAAAiD,MAAA,wBAAAjD,EAAAqB,SAAAzB,EAAAtQ,SACd8wI,WAAaysB,GAAiBA,EAAczsB,WAAaysB,EAAczsB,WAA1D,iBAAAnqI,OAAwFxE,KAEvGq0G,EAAAr2G,EAAAC,cAACurH,GAAA,EAAD,CACErmH,YAAa,CACXC,OAAO,GAETvD,UAAU,EACVlC,MAAO,CAAC,EAAE,KACVi9G,QAAS,gBACTK,SAAQ,wBACR0zB,WAAY,4BACZ7uI,WAAY,CAACnC,MAAM,OAAOiC,OAAO,QACjCtB,YAAc,SAAAqG,GAAC,OAAI7G,EAAMimD,kBAAiB,OAKlD,OAAO,KAEP,IAAMq3G,EAAgBnwJ,IAAcmqI,WAAWj1B,EAAcx1G,eAC7D,OACE0pG,EAAAr2G,EAAAC,cAACurH,GAAA,EAAD,CACErmH,YAAa,CACXC,OAAO,GAETvD,UAAU,EACV+6G,QAAS,iBACTl2G,IAAG,UAAAF,OAAY27G,GACfrgH,WAAY,CAACnC,MAAM,OAAOiC,OAAO,QACjCq7G,SAAQ,uCACR38G,YAAWd,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAG,SAAAiD,IAAA,OAAAmd,EAAAtwB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA5C,KAAA,EAAkB6rJ,EAAan6C,GAA/B,cAAA9uG,EAAA6N,OAAA,SAAA7N,EAAAG,MAAA,wBAAAH,EAAAzB,SAAAuB,EAAAtT,SACd8wI,WAAaysB,GAAiBA,EAAczsB,WAAaysB,EAAczsB,WAA1D,iCACb2sB,YAAcx9J,EAAM+B,SAAW,CAACf,eAAe,aAAawe,KAAK,UAAY,CAACxe,eAAe,aAAawe,KAAK,WAIvH,QACE,IAAM89I,EAAgBnwJ,IAAcmqI,WAAWj1B,EAAcx1G,eAC7D,GAAIywJ,GAAiBA,EAAczrI,QAAQ,CACzC,IAAM0rI,EAAaD,EAAczlB,UAAYylB,EAAczlB,UAAaylB,EAAcn7J,KAAOm7J,EAAcn7J,KAAnC,GAAAuE,OAA6C27G,EAAcx1G,cAA3D,QAEpEiwG,EAAUwgD,EAAcp7J,KAAOo7J,EAAcp7J,KAAOmgH,EACxD,OACE9L,EAAAr2G,EAAAC,cAACurH,GAAA,EAAD,CACErmH,YAAa,CACXC,OAAO,GAETvD,UAAU,EACV+6G,QAASA,EACTl2G,IAAG,UAAAF,OAAY27G,GACflF,SAAQ,qBAAAz2G,OAAuB62J,GAC/Bv7J,WAAY,CAACnC,MAAM,OAAOiC,OAAO,QACjCtB,YAAWd,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAG,SAAAuR,IAAA,OAAA6O,EAAAtwB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cAAAkR,EAAAlR,KAAA,EAAkB6rJ,EAAan6C,GAA/B,cAAAxgG,EAAAT,OAAA,SAAAS,EAAAnO,MAAA,wBAAAmO,EAAA/P,SAAA6P,EAAA5hB,SACd8wI,WAAaysB,GAAiBA,EAAczsB,WAAaysB,EAAczsB,WAA1D,iBAAAnqI,OAAwF27G,GACrGm7C,YAAcx9J,EAAM+B,SAAW,CAACf,eAAe,aAAawe,KAAK,UAAY,CAACxe,eAAe,aAAawe,KAAK,WAIrH,OAAO,QAIb,OACE+2F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK32G,MAAO,CAAC,IACX02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,SAAUD,WAAY,UACxCw7J,EAAQr/I,OACPs5F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKl1G,EAAN,CAAQsH,UAAU,UAAlB,+DAEE2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM7wF,KAAK,uBAAuBF,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAME6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM7wF,KAAK,8BAA8BF,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBA42I,EAAQxlD,QAAWwlD,EAAQr/I,OAASq/I,EAAQj6C,gBAA6C,WAA1Bi6C,EAAQj6C,eACvE9L,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CACEt7J,MAAO,CAAC,IACR0b,UAAW,CAACC,KAAO+S,QACnB1gB,GAAI,CAAC,EAAG,GACRzL,KAAM,QACNwE,IAAK,QACLjB,QAAOjG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAE,SAAAuS,IAAA,OAAA6N,EAAAtwB,EAAAsQ,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,cAAAmS,EAAAnS,KAAA,EAAkBgsJ,IAAlB,cAAA75I,EAAA1B,OAAA,SAAA0B,EAAApP,MAAA,wBAAAoP,EAAAhR,SAAA6Q,EAAA5iB,UAERu8J,EAAQxlD,OAAS,uBAAyB,UAIjDP,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE0G,SAAU,OACVn8G,cAAe,MACfC,eAAgB,iBAEf4rB,kBCkVM6wI,8MApiBbl2J,MAAQ,CACNgqI,WAAU,EACVmsB,YAAW,EACXx3G,cAAc,GACdy3G,eAAe,KACfC,kBAAiB,EACjBC,kBAAiB,EACjBC,mBAAmB,KACnBC,oBAAmB,EACnBC,oBAAoB,QAItBl7J,cAAgB,OAShBm7J,iBAAmB,SAAAp3J,GACjBA,EAAEuH,iBAEFnJ,EAAK8C,SAAS,CACZ21J,YAAaz4J,EAAKsC,MAAMm2J,gBAI5BQ,iBAAmB,WACjB,IAAIP,EAAiB,KASrB,OARIh6I,eACFg6I,EAAiBh6I,aAAaC,QAAQ,oBAEpC3e,EAAK8C,SAAS,CACZ41J,mBAICA,KAGTruJ,kBAAoB,WAClBrK,EAAKhC,YACLgC,EAAKi5J,sBAGPv1C,mBAAqB,WACnB1jH,EAAKhC,eAGPu3G,WAAa,SAAA3zG,GACX5B,EAAK8C,SAAS,CACZ21J,YAAY,EACZC,eAAe,KACfE,kBAAiB,EACjBD,kBAAkB,EAClBI,oBAAoB,UAIxBxB,mDAAe,SAAAr8I,EAAOkiG,EAAcngH,GAArB,IAAAu6J,EAAA,OAAAjsI,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,cACT8rJ,EAAmC,aAAlBp6C,EAA+BngH,EAAOmgH,EAG3Dp9G,EAAKnC,cAAc2a,yBAAyB,CAC1CN,cAAc,UACdC,WAAWq/I,EACXn/I,YAAY,kBAGVrY,EAAKjF,MAAMw8J,cAAmD,oBAA5Bv3J,EAAKjF,MAAMw8J,cAC/Cv3J,EAAKjF,MAAMw8J,aAAan6C,EAAco6C,GAIxCx3J,EAAK8C,SAAS,CACZi2J,oBAAqB37C,IAGvBp9G,EAAKk5J,iBAnBQ99I,EAAAe,OAAA,SAqBNihG,GArBM,wBAAAhiG,EAAAvO,SAAAqO,EAAApgB,mEA0Bfo+J,eAAiB,WACf,IAAML,EAAqB74J,EAAKsC,MAAMu2J,mBAAqB74J,EAAKsC,MAAMu2J,mBAAmB,EAAI,EACxFA,EAGH56I,WAAW,WAAQje,EAAKk5J,kBAAmB,KAF3Cl5J,EAAKq1G,aAIPr1G,EAAK8C,SAAS,CACZ+1J,0BAIJM,gBAAkB,SAACv3J,EAAEw3J,GACnBx3J,EAAEuH,iBACFnJ,EAAK8C,SAAS,CACZi2J,oBAAqBK,OAIzB/jD,WAAa,WAEXr1G,EAAKu1G,aAELv1G,EAAKi5J,mBAELj5J,EAAKjF,MAAMs6G,gBAGbgkD,kBAAoB,SAACz3J,EAAE82J,GACrB92J,EAAEuH,iBACFnJ,EAAK8C,SAAS,CACZ41J,mBAGmB,iBAAjBA,IAEF14J,EAAKnC,cAAc2a,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,cACbF,WAAYugJ,IAGd14J,EAAKnC,cAAckhB,gBAAgB,iBAAiB25I,OAIxDY,qBAAuB,WAErB,OADqBt5J,EAAKnC,cAAc05B,aAAav3B,EAAKsC,MAAM2+C,gBAE9DjhD,EAAKghD,kBAAiB,GACtBhhD,EAAKnC,cAAcmjD,iBAAiBhhD,EAAKsC,MAAM2+C,eAC/CjhD,EAAKu3J,aAAa,SAAS,UAC3Bt5I,WAAW,WAAQje,EAAKq1G,cAAe,MAChC,GAEAr1G,EAAK8C,SAAS,CACnBg2J,oBAAmB,OAKzBS,oBAAsB,SAAC33J,GACrB,IACMq/C,EAAgBr/C,EAAE4e,OAAOhb,MACzB8mI,EAAYtsI,EAAKnC,cAAc05B,aAAa0pB,GAClDjhD,EAAK8C,SAAS,CACZwpI,YACArrF,gBACA63G,oBANyB,OAU7B93G,iBAAmB,SAAC43G,GAClB54J,EAAK8C,SAAS,CACZ81J,wBAIJY,mBAAqB,WAEnB,IAAMC,EACJnoD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM5tG,UAAW,SAAUnG,SAAU,EAAG7C,GAAI,CAAC,EAAE,IAA/C,kCAAkF22G,EAAAr2G,EAAAC,cAACw+J,GAAA,EAAD,CAAYlmI,GAAG,oBAAoBp2B,MAAO,UAAW+D,MAAO,CAAC/D,MAAM4C,EAAKjF,MAAMwB,MAAMC,OAAO+lB,QAAQy7G,eAAe,aAAcx9G,OAAQ,SAAUC,IAAI,gCAAtJ,sBAIhFk5I,EAA8C,QAA9B35J,EAAKsC,MAAMo2J,eAC3BkB,EAAsD,WAA9B55J,EAAKsC,MAAMo2J,eAGzC,MAFuD,iBAA9B14J,EAAKsC,MAAMo2J,eAIhCpnD,EAAAr2G,EAAAC,cAACo2G,EAAAr2G,EAAMu2G,SAAP,KACEF,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU9K,OAAX,CAAkBt3F,MAAO,qBAAsBiqG,SAAU,4DACzDla,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,CAAC,SAAU,OAC1BC,eAAgB,gBAChBH,GAAI,CAAC,EAAG,IAER01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKh3F,KAAM,MAAO3f,MAAO,EAAG8I,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIzM,GAAI,GACtDm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMx1G,eAAgB,SAAU6M,GAAI,GAClC0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAK,SACLG,MAAM,UACND,KAAK,SAGTm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAS/zG,SAAU,EAAGmG,UAAW,UAAjC,4BACA2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,EAAGmG,UAAW,UAA9B,4IAMF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKh3F,KAAM,MAAO3f,MAAO,EAAG8I,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,GAAIzM,GAAI,GACtDm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMx1G,eAAgB,SAAU6M,GAAI,GAClC0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAK,uBACLG,MAAM,UACND,KAAK,SAGTm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAS/zG,SAAU,EAAGmG,UAAW,UAAjC,4BACA2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,EAAGoL,GAAI,EAAGjF,UAAW,UAArC,kJAG2B2tG,EAAAr2G,EAAAC,cAAA,WACzBo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEhwF,MAAM,wCACNhkB,WAAY,IACZH,MAAO,OACPuG,UAAW,SACXlD,WAAY,OACZigB,KAAK,IACLhgB,QAASV,EAAKg5J,kBAPhB,gCAaJ1nD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKh3F,KAAM,MAAO3f,MAAO,EAAG8I,GAAI,CAAC,EAAG,GAAIkF,GAAI,CAAC,EAAG,IAC9C0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMx1G,eAAgB,SAAU6M,GAAI,GAClC0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAK,SACLG,MAAM,UACND,KAAK,SAGTm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAS/zG,SAAU,EAAGmG,UAAW,UAAjC,gCACA2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,EAAGmG,UAAW,UAA9B,6GAWR3D,EAAKsC,MAAMs2J,iBAEXtnD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU9K,OAAX,CACEt3F,MAAO,qBACPrkB,KAAM,uBACNsuH,SAAU,+BAGZla,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPqH,SAAU,CAAC,EAAE,QACbnG,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP0N,MAAO,oBAEPgpG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp/E,UAAQ,EACRv3B,MAAO,EACPyD,KAAM,OACNiY,UAAWC,KAAOoT,MAClB3iB,YAAa,aACbxL,gBAAiB,SACjB0zI,QAAS,sBACT1pI,MAAOxF,EAAKsC,MAAM2+C,cAClB9pC,SAAW,SAAAvV,GAAC,OAAI5B,EAAKu5J,oBAAoB33J,IACzC22G,YAAa,qCAIfv4G,EAAKsC,MAAMw2J,oBACTxnD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJpL,SAAU,EACVJ,MAAO,MACPG,WAAY,EACZoG,UAAW,UALb,mCAWJ2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE12G,GAAI,CAAC,EAAE,GACPa,GAAI,OACJ6B,WAAY,EACZJ,KAAM,SACNK,SAAU,CAAC,EAAE,GACblB,aAAc,EACdyoH,cAAe,UACfzuG,UAAW,CAACC,KAAOgT,gBACnB7oB,QAAU,SAAAkB,GAAC,OAAI5B,EAAKs5J,yBATtB,YAcFhoD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,EACJxgB,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE9wG,WAAY,OACZkD,UAAW,SACXjD,QAAU,SAAAkB,GAAC,OAAI5B,EAAKghD,kBAAiB,KAHvC,0BAQAy4G,IAMNG,EAEAtoD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU9K,OAAX,CAAkBt3F,MAAO,qBAAsBiqG,SAAU,6BAA8BtuH,KAAM,yBAC7Fo0G,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,EAAGC,GAAI,CAAC,EAAE,GAAIiB,cAAe,SAAUC,eAAgB,UAClEu1G,EAAAr2G,EAAAC,cAACk8J,GAAD,CACEx8J,MAAO,GACPkC,SAAUkD,EAAKjF,MAAM+B,SACrBy6J,aAAcv3J,EAAKu3J,aACnBE,mBAAoBz3J,EAAKq1G,WACzBl4G,KAAM6C,EAAKjF,MAAM+B,SAAW,SAAW,QACvCkkD,iBAAkBhhD,EAAKghD,iBAAiBvnC,KAAtBhf,OAAAo/J,GAAA,EAAAp/J,QAAAo/J,GAAA,EAAAp/J,CAAAuF,QAGtBsxG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMl1F,GAAI,EAAGxgB,WAAY,SAAUE,eAAgB,UACjDu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM5tG,UAAW,SAAUlD,WAAY,OAAQC,QAAU,SAAAkB,GAAC,OAAI5B,EAAKq5J,kBAAkBz3J,EAAE,SAAvF,0BAEA63J,IAMNE,EAEAroD,EAAAr2G,EAAAC,cAACo2G,EAAAr2G,EAAMu2G,SAAP,KACEF,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU9K,OAAX,CAAkBt3F,MAAO,0CAA4CrkB,KAAM,yBAC3Eo0G,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KAEK94G,EAAKsC,MAAMy2J,oBAoCVznD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,EAAGmG,UAAW,SAAUpG,WAAY,EAAG80G,WAAY,KAAnE,4BAC4BryG,EAAKsC,MAAMy2J,oBADvC,uBAGAznD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ3H,eAAgB,SAChBF,WAAY,SACZ8H,UAAW,UACX2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,SALf,IAKyBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,EAAGpD,MAAO,aAApB,cAA6C4C,EAAKsC,MAAMu2J,mBAAxD,iBA5C3BvnD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,EAAGC,GAAI,CAAC,EAAE,GAAIiB,cAAe,SAAUC,eAAgB,UAClEu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK3oG,GAAI,GACP0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,CAAC,EAAE,GAAImG,UAAW,SAAUpG,WAAY,EAAG80G,WAAY,KAAvE,yCAIFf,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,EAAG9M,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAClFu1G,EAAAr2G,EAAAC,cAACurH,GAAA,EAAD,CACErmH,YAAa,CACXC,OAAO,GAETw3G,QAAS,aACTK,SAAU,mBACVp7G,SAAUkD,EAAKjF,MAAM+B,SACrB8uI,WAAY,oBACZrwI,YAAc,SAAAqG,GAAC,OAAI5B,EAAKu3J,aAAa,SAAS,WAC9Cx6J,WAAaiD,EAAKjF,MAAM+B,SAAW,CAAClC,MAAM,OAAOiC,OAAO,QAAU,CAAC+L,GAAG,MAAMhO,MAAM,OAAOiC,OAAO,UAElGy0G,EAAAr2G,EAAAC,cAACurH,GAAA,EAAD,CACErmH,YAAa,CACXC,OAAO,GAETw3G,QAAS,mBACT/6G,SAAUkD,EAAKjF,MAAM+B,SACrBo7G,SAAU,oBACV0zB,WAAY,uBACZrwI,YAAc,SAAAqG,GAAC,OAAI5B,EAAKu3J,aAAa,YAAY,cACjDx6J,WAAaiD,EAAKjF,MAAM+B,SAAW,CAAClC,MAAM,OAAOiC,OAAO,QAAU,CAAC+L,GAAG,MAAMhO,MAAM,OAAOiC,OAAO,WAGpGy0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,SAAUE,eAAgB,UAC1Cu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM5tG,UAAW,SAAUlD,WAAY,OAAQC,QAAU,SAAAkB,GAAC,OAAI5B,EAAKq5J,kBAAkBz3J,EAAE,YAAvF,6BAkBN63J,IAORnoD,EAAAr2G,EAAAC,cAACo2G,EAAAr2G,EAAMu2G,SAAP,KACEF,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU9K,OAAX,CAAkBt3F,MAAO,kBAAmBrkB,KAAM,yBAClDo0G,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KAEIxH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPC,GAAI,CAAC,EAAE,GACPiB,cAAe,SACfC,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK3oG,GAAI,GACP0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh0G,WAAY,EACZC,SAAU,CAAC,EAAE,GACb60G,WAAY,IACZ1uG,UAAW,UAJb,wCASF2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,CAAC,EAAE,GACP/M,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACurH,GAAA,EAAD,CACErmH,YAAa,CACXC,OAAO,GAETw3G,QAAO,kBACP/6G,SAAUkD,EAAKjF,MAAM+B,SACrB8uI,WAAY,wBACZ1zB,SAAU,6BACV38G,YAAc,SAAAqG,GAAC,OAAI5B,EAAKq5J,kBAAkBz3J,EAAE,WAC5C7E,WAAYiD,EAAKjF,MAAM+B,SAAW,CAAClC,MAAM,OAAOiC,OAAO,QAAU,CAACjC,MAAM,OAAOiC,OAAO,OAAOi9J,aAAa,SAE5GxoD,EAAAr2G,EAAAC,cAACurH,GAAA,EAAD,CACErmH,YAAa,CACXC,OAAO,GAETw3G,QAAO,aACP/6G,SAAUkD,EAAKjF,MAAM+B,SACrB8uI,WAAY,oBACZ1zB,SAAU,wBACV38G,YAAc,SAAAqG,GAAC,OAAI5B,EAAKq5J,kBAAkBz3J,EAAE,QAC5C7E,WAAYiD,EAAKjF,MAAM+B,SAAW,CAAClC,MAAM,OAAOiC,OAAO,QAAU,CAACjC,MAAM,OAAOiC,OAAO,OAAOi9J,aAAa,UAG9GxoD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,UACPqD,WAAY,UACZC,QAAU,SAAAkB,GAAC,OAAI5B,EAAKghD,kBAAiB,KAHvC,4BAUJy4G,OAMVM,aAAe,WAEb,OAAI/5J,EAAKsC,MAAMy2J,qBAAwB/4J,EAAKsC,MAAMo2J,gBAAkB14J,EAAKsC,MAAMs2J,iBACtE,KAIPtnD,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU5K,OAAX,KACK/4G,EAAKsC,MAAMo2J,iBAcN14J,EAAKsC,MAAMs2J,kBAAgD,iBAA5B54J,EAAKsC,MAAMo2J,iBAC9CpnD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEj7F,UAAW,CAACC,KAAOgT,eAAehT,KAAOiT,OACzC9oB,QAASV,EAAKu1G,WACdp4G,KAAM,SACNb,aAAc,EACdyoH,cAAe,OACfxnH,WAAY,EACZC,SAAU,CAAC,EAAE,GACb9B,GAAI,OACJb,GAAI,CAAC,EAAE,IATT,QAdAy2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEj7F,UAAW,CAACC,KAAOgT,eAAehT,KAAOiT,OACzC9oB,QAAU,SAAAkB,GAAC,OAAI5B,EAAKq5J,kBAAkBz3J,EAAE,iBACxCzE,KAAM,SACNb,aAAc,EACdyoH,cAAe,OACfxnH,WAAY,EACZC,SAAU,CAAC,EAAE,GACb9B,GAAI,OACJb,GAAI,CAAC,EAAE,IATT,kGA9dJC,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,wCA6f9C,OACEu2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAD,CAAW/K,UAAW99G,KAAKu6G,aACE,IAA1Bv6G,KAAKwH,MAAMm2J,WACVnnD,EAAAr2G,EAAAC,cAACo2G,EAAAr2G,EAAMu2G,SAAP,KACG12G,KAAK0+J,qBACL1+J,KAAKi/J,gBAGRzoD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAAC8+J,GAAD,MACCl/J,KAAKi/J,yBA5hBU/gD,IAAMr7G,WCkCrBs8J,8MA9CbpE,cAAgB,WACd,OACEvkD,EAAAr2G,EAAAC,cAACo2G,EAAAr2G,EAAMu2G,SAAP,KACEF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ0+C,GAAT,CAAYr0J,GAAI,GAAhB,4BAEA01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,GAAV,kFAEqB,IAClBu6J,GAAYC,cAAZ,2CAHH,KASA9kD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKpoF,GAAI,UAAW9sB,EAAG,EAAGkH,QAAS,CAAC,OAAQ,UAC1C+tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK7oG,SAAU,WAAY9N,MAAO,OAChC02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAM,UAGlBm0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMh0G,WAAY,GAAlB,0CAGA+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMh0G,WAAY,GAAlB,mHASV,OACE+zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAD,CAAW/K,UAAW99G,KAAKC,MAAMs6G,YAC/B/D,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACGh+G,KAAK+6J,0BAvCmB78C,IAAMr7G,WCmC5Bu8J,8MA1CbC,iBAAmB,SAAA5hC,GACjBv4H,EAAKjF,MAAMs6G,aACXr1G,EAAKjF,MAAMq/J,iBAGbvE,cAAgB,WACd,OACEvkD,EAAAr2G,EAAAC,cAACo2G,EAAAr2G,EAAMu2G,SAAP,KACEF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ0+C,GAAT,CAAYr0J,GAAI,GAAhB,sDAIA01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,GAAV,8EAKA01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,CAAC,SAAU,OAAQC,eAAgB,WAAY2H,GAAI,GACtE4tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgBx1J,QAASV,EAAKjF,MAAMs6G,WAAYl5G,GAAI,CAAC,EAAG,GAAIyM,GAAI,CAAC,EAAG,IAApE,qBAGA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQ7wG,QAASV,EAAKm6J,kBAAtB,wFASN,OACE7oD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAD,CAAW/K,UAAW99G,KAAKC,MAAMs6G,YAC/B/D,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACGh+G,KAAK+6J,0BAnCwB78C,IAAMr7G,WCiRjC08J,8MApQb/3J,MAAQ,CACNg4J,eAAe,EACf7B,YAAY,KAGd8B,gBAAkB,WAChBv6J,EAAK8C,SAAS,CACZw3J,eAAgBt6J,EAAKsC,MAAMg4J,mBAI/BtB,iBAAmB,SAAAp3J,GACjBowB,QAAQqc,IAAI,aAAcruC,EAAKsC,MAAMm2J,YACrC72J,EAAEuH,iBAEFnJ,EAAK8C,SAAS,CACZ21J,YAAaz4J,EAAKsC,MAAMm2J,sFAK1B,OACEnnD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,CAAC,EAAG,GACRvuH,GAAI,CAAC,EAAG,GACRmb,GAAI,CAAC,OAAQ,GACb68F,GAAI,CAAC,OAAQ,GACb93G,SAAU,QACVC,SAAU,SACVqH,SAAU,YAEV4oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK7oG,SAAU,YACb4oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEx1G,eAAgB,WAChBI,GAAI,CAAC,GAAI,GACTuH,GAAI,CAAC,SAAU,GACfgF,SAAU,WACVxB,IAAK,IACLG,KAAM,IACNF,MAAO,IACPgiB,GAAI,QACJxgB,OAAQ,KAER2oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAOtwG,KAAR,CACEg1J,UAAQ,EACR/4J,KAAM,QACNE,MAAO,YACPsD,QAAS5F,KAAKC,MAAMs6G,gBAKI,IAA7Bv6G,KAAKwH,MAAMg4J,gBACc,IAA1Bx/J,KAAKwH,MAAMm2J,WACTnnD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CAAEE,SAAU,QACnBs4H,UAAW,uBAEXroB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK12G,GAAI,CAAC,EAAG,GAAIwhB,GAAI,CAAC,EAAG,GAAI68F,GAAI,CAAC,EAAG,IAGnC5H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKipD,aAAa,SAAS7/J,GAAI,GAC7B22G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ0+C,GAAT,+CAIF3+C,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,GAAV,+KAG8D,IAC5D0oG,EAAAr2G,EAAAC,cAAA,kDAAkD,IAClDo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEhwF,MAAM,wCACNk5I,GAAI,IACJ/5I,KAAK,IACLhgB,QAAS5F,KAAKk+J,kBAJhB,+BAUF1nD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,yBAEAtX,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,UACZH,GAAI,EACJkN,GAAI,CAAC,EAAG,GACRlF,GAAI,CAAC,EAAG,GACRu0G,SAAU,CAAC,OAAQ,YAEnB3G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKl1G,EAAG,CAAC,EAAG,GAAIzB,MAAO,CAAC,EAAG,KACzB02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,SACfC,eAAgB,gBAChBc,OAAQ,QAERy0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQmpD,GAAT,iCACAppD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAS,KAAf,oKAQF8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgBt6J,GAAI,GAClB01G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,YAAYd,GAAI,IAD7B,qBAONm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKl1G,EAAG,CAAC,EAAG,GAAIzB,MAAO,CAAC,EAAG,KACzB02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,SACfC,eAAgB,gBAChBc,OAAQ,QAERy0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQmpD,GAAT,sCAGAppD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAS,KAAf,gIAMF8zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgBt6J,GAAI,EAAG8E,QAAS5F,KAAKy/J,iBACnCjpD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,oBAAoBd,GAAI,IADrC,8BAWZm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7oG,SAAU,WACVtB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPtM,GAAI,CAAC,EAAG,GACRwhB,GAAI,EACJ68F,GAAI,EACJ/vF,GAAI,SAGJmoF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMiV,UAAW,EAAGx/G,YAAa,SACjCsqG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMl1F,GAAI,EAAGtgB,eAAgB,CAAC,SAAU,aACtCu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQ7wG,QAAS5F,KAAKC,MAAMs6G,WAAYz6G,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEHE,KAAKwH,MAAMg4J,cACVhpD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK3oG,GAAI,GACP0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CAAEE,SAAU,QACnBs4H,UAAW,uBAEXroB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK12G,GAAI,CAAC,EAAG,GAAIwhB,GAAI,CAAC,EAAG,GAAI68F,GAAI,CAAC,EAAG,IAEnC5H,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,EAAGG,eAAgB,UAC3Bu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAM,IACNqI,MACE1K,KAAKC,MAAM4P,QAAU7P,KAAKC,MAAM4P,QAAU,gBAKhD2mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAY31G,GAAI,EAAG+L,QAAS7M,KAAKC,MAAM4P,UACvC2mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,MAKd0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7oG,SAAU,WACVtB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPtM,GAAI,CAAC,EAAG,GACRwhB,GAAI,EACJ68F,GAAI,EACJ/vF,GAAI,SAGJmoF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMiV,UAAW,EAAGx/G,YAAa,SACjCsqG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM7tG,GAAI,EAAG3H,eAAgB,CAAC,SAAU,aACtCu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CACEt7J,MAAO,CAAC,EAAG,QACX8F,QAAS5F,KAAKy/J,iBAFhB,cAUJ,KAEHz/J,KAAKwH,MAAMm2J,WACVnnD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK3oG,GAAI,GACP0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CAAEE,SAAU,QACnBs4H,UAAW,uBAEXroB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK12G,GAAI,CAAC,EAAG,GAAIwhB,GAAI,CAAC,EAAG,GAAI68F,GAAI,CAAC,EAAG,IAEnC5H,EAAAr2G,EAAAC,cAAC8+J,GAAD,QAIJ1oD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7oG,SAAU,WACVtB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPtM,GAAI,CAAC,EAAG,GACRwhB,GAAI,EACJ68F,GAAI,EACJ/vF,GAAI,SAGJmoF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,EACJtgB,eAAgB,CAAC,SAAU,YAC3ByqH,UAAW,EACXx/G,YAAa,QAEbsqG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CACEt7J,MAAO,CAAC,EAAG,QACX8F,QAAS5F,KAAKk+J,kBAFhB,cAUJ,cA9PchgD,IAAMr7G,WCoDnBg9J,oLAtDX,OACErpD,EAAAr2G,EAAAC,cAAA,WACEo2G,EAAAr2G,EAAAC,cAAC0/J,GAAD,CACEvlD,WAAYv6G,KAAKC,MAAM65I,OAAO3gG,QAAQ4mH,wBACtCniD,OAAQ59G,KAAKC,MAAM65I,OAAO1vI,KAAK41J,yBAC/Bv/I,YAAazgB,KAAKC,MAAMwgB,cAG1B+1F,EAAAr2G,EAAAC,cAAC6/J,GAAD,CACE1lD,WAAYv6G,KAAKC,MAAM65I,OAAO3gG,QAAQ+mH,mBACtCtiD,OAAQ59G,KAAKC,MAAM65I,OAAO1vI,KAAK+1J,oBAC/B1/I,YAAazgB,KAAKC,MAAMwgB,cAG1B+1F,EAAAr2G,EAAAC,cAACggK,GAAD,CACE7lD,WAAYv6G,KAAKC,MAAM65I,OAAO3gG,QAAQknH,uBACtCziD,OAAQ59G,KAAKC,MAAM65I,OAAO1vI,KAAKk2J,wBAC/B9hJ,QAASxe,KAAKC,MAAMue,UAGtBg4F,EAAAr2G,EAAAC,cAACmgK,GAAD5gK,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE+B,SAAUhC,KAAKC,MAAM+B,SACrBy6J,aAAcz8J,KAAKC,MAAMw8J,aACzBz3I,eAAgBhlB,KAAKC,MAAMue,QAAQiZ,QACnC+oI,gBAAiBxgK,KAAKC,MAAMugK,gBAC5BjmD,WAAYv6G,KAAKC,MAAM65I,OAAO3gG,QAAQsnH,qBACtC7iD,OAAS59G,KAAKC,MAAM65I,OAAO1vI,KAAKs2J,wBAA0B1gK,KAAKC,MAAM0gK,oBAGvEnqD,EAAAr2G,EAAAC,cAACwgK,GAAD,CACErmD,WAAYv6G,KAAKC,MAAM65I,OAAO3gG,QAAQ0nH,4BACtCjjD,OAAQ59G,KAAKC,MAAM65I,OAAO1vI,KAAK02J,yBAC/B97I,eAAgBhlB,KAAKC,MAAMue,QAAQiZ,UAErC++E,EAAAr2G,EAAAC,cAAC2gK,GAAD,CACExmD,WACEv6G,KAAKC,MAAM65I,OAAO3gG,QAAQ6nH,iCAE5BpjD,OAAQ59G,KAAKC,MAAM65I,OAAO1vI,KAAK62J,oBAC/B3B,YAAat/J,KAAKC,MAAMq/J,cAG1B9oD,EAAAr2G,EAAAC,cAAC8gK,GAAD,CACE3mD,WAAYv6G,KAAKC,MAAM65I,OAAO3gG,QAAQgoH,mBACtCvjD,OAAQ59G,KAAKC,MAAM65I,OAAO1vI,KAAKg3J,oBAC/Bp8I,eAAgBhlB,KAAKC,MAAMue,QAAQiZ,QACnC5nB,QAAS7P,KAAKC,MAAM4P,kBAjDIquG,IAAMr7G,iCC8EzBw+J,8MA7Ebt+J,cAAgB,gFAEV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAKkD,yDAILlD,KAAKkD,uFAGU4D,sEACfA,EAAEuH,iBAEGrO,KAAKC,MAAM4P,+BAGd7P,KAAKC,MAAMs8J,QAAQK,iBACnB58J,KAAKC,MAAMw8J,aAAa,SAAS,eAC3Bz8J,KAAKC,MAAMs8J,QAAQ+E,uBAAuB,CAAC,kBAEnDthK,KAAKC,MAAM65I,OAAO3gG,QAAQooH,gKAGnB,IAAAp+J,EAAAnD,KAED08J,EAAiB18J,KAAK+C,cAAcsrD,oBACpCmzG,EAAY9E,GAAmD,WAAjCA,EAAe5vJ,eAAkF,kBAA3C9M,KAAKC,MAAM65I,OAAO1vI,KAAKq3J,iBAAgCzhK,KAAKC,MAAM65I,OAAO1vI,KAAKq3J,gBAAgB30J,cAAconB,SAAS,UAE/M,OACEsiF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAD,CAAW/K,UAAY,SAAAh3G,GAAC,OAAI3D,EAAKo3G,WAAWzzG,KAC1C0vG,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU9K,OAAX,CAAkBt3F,MAAQ+6I,EAAW,eAAH,mBAAyCp/J,KAAM,uBACjFo0G,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,EAAGhB,MAAO,EAAGkB,cAAe,SAAUJ,GAAI,QAClD41G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKl1G,EAAN,CAAQe,MAAO,YAAauG,UAAW,UAAvC,iEACkE24J,EAAW,SAAW,UADxF,IACoGhrD,EAAAr2G,EAAAC,cAAA,WAClGo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAWhjB,MAAO,MAAOG,WAAY,GAArC,IAA0CzC,KAAKC,MAAM65I,OAAO1vI,KAAKq3J,gBAAjE,KAA8FjrD,EAAAr2G,EAAAC,cAAA,WAE5FohK,EACEhrD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,sCACgCkxF,EAAAr2G,EAAAC,cAAA,2BADhC,QAC+Do2G,EAAAr2G,EAAAC,cAAA,0BAD/D,0BAC+Go2G,EAAAr2G,EAAAC,cAAA,+BAD/G,QACkJo2G,EAAAr2G,EAAAC,cAAA,iCADlJ,uCACsNo2G,EAAAr2G,EAAAC,cAAA,YAGpN,0DAIVo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,EAAG9M,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1Eu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJF,GAAI,CAAC,EAAG,GACRY,aAAc,EACdyF,UAAW,OACX5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtC4D,QAAO,eAAAsK,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAG,SAAAwQ,EAAO/Z,GAAP,OAAA2pB,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cAAAoQ,EAAApQ,KAAA,EAAqBzN,EAAKo3G,WAAWzzG,GAArC,wBAAAka,EAAAjP,SAAA8O,EAAA7gB,SAAH,gBAAAohB,GAAA,OAAAlR,EAAA+B,MAAAjS,KAAAkS,YAAA,IANT,qBA9DqBgsG,IAAMr7G,WC2E1B6+J,8MAvEb3+J,cAAgB,gFAEV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAKkD,yDAILlD,KAAKkD,uFAGU4D,mEACfA,EAAEuH,iBACFrO,KAAKC,MAAM65I,OAAO3gG,QAAQwoH,iKAGnB,IAAAx+J,EAAAnD,KAED4hK,EAAmE,kBAA5C5hK,KAAKC,MAAM65I,OAAO1vI,KAAKy3J,kBAAiC7hK,KAAKC,MAAM65I,OAAO1vI,KAAKy3J,iBAAiB/0J,cAAconB,SAAS,UAC9I4tI,EAAmE,kBAA5C9hK,KAAKC,MAAM65I,OAAO1vI,KAAKy3J,kBAAiC7hK,KAAKC,MAAM65I,OAAO1vI,KAAKy3J,iBAAiB/0J,cAAconB,SAAS,8BAEpJ,OACEsiF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAD,CAAW/K,UAAY,SAAAh3G,GAAC,OAAI3D,EAAKo3G,WAAWzzG,KAC1C0vG,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU9K,OAAX,CAAkBt3F,MAAQ,oBAAsBrkB,KAAM,uBACtDo0G,EAAAr2G,EAAAC,cAACyoH,GAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,EAAGhB,MAAO,EAAGkB,cAAe,SAAUJ,GAAI,QAClD41G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKl1G,EAAN,CAAQe,MAAO,YAAauG,UAAW,UAAvC,kEACiE2tG,EAAAr2G,EAAAC,cAAA,WAC/Do2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CAAWhjB,MAAO,MAAOG,WAAY,GAArC,IAA0CzC,KAAKC,MAAM65I,OAAO1vI,KAAKy3J,iBAAjE,KAA+FrrD,EAAAr2G,EAAAC,cAAA,WAE7FwhK,EACEprD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAKnxF,KAAN,CACE5iB,SAAU,GAEV8zG,EAAAr2G,EAAAC,cAAA,WAHF,iCAGsCo2G,EAAAr2G,EAAAC,cAAA,2BAHtC,QAGqEo2G,EAAAr2G,EAAAC,cAAA,0BAHrE,0BAGqHo2G,EAAAr2G,EAAAC,cAAA,+BAHrH,QAGwJo2G,EAAAr2G,EAAAC,cAAA,iCAHxJ,uCAG4No2G,EAAAr2G,EAAAC,cAAA,WAH5N,sEAIqEo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/zG,SAAU,EAAGJ,MAAO,OAAQqD,WAAY,OAAQ+f,OAAQ,SAAUC,IAAK,+BAAgCC,KAAM,iHAAnH,qBAJrE,KAMEk8I,EAAgB,8FAAgG,0DAI1HtrD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,EAAG9M,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1Eu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJF,GAAI,CAAC,EAAG,GACRY,aAAc,EACdyF,UAAW,OACX5E,KAAMrC,KAAKC,MAAM+B,SAAW,QAAU,SACtC4D,QAAO,eAAAsK,EAAAvQ,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAG,SAAAwQ,EAAO/Z,GAAP,OAAA2pB,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cAAAoQ,EAAApQ,KAAA,EAAqBzN,EAAKo3G,WAAWzzG,GAArC,wBAAAka,EAAAjP,SAAA8O,EAAA7gB,SAAH,gBAAAohB,GAAA,OAAAlR,EAAA+B,MAAAjS,KAAAkS,YAAA,IANT,qBAxDsBgsG,IAAMr7G,WCM1CsyB,EAAQ,MAAUg0B,SAElB,IAAM44G,GAA2B7jD,IAAM8jD,cAAc,CACnDzjJ,KAAM,GACN1O,QAAS,GACTk1I,SAAU,GACVt2F,SAAU,GACVl3B,UAAW,GACX+b,WAAY,GACZqF,YAAa,GACbjvC,YAAa,GACb/H,aAAc,GACdsgK,aAAc,GACdC,cAAe,GACfC,eAAgB,GAChBjtH,eAAgB,GAChBktH,SAAU,aACVzB,iBAAkB,GAClB0B,kBAAmB,GACnB/C,YAAa,aACbgD,kBAAmB,GACnB3qI,kBAAmB,GACnBg3B,aAAc,aACdrnB,aAAc,aACdi1B,qBAAsB,GACtBgmG,oBAAqB,GACrBC,eAAgB,aAChBhC,gBAAiB,aACjBhiJ,QAAS,CACPiZ,QAAS,GACTJ,SAAU,GACVorI,aAAc,aACd/qI,iBAAkB,KAClBkjI,mBAAoB,MAEtB5gC,oBAAoB,EACpBvnE,iBAAkB,aAClBiwG,iBAAkB,aAClBvoD,kBAAmB,aACnB2V,sBAAsB,EACtB6yC,yBAA0B,GAC1BC,oBAAqB,aACrBC,qBAAsB,aACtBC,0BAA0B,EAC1BlrD,0BAA2B,aAC3BkiC,OAAQ,CACN1vI,KAAM,CACJq3J,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBqC,uBAAwB,GACxBzC,wBAAyB,GACzBqC,yBAA0B,GAC1B7B,yBAA0B,GAC1Bd,yBAA0B,GAC1BgD,iCAAkC,IAEpC7pH,QAAS,CACP8pH,kBAAmB,aACnB9B,mBAAoB,aACpB+B,sBAAuB,aACvB7C,uBAAwB,aACxB8C,uBAAwB,aACxBpD,wBAAyB,aACzBqD,yBAA0B,aAC1B7B,0BAA2B,aAC3B8B,0BAA2B,aAC3B1B,2BAA4B,aAC5B2B,2BAA4B,aAC5BzC,4BAA6B,aAC7B0C,gCAAiC,aACjCC,gCAAiC,aACjCxC,iCAAkC,aAClCyC,iCAAkC,eAGtChjJ,YAAa,CACXrW,KAAM,CACJzI,aAAc,IAEhB+hK,KAAM,GACNvqH,QAAS,MAITwqH,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJp8J,oBAAqB,IAGrB1E,cAAgB,OAkChB+gK,0CAAuB,SAAAjjJ,IAAA,IAAAuW,EAAA2sI,EAAA7xJ,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,cAAOwmB,EAAP2sI,EAAA//J,OAAA,QAAAmqB,IAAA41I,EAAA,GAAAA,EAAA,GAAiB,KACtC7+J,EAAKnC,cAAc0xD,iBAAiB,kBACpCvvD,EAAKnC,cAAc0xD,iBAAiB,0BACpCvvD,EAAKnC,cAAc0xD,iBAAiB,gBAHfzzC,EAAApQ,KAAA,EAIf1L,EAAKjF,MAAMw6E,gBAAX96E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA2B,SAAA+P,IAAA,OAAAqQ,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,OAO3B1L,EAAKsC,MAAMgX,QAAQ6Y,UAAYD,GAAa9lB,SAAS8lB,KAAe9lB,SAASpM,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,IAC3Ggf,OAAOmV,SAASyqI,SAEhB9+J,EAAK8C,SAAS,CACZuW,KAAK,KACLgZ,UAAU,GACVwtH,SAAS,KACTkd,aAAa,KACbtqI,kBAAkB,GAClBssI,oBAAmB,EACnB1nG,qBAAqB,KACrBuzD,sBAAqB,GACrB,WACA5qH,EAAKu9J,iBApBsB,wBAAAniJ,EAAAvO,SAAAqO,EAAApgB,UAJZ,wBAAAghB,EAAAjP,SAAA8O,EAAA7gB,WA8BvBuP,uCAAoB,SAAAe,IAAA,OAAAmgB,EAAAtwB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIlB1L,EAAKg/J,oBAKL9/I,OAAO+/I,gBAAkB,SAAC5oI,GACxB,IAAM9a,EAAcvb,EAAKk/J,oBAGzB,OAFA3jJ,EAAY8a,OAASA,EACrBr2B,EAAKm/J,eAAe5jJ,GACbA,GAGT2D,OAAO85C,kBAAoB,SAACz9C,EAAY5Y,EAAKsJ,EAAO0M,GAWlD,OATA4C,EAAYtP,OAASA,EACrBsP,EAAY5C,OAASA,EACrB4C,EAAYld,KAAO,WACnBkd,EAAY8jC,QAAUlyC,KAAKg5B,MAC3B5qB,EAAY7C,gBAAkB/V,EAI9B3C,EAAKg5D,kBAAkBz9C,GAChBA,GA3BS,wBAAA/P,EAAAqB,SAAAzB,EAAAtQ,WA+BpBkkK,kBAAoB,WAElB,GADyBh/J,EAAKjF,MAAMs3I,WAAWS,OAAOif,WACjC,CACnB,IAAMyF,EAAiBx3J,EAAKnC,cAAcsrD,oBACrBnpD,EAAKjF,MAAMs3I,WAAWS,OAAOif,cAAgB/xJ,EAAKjF,MAAMs3I,WAAWS,OAAO91H,SAAS66I,KAItG73J,EAAKjF,MAAMw8J,aAAa,SAAS,UACL,WAAnBC,GAETx3J,EAAKjF,MAAMw8J,aAAa,SAAS,UAKvC7zC,yDAAqB,SAAAt1G,EAAO3L,EAAWC,GAAlB,IAAA08J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnI,EAAA,OAAA9rI,EAAAtwB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,UAEnB1L,EAAKhC,aAIqBgC,EAAKsC,MAAMm9J,kBAAoBz/J,EAAKjF,MAAMs3I,WAAWS,OAAOif,YAGpF/xJ,EAAK8C,SAAS,CACZ28J,kBAAiB,GACjB,WACAz/J,EAAKg/J,sBAIJv8J,EAAU26G,gBAAkBp9G,EAAKjF,MAAMqiH,eAAiBp9G,EAAKjF,MAAMqiH,eAAmBp9G,EAAKjF,MAAMs8J,QAAQxlD,QAAUpvG,EAAU40J,QAAQxlD,SAAW7xG,EAAKjF,MAAMs8J,QAAQxlD,OAEtK7xG,EAAKk9J,WACKz6J,EAAU40J,UAAYr3J,EAAKjF,MAAMs8J,QACvCr3J,EAAKjF,MAAMs8J,QAAQr/I,iBAAiB28C,OAAS30D,EAAKjF,MAAMs8J,QAAQr/I,MAAM8R,QAAQhrB,QAC1EsgK,EAAep/J,EAAKjF,MAAMs8J,QAAQr/I,MAAM8R,QACxCu1I,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBX,IAAwCY,GAE1Cr/J,EAAKjF,MAAMw8J,aAAa,SAAS,MAIjCkH,GAAmB,MAETY,EAIVr/J,EAAKk9J,WAHLl9J,EAAKk+J,yBAAyB,KAAKkB,IAM5Bp/J,EAAKjF,MAAMs8J,QAAQxlD,QAA6C,kBAAnC7xG,EAAKjF,MAAMs8J,QAAQj6C,eAA8D,kBAA3Bp9G,EAAKjF,MAAMqiH,eAEvGp9G,EAAKk9J,YAEGl9J,EAAKjF,MAAMs8J,QAAQj6C,eAAiBp9G,EAAKjF,MAAMs8J,QAAQj6C,gBAAkBp9G,EAAKjF,MAAMqiH,eAAkB36G,EAAUw+C,gBAAkBjhD,EAAKjF,MAAMkmD,gBAEvJjhD,EAAKk9J,WAGuBl9J,EAAKsC,MAAMy8J,oBAAsBr8J,EAAU4W,QAAQiZ,QAAQryB,KAAOF,EAAKsC,MAAMgX,QAAQiZ,QAAQryB,IAGzHF,EAAKk9J,WAGwBx6J,EAAU4W,QAAQ6Y,SAASjyB,KAAOF,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,IAG3FF,EAAK8C,SAAS,CACZuvB,UAAU,GACVI,kBAAkB,GAClBm4F,sBAAqB,GACpB,WACD5qH,EAAKjF,MAAM2kK,WAAW1/J,EAAKsC,MAAMgX,SACjCtZ,EAAKk9J,gBAI4Bz6J,EAAU6rB,qBAAuBtuB,EAAKjF,MAAMuzB,qBAAyB7rB,EAAU6rB,qBAAuBtuB,EAAKjF,MAAMuzB,qBAAuBpkB,KAAKC,UAAU1P,OAAOoE,KAAK4D,EAAU6rB,wBAA0BpkB,KAAKC,UAAU1P,OAAOoE,KAAKmB,EAAKjF,MAAMuzB,uBAnE/P,CAAAhgB,EAAA5C,KAAA,gBAAA4C,EAAA5C,KAAA,GAsEX1L,EAAK09J,sBAtEM,QAyEb4B,EAAuB78J,EAAUw+C,gBAAkBjhD,EAAKjF,MAAMkmD,cAC9Ds+G,EAAwB98J,EAAU40J,QAAQ1sJ,UAAY3K,EAAKjF,MAAMs8J,QAAQ1sJ,QACzE60J,EAAsB/8J,EAAU26G,gBAAkBp9G,EAAKjF,MAAMqiH,eAA8C,WAA7Bp9G,EAAKjF,MAAMqiH,eAS3FkiD,GAAwBC,GAAyBC,IACnDx/J,EAAKo6J,cAMc33J,EAAU6B,gBAAkBtE,EAAKjF,MAAMuJ,eAE1DtE,EAAK8C,SAAS,CACZqM,cAAe,OAKf1M,EAAUm7J,2BAA6B59J,EAAKjF,MAAM6iK,0BACpD59J,EAAK8C,SAAS,CACZ86J,yBAAyB59J,EAAKjF,MAAM6iK,2BAIjBl7J,EAAUiI,UAAY3K,EAAKsC,MAAMqI,SAEtD3K,EAAK2/J,qBAGHjhJ,gBACI24I,EAAUntJ,KAAK0U,MAAMF,aAAaC,QAAQ,cAC/B3e,EAAKjF,MAAMs8J,QAAQxlD,SAAWwlD,EAAQxlD,QAAU7xG,EAAKjF,MAAMs8J,QAAQj6C,gBAAkBi6C,EAAQj6C,eAC5Gp9G,EAAKnC,cAAckhB,gBAAgB,UAAU7U,KAAKC,UAAU,CAAC0nG,OAAO7xG,EAAKjF,MAAMs8J,QAAQxlD,OAAOuL,cAAcp9G,EAAKjF,MAAMs8J,QAAQj6C,kBAIpG36G,EAAUwhD,OAAOtnB,kBAAoB38B,EAAKjF,MAAMkpD,OAAOtnB,iBAGpF38B,EAAK4+J,uBAxHY,yBAAAtwJ,EAAAzB,SAAAuB,EAAAtT,mEA4HrB6kK,wCAAqB,SAAAjjJ,IAAA,IAAAszB,EAAAmtH,EAAAjrI,EAAA0tI,EAAA9/I,EAAA4rB,EAAAyc,EAAA5xB,EAAAspI,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA10I,EAAAtwB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,UACfskC,EAAiB,KACjBmtH,EAAoB,KAGlBjrI,EAAYlyB,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,GACxC0/J,EAAgB13J,IAAcoR,QAAQwjB,UAAUy0G,QAEhDzxH,EAAiB9f,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,oBAAoBoiB,IACnFwZ,EAA+C,YAA5B5rB,EAAe9C,SAAyBkV,EAAYlyB,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAeoiB,IAE1Ji2B,EAAoBnoD,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,sBAClEymB,EAAgB4xB,EAAkBj2B,KAEpC0tI,GAAiBA,EAAchzI,SAAWgzI,EAAc/oI,KAAOp8B,OAAOoE,KAAK+gK,EAAc/oI,KAAK7H,SAAS5iB,SAASs/B,GAAkB1tB,aAdnH,CAAApB,EAAAlR,KAAA,gBAeXm0J,EAAiBD,EAAc/oI,IAAI6U,GAAkB1rC,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAY,UAAU,QACzHgwJ,EAAgB9/J,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAY,SAAS,MAAMoiB,IAAYlyB,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAY,SAAS,QAExKiwJ,EAAgB,IAAItjI,IAAK,IAAIA,IAAKK,UAAUC,aAAa8iI,IACzDG,EAAiB,IAAIvjI,IAAK,IAAIA,IAAKK,UAAUC,aAAa+iI,IAGhEI,eAAIC,qBAEJnwH,EAAiB,IAAIowH,aAEfH,EAAuB,CAC3BI,OAAQ,CACNrjJ,SAAUgjJ,EACVM,cAAe,CACbv5J,KAAO/G,EAAKsC,MAAMqI,UAGtB41J,MAAO,CACLvjJ,SAAU+iJ,EACVO,cAAe,CACbv5J,KAAO/G,EAAKsC,MAAMqI,UAGtB2O,QAASid,EAAcjd,QACvBqhD,QAASpkC,EAAcokC,SAxCR/9C,EAAAlR,KAAA,GA2CXskC,EAAe4gH,KAAKqP,GA3CT,QA8CnB/gJ,OAAO8wB,eAAiBA,EACxB9wB,OAAOi+I,kBAAoBA,EAE3Bn9J,EAAK8C,SAAS,CACZktC,iBACAmtH,sBAnDiB,yBAAAvgJ,EAAA/P,SAAA6P,EAAA5hB,WAwDrBoiK,8BAAW,SAAA9+I,IAAA,IAAAg/F,EAAAi6C,EAAAnlI,EAAAslI,EAAArvG,EAAA5xB,EAAAvZ,EAAA4f,EAAAC,EAAA2jI,EAAAV,EAAAlhB,EAAAoe,EAAAvpH,EAAArF,EAAAwxH,EAAA9/I,EAAA4rB,EAAAm0H,EAAAxmJ,EAAAonJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7yI,EAAAmnC,EAAA2rG,EAAAnhB,EAAAohB,EAAAj0J,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,UAAO0xG,EAAP6jD,EAAAniK,OAAA,QAAAmqB,IAAAg4I,EAAA,GAAAA,EAAA,GAAqB,KAOzBjhK,EAAKsC,MAAMy8J,mBAPP,CAAAtgJ,EAAA/S,KAAA,eAAA+S,EAAAtC,OAAA,UAQA,GARA,UAWHk7I,EAAUr3J,EAAKjF,MAAMs8J,QACrBnlI,EAAYlyB,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,GACxCs3J,EAAiBx3J,EAAKnC,cAAcsrD,oBAIpChB,EAAoBnoD,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,sBAClEymB,EAAgB4xB,EAAkBj2B,GAClClV,EAAWuZ,EAAgBA,EAAcvZ,SAAW,SACpD4f,EAAa58B,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAYkN,EAAS,QAChF6f,EAAU78B,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAYkN,EAAS,MAAMkV,IAAY0K,EAE/F4jI,EAAkBxgK,EAAKsC,MAAMgX,QAAQkZ,iBACrCstI,EAAgB9/J,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAY,SAAS,MAAMoiB,IAAYlyB,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAY,SAAS,QAExK8uI,EAAkB5+I,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,oBAChEktJ,EAAgBviK,OAAOoE,KAAKspD,GAAmBv8C,OAAQ,SAAAs1J,GAAK,OAAItiB,EAAgB5vH,SAAS5iB,SAAS80J,MAAU1hI,OAAQ,SAACC,EAAIyhI,GAC7H,IAAM3qI,EAAgB4xB,EAAkB+4G,GAClCzqI,EAAiBz2B,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAYymB,EAAcvZ,WACzFmkJ,EAAc1qI,EAAeI,IAAIqqI,GAAOzqI,EAAe90B,IAE7D,OADA89B,EAAIyhI,GAAS,IAAIzkI,IAAK,IAAIA,IAAKK,UAAUC,aAAaokI,IAC/C1hI,GACP,IAEEgU,EAAc,KACZrF,EAAa,IAAI3R,IAAK,IAAIA,IAAKK,UAAUC,aAAa+iI,IAEtDF,EAAgB13J,IAAcoR,QAAQwjB,UAAUy0G,QAChDzxH,EAAiB9f,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,oBAAoBoiB,IACnFwZ,EAA+C,YAA5B5rB,EAAe9C,SAAyBkV,EAAYlyB,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAeoiB,IAC5J0tI,GAAiBA,EAAchzI,SAAWgzI,EAAc/oI,KAAOp8B,OAAOoE,KAAK+gK,EAAc/oI,KAAK7H,SAAS5iB,SAASs/B,GAAkB1tB,cAC9H6hJ,EAAiBD,EAAc/oI,IAAI6U,GAAkB1rC,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,YAAY,UAAU,QAC/H2jC,EAAc,IAAIhX,IAAK,IAAIA,IAAKK,UAAUC,aAAa8iI,IACvD3gJ,OAAOu0B,YAAcA,GAGnBp6B,EAAOmnJ,EAAkBnJ,EAAQ+J,QAAU,KAG1CliJ,OAAO0tI,oBAAsByK,EAAQj6C,gBAAkBl+F,OAAO0tI,mBAAmBxvC,gBACpFl+F,OAAO0tI,mBAAqByK,GAI1Bj6C,EACFqhD,GAAmB,KAEnBrhD,EAAgBp9G,EAAKjF,MAAMqiH,cAgBzBi6C,GAA6B,WAAlBj6C,GAA8BA,IAAkBi6C,EAAQj6C,gBACjE/jG,GAAgD,oBAAjCA,EAAK6c,gBAAgBy7H,QACtCt4I,EAAK6c,gBAAgBy7H,UACZ0F,EAAQxK,WAAkD,oBAA9BwK,EAAQxK,UAAU8E,SACvD0F,EAAQxK,UAAU8E,UAEpBt4I,EAAO,KACPolJ,GAAmB,MAGfgC,EAAwBpJ,EAAQj6C,eAAiBi6C,EAAQj6C,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkBqhD,GAE9H,eAAlBrhD,EAtFK,CAAA3+F,EAAA/S,KAAA,YAuFF2rJ,EAAQxlD,SAAU4uD,EAvFhB,CAAAhiJ,EAAA/S,KAAA,aAyFD0xG,IAAiBqjD,EAzFhB,CAAAhiJ,EAAA/S,KAAA,YA2FmB,WAAlB0xG,GAA+Bp9G,EAAKsC,MAAMm9J,iBA3F3C,CAAAhhJ,EAAA/S,KAAA,gBAAA+S,EAAAtC,OAAA,UA4FM,GA5FN,eAgGHsiJ,GAAmBrhD,EAhGhB3+F,EAAA/S,KAAA,GAiGG2rJ,EAAQE,aAAan6C,GAjGxB,eAAA3+F,EAAAtC,OAAA,SAqGI9C,GArGJ,WA0GLqnJ,EAAW7jI,EACX8jI,EAAe,KAIdtnJ,EAYHsnJ,EAAetnJ,EAAK6c,gBAXhBhX,OAAOsd,UACTx8B,EAAKnC,cAAc2f,UAAU,+BAC7BmjJ,EAAezhJ,OAAOsd,UACbtd,OAAO7F,MAChBrZ,EAAKnC,cAAc2f,UAAU,uCAC7BmjJ,EAAezhJ,OAAO7F,OAEtBrZ,EAAKnC,cAAc2f,UAAU,yDAC7BkjJ,EAAWZ,GAMXc,GAAgB,EAEdxjD,GAAmC,WAAlBA,IAA+BujD,GAA+C,oBAAxBA,EAAanP,OAhIjF,CAAA/yI,EAAA/S,KAAA,gBAAA+S,EAAAhT,KAAA,GAAAgT,EAAA/S,KAAA,GAkICi1J,EAAanP,SAlId,QAAA/yI,EAAA/S,KAAA,iBAAA+S,EAAAhT,KAAA,GAAAgT,EAAAwO,GAAAxO,EAAA,UAoILkiJ,EAAe,KACfD,EAAWZ,EACXc,GAAgB,EAtIX,cA2Ia,eAAlBxjD,IACFujD,EAAe,IAAIU,2BAIjBV,GAAgBH,EAClBnnJ,EAAO,IAAIojB,IAAKkkI,GAEPD,IACTrnJ,EAAO2jJ,EAAc9qI,IAKjB2uI,EAzJG,eAAAx0I,EAAA5xB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAyJY,SAAAuS,EAAOqjJ,GAAP,IAAAnJ,EAAA/X,EAAA,OAAAt0H,EAAAtwB,EAAAsQ,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UAGfq1J,IAAkB/gK,EAAKsC,MAAMy+J,cAHd,CAAAljJ,EAAAnS,KAAA,eAAAmS,EAAA1B,OAAA,UAIV,GAJU,UAOnB+C,OAAOoiJ,aAAethK,EAAKsC,MAAM+W,KAGY,oBAAlCrZ,EAAKjF,MAAMwmK,qBACpBvhK,EAAKjF,MAAMwmK,qBACXvhK,EAAKjF,MAAMymK,sBAAsB,OAZhB3jJ,EAAApS,KAAA,EAuBXmsJ,EAAe53J,EAAKjF,MAAMs3I,WAAWS,OAAOif,cAAgB/xJ,EAAKjF,MAAMs3I,WAAWS,OAAO91H,SAAS66I,KACnG73J,EAAKsC,MAAMgX,QAAQkZ,mBAAoBolI,EAxB3B,CAAA/5I,EAAAnS,KAAA,eAAAmS,EAAAnS,KAAA,EAyBT1L,EAAKu9J,eAzBI,WA4Bbv9J,EAAKsC,MAAMgX,QAAQo8I,mBA5BN,CAAA73I,EAAAnS,KAAA,gBAAAmS,EAAAnS,KAAA,GA6BT1L,EAAK09J,sBA7BI,YA8BXrG,EAAQxlD,QAAUwlD,EAAQj6C,gBAAgBA,IAAiBi6C,EAAQ1sJ,QA9BxD,CAAAkT,EAAAnS,KAAA,aAgCT1L,EAAKsC,MAAMu9I,SAhCF,CAAAhiI,EAAAnS,KAAA,YAiCLm0I,EAAW7/I,EAAKsC,MAAMu9I,UACP33I,IAAcoR,QAAQwjB,UAAU+iH,SACpCC,aAAgBD,EAAS4hB,SAAY/C,GAnC3C,CAAA7gJ,EAAAnS,KAAA,gBAoCTgzJ,IAA0B,EAC1B7e,EAASgR,MAAMwG,EAAQ1sJ,QAAS,SAACqN,EAAOglD,GAGtC,GAAIhlD,EACF,OAAOhY,EAAK8C,SAAS,CACnB+8I,UAAS,GACT,WACA7/I,EAAKo6J,YAAY/C,EAAQ1sJ,WAI7B+zJ,IAA0B,EAEtB1hG,EAAStkD,gBACX1Y,EAAKo6J,YAAY/C,EAAQ1sJ,SACjBqyD,EAAS0kG,cACjB1hK,EAAKo6J,YAAY/C,EAAQ1sJ,WArDpBkT,EAAA1B,OAAA,UAwDF,GAxDE,eAAA0B,EAAAnS,KAAA,GA4DP1L,EAAKo6J,YAAY/C,EAAQ1sJ,SA5DlB,QAAAkT,EAAAnS,KAAA,wBAAAmS,EAAAnS,KAAA,GA8DP1L,EAAKo6J,cA9DE,QAAAv8I,EAAAnS,KAAA,iBAAAmS,EAAApS,KAAA,GAAAoS,EAAAoP,GAAApP,EAAA,SAuEjB7d,EAAKk+J,yBAAyB,KAAKrgJ,EAAAoP,GAAMnD,SAvExB,yBAAAjM,EAAAhR,SAAA6Q,EAAA5iB,KAAA,aAzJZ,gBAAAgS,GAAA,OAAAuf,EAAAtf,MAAAjS,KAAAkS,YAAA,GAqOH8zJ,EAAeznJ,EACf0nJ,EAAgB30J,SAASpM,EAAKsC,MAAMy+J,eAAe,EAGzD/gK,EAAK8C,SAAS,CACZsrC,aACAqF,cACAstH,gBACA/D,iBACA,cAII9uI,EAAmBluB,EAAKsC,MAAMgX,QAAQiZ,QAAQryB,GAC9Cm1D,EAAentD,IAAcoR,QAAQwjB,UAAU+iH,WAI/B,WAAlBziC,GAA8B/nD,GAAgBA,EAAazoC,SAAWyoC,EAAa/9B,kBAAkBtI,SAASd,KAAuBspI,GAAmBniG,EAAa0qF,gBAAgB/wH,SAASwoI,EAAe5vJ,eAuD3MyR,IAASrZ,EAAKsC,MAAM+W,KACtBrZ,EAAK8C,SAAS,CACZuW,QACC,kBAAMwnJ,EAAaE,MACb1J,EAAQ1sJ,SAAWi2J,IAC5BC,EAAaE,IA1DTC,EAAuBL,GAA8B,IAAIlkI,IAAKK,UAAUC,aAAa2jI,GAC/D,OAAxB1gK,EAAKsC,MAAMu9I,UAAqB7/I,EAAKsC,MAAMu9I,SAAS3pH,kBAAoB8qI,KACpEnhB,EAAW,IAAI8hB,YAASX,EAAqB3rG,EAAa18C,UACpB,oBAArBknI,EAAS+hB,SAG9B5hK,EAAK8C,SAAS,CACZgyH,oBAAmB,EACnBlK,sBAAqB,IAGvBvxG,EAAO,IAAIojB,IAAKojH,GAChBA,EAAS+hB,QAAQ/hB,EAASgiB,MAAO,WAC/B,GAAI7hK,EAAKuC,qBAA8C,IAAxBvC,EAAKsC,MAAMu9I,UAAuB7/I,EAAKsC,MAAMu9I,WAAaA,GAAYxmI,IAASrZ,EAAKsC,MAAM+W,KAEvH,OAAO,EAGT,IAAM0jJ,EAAeld,EAASkd,aACxB1lG,EAAuBwoF,EAASxoF,qBAEhCz0D,EAAW,CACfyW,OACAwmI,WACAzxG,aACA2uH,eACAC,gBACA3lG,wBAIEh+C,IAASrZ,EAAKsC,MAAM+W,MACtBrZ,EAAK8C,SAASF,EAAU,kBAAMi+J,EAAaE,OAE5Ca,QAAQ/hB,EAASiiB,MAAO,SAAC9pJ,EAAO8R,GACjCkI,QAAQha,MAAM,iBAAiBA,EAAM8R,EAAQ9pB,EAAKsC,MAAMu9I,UACxDxmI,EAAOynJ,GAEqB,IAAxB9gK,EAAKsC,MAAMu9I,UACb7/I,EAAK8C,SAAS,CACZuW,OACAwmI,UAAS,GACR,kBAAMghB,EAAaE,QAI1B/gK,EAAK8C,SAAS,CACZuW,OACAwmI,UAAS,GACR,kBAAMghB,EAAaE,OA1SnBtiJ,EAAAtC,OAAA,SAuTF9C,GAvTE,yBAAAoF,EAAA5R,SAAAuR,EAAAtjB,KAAA,gBA0TXsnC,mDAAe,SAAApjB,EAAO/hB,EAAM0K,EAAS06B,GAAtB,IAAA0/H,EAAAC,EAAAh1J,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,cAA2Bq2J,EAA3BC,EAAAljK,OAAA,QAAAmqB,IAAA+4I,EAAA,IAAAA,EAAA,GAAA/iJ,EAAAvT,KAAA,EAEA1L,EAAK4oD,eAAe3rD,EAAM0K,EAAS06B,EAAK0/H,GAFxC,cAAA9iJ,EAAA9C,OAAA,SAAA8C,EAAAxQ,MAAA,wBAAAwQ,EAAApS,SAAAmS,EAAAlkB,qEAKfmnK,uBAAyB,SAAChlK,EAAM0K,EAAS06B,GAAwB,IAAnBnQ,EAAmBllB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAElDklB,GAAa9lB,SAAS8lB,KAAe9lB,SAASpM,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,KAAOF,EAAKsC,MAAMgX,QAAQkZ,mBACtGN,EAAY,MAEd,IAAMyuI,EAAezuI,GAAalyB,EAAKsC,MAAM06J,cAAc9qI,GAAalyB,EAAKsC,MAAM06J,cAAc9qI,GAAclyB,EAAKsC,MAAMgX,QAAQkZ,iBAAmBxyB,EAAKsC,MAAM+W,KAAOrZ,EAAKsC,MAAM06J,cAAch9J,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,IAE5N,IAAKygK,EACH,OAAO,KAIT,IAEE,MAAO,CAAC1jK,OAAMm1B,SADG,IAAIuuI,EAAa5kJ,IAAI23B,SAASrR,EAAK16B,IAEpD,MAAOqQ,GACPhY,EAAKnC,cAAc8zB,eAAe,6BAA6B10B,EAAK0K,EAAQqQ,GAG9E,OAAO,QAGT4wC,qDAAiB,SAAAn6B,EAAOxxB,EAAM0K,EAAS06B,GAAtB,IAAA0/H,EAAApB,EAAAvuI,EAAAknD,EAAAn+C,EAAAnuB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAwjB,GAAA,cAAAA,EAAAtjB,KAAAsjB,EAAArjB,MAAA,UAA2Bq2J,EAA3B5mI,EAAAr8B,OAAA,QAAAmqB,IAAAkS,EAAA,IAAAA,EAAA,IAETwlI,EAAeoB,GAAqB/hK,EAAKsC,MAAM8rC,WAAapuC,EAAKsC,MAAM8rC,WAAcpuC,EAAKsC,MAAMgX,QAAQkZ,iBAAmBxyB,EAAKsC,MAAM+W,KAAOrZ,EAAKsC,MAAM06J,cAAch9J,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,MAMlLmiC,EARP,CAAAtT,EAAArjB,KAAA,eAAAqjB,EAAA5S,OAAA,SASN,MATM,cAAA4S,EAAAtjB,KAAA,EAcP2mB,EAAW,IAAIuuI,EAAa5kJ,IAAI23B,SAASrR,EAAK16B,GAC9C2xE,EAAe,CAACr8E,OAAMm1B,YAE5BpyB,EAAK8C,SAAS,SAAAJ,GAEZ,IAAM2vB,EAAY3vB,EAAU2vB,UAAUzmB,OAAQ,SAAA0mB,GAAC,OAAIA,EAAEr1B,OAASq8E,EAAar8E,OAG3E,OADAo1B,EAAUpqB,KAAKqxE,GACR,CACLjnD,eAvBStD,EAAA5S,OAAA,SA2BNm9D,GA3BM,QAAAvqD,EAAAtjB,KAAA,GAAAsjB,EAAA9B,GAAA8B,EAAA,SA6BbiD,QAAQha,MAAM,6BAA6B/a,EAAK0K,EAAQ06B,EAAxDtT,EAAA9B,IA7Ba,eAAA8B,EAAA5S,OAAA,SAgCR,MAhCQ,yBAAA4S,EAAAliB,SAAA4hB,EAAA3zB,KAAA,yEAmCjB2uD,aAAe,WAEb,GAAIzpD,EAAKsC,MAAMinD,SACb,OAAOvpD,EAAKsC,MAAMinD,SAGpB,IAAM24G,EAAeh6J,IAAcoR,QAAQwjB,UAAUysB,SACjDA,EAAW,KACTr3B,EAAYlyB,EAAKsC,MAAMgX,QAAQiZ,QAAQryB,IAAMF,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,GAE/E,GAAIgiK,GAAgBA,EAAat1I,UAAkE,IAAvDs1I,EAAa5qI,kBAAkBxgB,QAAQob,GAAmB,CACpG,IAAMiwI,EAAiBD,EAAavpJ,OACpCwpJ,EAAe7oJ,QAAU4oJ,EAAa/hB,WAAWngJ,EAAKsC,MAAMgX,QAAQiZ,QAAQryB,GAAGgI,IAAcoR,QAAQ6uC,mBACrGoB,EAAW,IAAI64G,KAASD,GAS1B,OANAjjJ,OAAOqqC,SAAWA,EAElBvpD,EAAK8C,SAAS,CACZymD,aAGKA,KAGT6wG,iCAAc,SAAApsI,IAAA,IAAArjB,EAAAs2C,EAAAu2G,EAAA6K,EAAA94G,EAAAi3F,EAAA8hB,EAAAC,EAAAn0I,EAAAphB,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA8iB,GAAA,cAAAA,EAAA5iB,KAAA4iB,EAAA3iB,MAAA,UAAOf,EAAPyjB,EAAAtvB,OAAA,QAAAmqB,IAAAmF,EAAA,IAAAA,EAAA,GAEN6yB,EAAgBjhD,EAAKjF,MAAMkmD,cAC3Bu2G,EAAiBx3J,EAAKnC,cAAcsrD,kBAAkB,WAExDlI,EALQ,CAAA5yB,EAAA3iB,KAAA,eAAA2iB,EAAAlS,OAAA,SAOHnc,EAAK8C,SAAS,CACnB6H,QAAQs2C,EACR6zE,oBAAmB,GACnB,WACA90H,EAAKi1G,uBAXG,UAa4B,WAA7Bj1G,EAAKjF,MAAMqiH,eAA+Bp9G,EAAKjF,MAAMqiH,eAAkBp9G,EAAKjF,MAAMs8J,QAAQxlD,OAbzF,CAAAxjF,EAAA3iB,KAAA,eAAA2iB,EAAAlS,OAAA,SAcHnc,EAAK8C,SAAS,CACnB6H,QAAQ,KACRmqH,oBAAmB,KAhBX,UAAAzmG,EAAA5iB,KAAA,EAwBNzL,EAAKjF,MAAMs8J,QAAQxlD,QAAU7xG,EAAKjF,MAAMs8J,QAAQj6C,gBAAgBp9G,EAAKjF,MAAMqiH,eAAiBp9G,EAAKjF,MAAMs8J,QAAQ1sJ,UACjHA,EAAU3K,EAAKjF,MAAMs8J,QAAQ1sJ,SAG1BA,EA5BK,CAAA0jB,EAAA3iB,KAAA,gBAAA2iB,EAAA3iB,KAAA,GA6Bc1L,EAAKsC,MAAM+W,KAAK0C,IAAI01I,cA7BlC,SA6BF4Q,EA7BEh0I,EAAA5f,OA+BO4zJ,EAAQvjK,SACrB6L,EAAU03J,EAAQ,IAhCZ,WAoCL13J,IACHA,EAAU3K,EAAKjF,MAAMs8J,QAAQ1sJ,SAG1BA,GAAW3K,EAAKsC,MAAMqI,UAAYA,EAxC7B,CAAA0jB,EAAA3iB,KAAA,gBAAA2iB,EAAAlS,OAAA,SAyCDnc,EAAK8C,SAAS,CACnBgyH,oBAAoB,KA1Cd,YAiDNnqH,EAjDM,CAAA0jB,EAAA3iB,KAAA,cAoDF69C,EAAWvpD,EAAKypD,gBApDd,CAAAp7B,EAAA3iB,KAAA,gBAAA2iB,EAAA3iB,KAAA,GAwDsB69C,EAASi3F,gBAxD/B,SAwDAA,EAxDAnyH,EAAA5f,OA0De+xI,EAAc1hJ,QAAUogB,OAAOsjJ,SAE9CF,EAAqB,GACrB5jJ,eACF4jJ,EAAqB5jJ,aAAaC,QAAQ,uBAAyBzU,KAAK0U,MAAMF,aAAaC,QAAQ,uBAAyBzU,KAAK0U,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvL6hI,EAAczhJ,QAAQ,SAACuxB,EAAE9oB,GAEvB,IAAMi7J,EAAiBnyI,EAAErzB,MAG2B,IAAhDqlK,EAAmBxrJ,QAAQ2rJ,KAC7BvjJ,OAAOsjJ,OAAOv6J,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQjI,EAAKnC,cAAc60B,8BAA8BpC,EAAEoyI,YAGtGJ,EAAmBr6J,KAAKw6J,MAKxB/jJ,cACF1e,EAAKnC,cAAckhB,gBAAgB,qBAAqB7U,KAAKC,UAAUm4J,KAhFrE,QAsFRtiK,EAAKnC,cAAc2a,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,YACbF,WAAYq/I,IAMdx3J,EAAK8C,SAAS,CACZ6H,UAEAmqH,oBAAoB,GACpB,WAEA90H,EAAKi1G,sBArGC5mF,EAAA3iB,KAAA,wBAAA2iB,EAAAlS,OAAA,SA4GDnc,EAAK8C,SAAS,CACnB6H,QAAQ,KACRmqH,oBAAoB,KA9Gd,QAAAzmG,EAAA3iB,KAAA,oBAAA2iB,EAAA5iB,KAAA,GAAA4iB,EAAApB,GAAAoB,EAAA,SAmHVruB,EAAK8C,SAAS,CACZgyH,oBAAoB,IAItB90H,EAAKnC,cAAc2f,UAAU,yCAA7B6Q,EAAApB,MAKIoB,EAAApB,IAASoB,EAAApB,GAAMnD,SAAWuE,EAAApB,GAAMnD,QAAQkF,SAAS,yCA7H3C,CAAAX,EAAA3iB,KAAA,gBAAA2iB,EAAAlS,OAAA,kBAkIJomJ,EAAUl0I,EAAApB,cAAiB0nC,MAC7B30D,EAAKnC,cAAcipD,kBAAoBy7G,GACzCI,KAAAt0I,EAAApB,IApIQ,yBAAAoB,EAAAxhB,SAAAmhB,EAAAlzB,KAAA,eA6Id6iK,qBAAuB,SAAA3lJ,GACrB,IAAI48H,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK02J,0BAA2B,EACvChnB,EAAO1vI,KAAK62J,qBAAsB,EAClC/7J,EAAK8C,SAAS,CAAE8xI,cAGlB3/B,wDAAoB,SAAAvlF,EAAOkzI,GAAP,IAAAp0I,EAAAE,EAAAuuI,EAAAI,EAAAluJ,EAAA,OAAAoc,EAAAtwB,EAAAsQ,KAAA,SAAAukB,GAAA,cAAAA,EAAArkB,KAAAqkB,EAAApkB,MAAA,UAEb1L,EAAKsC,MAAM+W,KAFE,CAAAyW,EAAApkB,KAAA,eAAAokB,EAAA3T,OAAA,UAGT,GAHS,cAMlBymJ,EAAiBA,EAAiB5iK,EAAKnC,cAAckO,MAAM62J,GAAkB,KAN3D9yI,EAAArkB,KAAA,EAAAqkB,EAAApkB,KAAA,EAcN8P,QAAQqD,IAAI,CACpB7e,EAAKsC,MAAM+W,KAAK0C,IAAIsP,WAAWrrB,EAAKsC,MAAMqI,SAC1C3K,EAAKwrB,gBAAgBxrB,EAAKsC,MAAMqI,SAChC3K,EAAKutD,qBAjBS,OAAA/+B,EAAAsB,EAAArhB,KAAAigB,EAAAj0B,OAAAsyB,GAAA,EAAAtyB,CAAA+zB,EAAA,GAWdyuI,EAXcvuI,EAAA,GAYd2uI,EAZc3uI,EAAA,GAadvf,EAbcuf,EAAA,GAsBZuuI,IAGEA,EAAej/I,WAAWgR,SAAS,OACrCiuI,EAAiBj9J,EAAKsC,MAAM+W,KAAKkX,MAAMK,MAAMqsI,IAI/CA,EAAiBj9J,EAAKsC,MAAM+W,KAAKkX,MAAMI,QACrCssI,EACA,SAGFA,EAAiBj9J,EAAKnC,cAAckO,MAAMkxJ,GAAgBj/I,WAE1Dhe,EAAK8C,SAAS,CACZm6J,mBAGFj9J,EAAKnC,cAAc2f,UAAU,oBAAqBy/I,IAKhDI,GAEFA,EAAsBr9J,EAAKnC,cAAckO,MAAMsxJ,GAG3CuF,GAAkB5iK,EAAKsC,MAAM+6J,qBAAuBr9J,EAAKnC,cAAcixD,qBAAqB9uD,EAAKsC,MAAM+6J,oBAAoBluJ,GAAe6O,aAAeq/I,EAAoBr/I,aAC/Kq/I,EAAsBA,EAAoB9wJ,KAAKq2J,IAGjDvF,EAAsBr9J,EAAKnC,cAAc0R,iBAAiB8tJ,EAAoBluJ,GAAe6O,WAK7Fhe,EAAK8C,SAALrI,OAAAyzI,EAAA,EAAAzzI,CAAA,CACE4iK,uBADF,iBAAA57J,OAEoBzB,EAAKjF,MAAMuJ,eAAiB+4J,KAIhDr9J,EAAKnC,cAAc2f,UAAU,kCAAkC6/I,GAlEjDvtI,EAAApkB,KAAA,iBAAAokB,EAAArkB,KAAA,GAAAqkB,EAAA7C,GAAA6C,EAAA,SAqEhB9vB,EAAKnC,cAAc2f,UAAU,iCAA7BsS,EAAA7C,IArEgB,yBAAA6C,EAAAjjB,SAAA6iB,EAAA50B,KAAA,qEAyEpB4iK,yCAAsB,SAAA19H,IAAA,IAAA3N,EAAAI,EAAAkjD,EAAAxtB,EAAA06G,EAAA52F,EAAAgjD,EAAA6zC,EAAA1pB,EAAA2pB,EAAAngK,EAAA,OAAA2oB,EAAAtwB,EAAAsQ,KAAA,SAAA40B,GAAA,cAAAA,EAAA10B,KAAA00B,EAAAz0B,MAAA,UAEf1L,EAAKsC,MAAM+W,MAASrZ,EAAKjF,MAAMuzB,oBAFhB,CAAA6R,EAAAz0B,KAAA,eAAAy0B,EAAAhkB,OAAA,UAGX,GAHW,cAQdkW,EAAY,GACZI,EAAoB,GACpBkjD,EAAoBvpE,SAASpM,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,IACzDioD,EAAoBnoD,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,oBAEpE9P,EAAKjF,MAAMwuG,6BACb9uG,OAAOoE,KAAKmB,EAAKjF,MAAMwuG,6BAA6BxqG,QAAS,SAAAmzB,GAC3DO,EAAkBP,GAAa,GAC/B,IAAMm5B,EAAarrD,EAAKjF,MAAMwuG,4BAA4Br3E,GAC1Dz3B,OAAOoE,KAAKwsD,GAAYtsD,QAAS,SAAA68B,GAC/B,IAAMnxB,EAAkBzK,EAAKjF,MAAMwuG,4BAA4Br3E,GAAW0J,GAC1EnhC,OAAOoE,KAAK4L,GAAiB1L,QAAS,SAAA+M,GACpC,IAAMtH,EAAciG,EAAgBqB,GAEpC9L,EAAKnC,cAAc2f,UAAU,qCAAqC1R,EAAOtH,EAAYmD,SACrF8qB,EAAkBP,GAAWjqB,KAAKjI,EAAKiiK,uBAAuBn2J,EAAOtH,EAAYmD,QAASnD,EAAY69B,IAAKnQ,IAE3GlyB,EAAKnC,cAAc2f,UAAU,qCAAqChZ,EAAYqoB,KAAK/gB,MAAOtH,EAAYqoB,KAAKllB,SAC3G8qB,EAAkBP,GAAWjqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAYqoB,KAAK/gB,MAAOtH,EAAYqoB,KAAKllB,QAASnD,EAAYqoB,KAAKwV,IAAKnQ,IAEtI1tB,EAAY8C,UAAUvI,QAAtB,eAAAu8B,EAAA7gC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA8B,SAAAmkB,EAAOjzB,EAAEmL,GAAT,OAAA+jB,EAAAtwB,EAAAsQ,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,OAC5B1L,EAAKnC,cAAc2f,UAAU,6BAA6BnhB,EAAEyP,MAAM,YAAYzP,GAC9Eo2B,EAAkBP,GAAWjqB,KAAKjI,EAAKiiK,uBAAuB5lK,EAAEyP,MAAOzP,EAAEsL,QAAStL,EAAEgmC,IAAKnQ,IAF7D,wBAAA1C,EAAA3iB,SAAAyiB,EAAAx0B,SAA9B,gBAAAumC,EAAAC,GAAA,OAAAhG,EAAAvuB,MAAAjS,KAAAkS,YAAA,WAWF61J,EAAwB7iK,EAAKnC,cAAciS,gBAAgB,CAAC,YAAY6lE,MAE5El7E,OAAOoE,KAAKgkK,GAAuB9jK,QAAS,SAAAuZ,GAC1C,IAAMghE,EAAeupF,EAAsBvqJ,GAC3C,GAA6B,OAAzBghE,EAAa3xE,SAAyC,OAArB2xE,EAAaj3C,IAAa,CAC7D,IAAMnQ,EAAYonD,EAAapnD,UAAY9lB,SAASktE,EAAapnD,WAAayjD,EAE9EtjD,EAAUpqB,KAAKjI,EAAKiiK,uBAAuB3pJ,EAAcghE,EAAa3xE,QAAS2xE,EAAaj3C,IAAKnQ,IACjGO,EAAkBkjD,GAAmB1tE,KAAKjI,EAAKiiK,uBAAuB3pJ,EAAcghE,EAAa3xE,QAAS2xE,EAAaj3C,IAAKnQ,QAK5H+5C,EAAYjsE,EAAKnC,cAAciS,gBAAgB,CAAC,gBAEpDrV,OAAOoE,KAAKotE,GAAWltE,QAAS,SAAA+M,GAC9B,IAAMk3B,EAAiBipC,EAAUngE,GAC5Bk3B,EAAepW,SAGpBu7B,EAAkBppD,QAAS,SAAAmzB,GAEzB,IAAMkD,EAAkB4N,EAAe69C,WAAa79C,EAAe69C,UAAU3uD,GAAa8Q,EAAe69C,UAAU3uD,GAAa8Q,EAAer7B,QAC/I3H,EAAKnC,cAAc2f,UAAU,qCAAsC1R,EAAOspB,GACtEhpB,SAAS8lB,KAAe9lB,SAASupE,IACnCtjD,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBn2J,EAAOspB,EAAiB4N,EAAeX,MAEpF5P,EAAkBP,GAAWjqB,KAAKjI,EAAKiiK,uBAAuBn2J,EAAOspB,EAAiB4N,EAAeX,IAAKnQ,QAK5GlyB,EAAKjF,MAAMuzB,qBAEb7zB,OAAOoE,KAAKmB,EAAKjF,MAAMuzB,qBAAqBvvB,QAAS,SAAA68B,GACnD,IAAMnxB,EAAkBzK,EAAKjF,MAAMuzB,oBAAoBsN,GACvDnhC,OAAOoE,KAAK4L,GAAiB1L,QAAS,SAAA+M,GACpC,IAAMtH,EAAciG,EAAgBqB,GAgBpC,GAdA9L,EAAKnC,cAAc2f,UAAU,qCAAqC1R,EAAOtH,EAAYmD,SACrF0qB,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBn2J,EAAOtH,EAAYmD,QAASnD,EAAY69B,MAGnFriC,EAAKnC,cAAc2f,UAAU,qCAAqChZ,EAAYqoB,KAAK/gB,MAAOtH,EAAYqoB,KAAKllB,SAC3G0qB,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAYqoB,KAAK/gB,MAAOtH,EAAYqoB,KAAKllB,QAASnD,EAAYqoB,KAAKwV,MAG9G79B,EAAY8C,UAAUvI,QAAtB,eAAA0wB,EAAAh1B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA8B,SAAAmzB,EAAOjiC,EAAEmL,GAAT,OAAA+jB,EAAAtwB,EAAAsQ,KAAA,SAAAkzB,GAAA,cAAAA,EAAAhzB,KAAAgzB,EAAA/yB,MAAA,OAC5B1L,EAAKnC,cAAc2f,UAAU,6BAA6BnhB,EAAEyP,MAAM,YAAYzP,GAC9Eg2B,EAAUpqB,KAAKjI,EAAKiiK,uBAAuB5lK,EAAEyP,MAAOzP,EAAEsL,QAAStL,EAAEgmC,MAFrC,wBAAA5D,EAAA5xB,SAAAyxB,EAAAxjC,SAA9B,gBAAAsmC,EAAAoB,GAAA,OAAA/S,EAAA1iB,MAAAjS,KAAAkS,YAAA,IAMIxI,EAAYqwB,UAAU,CAExB,GAAIrwB,EAAYqwB,UAAUmrB,YAAY,CACpC,IAAMA,EAAcx7C,EAAYqwB,UAAUmrB,YAC1ChgD,EAAKnC,cAAc2f,UAAU,6BAA6BwiC,EAAY/iD,KAAK,YAAY+iD,GACvF3tB,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBjiH,EAAY/iD,KAAM+iD,EAAYr4C,QAASq4C,EAAY3d,MAWhG,GAPI79B,EAAYqwB,UAAU6xE,cACxBliG,EAAYqwB,UAAU6xE,aAAa3nG,QAAnC,eAAA4wB,EAAAl1B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAA2C,SAAAi0B,EAAO/iC,EAAEmL,GAAT,OAAA+jB,EAAAtwB,EAAAsQ,KAAA,SAAAg0B,GAAA,cAAAA,EAAA9zB,KAAA8zB,EAAA7zB,MAAA,OACzC1L,EAAKnC,cAAc2f,UAAU,6BAA6BnhB,EAAEyP,MAAM,YAAYzP,GAC9Eg2B,EAAUpqB,KAAKjI,EAAKiiK,uBAAuB5lK,EAAEyP,MAAOzP,EAAEsL,QAAStL,EAAEgmC,MAFxB,wBAAA9C,EAAA1yB,SAAAuyB,EAAAtkC,SAA3C,gBAAA+oC,EAAAC,GAAA,OAAAnU,EAAA5iB,MAAAjS,KAAAkS,YAAA,IAMExI,EAAYqwB,UAAUC,kBAAkB,CAC1C,IAAMA,EAAoBtwB,EAAYqwB,UAAUC,kBAChD90B,EAAKnC,cAAc2f,UAAU,6BAA6BsX,EAAkB73B,KAAK,YAAY63B,GAC7FzC,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBntI,EAAkB73B,KAAM63B,EAAkBntB,QAASmtB,EAAkBuN,YAOpH4sF,EAAiBjvH,EAAKnC,cAAciS,gBAAgB,CAAC,aAAa,aACpE9P,EAAKjF,MAAM+8B,mBACbr9B,OAAOoE,KAAKmB,EAAKjF,MAAM+8B,mBAAmB/4B,QAAS,SAAAy5B,GACjD,IAAMk/C,EAAS13E,EAAKjF,MAAM+8B,kBAAkBU,GAC5C/9B,OAAOoE,KAAK64E,GAAQ34E,QAAS,SAAA+M,GAC3B,IAAMtH,EAAckzE,EAAO5rE,GACtBmjH,EAAe9mE,oBAAqB8mE,EAAe9mE,kBAAkBn5B,SAAS2mD,KAC7EnxE,EAAY69B,KACdhQ,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY69B,MAE/FhQ,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY2hE,GAAGlpE,KAAKuH,EAAY2hE,GAAGx+D,QAAQnD,EAAY2hE,GAAG9jC,MACrGhQ,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY4nE,GAAGnvE,KAAKuH,EAAY4nE,GAAGzkE,QAAQnD,EAAY4nE,GAAG/pC,MACrGhQ,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY47B,IAAInjC,KAAKuH,EAAY47B,IAAIz4B,QAAQnD,EAAY47B,IAAIiC,MACxGhQ,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY2hE,GAAGhsC,WAAWl9B,KAAKuH,EAAY2hE,GAAGhsC,WAAWxyB,QAAQnD,EAAY2hE,GAAGhsC,WAAWkI,MACtIhQ,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY4nE,GAAGjyC,WAAWl9B,KAAKuH,EAAY4nE,GAAGjyC,WAAWxyB,QAAQnD,EAAY4nE,GAAGjyC,WAAWkI,OAGpI79B,EAAY69B,KACd5P,EAAkB,GAAGxqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAYsH,MAAMtH,EAAYmD,QAAQnD,EAAY69B,IAAI,IAE9G5P,EAAkB,GAAGxqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY2hE,GAAGlpE,KAAKuH,EAAY2hE,GAAGx+D,QAAQnD,EAAY2hE,GAAG9jC,IAAI,IACpH5P,EAAkB,GAAGxqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY4nE,GAAGnvE,KAAKuH,EAAY4nE,GAAGzkE,QAAQnD,EAAY4nE,GAAG/pC,IAAI,IACpH5P,EAAkB,GAAGxqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY47B,IAAInjC,KAAKuH,EAAY47B,IAAIz4B,QAAQnD,EAAY47B,IAAIiC,IAAI,IACvH5P,EAAkB,GAAGxqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY2hE,GAAGhsC,WAAWl9B,KAAKuH,EAAY2hE,GAAGhsC,WAAWxyB,QAAQnD,EAAY2hE,GAAGhsC,WAAWkI,IAAI,IACrJ5P,EAAkB,GAAGxqB,KAAKjI,EAAKiiK,uBAAuBz9J,EAAY4nE,GAAGjyC,WAAWl9B,KAAKuH,EAAY4nE,GAAGjyC,WAAWxyB,QAAQnD,EAAY4nE,GAAGjyC,WAAWkI,IAAI,QAKrJygI,EAA0B9iK,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,SAAS,sBAC/EspI,EAASp5I,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,oBAC5ErV,OAAOoE,KAAKu6I,GAAQr6I,QAAQ,SAAAkjE,GAC1B,IAAMnpC,EAAcsgH,EAAOn3E,GACvB6gG,EAAwB9zI,SAAS2mD,IACnCtjD,EAAUpqB,KAAKjI,EAAKiiK,uBAAuBnpI,EAAY77B,KAAK67B,EAAYnxB,QAAQmxB,EAAYuJ,MAE9F5P,EAAkB,GAAGxqB,KAAKjI,EAAKiiK,uBAAuBnpI,EAAY77B,KAAK67B,EAAYnxB,QAAQmxB,EAAYuJ,IAAI,MAGvG0gI,EAAetoK,OAAOC,OAAO,GAAGsF,EAAKsC,MAAM+vB,WACjDA,EAAUtzB,QAAS,SAAAu6E,GACjB,GAAIA,EAAa,CACf,IAAM0pF,EAAgBD,EAAa/oJ,KAAM,SAAAsY,GAAC,OAAIA,EAAEr1B,OAAOq8E,EAAar8E,OACpE,GAAK+lK,EAEE,CACL,IAAMC,EAAgBF,EAAajsJ,QAAQksJ,GAC3CD,EAAaE,GAAiB3pF,OAH9BypF,EAAa96J,KAAKqxE,MAUlB12E,EAAW,CACf6vB,oBACAJ,UAAU0wI,EACVn4C,sBAAqB,GA/KHzqF,EAAAhkB,OAAA,SAkLbnc,EAAK8C,SAASF,IAlLD,yBAAAu9B,EAAAtzB,SAAAmzB,EAAAllC,WAqLtBm3B,wDAAoB,SAAA2N,EAAOtnB,GAAP,IAAA8Z,EAAA5tB,EAAA,OAAA+mB,EAAAtwB,EAAAsQ,KAAA,SAAAu0B,GAAA,cAAAA,EAAAr0B,KAAAq0B,EAAAp0B,MAAA,WACd0mB,EAAWpyB,EAAKsC,MAAM+vB,UAAUrY,KAAK,SAAAsY,GAAC,OAAIA,EAAEr1B,OAASqb,OAExCtY,EAAKjF,MAAMyJ,YAHV,CAAAs7B,EAAAp0B,KAAA,eAIVlH,EAAcxE,EAAKjF,MAAMyJ,YAJfs7B,EAAAp0B,KAAA,EAKC1L,EAAKoiC,aAAa9pB,EAAc9T,EAAYmD,QAASnD,EAAY69B,KALlE,OAKhBjQ,EALgB0N,EAAArxB,KAAA,cAAAqxB,EAAA3jB,OAAA,SAQXiW,EAAWA,EAASA,SAAW,MARpB,wBAAA0N,EAAAjzB,SAAA+yB,EAAA9kC,iEAWpByyD,sCAAmB,SAAA7sB,IAAA,IAAAvxB,EAAA,OAAAoc,EAAAtwB,EAAAsQ,KAAA,SAAAy1B,GAAA,cAAAA,EAAAv1B,KAAAu1B,EAAAt1B,MAAA,UACbyD,EAAgB,KAEfnP,EAAKsC,MAAM6M,cAHC,CAAA6xB,EAAAt1B,KAAA,eAAAs1B,EAAAt1B,KAAA,EAKO1L,EAAKnC,cAAc0vD,iBAAiBvtD,EAAKjF,MAAMuJ,eALtD,OAKf6K,EALe6xB,EAAAvyB,KAOfzO,EAAK8C,SAAS,CACZqM,kBARa6xB,EAAAt1B,KAAA,uBAAAs1B,EAAAt1B,KAAA,GAWQ,IAAI8P,QAAJ,eAAA0nJ,EAAAzoK,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAa,SAAA+1B,EAAOtlB,EAASC,GAAhB,OAAA0P,EAAAtwB,EAAAsQ,KAAA,SAAA41B,GAAA,cAAAA,EAAA11B,KAAA01B,EAAAz1B,MAAA,OAClCkQ,EAAQ5b,EAAKsC,MAAM6M,eADe,wBAAAgyB,EAAAt0B,SAAAq0B,EAAApmC,SAAb,gBAAAkpC,EAAAuC,GAAA,OAAA28H,EAAAn2J,MAAAjS,KAAAkS,YAAA,IAXR,QAWfmC,EAXe6xB,EAAAvyB,KAAA,eAAAuyB,EAAA7kB,OAAA,SAgBVhN,GAhBU,yBAAA6xB,EAAAn0B,SAAA6zB,EAAA5lC,WAmBnB0wB,sDAAkB,SAAAiW,EAAO92B,GAAP,IAAAynB,EAAA,OAAA7G,EAAAtwB,EAAAsQ,KAAA,SAAA02B,GAAA,cAAAA,EAAAx2B,KAAAw2B,EAAAv2B,MAAA,cAAAu2B,EAAAv2B,KAAA,EACO1L,EAAKiyB,kBAAkBjyB,EAAKjF,MAAMuJ,eADzC,UACV8tB,EADU6P,EAAAxzB,KAAA,CAAAwzB,EAAAv2B,KAAA,eAId1L,EAAKnC,cAAc8zB,eAAe,sBAAuB3xB,EAAKjF,MAAMuJ,eAJtD29B,EAAA9lB,OAAA,SAKP,MALO,UAQXiW,EAAS6hB,QAAT,UARW,CAAAhS,EAAAv2B,KAAA,eASd1L,EAAK2xB,eAAe,+BATNsQ,EAAA9lB,OAAA,SAUP,MAVO,cAAA8lB,EAAAv2B,KAAA,GAaH0mB,EAAS6hB,QAAQkvH,UAAUx4J,GAASwpC,OAAOkQ,MAAM,SAAArsC,GAC5DhY,EAAKnC,cAAc2f,UAAnB,iBAAA/b,OAA8CzB,EAAKjF,MAAMuJ,cAAzD,YAAkF0T,KAdpE,eAAAiqB,EAAA9lB,OAAA,SAAA8lB,EAAAxzB,MAAA,yBAAAwzB,EAAAp1B,SAAA40B,EAAA3mC,iEAkBlBsoK,2BAA6B,WAE3B,IAAMvkB,EACyB,qBAAtB7+I,EAAKjF,MAAMkpD,QACiC,qBAA5CjkD,EAAKjF,MAAMkpD,OAAO46F,sBACrB7+I,EAAKjF,MAAMkpD,OAAO46F,sBAClB,EAEAue,EACJp9J,EAAKsC,MAAM26J,eAAiBpe,EAE9B7+I,EAAK8C,SAAS,CACZs6J,yBAIJ1qD,gEAA4B,SAAA/vE,EAAO4+H,GAAP,OAAAh2I,EAAAtwB,EAAAsQ,KAAA,SAAAg4B,GAAA,cAAAA,EAAA93B,KAAA83B,EAAA73B,MAAA,OAErB1L,EAAKsC,MAAMqI,UACd3K,EAAKjF,MAAMymK,sBAAsBD,GAEjCvhK,EAAKqjK,uBALmB,wBAAA9/H,EAAA12B,SAAA81B,EAAA7nC,iEAS5BiiB,mBAAqB,WAClB,IAAMmV,EAAyC,qBAAtBlyB,EAAKjF,MAAMkpD,QAAuE,qBAAtCjkD,EAAKjF,MAAMkpD,OAAOtnB,gBAAkC38B,EAAKjF,MAAMkpD,OAAOtnB,gBAAkBz0B,IAAcoR,QAAQqjB,gBAEnL,MAAO,CACLz8B,GAAIgyB,EACJj1B,KAHkBi1B,GAAahqB,IAAcoR,QAAQ6uC,kBAAkBj2B,GAAahqB,IAAcoR,QAAQ6uC,kBAAkBj2B,GAAWj1B,KAAO,cAOlJ4tC,uCAAoB,SAAAtG,IAAA,IAAArS,EAAAqK,EAAA6jH,EAAAkjB,EAAAt2J,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA06B,GAAA,cAAAA,EAAAx6B,KAAAw6B,EAAAv6B,MAAA,UAAOwmB,EAAPoxI,EAAAxkK,OAAA,QAAAmqB,IAAAq6I,EAAA,GAAAA,EAAA,GAAiB,KAC7B/mI,EAAcv8B,EAAKnC,cAAc6+B,iBADrBuJ,EAAAhZ,GAKN7gB,SAAS8lB,GALH+T,EAAAhZ,GAAA,CAAAgZ,EAAAv6B,KAAA,eAAAu6B,EAAAv6B,KAAA,EAKuB6wB,EAAYxgB,IAAI2gD,IAAIC,QAL3C,OAAA12B,EAAAhZ,GAAAgZ,EAAAx3B,KAAA,UAKlByjB,EALkB+T,EAAAhZ,GAAAgZ,EAAAoN,GAMErzC,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,oBAAoBoiB,EAAU,SAN9E+T,EAAAoN,GAAA,CAAApN,EAAAv6B,KAAA,gBAAAu6B,EAAAv6B,KAAA,GAMgG6wB,EAAYxgB,IAAI2gD,IAAI6mG,iBANpH,QAAAt9H,EAAAoN,GAAApN,EAAAx3B,KAAA,eAMZ2xI,EANYn6G,EAAAoN,GAAApN,EAAA9pB,OAAA,SAQX,CACLjc,GAAGgyB,EACHj1B,KAAKmjJ,IAVW,yBAAAn6G,EAAAp5B,SAAA03B,EAAAzpC,WAcrB0oK,kCAAe,SAAAr/H,IAAA,OAAA5Y,EAAAtwB,EAAAsQ,KAAA,SAAA84B,GAAA,cAAAA,EAAA54B,KAAA44B,EAAA34B,MAAA,cAAA24B,EAAA54B,KAAA,EAAA44B,EAAAloB,OAAA,SAEJnc,EAAKsC,MAAM+W,KAAK0C,IAAI2gD,IAAIC,MAAM,SAAC3kD,EAAOka,GAC3C,IAAIK,EAAO93B,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMgX,QAAQiZ,SACtCA,EAAQryB,GAAKgyB,EACb,IAAI5Y,EAAU7e,OAAOC,OAAO,GAAGsF,EAAKsC,MAAMgX,SAC1CA,EAAQiZ,QAAUA,EAClBjZ,EAAQkZ,iBAAmBtqB,IAAcoR,QAAQslI,gBAAgB5vH,SAASkD,GAC1ElyB,EAAK8C,SAAS,CAAEwW,eARP,OAAA+qB,EAAA54B,KAAA,EAAA44B,EAAApX,GAAAoX,EAAA,SAWXrkC,EAAKnC,cAAc2f,UAAU,6BAA7B6mB,EAAApX,IAXW,wBAAAoX,EAAAx3B,SAAAs3B,EAAArpC,KAAA,cAefyiK,kCAAe,SAAA31H,IAAA,IAAA1V,EAAA5Y,EAAAylJ,EAAA0E,EAAA5uC,EAAA6uC,EAAA12J,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA28B,GAAA,cAAAA,EAAAz8B,KAAAy8B,EAAAx8B,MAAA,cAAOwmB,EAAPwxI,EAAA5kK,OAAA,QAAAmqB,IAAAy6I,EAAA,GAAAA,EAAA,GAAiB,MACxBpqJ,EADO7e,OAAAw4B,EAAA,EAAAx4B,CAAA,GACOuF,EAAKsC,MAAMgX,UAEvB6Y,SAAWnyB,EAAK+c,qBAHXmrB,EAAAx8B,KAAA,EAIW1L,EAAK6qC,kBAAkB3Y,GAJlC,cAIb5Y,EAAQiZ,QAJK2V,EAAAz5B,KAMPswJ,IAAuBzlJ,EAAQiZ,QAAQryB,GAC7CoZ,EAAQkZ,kBAAoBusI,GAAsBzlJ,EAAQiZ,QAAQryB,KAAOoZ,EAAQ6Y,SAASjyB,GAC1FoZ,EAAQo8I,oBAAsBp8I,EAAQiZ,QAAQryB,IAAMgI,IAAcoR,QAAQslI,gBAAgB5vH,SAAS1V,EAAQiZ,QAAQryB,IAE7GujK,EAAwBnqJ,EAAQiZ,QAAQryB,IAAMoZ,EAAQiZ,QAAQryB,KAAOF,EAAKsC,MAAMgX,QAAQiZ,QAAQryB,GAChG20H,EAAyBv7G,EAAQ6Y,SAASjyB,IAAMoZ,EAAQ6Y,SAASjyB,KAAOF,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,KAEnFF,EAAKsC,MAAMgX,QAAQiZ,QAAQryB,IAAMujK,GAAyB5uC,IAA2B70H,EAAKsC,MAAMy8J,qBAIrH/+J,EAAK8C,SAAS,CACZwW,UACAylJ,uBAnBS72H,EAAA/rB,OAAA,SAuBN7C,GAvBM,yBAAA4uB,EAAAr7B,SAAA+6B,EAAA9sC,WA0Bfke,gEAA4B,SAAA0tB,EAAOpuB,EAAcqrJ,GAArB,IAAAhrJ,EAAAnT,EAAA3C,EAAA+wD,EAAAb,EAAAsN,EAAA9kD,EAAAqoJ,EAAAj5J,EAAA0nB,EAAAD,EAAAyxI,EAAAhxG,EAAAgB,EAAAx2C,EAAAymJ,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA2B,EAAAl3J,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAAk8B,GAAA,cAAAA,EAAAh8B,KAAAg8B,EAAA/7B,MAAA,UAAqCiN,EAArCurJ,EAAAplK,OAAA,QAAAmqB,IAAAi7I,EAAA,GAAAA,EAAA,GAA8C,GAAI1+J,EAAlD0+J,EAAAplK,OAAA,QAAAmqB,IAAAi7I,EAAA,GAAAA,EAAA,GAA0D,KAAMrhK,EAAhEqhK,EAAAplK,OAAA,QAAAmqB,IAAAi7I,EAAA,GAAAA,EAAA,GAA2E,KAAMtwG,EAAjFswG,EAAAplK,OAAA,QAAAmqB,IAAAi7I,EAAA,GAAAA,EAAA,GAAoG,KAAMnxG,EAA1GmxG,EAAAplK,OAAA,QAAAmqB,IAAAi7I,EAAA,GAAAA,EAAA,GAAqH,KAAM7jG,EAA3H6jG,EAAAplK,OAAA,QAAAmqB,IAAAi7I,EAAA,GAAAA,EAAA,GAAoI,KAEzJlkK,EAAKsC,MAAMgX,QAAQkZ,iBAFE,CAAAiV,EAAA/7B,KAAA,eAIxB1L,EAAKsC,MAAMsyI,OAAO3gG,QAAQ+pH,wBAJFv2H,EAAAtrB,OAAA,UAKjB,GALiB,UASrBnc,EAAKsC,MAAMqI,QATU,CAAA88B,EAAA/7B,KAAA,gBAUxB1L,EAAKqjK,sBACmB,oBAAbxgK,GACTA,EAAS,KAAK,yBAZQ4kC,EAAAtrB,OAAA,UAcjB,GAdiB,YAkBtBnc,EAAKsC,MAAM86J,kBAlBW,CAAA31H,EAAA/7B,KAAA,gBAmBxB1L,EAAK+9J,oBACmB,oBAAbl7J,GACTA,EAAS,KAAK,uBArBQ4kC,EAAAtrB,OAAA,UAuBjB,GAvBiB,YA8BtBZ,EAAcvb,EAAKk/J,kBAAkB7+F,IAC7BhqC,OAASstI,EAErB3jK,EAAKm/J,eAAe5jJ,GAGpBA,EAAYld,KAAO,WACnBkd,EAAYtP,OAAS,UACrBsP,EAAY5C,OAASA,EAGrB3Y,EAAKg5D,kBAAkBz9C,GAzCGqoJ,EA2CK5jK,EAAKsC,MAA5BqI,EA3CkBi5J,EA2ClBj5J,QAAS0nB,EA3CSuxI,EA2CTvxI,UACbD,EAAWC,EAAUrY,KAAK,SAAAsY,GAAC,OAAIA,EAAEr1B,OAASqb,IA5CpB,CAAAmvB,EAAA/7B,KAAA,eA8CA,oBAAb7I,GACTA,EAAS,KAAK,sBA/CQ4kC,EAAAtrB,OAAA,SAiDjBnc,EAAKnC,cAAc2f,UAAnB,yBAAA/b,OAAsD6W,KAjDrC,eAoD1B8Z,EAAWA,EAASA,SAOhByxI,EAA8B,KA3DRp8H,EAAAh8B,KAAA,GA+DnBjG,IACHA,EAAQxF,EAAKnC,cAAckO,MAAM,IAGnC/L,EAAKnC,cAAc2f,UAAU,4BAA4BlF,EAAa8Z,EAASqR,SAAS94B,EAAQg5J,EAAehrJ,EAAQnT,EAAQ,CAAEuB,KAAM4D,EAASnF,SAAU,CAAEuB,KAAM4D,IAnE1I88B,EAAA/7B,KAAA,IAsERmnD,EAAAzgC,EAAS6hB,SAAQ0vH,GAAjB52J,MAAA8lD,EAAAp4D,OAAA4/B,GAAA,EAAA5/B,CAAoCke,IACjD06C,YAAY7tD,EAAQ,CAAEuB,KAAM4D,EAASnF,SAAU,CAAEuB,KAAM4D,IACvD05C,MAAM,SAAAziD,GAAC,OAAIowB,QAAQha,MAAMpW,KAxEJ,eAsEpByb,EAtEoBoqB,EAAAh5B,QA6EtB4O,GADAA,EAAMrd,EAAKnC,cAAckO,MAAMsR,IACrB9Q,KAAK8Q,EAAItV,MAAM/H,EAAKnC,cAAckO,MAAM,SAG9CgnD,GAAY11C,EAAI5Q,GAAGzM,EAAKnC,cAAckO,MAAMgnD,MAC9C11C,EAAMrd,EAAKnC,cAAckO,MAAMgnD,IAIjC11C,EAAMrd,EAAKsC,MAAM+W,KAAKkX,MAAMF,KAAKhT,EAAIsxC,aAAax9B,KAAUy9B,eAGxDk1G,EAAuB,SAAC7vG,EAAoBC,GAI5C2vG,GACF3kJ,OAAOC,aAAa0kJ,GAKtBtoJ,EAAY4oJ,mBAAqB,EAEjC,IAAM1oD,GAAiBvzG,IAAcoR,QAAQolI,UAAgC,oBAAb77I,GAA2D,IAAhC0Y,EAAY4oJ,kBAGjGC,EAAsBpkK,EAAKjF,MAAMkpD,OAAO06F,uBAAyB,EAEjC,IAAlCpjI,EAAY4oJ,kBAEd5oJ,EAAYtP,OAAS,YACZsP,EAAY4oJ,kBAInB5oJ,EAAY4oJ,oBAAsBC,EAGhClwG,EAAQjoD,OACVsP,EAAYtP,OAAS,UACXioD,EAAQjoD,SAClBsP,EAAYtP,OAAS,SAEdsP,EAAY4oJ,kBAKnB1oD,IAEEvnD,IACF34C,EAAYuyB,UAAYomB,GAE1B34C,EAAY8oJ,YAAc,eAC1BrkK,EAAKg5D,kBAAkBz9C,GAEvB1Y,EAAS0Y,GAETvb,EAAKnC,cAAc2f,UAAU,YAAay2C,EAAoBC,EAAS34C,KAIrEwoJ,EAAqB,SAArBA,EAAsBrrJ,EAAgB0hI,GAC1C,IAAK1hI,EACH,OAAO,EAET1Y,EAAKsC,MAAM+W,KAAK0C,IAAI24B,sBAAsBh8B,EAAgB,SAACsD,EAAI8xB,GACzDA,GAAaA,EAAU7hC,QACzBjM,EAAKnC,cAAc2f,UAAU,wBAAyBswB,GACtDg2H,EAAqB,EAAEh2H,IAEvB+1H,EAA8B3kJ,OAAOjB,WAAY,kBAAM8lJ,EAAmBrrJ,EAAgB0hI,IAAWA,MAKrG4pB,EAAkB,SAAA9vG,GAIlB2vG,GACF3kJ,OAAOC,aAAa0kJ,GAIlB3vG,IACF34C,EAAYuyB,UAAYomB,GAE1B34C,EAAY8oJ,YAAc,UAGtBn8J,IAAcoR,QAAQolI,UACxBnjI,EAAYtP,OAAS,UACG,oBAAbpJ,GACTA,EAAS0Y,KAGXvb,EAAKg5D,kBAAkBz9C,GAGnB24C,EAAQjoD,SACV43J,EAA8B3kJ,OAAOjB,WAAY,kBAAM8lJ,EAAmB7vG,EAAQx7C,gBAAgB,MAAO,QAlLvF+uB,EAAAtrB,OAAA,UA0LjB03C,EAAAzhC,EAAS6hB,SAAQ0vH,GAAjB52J,MAAA8mD,EAAAp5D,OAAA4/B,GAAA,EAAA5/B,CAAoCke,IACxCsN,KAAKzgB,EAAQ,CAAEuB,KAAM4D,EAASnF,QAAO6X,OAAoB,CAAEtW,KAAM4D,EAAS0S,QAC1E02C,GAAG,kBAAmB,SAAApxD,GAGrB,GAFA3C,EAAKnC,cAAc2f,UAAU,sBAAuB7a,IAE/CA,EAEH,OADA3C,EAAKnC,cAAc2f,UAAU,yCAA0C7a,IAChE,EAGT4Y,EAAY7C,gBAAkB/V,EAC9B4Y,EAAYtP,OAAS,UACrBsP,EAAY8oJ,YAAc,kBAC1BrkK,EAAKg5D,kBAAkBz9C,GAEnBq4C,GACFA,EAAiBr4C,GAIfvb,EAAKjF,MAAM+B,WACT+mK,GACF3kJ,OAAOC,aAAa0kJ,GAEtBA,EAA8B3kJ,OAAOjB,WAAY,kBAAM8lJ,EAAmBphK,EAAK,MAAQ,QAG1FoxD,GAAG,UAAWiwG,GACdjwG,GAAG,eAAgB+vG,GACnB/vG,GAAG,QAAS,SAAA/7C,GAEXga,QAAQqc,IAAI,WAAWr2B,GAEvB,IAAMisJ,KAAajsJ,IAASA,EAAM8R,SAA6C,oBAA3B9R,EAAM8R,QAAQkF,WAA0BhX,EAAM8R,QAAQkF,SAAS,qCASnH,GANAzT,EAAYtP,OAAS,QACrBsP,EAAY8oJ,YAAc,QAC1BrkK,EAAKg5D,kBAAkBz9C,IAIlB0oJ,EAAW,CACd/kJ,OAAOw1F,cAAcC,WAAW,uBAAwB,CACtDz3G,KAAM,QACN43G,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,iBAGpB,IAAM2tD,EAAUvqJ,aAAiB28C,MAEJ,qBAAlB38C,EAAM8R,QACf9pB,EAAKm+J,0BAA0B,KAAKnmJ,EAAM8R,SACjC9pB,EAAKnC,cAAcipD,kBAAoBy7G,GAChDI,KAAwB3qJ,GAIJ,oBAAbnV,GACTA,EAAS0Y,EAAYvD,MAxPH,eAAAyvB,EAAAh8B,KAAA,GAAAg8B,EAAAxa,GAAAwa,EAAA,UA6PxBzV,QAAQqc,IAAI,iBAAZ5G,EAAAxa,IAEA1R,EAAYtP,OAAS,QACrBjM,EAAKg5D,kBAAkBz9C,GAIvB2D,OAAOw1F,cAAcC,WAAW,4CAA6C,CAC3Ez3G,KAAM,QACN43G,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,+BAGdqvD,KAAax8H,EAAAxa,KAASwa,EAAAxa,GAAMnD,UAAU2d,EAAAxa,GAAMnD,QAAQkF,SAAS,qCAE7DuzI,EAAU96H,EAAAxa,cAAiB0nC,MAC5B30D,EAAKnC,cAAcipD,kBAAoBy7G,IAAY0B,GACtDtB,KAAAl7H,EAAAxa,IAGsB,oBAAbpqB,GAETA,EAAS0Y,EAADksB,EAAAxa,IAtRcwa,EAAAtrB,OAAA,UAyRjB,GAzRiB,yBAAAsrB,EAAA56B,SAAA65B,EAAA5rC,KAAA,wEA8R5BokK,kBAAoB,WAAiB,IAAhB7+F,EAAgBrzD,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KACtBuO,EAAW9gB,OAAAw4B,EAAA,EAAAx4B,CAAA,GACV4lE,GAUL,OARA9kD,EAAYuyB,UAAY,GACxBvyB,EAAY8jC,QAAUlyC,KAAKg5B,MAC3B5qB,EAAY4oJ,kBAAoB,EAChC5oJ,EAAYtP,OAAS,cACrBsP,EAAY+oJ,YAAcn3J,KAAKg5B,MAC/B5qB,EAAYzP,MAAQ9L,EAAKjF,MAAMuJ,cAC/BiX,EAAYqgB,SAAW57B,EAAKjF,MAAMmT,iBAClCqN,EAAY2W,UAAYlyB,EAAKnC,cAAciS,gBAAgB,CAAC,UAAU,oBAC/DyL,KAGT4jJ,eAAiB,SAAA5jJ,GACf,IAAM9e,EAAYhC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAM7F,cACrCA,EAAY,KAAAgF,OAAM8Z,EAAY8jC,UAAa9jC,EAC3Cvb,EAAK8C,SAAS,CAAErG,oBAIlBu8D,kBAAoB,SAAAurG,GAClB,IAAM9nK,EAAYhC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAM7F,cAC/B8e,EAAW9gB,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQ8pK,GAezB,OAdAhpJ,EAAY+oJ,YAAcn3J,KAAKg5B,MAC/B1pC,EAAY,KAAAgF,OAAM8iK,EAAmBllH,UAAa9jC,EAClDvb,EAAK8C,SAAS,CAAErG,iBAIZ8e,EAAY7C,kBAEd1Y,EAAKnC,cAAc03E,kBAGnBv1E,EAAKnC,cAAc27C,qBAAnB,KAAA/3C,OAA6C8Z,EAAY8jC,SAAU9jC,IAG9DA,KAITggJ,qBAAuB,SAAA35J,GACJ,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKs2J,uBAAwB,EAEpCx7J,EAAK8C,SAAS,CAAE8xI,cAGlByuB,oBAAsB,SAAAzhK,GACH,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKs2J,uBAAwB,EACpCx7J,EAAK8C,SAAS,CAAE8xI,OAAQA,OAG1B+mB,4BAA8B,SAAA/5J,GACX,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK02J,0BAA2B,EACvC57J,EAAK8C,SAAS,CAAE8xI,cAGlBwpB,2BAA6B,SAAAx8J,GACV,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK02J,0BAA2B,EACvChnB,EAAO1vI,KAAK44J,kCAAmC,EAC/ClpB,EAAO1vI,KAAKs2J,uBAAwB,EAEpCx7J,EAAK8C,SAAS,CAAE8xI,cAGlB6nB,2BAA6B,SAAA76J,GACV,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKy3J,kBAAmB,EAC/B38J,EAAK8C,SAAS,CAAE8xI,cAGlBupB,0BAA4B,SAACv8J,EAAEoW,GACZ,qBAANpW,GAAqBA,GAC9BA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKy3J,iBAAmB3kJ,EAE/BhY,EAAK8C,SAAS,CAAE8xI,cAGlBynB,0BAA4B,SAAAz6J,GAM1B,GALiB,qBAANA,GACTA,EAAEuH,kBAICnJ,EAAKsC,MAAMsyI,OAAO1vI,KAAKq3J,gBAC1B,OAAO,EAGT,IAAI3nB,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKq3J,iBAAkB,EAC9Bv8J,EAAK8C,SAAS,CAAE8xI,cAGlBspB,yBAA2B,SAACt8J,EAAEoW,GACX,qBAANpW,GAAqBA,GAC9BA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAGjB,oBAAR58H,IACFA,EAAQ,mCAGNhY,EAAKsC,MAAMsyI,OAAO1vI,KAAKq3J,kBAAoBvkJ,IAE7C48H,EAAO1vI,KAAKq3J,gBAAkBvkJ,EAC9BhY,EAAK8C,SAAS,CAAE8xI,eAIpBknB,iCAAmC,SAAAl6J,GAChB,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK62J,qBAAsB,EAClC/7J,EAAK8C,SAAS,CAAE8xI,cAGlBypB,gCAAkC,SAAAz8J,GACf,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK62J,qBAAsB,EAClC/7J,EAAK8C,SAAS,CAAE8xI,cAGlBimB,wBAA0B,SAAAj5J,GACP,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK41J,0BAA2B,EACvC96J,EAAK8C,SAAS,CAAE8xI,cAGlBqpB,uBAAyB,SAAAr8J,GACN,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK41J,0BAA2B,EACvC96J,EAAK8C,SAAS,CAAE8xI,cAGlBomB,mBAAqB,SAAAp5J,GACF,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK+1J,qBAAsB,EAClCj7J,EAAK8C,SAAS,CAAE8xI,cAGlB4vB,kBAAoB,SAAA5iK,GACD,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAK+1J,qBAAsB,EAClCj7J,EAAK8C,SAAS,CAAE8xI,cAGlBumB,uBAAyB,SAAAv5J,GACN,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKk2J,yBAA0B,EACtCp7J,EAAK8C,SAAS,CAAE8xI,cAGlBopB,sBAAwB,SAAAp8J,GACL,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKk2J,yBAA0B,EACtCp7J,EAAK8C,SAAS,CAAE8xI,cAGlBqnB,mBAAqB,SAAAr6J,GACF,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKg3J,qBAAsB,EAClCl8J,EAAK8C,SAAS,CAAE8xI,cAGlBmpB,kBAAoB,SAAAn8J,GACD,qBAANA,GACTA,EAAEuH,iBAGJ,IAAIyrI,EAAMn6I,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQuF,EAAKsC,MAAMsyI,QAC7BA,EAAO1vI,KAAKg3J,qBAAsB,EAClCl8J,EAAK8C,SAAS,CAAE8xI,cAGlBtyI,MAAQ,CACN+W,KAAM,KACNg+I,QAAQ,KACR1sJ,QAAS,KACT0nB,UAAW,GACXwtH,SAAU,KACVt2F,SAAU,KACVnb,WAAW,KACX2yH,cAAc,EACdtkK,aAAc,GACdugK,cAAc,GACdyH,YAAa,KACb1H,aAAa,KACb5tJ,cAAc,KACd6gC,eAAgB,KAChBitH,eAAgB,KAChBxqI,kBAAmB,GACnB06H,iBAAkB,KAClBsO,iBAAkB,KAClBgE,kBAAiB,EACjBtC,kBAAkB,KAClBuH,kBAAmB,KACnBxH,SAAUl9J,EAAKk9J,SACfE,kBAAmB,KACnB2B,oBAAmB,EACnBjqC,oBAAmB,EACnBz9D,qBAAqB,KACrBstG,uBAAuB,GACvB/5C,sBAAqB,EACrBwvC,YAAap6J,EAAKo6J,YAClBqD,yBAA0B,KAC1Bh0G,aAAczpD,EAAKypD,aACnBrnB,aAAcpiC,EAAKoiC,aACnBk7H,eAAgBt9J,EAAKs9J,eACrBhC,gBAAiBt7J,EAAKs7J,gBACtBkC,iBAAkBx9J,EAAKw9J,iBACvBjwG,iBAAkBvtD,EAAKutD,iBACvB0nD,kBAAmBj1G,EAAKi1G,kBACxByoD,oBAAqB19J,EAAK09J,oBAC1BC,qBAAsB39J,EAAK29J,qBAC3B3kJ,0BAA2BhZ,EAAKgZ,0BAChC05F,0BAA2B1yG,EAAK0yG,0BAChCkrD,yBAA0B59J,EAAKjF,MAAM6iK,yBACrCtkJ,QAAS,CACPiZ,QAAS,GACTJ,SAAU,GACVK,iBAAkB,KAClB+qI,aAAcv9J,EAAKu9J,cAErB3oB,OAAQ,CACN1vI,KAAM,CACJq3J,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBqC,uBAAwB,KACxBzC,wBAAyB,KACzBQ,yBAA0B,KAC1B6B,yBAA0B,KAC1BK,iCAAkC,KAClC7C,oBAAqBj7J,EAAKi7J,oBAC1BH,yBAA0B96J,EAAK86J,0BAEjC7mH,QAAS,CACP8pH,kBAAmB/9J,EAAK+9J,kBACxByG,kBAAmBxkK,EAAKwkK,kBACxBxJ,mBAAoBh7J,EAAKg7J,mBACzBiB,mBAAoBj8J,EAAKi8J,mBACzBoH,oBAAqBrjK,EAAKqjK,oBAC1B9H,qBAAsBv7J,EAAKu7J,qBAC3ByC,sBAAuBh+J,EAAKg+J,sBAC5B7C,uBAAwBn7J,EAAKm7J,uBAC7B8C,uBAAwBj+J,EAAKi+J,uBAC7BpD,wBAAyB76J,EAAK66J,wBAC9BqD,yBAA0Bl+J,EAAKk+J,yBAC/B7B,0BAA2Br8J,EAAKq8J,0BAChC8B,0BAA2Bn+J,EAAKm+J,0BAChC1B,2BAA4Bz8J,EAAKy8J,2BACjC2B,2BAA4Bp+J,EAAKo+J,2BACjCzC,4BAA6B37J,EAAK27J,4BAClC2C,gCAAiCt+J,EAAKs+J,gCACtCD,gCAAiCr+J,EAAKq+J,gCACtCE,iCAAkCv+J,EAAKu+J,iCACvCzC,iCAAkC97J,EAAK87J,mCAG3CvgJ,YAAa,CACXrW,KAAM,CACJzI,aAAc,MAEhB+hK,KAAM,GACNvqH,QAAS,gFAvzDX,IAAMl5C,EAAQN,OAAOC,OAAO,GAAGI,KAAKC,OACpCA,EAAMse,KAAOve,KAAKwH,MAAM+W,KACxBte,EAAM4P,QAAU7P,KAAKwH,MAAMqI,QAC3B5P,EAAMs3B,UAAYv3B,KAAKwH,MAAM+vB,UACzBv3B,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAS/C,GAE5BD,KAAK+C,cAAgB,IAAIE,KAAchD,kDAKzCD,KAAKyH,oBAAqB,yKAI1BzH,KAAKkD,qBACClD,KAAKyiK,sBAGPr+I,OAAOsd,UACTtd,OAAOsd,SAASu3B,GAAG,iBAAnB,eAAAtzB,EAAAhmC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAAqC,SAAAy9B,EAAO1W,GAAP,OAAA3G,EAAAtwB,EAAAsQ,KAAA,SAAAs9B,GAAA,cAAAA,EAAAp9B,KAAAo9B,EAAAn9B,MAAA,OACnCzN,EAAK2gK,qBAAqB1sI,GADS,wBAAA2W,EAAAh8B,SAAA+7B,EAAA9tC,SAArC,gBAAA2tC,GAAA,OAAAhI,EAAA1zB,MAAAjS,KAAAkS,YAAA,IAMFkS,OAAOg+I,SAAWpiK,KAAKoiK,SACvBh+I,OAAOk7I,YAAct/J,KAAKs/J,+IAgyD1B,IAAMwK,EAA+E,kBAA3C9pK,KAAKwH,MAAMsyI,OAAO1vI,KAAKq3J,iBAAgCzhK,KAAKwH,MAAMsyI,OAAO1vI,KAAKq3J,gBAAgBz9J,OAAO,EACzI+lK,EAAiF,kBAA5C/pK,KAAKwH,MAAMsyI,OAAO1vI,KAAKy3J,kBAAiC7hK,KAAKwH,MAAMsyI,OAAO1vI,KAAKy3J,iBAAiB79J,OAAO,EAClJ,OACEwyG,EAAAr2G,EAAAC,cAAA,WACEo2G,EAAAr2G,EAAAC,cAAC2hK,GAAyBiI,SAA1BrqK,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEyK,MAAO1K,KAAKwH,SAEdgvG,EAAAr2G,EAAAC,cAAC6pK,GAADtqK,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE65I,OAAQ95I,KAAKwH,MAAMsyI,OACnBt7H,QAASxe,KAAKwH,MAAMgX,QACpB3O,QAAS7P,KAAKwH,MAAMqI,QACpB7N,SAAUhC,KAAKC,MAAM+B,SACrBs9J,YAAat/J,KAAKwH,MAAM83J,YACxB7C,aAAcz8J,KAAKC,MAAMw8J,aACzB+D,gBAAiBxgK,KAAKwH,MAAMg5J,gBAC5BG,iBAAkB3gK,KAAKwH,MAAMm5J,iBAC7BG,yBAA0B9gK,KAAKwH,MAAMs5J,yBACrC6B,yBAA0B3iK,KAAKwH,MAAMm7J,4BAEvCnsD,EAAAr2G,EAAAC,cAAC8pK,GAAD,CACEpwB,OAAQ95I,KAAKwH,MAAMsyI,OACnBjqI,QAAS7P,KAAKwH,MAAMqI,QACpB0sJ,QAASv8J,KAAKC,MAAMs8J,QACpB3+C,OAAQmsD,IAEVvzD,EAAAr2G,EAAAC,cAAC+pK,GAAD,CACErwB,OAAQ95I,KAAKwH,MAAMsyI,OACnBjqI,QAAS7P,KAAKwH,MAAMqI,QACpB0sJ,QAASv8J,KAAKC,MAAMs8J,QACpB3+C,OAAQksD,EACRrN,aAAcz8J,KAAKC,MAAMw8J,eAE3BjmD,EAAAr2G,EAAAC,cAACgqK,GAAD,CACE7rJ,KAAMve,KAAKwH,MAAM+W,KACjB9c,MAAOzB,KAAKC,MAAMwB,MAClB+c,QAASxe,KAAKwH,MAAMgX,QACpBo/I,eAAgB59J,KAAKC,MAAM29J,yBA32DL1/C,IAAMr7G,WAAhCghK,GACGwG,SAAWtI,GAAyBsI,SAi3D9BxG,4BC3xDA9lD,8MAvLbv2G,MAAQ,KAKRzE,cAAgB,gFAEV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,4JAK9CD,KAAKkD,kQAKLlD,KAAKkD,iMAGkByE,EAAWC,sEAElC5H,KAAKkD,aAEDlD,KAAKC,MAAMue,SAAYxe,KAAKC,MAAMue,QAAQkZ,2DACrC,yIAIF,IAAAv0B,EAAAnD,KAEHsqK,EAAU,kBACVC,EAAa,CAAC,OAAO,QACLvqK,KAAK+C,cAAc8oD,mBAErC0+G,EAAa,CAAC,OAAO,QACrBD,EAAU,6BAEZ,IAAME,EAAoBxqK,KAAK+C,cAAciS,gBAAgB,CAAC,aAAa,YAE3E,OACEwhG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEpwG,MAAO,CACLkG,KAAM,IACNF,MAAO,IACPwB,OAAQ,GACRD,SAAU,aAGZ4oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1G,EAAG,EACHR,WAAY,SACZE,eAAgB,SAChBP,gBAAiB,YACjBM,cAAe,CAAC,SAAS,QAEzBw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,QACPuG,UAAW,UAFb,oEAMA2tG,EAAAr2G,EAAAC,cAACuiH,GAAA,EAAD,CACEgS,GAAI,EACJ90H,GAAI,EACJ+I,GAAI,CAAC,EAAE,GACPlD,GAAI,CAAC,EAAE,GACPU,GAAI,OACJ9D,MAAO,QACP+D,MAAO,CACLoC,QAAQ,OACRjH,aAAa,MACbR,cAAc,MACdD,WAAW,YAEbL,gBAAiB,UACjBklB,KAAM,2HAdR,gBAiBE4wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJrD,KAAM,QACNC,MAAO,QACPH,KAAM,yBAKZq0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEl1F,GAAI,CAAC,EAAE,GACP3gB,GAAI,OACJytB,GAAI,cACJvuB,MAAO,CAAC,MAAM,QACdwG,SAAU,CAAC,OAAO,SAClBvF,WAAY,CAAC,SAAS,eAEtBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,CAAC,EAAG,GACR5F,MAAO,CAAC,GAAK,MAEb02G,EAAAr2G,EAAAC,cAACw+J,GAAA,EAAD,CACElmI,GAAG,KAEH89E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE30G,IAAKwoK,EACL18J,SAAU,WACV7L,OAAQwoK,MAId/zD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,CAAC,GAAI,EAAE,IACdiB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEke,GAAI,CAAC,EAAE,GACP5zH,WAAY,SACZC,cAAe,OAGbwpK,GACEh0D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,QACPqD,WAAY,QACZuF,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrBjD,QAAU,SAACkB,GAAD,OAAOsd,OAAOmV,SAAS1xB,KAAK,iBANxC,eAYD7H,KAAKC,MAAM+B,UACVw0G,EAAAr2G,EAAAC,cAAAo2G,EAAAr2G,EAAAu2G,SAAA,KACEF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE71G,GAAI,EACJ8B,SAAU,EACVJ,MAAO,QACPqD,WAAY,QACZuF,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrBjD,QAAS,SAACkB,GAAO3D,EAAKJ,cAAc01B,SAAS9K,SAASC,eAAe,YAAY68I,UAAU,OAP7F,cAWAj0D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVJ,MAAO,QACPqD,WAAY,QACZuF,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrBjD,QAAS,SAACkB,GAAO3D,EAAKJ,cAAc01B,SAAS9K,SAASC,eAAe,OAAO68I,UAAU,OANxF,oBAxJCvsD,IAAMr7G,qBCPZ,SAAS6nK,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACRzmJ,OAAOqU,SAAS,EAAG,IAClB,CAACkyI,IAEG,+BCwCMG,8MAxCbtjK,MAAQ,2EAGN,OACEgvG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAWC,KAAO7W,gBAAiB7E,GAAI,CAAC,EAAE,GAAIwhB,GAAI,CAAC,MAAO,QAC7Di1F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAWC,KAAO5W,iBACvB2xG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK7oG,SAAU,WAAYC,OAAQ,IACjC2oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,SAAUD,WAAY,SAAUuF,SAAU,CAAC,OAAQ,QAAS1F,GAAI,OAAQiI,UAAW,SAAU0Y,GAAI,CAAC,MAAO,QAC5Hi1F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQy+C,GAAT,CAAYhqJ,WAAY,YAAaqsG,WAAY,QAASzpG,GAAI,QAASpL,SAAU,CAAC,QAAQ,GAAImG,UAAW,SAAUvG,MAAO,SAA1H,4BAGAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAY5iH,WAAY,YAAaqsG,WAAY,QAASzpG,GAAI,QAASrL,WAAY,EAAGC,SAAU,CAAC,QAAQ,GAAImG,UAAW,SAAUvG,MAAO,SAAzI,wDAGAk0G,EAAAr2G,EAAAC,cAACw+J,GAAA,EAAD,CAAYlmI,GAAG,IAAIryB,MAAO,CAAC68H,eAAe,SACxC1sB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEj7F,UAAWuvJ,KAAct8I,eACzBjtB,aAAc,EACda,MAAMrC,KAAKC,MAAM+B,SAAW,UAC5BiF,UAAW,OACXgjH,cAAe,QACfxnH,WAAY,EACZC,SAAU,CAAC,EAAE,GACb9B,GAAI,OACJb,GAAI,CAAC,EAAE,GACP6I,GAAI,GAVN,sBAkBR4tG,EAAAr2G,EAAAC,cAAC69G,EAAA,EAAD,cAnCmBp7G,aCyCZmoK,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAIhmK,EAAKjF,MAAMue,QACb,OAAQtZ,EAAKjF,MAAMue,QAAQpZ,IACzB,KAAK,EACH8lK,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpB3pK,aAAc,MACdd,gBAAiBV,KAAKirK,wBACtBlpK,OAAQ,MACRjC,MAAO,OAGT,OACE02G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKpwG,MAAO8kK,EAAe9pK,GAAI,IAC/Bm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMpwG,MAAO,CAAE48G,cAAe,eAC3BjjH,KAAKC,MAAMue,QAAQrc,cAxCA+7G,IAAMr7G,WCW9BuoK,GAAkB,SAAAnrK,GAAK,OAC3Bu2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAK7tG,GAAI,EAAG8iH,UAAW,EAAGx/G,YAAY,UAAUqV,GAAI,GAClDi1F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQ/nG,GAAT,CAAY7F,UAAW,UAAvB,cACA2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wG,QAAS3F,EAAM65I,OAAO3gG,QAAQ+pH,sBAC9B7gK,KAAK,QACLhB,GAAI,EACJyM,GAAI,GAJN,0BASA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wG,QAAS3F,EAAM65I,OAAO3gG,QAAQovH,oBAC9BlmK,KAAK,QACLhB,GAAI,EACJyM,GAAI,GAJN,cAQA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAK,QACLuD,QAAS3F,EAAM65I,OAAO3gG,QAAQmqH,2BAC9BjiK,GAAI,EACJyM,GAAI,GAJN,sBAQA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAK,QACLuD,QAAS3F,EAAM65I,OAAO3gG,QAAQoqH,gCAC9BliK,GAAI,EACJyM,GAAI,GAJN,uBAQA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAK,QACLuD,QAAS,SAAA63H,GACPx9H,EAAM65I,OAAO3gG,QAAQ8pH,kBAAkBxlC,IAEzCp8H,GAAI,EACJyM,GAAI,GANN,aAUA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAK,QACLuD,QAAS3F,EAAM65I,OAAO3gG,QAAQgqH,uBAC9B9hK,GAAI,EACJyM,GAAI,GAJN,oBAQA0oG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAK,QACLuD,QAAS3F,EAAM65I,OAAO3gG,QAAQuwH,kBAC9BroK,GAAI,EACJyM,GAAI,GAJN,eAuOWu9J,oLA1NX,OACE70D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,QAASc,GAAI,OAAQb,GAAI,GACpCy2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYjlH,UAAW,UAAvB,iBAEA2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQG,MAAO,QAASjB,GAAI,IACvCm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,wCAIJD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UACff,KAAKC,MAAMse,KACVi4F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQG,MAAO,QAASjB,GAAI,IAEvCm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQG,MAAO,MAAOjB,GAAI,IAEvCm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,kCAGAz2G,KAAKC,MAAMse,KAgBT,KAfFi4F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,EAAG3E,WAAY,SAAUE,eAAgB,iBACjDu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,OAAOd,GAAI,EAAGiB,MAAM,SAC/Bk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAM,QAAZ,8BAGFk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7wF,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpB6wF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgB/4J,KAAK,SAArB,6BAQPrC,KAAKC,MAAMse,KACVi4F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE52G,GAAI,EACJiB,GAAI,EACJ4qH,UAAW,EACXnE,aAAc,EACdr7G,YAAa,UACbrD,UAAW,SACX5H,eAAgB,eAChBF,WAAY,UAEZy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp0G,KAAK,QACLuD,QAAS5F,KAAKC,MAAM23G,0BACpB1wG,UAAWlH,KAAKC,MAAMse,MAHxB,sBAOAi4F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,eACAD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAQp0G,KAAK,QAAQ6E,UAAQ,GAA7B,6BAIA,KAEJsvG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UACff,KAAKC,MAAMue,QAAQkZ,iBAClB8+E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQG,MAAO,QAASjB,GAAI,IAEvCm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQG,MAAO,MAAOjB,GAAI,IAEvCm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,yBAGDz2G,KAAKC,MAAMse,OAASve,KAAKC,MAAMue,QAAQkZ,iBACtC8+E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,EAAG3E,WAAY,SAAUE,eAAgB,iBACjDu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,OAAOd,GAAI,EAAGiB,MAAM,SAC/Bk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJiB,MAAM,OACN+D,MAAO,CAAE48G,cAAe,eAH1B,oBAOAzM,EAAAr2G,EAAAC,cAACkrK,GAAD,CAAiB9sJ,QAASxe,KAAKC,MAAMue,QAAQiZ,WAE/C++E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEp1G,GAAI,EACJiB,MAAM,OACN+D,MAAO,CAAE48G,cAAe,eAH1B,qBAOAzM,EAAAr2G,EAAAC,cAACkrK,GAAD,CAAiB9sJ,QAASxe,KAAKC,MAAMue,QAAQ6Y,cAKnDm/E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgB/4J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMwiK,cAAjD,kBAIA,KACHziK,KAAKC,MAAMse,MAAQve,KAAKC,MAAMy3B,iBAC7B8+E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,EAAG3E,WAAY,UACvBy1G,EAAAr2G,EAAAC,cAACkrK,GAAD,CAAiB9sJ,QAASxe,KAAKC,MAAMue,QAAQiZ,WAE7C,MAGN++E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UACff,KAAKC,MAAM4P,SAAW7P,KAAKC,MAAM0gK,iBAChCnqD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQG,MAAO,QAASjB,GAAI,IAEvCm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQG,MAAO,MAAOjB,GAAI,IAEvCm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,uCAGAz2G,KAAKC,MAAM4P,UACb7P,KAAKC,MAAMse,MACVve,KAAKC,MAAMghK,oBAWR,KAVFzqD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,EAAG3E,WAAY,SAAUE,eAAgB,iBACjDu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,OAAOd,GAAI,EAAGiB,MAAM,SAC/Bk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAM,QAAZ,gCAGFk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgB/4J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMq/J,aAAjD,YAKHt/J,KAAKC,MAAM4P,SAAW7P,KAAKC,MAAMse,KAChCi4F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,EAAG3E,WAAY,UACvBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQG,MAAO,QAASjB,GAAI,IACvCm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAM,QAAZ,oBAAqCtC,KAAKC,MAAM4P,SAChD2mG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAOtC,KAAKC,MAAMqiK,kBAAoB,MAAQ,QAApD,mBACmBtiK,KAAKC,MAAMkiK,kBAIhC,KAEHniK,KAAKC,MAAMghK,oBACVzqD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,EAAGzE,eAAgB,iBAC3Bu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQd,GAAI,EAAGiB,MAAM,QAChCk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAM,OAAZ,kCAGFk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgB/4J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMq/J,aAAjD,YAIA,KAE8B,OAAhCt/J,KAAKC,MAAM0gK,mBACqB,IAAhC3gK,KAAKC,MAAM0gK,mBACb3gK,KAAKC,MAAMse,KAgBP,KAfFi4F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJ5E,GAAI,EACJC,WAAY,SACZE,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,OAAOd,GAAI,EAAGiB,MAAM,SAC/Bk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAM,QAAZ,yBAGFk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgB/4J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMugK,iBAAjD,cAM6B,IAAhCxgK,KAAKC,MAAM0gK,iBACVnqD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/wG,GAAI,EACJ5E,GAAI,EACJC,WAAY,SACZE,eAAgB,iBAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQd,GAAI,EAAGiB,MAAM,QAChCk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAM,OAAZ,yBAGFk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAO2kD,QAAR,CAAgB/4J,KAAK,QAAQuD,QAAS5F,KAAKC,MAAMugK,iBAAjD,aAIA,MAEmC,IAAtCxgK,KAAKC,MAAM8iK,uBACVvsD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM/wG,GAAI,GACR8wG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMt0G,KAAK,QAAQd,GAAI,EAAGiB,MAAM,QAChCk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAM,OAAZ,yBAEA,MAGNk0G,EAAAr2G,EAAAC,cAACmrK,GAAoBvrK,KAAKC,OAE1Bu2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAauzD,SAAd,CAAuB72C,IAAK,SAAAq4C,GAAI,OAAKpnJ,OAAOw1F,cAAgB4xD,aAtNzCttD,IAAMr7G,+BC/BhB4oK,GAhDgB,CAC7BxrJ,YAAa,CACX+O,QAAS,+BACT8qF,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACT93G,KAAM,eAERspK,QAAS,CACP18I,QAAS,6BACT8qF,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACT93G,KAAM,eAER2pB,QAAS,CACPiD,QAAS,iCACT8qF,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACT93G,KAAM,eAERupK,UAAW,CACT38I,QAAS,wBACT8qF,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACT93G,KAAM,eAERmqB,QAAS,CACPyC,QAAS,6BACTkrF,QAAS,UACT93G,KAAM,eAER8a,MAAO,CACL8R,QAAS,0BACT8qF,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACT93G,KAAM,UCoJGwpK,8MA1LbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACPnsK,OAAOoE,KAAK+nK,GAAgB9nK,SAC1BrE,OAAOoE,KAAKgoK,GAAmB/nK,UAKrCgoK,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAYtsK,OAAOoE,KAAKgoK,GAAmBj7J,OAAO,SAAAjK,GACtD,OAAQlH,OAAOoE,KAAK+nK,GAAgB53I,SAASrtB,KAE/C,OAAOklK,EAAkBE,GAEzB,OAAOtsK,OAAOoE,KAAKgoK,GAAmBjmK,IAAI,SAAAe,GACxC,OAAOklK,EAAkBllK,QAM/BqlK,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2BpsK,OAAOoE,KAAK+nK,GACpChmK,IAAI,SAAAe,GACH,OACEilK,EAAejlK,GAAK2iK,cAAgBuC,EAAkBllK,GAAK2iK,YAEpDuC,EAAkBllK,GAElB,OAGViK,OAAO,SAAAq7J,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAA3lK,OAAM0lK,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAIh7J,EAAK,KACLy7J,EAAY,GACZC,EAAS,GAEb,GAAIvnK,EAAK2mK,uBAAuBC,EAAgBC,GAC9Ch7J,EAAK7L,EAAK8mK,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAYtnK,EAAKgnK,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAASvnK,EAAKknK,6BACZI,EAAUjoH,QACVunH,GAMAU,EAAUr7J,SAAWs7J,EAAOt7J,SAC9BJ,EAAKy7J,GAGT,OAAOz7J,KAIT27J,0BAA4B,SAAA/kK,GAC1B,IAAIoJ,EAAK,KACLpR,OAAOoE,KAAKmB,EAAKjF,MAAM0B,cAAcqC,SACvC+M,EAAK7L,EAAKqnK,sBACR5kK,EAAUhG,aACVuD,EAAKjF,MAAM0B,eAIXoP,GACF7L,EAAKynK,qBAAqB57J,MAI9B47J,qBAAuB,SAAAlsJ,GAGrB,IAAImsJ,EAAY1nK,EAAK2nK,wBAAwBpsJ,GAC7CmsJ,EAAU7yD,WAAa70G,EAAKjF,MAAMyP,UAClCk9J,EAAUE,WAAY,EAItB1oJ,OAAOw1F,cAAcC,WAAW,IAAK+yD,MAGvCC,wBAA0B,SAAApsJ,GACxB,IAAIssJ,EAAuB,GAG3B,OAFatsJ,EAAYtP,QAGvB,IAAK,cACH47J,EAAuBtB,GAAyBxrJ,YAChD,MACF,IAAK,UACH8sJ,EAAuBtB,GAAyBC,QAChD,MACF,IAAK,UACHqB,EAAuBtB,GAAyB1/I,QAChD,MACF,IAAK,YACHghJ,EAAuBtB,GAAyBE,UAChD,MACF,IAAK,UACHoB,EAAuBtB,GAAyBl/I,QAChD,MACF,IAAK,QACHwgJ,EAAuBtB,GAAyBvuJ,MAOpD,IAAI8vJ,EAAoB,GACxB,OAAQvsJ,EAAY8a,QAClB,IAAK,kBACHyxI,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoBvsJ,EAAY8a,OAAO0xI,OAAO,GAAGh4J,cAAgBwL,EAAY8a,OAAOxW,OAAO,GAM/F,IAAImoJ,GAFJH,EAAuB39J,KAAK0U,MAAM1U,KAAKC,UAAU09J,KAEX/9I,QAAQ6I,QAAQ,WAAWm1I,GAMjE,OALAE,EAAaA,EAAWD,OAAO,GAAGh4J,cAAgBi4J,EAAW9zJ,MAAM,GACnE2zJ,EAAqB/9I,QAAUk+I,EAC/BH,EAAqBD,WAAY,EACjCC,EAAqBhzD,WAAa70G,EAAKjF,MAAMyP,UAEtCq9J,qFAGUplK,EAAWC,GAC5B5H,KAAK0sK,0BAA0B/kK,oCAI/B,OACE6uG,EAAAr2G,EAAAC,cAAA,WACEo2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAauzD,SAAd,CAAuB72C,IAAK,SAAAq4C,GAAI,OAAKpnJ,OAAOw1F,cAAgB4xD,aAtLjCttD,IAAMr7G,WCsBnCsqK,GAAUjvD,IAAMkvD,KAAK,kBAAMlnJ,EAAApf,EAAA,GAAAgtH,KAAA5tG,EAAAvH,KAAA,cAC3B0uJ,GAAYnvD,IAAMkvD,KAAK,kBAAM1sJ,QAAAqD,IAAA,CAAAmC,EAAApf,EAAA,GAAAof,EAAApf,EAAA,GAAAof,EAAApf,EAAA,GAAAof,EAAApf,EAAA,KAAAgtH,KAAA5tG,EAAAvH,KAAA,cAC7B2uJ,GAAapvD,IAAMkvD,KAAK,kBAAM1sJ,QAAAqD,IAAA,CAAAmC,EAAApf,EAAA,GAAAof,EAAApf,EAAA,GAAAof,EAAApf,EAAA,KAAAgtH,KAAA5tG,EAAAvH,KAAA,cAmnCrB4uJ,8MAhnCb/lK,MAAQ,CACNgX,QAAS,KACTc,WAAY,GACZ45F,SAAU,KACVs0D,WAAY,KACZC,YAAa,IACb5vF,MAAO,UACPnuE,UAAW,QACXg+J,YAAY,EACZhkK,YAAa,KACbikK,aAAc,KACdxnH,cAAe,KACfm8D,cAAe,KACf94G,cAAe,KACfokK,cAAensK,IACfm8J,eAAgB,KAChBlB,eAAgB,KAChB/sJ,gBAAiB,KACjBk+J,gBAAgB,EAChBtkD,iBAAkB,KAClBn2G,iBAAkB,KAClB06J,kBAAmB,KACnBrH,mBAAoB,KACpB3mK,MAAOskB,OAAO2pJ,WACdv6I,oBAAqB,KACrBzxB,OAAQqiB,OAAO4pJ,YACf7kH,OAAO/7C,IAAcoR,QACrByvJ,uBAAwB,KACxBnL,0BAA0B,EAC1Br0D,4BAA6B,QAI/B1rG,cAAgB,OAUhBmrK,kBAAoB,SAACpnK,GACfA,GACFA,EAAEuH,iBAEJnJ,EAAK8C,SAAS,CACZ8lK,kBAAmB,UAIvBK,iBAAmB,SAACluK,GAClBiF,EAAK8C,SAAS,CACZ8lK,kBAAmB7tK,OAIvBmuK,mBAAqB,SAACnuK,EAAO0H,OAyB7B8yE,qCAAkB,SAAAr6D,IAAA,IAAArY,EAAA2yE,EAAAG,EAAAv7D,EAAA+uJ,EAAAC,EAAAp8J,UAAA,OAAAue,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,UAAO7I,EAAPumK,EAAAtqK,OAAA,QAAAmqB,IAAAmgJ,EAAA,GAAAA,EAAA,GAAkB,KAAM5zF,EAAxB4zF,EAAAtqK,OAAA,QAAAmqB,IAAAmgJ,EAAA,IAAAA,EAAA,GAEXppK,EAAKsC,MAAMgX,QAFA,CAAA8B,EAAA1P,KAAA,eAAA0P,EAAAe,OAAA,UAGP,GAHO,cAMVw5D,EAAoB31E,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,IAEhDka,EARU3f,OAAAw4B,EAAA,EAAAx4B,CAAA,GAQQuF,EAAKsC,MAAM8X,aACpBu7D,IACbl7E,OAAOoE,KAAKub,EAAWu7D,IAAoB52E,QAAQ,SAAA4C,GAErB,OADfyY,EAAWu7D,GAAmBh0E,GAClCk0E,uBACAz7D,EAAWu7D,GAAmBh0E,MAKrCwnK,EAAmB3zF,EAAY,GAAKx1E,EAAKnC,cAAcg8C,cAAc,gBACnDsvH,EAAiBxzF,IACvCl7E,OAAOoE,KAAKsqK,EAAiBxzF,IAAoB52E,QAAS,SAAA4C,GAEtB,OADfwnK,EAAiBxzF,GAAmBh0E,GACxCk0E,uBACNszF,EAAiBxzF,GAAmBh0E,KAKjD3B,EAAKnC,cAAckhB,gBAAgB,aAAcoqJ,GAAkB,GA5BnD/tJ,EAAA1P,KAAA,GA8BV1L,EAAK8C,SAAS,CAClBsX,cACC,WACuB,oBAAbvX,GACTA,MAlCY,eAAAuY,EAAAe,OAAA,UAsCT,GAtCS,yBAAAf,EAAAvO,SAAAqO,EAAApgB,WAyClBuf,cAAgB,SAAC1Y,EAAKuD,GAA8C,IAAxCiyB,EAAwCnqB,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAlC,KAAM0oE,EAA4B1oE,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,IAAAA,UAAA,GAElE,IAAKhN,EAAKsC,MAAMgX,QACd,OAAO,EAGT3X,EAAMA,EAAIiG,cACV,IAAMisB,EAAcznB,SAASe,KAAKg5B,MAAM,KAClCwvC,EAAoB31E,EAAKsC,MAAMgX,QAAQ6Y,SAASjyB,GAChDmpK,EAAiBrpK,EAAKsC,MAAM8X,WAAWu7D,GAAqB31E,EAAKsC,MAAM8X,WAAWu7D,GAAmBh0E,GAAO,KAE9GwnK,EAAmBnpK,EAAKnC,cAAcg8C,cAAc,cAAa,EAAK,IACpEyvH,EAAiBH,EAAiBxzF,GAAqBwzF,EAAiBxzF,GAAmBh0E,GAAO,KAElG4nK,EAAoB7zF,KAAqB4zF,GAAsD,OAAlCA,EAAezzF,gBAA2ByzF,EAAezzF,gBAAkBhiD,GAAgB3pB,KAAKC,UAAUm/J,EAAepkK,QAAUgF,KAAKC,UAAUjF,IAGjNklB,GAAS,EAEb,IAJoBi/I,GAAsD,OAAlCA,EAAexzF,gBAA2BwzF,EAAexzF,gBAAkBhiD,GAAgB3pB,KAAKC,UAAUk/J,EAAenkK,QAAUgF,KAAKC,UAAUjF,IAAUqkK,EAIpL,CACd,IAAM1zF,EAAiB1+C,EAAMtD,EAAesD,EAAO,KAG/Cu+C,IACGyzF,KACHA,EAAmB,IACFxzF,GAAqB,IAKxCwzF,EAAgB1uK,OAAAw4B,EAAA,EAAAx4B,CAAA,GACX0uK,EADW1uK,OAAAyzI,EAAA,EAAAzzI,CAAA,GAEbk7E,EAFal7E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAGT0uK,EAAiBxzF,GAHRl7E,OAAAyzI,EAAA,EAAAzzI,CAAA,GAIXkH,EAAM,CACLuD,OACA2wE,sBAKN71E,EAAKnC,cAAckhB,gBAAgB,aAAaoqJ,GAAiB,IAInEnpK,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B0X,WAAW3f,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiI,EAAU0X,WADL3f,OAAAyzI,EAAA,EAAAzzI,CAAA,GAEPk7E,EAFOl7E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAGHiI,EAAU0X,WAAWu7D,GAHlBl7E,OAAAyzI,EAAA,EAAAzzI,CAAA,GAILkH,EAAM,CACLuD,OACA2wE,wBAIJ,WACF32D,OAAO9E,WAAapa,EAAKsC,MAAM8X,aAGjCgQ,GAAS,EAGX,OAAOA,KAGTo3I,sBAAwB,SAACD,GACvBvhK,EAAK8C,SAAS,CACZy+J,0BAIJvgH,iBAAmB,SAACC,GAEdA,IAAkBA,EAAcr5C,cAAcknC,MAAM,gBACtDmS,EAAgB,MAGdA,IAAkBjhD,EAAKsC,MAAM2+C,eAC/BjhD,EAAK8C,SAAS,CACZm+C,gBACA28G,0BAA0B,OAgUhCt1I,uBAAyB,WACvB,IAAM1lB,EAAW,CACfhI,MAAOoF,EAAKsC,MAAM1H,MAClBiC,OAAQmD,EAAKsC,MAAMzF,QAGf2sK,EAAetqJ,OAAO2pJ,aAAe7oK,EAAKsC,MAAM1H,MAChD6uK,EAAgBvqJ,OAAO4pJ,cAAgB9oK,EAAKsC,MAAMzF,OAExD,OAAI2sK,GAAgBC,GACdD,IACF5mK,EAAShI,MAAQskB,OAAO2pJ,YAEtBY,IACF7mK,EAAS/F,OAASqiB,OAAO4pJ,aAEpB9oK,EAAK8C,SAASF,IAGhB,iFA9fH9H,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,KAAcjD,KAAKC,iFA6KhC6G,EAAG8nK,4FACV5uK,KAAKgI,SAAS,SAAAR,GAAK,OAAA7H,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAU6H,EAAV,CAAiBimK,YAAamB,gSAIlD9mK,EAAW,GACX0rB,EAAsB,GACtBi7E,EAA8B,GAC9B5sE,EAAkB7hC,KAAKwH,MAAMgX,SAAWxe,KAAKwH,MAAMgX,QAAQkZ,iBAAoB13B,KAAKwH,MAAMgX,QAAQiZ,QAAQryB,IAAMpF,KAAKwH,MAAMgX,QAAQ6Y,SAASjyB,GAAMpF,KAAKwH,MAAM2hD,OAAOtnB,gBAK1KliC,OAAOoE,KAAK4L,MAAiBmB,OAAQ,SAAAsmB,GAAS,OAAIj0B,EAAKJ,cAAciS,gBAAgB,CAAC,UAAU,oBAAoBkf,SAAS5iB,SAAS8lB,MAAcnzB,QAAS,SAAAmzB,GAC3Jq3E,EAA4Br3E,GAAa,GACzCz3B,OAAOoE,KAAK4L,KAAgBynB,IAAYnzB,QAAQ,SAAC68B,GAE/C2tE,EAA4Br3E,GAAW0J,GAAYnhC,OAAOoE,KAAK4L,KAAgBynB,GAAW0J,IAAW4D,OAAO,SAACp1B,EAAe0B,GAC1H,IAAMtH,EAAciG,KAAgBynB,GAAW0J,GAAU9vB,GACnD69J,GAAcnlK,EAAYo1I,cAAgBp1I,EAAYo1I,YAAY96I,QAAU0F,EAAYo1I,YAAY5qH,SAAS/wB,EAAKqE,MAAMgmK,YAI9H,OAHI9jK,EAAYooB,SAAW+8I,IACzBv/J,EAAc0B,GAAStH,GAElB4F,GACN,IAECgC,SAAS8lB,KAAe9lB,SAASuwB,KACnCrO,EAAoBsN,GAAY2tE,EAA4Br3E,GAAW0J,QAK7Eh5B,EAAS0rB,oBAAsBA,EAC/B1rB,EAAS2mG,4BAA8BA,GAKjCr7F,EAAmBpT,KAAKwH,MAAM4L,mBACZogB,EAAoBpgB,KAC1CtL,EAAS6H,gBAAkB6jB,EAAoBpgB,IAGzC5J,EAAgBxJ,KAAKwH,MAAMgC,gBACZ1B,EAAS6H,gBAAgBnG,KAC5C1B,EAAS4B,YAAc5B,EAAS6H,gBAAgBnG,eAM9CxJ,KAAKgI,SAASF,uLAGCsL,EAAkB5J,uGAAc+/G,iCAAiB,KAEhExhH,EAAW,WACfsC,EAAKykK,uBAIDhnK,EAAW,CACf4B,YAAcF,EAAuBxJ,KAAKwH,MAAMkC,YAAlB,KAC9BiG,gBAAkBnG,EAAuBxJ,KAAKwH,MAAMmI,gBAAlB,KAClCnG,cAAgBA,EAAgCxJ,KAAKwH,MAAMgC,cAA3BA,EAChC4J,iBAAmBA,EAAsCpT,KAAKwH,MAAM4L,iBAA9BA,GAIpCA,GAAoBpT,KAAKwH,MAAMgsB,qBAAuBpgB,IAAqBpT,KAAKwH,MAAM4L,kBAAoBzT,OAAOoE,KAAK/D,KAAKwH,MAAMgsB,qBAAqBU,SAAS9gB,EAAiBtG,eAClLhF,EAASsL,iBAAmBA,EAAiBtG,cAEpB,aAAnBsG,GAA+BA,IAAmBpT,KAAKwH,MAAM4L,mBAEnEtL,EAASsL,iBAAmBA,EAAiBtG,eAI1CtD,GAAiBA,IAAkBxJ,KAAKwH,MAAMgC,gBAEzB,aAAnB4J,EAGE4pB,MAAqBr9B,OAAOoE,KAAKi5B,KAAkBusF,IAAmBr1F,SAAS1qB,KAChF1B,EAAS0B,cAAgBA,EACzB1B,EAAS6H,gBAAkBqtB,KAC3Bl1B,EAASyhH,iBAAmBA,EAC5BzhH,EAAS4B,YAAcszB,KAAkBusF,GAAkB//G,IAGxDxJ,KAAKwH,MAAMmI,iBAAmBhQ,OAAOoE,KAAK/D,KAAKwH,MAAMmI,iBAAiBukB,SAAS1qB,EAAcyL,gBACpGnN,EAAS0B,cAAgBA,EAAcyL,cACvCnN,EAAS4B,YAAc1J,KAAKwH,MAAMmI,gBAAgBnG,IAE3CxJ,KAAKwH,MAAMgsB,qBAAuB7zB,OAAOoE,KAAK/D,KAAKwH,MAAMgsB,oBAAoBpgB,IAAmB8gB,SAAS1qB,EAAcyL,iBAC9HnN,EAAS0B,cAAgBA,EAAcyL,cACvCnN,EAAS4B,YAAc1J,KAAKwH,MAAMgsB,oBAAoBpgB,GAAkBtL,EAAS0B,eACjF1B,EAAS6H,gBAAkB3P,KAAKwH,MAAMgsB,oBAAoBpgB,cAMxDpT,KAAKgI,SAASF,EAAUC,2LAIP85B,wFAAgBktI,kCACvCltI,EAAkBvwB,SAASuwB,IACvBz0B,IAAcoR,QAAQslI,gBAAgB5vH,SAAS2N,0BACjD7hC,KAAK+C,cAAckhB,gBAAgB,kBAAkB4d,IAEjDktI,GAAqB/uK,KAAKwH,MAAMo2J,gBAAgD,YAA9B59J,KAAKwH,MAAMo2J,iBAC/D59J,KAAK+C,cAAcy4B,iBAAiBqG,YAEzB7hC,KAAKgI,SAAS,SAAAJ,GAAS,MAAK,CACvCuhD,OAAOxpD,OAAAw4B,EAAA,EAAAx4B,CAAA,GACFiI,EAAUuhD,OADT,CAEJtnB,8OAMUzuB,mFAEVrL,EAAW,WACf+0G,EAAKgyD,uBAEP53I,QAAQqc,IAAI,aAAavzC,KAAKwH,MAAMgsB,sBAEhCpgB,GAAoBA,IAAqBpT,KAAKwH,MAAM4L,mBAAqBzT,OAAOoE,KAAK/D,KAAKwH,MAAMgsB,qBAAqBU,SAAS9gB,EAAiBtG,gBAAmC,aAAnBsG,yBACjKA,EAAmBA,EAAiBtG,uBAC9B9M,KAAKgI,SAAS,CAClBoL,oBACCrL,oCACOqL,oCACJpT,KAAKgI,SAAS,CAClBoL,oBACCrL,gLAIQyB,qFAEPzB,EAAW,WACfw9G,EAAKupD,wBAGHtlK,GAAiBA,IAAkBxJ,KAAKwH,MAAMgC,gBAAiB7J,OAAOoE,KAAK/D,KAAKwH,MAAMmI,iBAAiBukB,SAAS1qB,EAAcyL,sCAChIzL,EAAgBA,EAAcyL,eACxBnN,EAAW,CACf0B,kBAEOE,YAAc1J,KAAKwH,MAAMmI,gBAAgBnG,YAC5CxJ,KAAKgI,SAASF,EAAUC,oCACpByB,oCACJxJ,KAAKgI,SAAS,CAClBwB,gBACAE,YAAa,MACZ3B,oQAML/H,KAAKkD,YAELkhB,OAAOnT,MAAQjR,KAAK+C,cAAckO,MAGbmT,OAAOmV,SAAS2K,OAAOp3B,cAAconB,SAAS9mB,IAAcs+C,QAAQ5+C,iBAEvFsX,OAAO8S,QAAQha,MAAQ,aACvBkH,OAAO8S,QAAQ83I,KAAO,cAGxB5qJ,OAAO6qJ,OAASA,IAEZ7qJ,OAAOR,cACT5jB,KAAK+C,cAAc0xD,iBAAiB,YAGhC/kD,EAAY1P,KAAK+C,cAAcg8C,cAAc,aAAa,KAE9D/+C,KAAKkvK,aAAax/J,IAGdmyB,EAAkB7hC,KAAK+C,cAAcg8C,cAAc,mBAAkB,KAEzE/+C,KAAKuuI,mBAAmB1sG,GAG1Bzd,OAAO+qJ,YAAc,SAACC,GAEpB,IADA,IAAMC,EAAU1hJ,SAAS2hJ,qBAAqB,UACrC5iK,EAAI,EAAGA,EAAI2iK,EAAQrrK,OAAQ0I,IAAK,CACvC,IAAM6iK,EAASF,EAAQ3iK,GACnB6iK,EAAOC,gBAAkBJ,GAC3BhrJ,OAAO6qJ,OAAOM,GAAQE,QAAQ,qBAAqB,GAAG/c,WAK5DtuI,OAAOmJ,iBAAiB,SAAUvtB,KAAKwtB,wBAEvCxtB,KAAK0vK,yBACL1vK,KAAK2vK,6RAICnC,EAAaxtK,KAAK+C,cAAc4oD,wBACtC3rD,KAAKgI,SAAS,CACZwlK,cADF7tK,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAAtwB,EAAAkQ,KAEG,SAAAsjB,IAAA,OAAAlD,EAAAtwB,EAAAsQ,KAAA,SAAAwjB,GAAA,cAAAA,EAAAtjB,KAAAsjB,EAAArjB,MAAA,OAQD40G,EAAKspD,sBARJ,wBAAA76I,EAAAliB,SAAA4hB,EAAA3zB,wJAaH,IAAKA,KAAKwH,MAAM2+C,eAES,WADAnmD,KAAK+C,cAAcsrD,kBAAkB,UAC3B,CAC/B,IAAMlI,EAAgBnmD,KAAK+C,cAAckjD,mBACrCE,GAAiBA,IAAkBnmD,KAAKwH,MAAM2+C,eAChDnmD,KAAKgI,SAAS,CACZm+C,kEAQR/hC,OAAOqJ,oBAAoB,SAAUztB,KAAKwtB,qEAGxB,IAAA04F,EAAAlmH,KAEZ6/D,EAAU7/D,KAAK+C,cAAcg8C,cAAc,WAAW,GAE5D,GAD6B8gB,IAAYzyD,IAAcyyD,QAC7B,CACxB3oC,QAAQqc,IAAR,+BAAA5sC,OAA2Ck5D,EAA3C,QAAAl5D,OAAyDyG,IAAcyyD,UACvE,IAAM+vG,EAAgB5vK,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,aAElEhV,KAAKy6E,gBAAgB,WAEnByrC,EAAKnjH,cAAc2xD,gBAAgB,CAAC,iBAAkB,gBAAiB,YAAa,oBACpFwxD,EAAKnjH,cAAckhB,gBAAgB,UAAW7W,IAAcyyD,UAC3D+vG,GAGL14I,QAAQqc,IAAR,mBAAA5sC,OAA+ByG,IAAcyyD,qDAG5Bl4D,EAAWC,GAI5B,GAHA5H,KAAKkD,YAEyB0E,EAAUg2J,iBAAmB59J,KAAKwH,MAAMo2J,eAEpE,GAAkC,YAA9B59J,KAAKwH,MAAMo2J,eACb59J,KAAKkvK,aAAa,SAAS,OACtB,CAEL,IAAMx/J,EAAY1P,KAAK+C,cAAcg8C,cAAc,aAAa,IAAU/+C,KAAK+C,cAAciS,gBAAgB,CAAC,YAAa,QAAS,SACpIhV,KAAKkvK,aAAax/J,IAIM9H,EAAU4W,SAAWxe,KAAKwH,MAAMgX,SAE1Dxe,KAAK6vK,qBAGP,IAAMC,EAAeloK,EAAU4B,gBAAkBxJ,KAAKwH,MAAMgC,cACtDumK,EAAkBnoK,EAAUwL,mBAAqBpT,KAAKwH,MAAM4L,iBAC5D48J,EAAiB5gK,KAAKC,UAAUzH,EAAU4W,WAAapP,KAAKC,UAAUrP,KAAKwH,MAAMgX,UAEnFsxJ,GAAgBC,GAAmBC,IACrChwK,KAAK8uK,kEAcP,GAHA1qJ,OAAO+pJ,iBAAmBnuK,KAAKmuK,iBAC/B/pJ,OAAO8pJ,kBAAoBluK,KAAKkuK,kBAE5BtqJ,aAAc,CAChB,IAAI0+F,EAAgB1+F,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChG64I,EAAiB94I,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAGlFO,OAAOmV,SAAS3T,KAAKsO,SAAS,mBAEjDouF,EAAgB,aAChBo6C,EAAiB,UAInB18J,KAAKy8J,aAAan6C,EAAeo6C,sCA0B3B7+E,GACR,OAAO79E,KAAKgI,SAAS,CAAE61E,gDAGX/2E,GAIZ,OAHIA,GACFA,EAAEuH,iBAEGrO,KAAKgI,SAAS,CACnBkxG,SAAU,KACV20D,gBAAgB,yCAIP/mK,EAAGoyG,GAGd,OAFApyG,EAAEuH,iBAEKrO,KAAKgI,SAAS,CACnBkxG,WACA20D,gBAAgB,wJAMlB7tK,KAAKgI,SAAS,CACZm+C,cAAe,OAGjBnmD,KAAKy6E,gBAAgB,WAEnBmsC,EAAK7jH,cAAc2xD,gBAAgB,CAAC,UAAW,YAAa,YAAa,aAAa,2JAI/El2C,GACTxe,KAAKgI,SAAS,CACZwW,UACAgV,oBAAoB,4CAIX8uF,EAAeo6C,GAAgB,IAAA31C,EAAA/mH,KAEtCu9J,EAAgBnwJ,IAAcmqI,WAAWj1B,EAAcx1G,eAO3D,IANKywJ,GAAiBb,IACpBa,EAAgBnwJ,IAAcmqI,WAAWmlB,EAAe5vJ,gBAKrDywJ,IAAkBA,EAAczrI,SAA+B,aAAlBwwF,IAAiC3iH,OAAOoE,KAAKqJ,IAAcmqI,YAAYrjH,SAASouF,EAAcx1G,gBAAoB4vJ,IAAmB/8J,OAAOoE,KAAKqJ,IAAcmqI,YAAYrjH,SAASwoI,EAAe5vJ,eACnPw1G,EAAgB,SAChBo6C,EAAiB,cACZ,GAAsB,aAAlBp6C,EAA8B,CACvC,IAAM2tD,EAAc5U,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQe,GACN,IAAK,YACEuT,GAAetU,IAClBe,EAAiB,UAEnB,MACF,IAAK,UACEf,GAAasU,IAChBvT,EAAiB,aAWzB,OAHA18J,KAAK+C,cAAckhB,gBAAgB,gBAAiBq+F,GACpDtiH,KAAK+C,cAAckhB,gBAAgB,iBAAkBy4I,GAE9C18J,KAAKgI,SAAS,CACnBs6G,gBACAo6C,kBACC,WACD31C,EAAK4oD,2DAIIjgK,GAAyB,IAAdwgK,IAAch+J,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,KAAAA,UAAA,GAChC07J,EAAgB,KAGdt3B,EAAkBt2I,KAAK+C,cAAciS,gBAAgB,CAAC,YAAa,QAAS,oBAKlF,OAJkB,SAAdtF,GAAyB4mI,IAC3B5mI,EAAY,SAGNA,GACN,QACA,IAAK,QACHk+J,EAAgBnsK,IAChB,MACF,IAAK,OACHmsK,EAAgBuC,EAIhBD,GACFlwK,KAAK+C,cAAckhB,gBAAgB,YAAavU,GAGlD1P,KAAKgI,SAAS,CACZ0H,YACAk+J,4DAIchQ,GAChB59J,KAAKgI,SAAS,CACZ41J,oDAIK,IAAAwS,EAAApwK,KACDgC,EAAWhC,KAAKwH,MAAM1H,OAAS,IAC/B0qK,EAAoBxqK,KAAK+C,cAAciS,gBAAgB,CAAC,aAAc,YAItEq7J,EACJ75D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPouB,UAAW,QACXntB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBP,gBAAiB,YAEjB81G,EAAAr2G,EAAAC,cAACknH,GAAA,EAAD,CACE3kH,UAAW,CACTuyH,SAAU,EACVzyH,WAAY,GAEd4iB,YAAa,CACXvX,GAAI,EACJzL,KAAM,OACNC,MAAO,WAETwB,UAAW,CACThD,GAAI,EACJE,cAAe,UAEjB4B,KAAM,MAKZ,OACE4zG,EAAAr2G,EAAAC,cAACw+J,GAAA,EAAD,KACEpoD,EAAAr2G,EAAAC,cAACsqK,GAAD,MACAl0D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEh1G,MAAOzB,KAAKwH,MAAMomK,eAElBp3D,EAAAr2G,EAAAC,cAACkwK,EAAAnwK,EAAD,CACEowK,QAAS5uI,IACT41G,WAAYA,GACZi5B,YAAa,WAEbh6D,EAAAr2G,EAAAC,cAACqwK,EAAA,aAAD,CACEC,yBAAyB,EACzBC,yBAAyB,GAExB,SAAApU,GAEC,OACE/lD,EAAAr2G,EAAAC,cAACwwK,GAAD,CACErU,QAASA,EACTv6J,SAAUA,EACVu1I,WAAYA,GACZpuF,OAAQinH,EAAK5oK,MAAM2hD,OACnB1nD,MAAO2uK,EAAK5oK,MAAMomK,cAClBtuJ,WAAY8wJ,EAAK5oK,MAAM8X,WACvB5V,YAAa0mK,EAAK5oK,MAAMkC,YACxBszB,kBAAmBA,KACnB4nI,WAAYwL,EAAKxL,WAAWjmJ,KAAKyxJ,GACjCjqH,cAAeiqH,EAAK5oK,MAAM2+C,cAC1B38C,cAAe4mK,EAAK5oK,MAAMgC,cAC1B84G,cAAe8tD,EAAK5oK,MAAM86G,cAC1Bs7C,eAAgBwS,EAAK5oK,MAAMo2J,eAC3BlB,eAAgB0T,EAAK5oK,MAAMk1J,eAC3BD,aAAc2T,EAAK3T,aAAa99I,KAAKyxJ,GACrCzgK,gBAAiBygK,EAAK5oK,MAAMmI,gBAC5B4P,cAAe6wJ,EAAK7wJ,cAAcZ,KAAKyxJ,GACvC31F,gBAAiB21F,EAAK31F,gBAAgB97D,KAAKyxJ,GAC3C3J,mBAAoB2J,EAAK5oK,MAAMi/J,mBAC/BjzI,oBAAqB48I,EAAK5oK,MAAMgsB,oBAChCkzI,sBAAuB0J,EAAK1J,sBAAsB/nJ,KAAKyxJ,GACvDtN,yBAA0BsN,EAAK5oK,MAAMs7J,yBACrCr0D,4BAA6B2hE,EAAK5oK,MAAMinG,6BAExC+H,EAAAr2G,EAAAC,cAACwwK,GAAWvG,SAAZ,KACG,SAAA1pJ,GA0CK,IAzCJpC,EAyCIoC,EAzCJpC,KACAu7H,EAwCIn5H,EAxCJm5H,OACAt7H,EAuCImC,EAvCJnC,QACA3O,EAsCI8Q,EAtCJ9Q,QACAuyJ,EAqCIzhJ,EArCJyhJ,SACA3zG,EAoCI9tC,EApCJ8tC,SACAs2F,EAmCIpkI,EAnCJokI,SACAxtH,EAkCI5W,EAlCJ4W,UACA+b,EAiCI3yB,EAjCJ2yB,WACAqF,EAgCIh4B,EAhCJg4B,YACAl4B,EA+BIE,EA/BJF,YACA6+I,EA8BI3+I,EA9BJ2+I,YACAh4H,EA6BI3mB,EA7BJ2mB,aACAm7H,EA4BI9hJ,EA5BJ8hJ,aACA9gK,EA2BIgf,EA3BJhf,aACAgtD,EA0BIhuC,EA1BJguC,aACAszG,EAyBIthJ,EAzBJshJ,aAEA/sH,GAuBIv0B,EAxBJtM,cAwBIsM,EAvBJu0B,gBACAitH,EAsBIxhJ,EAtBJwhJ,eAEA3B,GAoBI7/I,EArBJkwJ,eAqBIlwJ,EApBJ6/I,iBACAkC,EAmBI/hJ,EAnBJ+hJ,iBACA/B,EAkBIhgJ,EAlBJggJ,iBACAluG,EAiBI9xC,EAjBJ8xC,iBACA0nD,EAgBIx5F,EAhBJw5F,kBACAxiF,EAeIhX,EAfJgX,kBACA2qI,EAcI3hJ,EAdJ2hJ,kBACA2B,EAaItjJ,EAbJsjJ,mBACAjqC,EAYIr5G,EAZJq5G,mBACAuoC,EAWI5hJ,EAXJ4hJ,oBACAtB,EAUItgJ,EAVJsgJ,oBACA2B,EASIjiJ,EATJiiJ,oBACArmG,EAQI57C,EARJ47C,qBACAsmG,EAOIliJ,EAPJkiJ,qBACA/yC,EAMInvG,EANJmvG,qBACAizC,EAKIpiJ,EALJoiJ,uBACAJ,EAIIhiJ,EAJJgiJ,yBACA/qD,EAGIj3F,EAHJi3F,0BACA15F,EAEIyC,EAFJzC,0BACA4yJ,EACInwJ,EADJmwJ,2BAEA,OACEt6D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,KACED,EAAAr2G,EAAAC,cAAC2wK,GAAA,EAAD,KACEv6D,EAAAr2G,EAAAC,cAAC2wK,GAAA,EAAD,CACElrK,KAAK,kDACLy0G,OACE,SAACr6G,GAAD,OACEu2G,EAAAr2G,EAAAC,cAAC4wK,EAAA,SAAD,CACEC,SAAUZ,GAEV75D,EAAAr2G,EAAAC,cAACitK,GAAD1tK,OAAAC,OAAA,GACMK,EADN,CAEEse,KAAMA,EACNu7H,OAAQA,EACRt7H,QAASA,EACT+9I,QAASA,EACT1sJ,QAASA,EACTqM,aAAa,EACbkmJ,SAAUA,EACVrd,SAAUA,EACV/iJ,SAAUA,EACVysD,SAAUA,EACVl3B,UAAWA,EACX+b,WAAYA,EACZqF,YAAaA,EACb2mH,YAAaA,EACb2C,aAAcA,EACdtzG,aAAcA,EACdrnB,aAAcA,EACd3lC,aAAcA,EACdu3G,SAAUk3D,EAAK5oK,MAAM0xG,SACrBk9C,OAAQga,EAAKha,OAAOz3I,KAAKyxJ,GACzBl7H,eAAgBA,EAChBitH,eAAgBA,EAChBzyJ,UAAW0gK,EAAK5oK,MAAMkI,UACtBjO,MAAO2uK,EAAK5oK,MAAMomK,cAClBpN,gBAAiBA,EACjBgN,WAAY4C,EAAK5oK,MAAMgmK,WACvBE,WAAY0C,EAAK5oK,MAAMkmK,WACvBpuJ,WAAY8wJ,EAAK5oK,MAAM8X,WACvB4xJ,SAAUd,EAAKc,SAASvyJ,KAAKyxJ,GAC7BzP,iBAAkBA,EAClBluG,iBAAkBA,EAClBiwG,iBAAkBA,EAClBh5J,YAAa0mK,EAAK5oK,MAAMkC,YACxBiuB,kBAAmBA,EACnBqF,kBAAmBA,KACnBm9E,kBAAmBA,EACnBmoD,kBAAmBA,EACnBtoC,mBAAoBA,EACpBiqC,mBAAoBA,EACpBz6J,cAAe4mK,EAAK5oK,MAAMgC,cAC1B84G,cAAe8tD,EAAK5oK,MAAM86G,cAC1B6uD,YAAaf,EAAKe,YAAYxyJ,KAAKyxJ,GACnCnP,oBAAqBA,EACrBsB,oBAAqBA,EACrBK,oBAAqBA,EACrBlG,eAAgB0T,EAAK5oK,MAAMk1J,eAC3BmR,eAAgBuC,EAAK5oK,MAAMqmK,eAC3BtxG,qBAAsBA,EACtBuzD,qBAAsBA,EACtBshD,aAAchB,EAAKgB,aAAazyJ,KAAKyxJ,GACrCvN,qBAAsBA,EACtBwO,gBAAiBjB,EAAKkB,UAAU3yJ,KAAKyxJ,GACrC3T,aAAc2T,EAAK3T,aAAa99I,KAAKyxJ,GACrClB,aAAckB,EAAKlB,aAAavwJ,KAAKyxJ,GACrCzgK,gBAAiBygK,EAAK5oK,MAAMmI,gBAC5B4hK,cAAenB,EAAKmB,cAAc5yJ,KAAKyxJ,GACvC7wJ,cAAe6wJ,EAAK7wJ,cAAcZ,KAAKyxJ,GACvCh9J,iBAAkBg9J,EAAK5oK,MAAM4L,iBAC7Bm2G,iBAAkB6mD,EAAK5oK,MAAM+hH,iBAC7Bw5C,uBAAwBA,EACxBtoF,gBAAiB21F,EAAK31F,gBAAgB97D,KAAKyxJ,GAC3CjlC,iBAAkBilC,EAAKjlC,iBAAiBxsH,KAAKyxJ,GAC7CzN,yBAA0BA,EAC1BnvI,oBAAqB48I,EAAK5oK,MAAMgsB,oBAChC+qI,kBAAmB6R,EAAK7R,kBAAkB5/I,KAAKyxJ,GAC/Cx4D,0BAA2BA,EAC3B15F,0BAA2BA,EAC3BqwH,mBAAoB6hC,EAAK7hC,mBAAmB5vH,KAAKyxJ,GACjDU,2BAA4BA,EAC5BpK,sBAAuB0J,EAAK1J,sBAAsB/nJ,KAAKyxJ,GACvD3hE,4BAA6B2hE,EAAK5oK,MAAMinG,mCAQhD+7D,GACEh0D,EAAAr2G,EAAAC,cAAC2wK,GAAA,EAAD,CACElrK,KAAK,kCACLy0G,OACE,SAACr6G,GAAD,OACEu2G,EAAAr2G,EAAAC,cAAC4wK,EAAA,SAAD,CACEC,SAAUZ,GAEV75D,EAAAr2G,EAAAC,cAACktK,GAAD3tK,OAAAC,OAAA,GACMK,EADN,CAEEse,KAAMA,EACNu7H,OAAQA,EACRt7H,QAASA,EACT+9I,QAASA,EACT1sJ,QAASA,EACTuyJ,SAAUA,EACVrd,SAAUA,EACV/iJ,SAAUA,EACVysD,SAAUA,EACV+iH,cAAc,EACdj6I,UAAWA,EACX+b,WAAYA,EACZqF,YAAaA,EACb2mH,YAAaA,EACb3wG,aAAcA,EACdrnB,aAAcA,EACdm7H,aAAcA,EACd9gK,aAAcA,EACdu3G,SAAUk3D,EAAK5oK,MAAM0xG,SACrBk9C,OAAQga,EAAKha,OAAOz3I,KAAKyxJ,GACzBjO,eAAgBA,EAChBzyJ,UAAW0gK,EAAK5oK,MAAMkI,UACtBjO,MAAO2uK,EAAK5oK,MAAMomK,cAClBpN,gBAAiBA,EACjBgN,WAAY4C,EAAK5oK,MAAMgmK,WACvBE,WAAY0C,EAAK5oK,MAAMkmK,WACvBpuJ,WAAY8wJ,EAAK5oK,MAAM8X,WACvB4xJ,SAAUd,EAAKc,SAASvyJ,KAAKyxJ,GAC7BzP,iBAAkBA,EAClBluG,iBAAkBA,EAClBiwG,iBAAkBA,EAClBh5J,YAAa0mK,EAAK5oK,MAAMkC,YACxBiuB,kBAAmBA,EACnBwiF,kBAAmBA,EACnBmoD,kBAAmBA,EACnBtoC,mBAAoBA,EACpBiqC,mBAAoBA,EACpBz6J,cAAe4mK,EAAK5oK,MAAMgC,cAC1B84G,cAAe8tD,EAAK5oK,MAAM86G,cAC1B6uD,YAAaf,EAAKe,YAAYxyJ,KAAKyxJ,GACnCnP,oBAAqBA,EACrBsB,oBAAqBA,EACrBK,oBAAqBA,EACrBlG,eAAgB0T,EAAK5oK,MAAMk1J,eAC3BmR,eAAgBuC,EAAK5oK,MAAMqmK,eAC3B/9C,qBAAsBA,EACtBshD,aAAchB,EAAKgB,aAAazyJ,KAAKyxJ,GACrCvN,qBAAsBA,EACtBwO,gBAAiBjB,EAAKkB,UAAU3yJ,KAAKyxJ,GACrC3T,aAAc2T,EAAK3T,aAAa99I,KAAKyxJ,GACrClB,aAAckB,EAAKlB,aAAavwJ,KAAKyxJ,GACrCzgK,gBAAiBygK,EAAK5oK,MAAMmI,gBAC5B4hK,cAAenB,EAAKmB,cAAc5yJ,KAAKyxJ,GACvC7wJ,cAAe6wJ,EAAK7wJ,cAAcZ,KAAKyxJ,GACvCh9J,iBAAkBg9J,EAAK5oK,MAAM4L,iBAC7B2vJ,uBAAwBA,EACxBtoF,gBAAiB21F,EAAK31F,gBAAgB97D,KAAKyxJ,GAC3CjlC,iBAAkBilC,EAAKjlC,iBAAiBxsH,KAAKyxJ,GAC7CzN,yBAA0BA,EAC1BnvI,oBAAqB48I,EAAK5oK,MAAMgsB,oBAChC+qI,kBAAmB6R,EAAK7R,kBAAkB5/I,KAAKyxJ,GAC/Cx4D,0BAA2BA,EAC3B15F,0BAA2BA,EAC3BqwH,mBAAoB6hC,EAAK7hC,mBAAmB5vH,KAAKyxJ,GACjD1J,sBAAuB0J,EAAK1J,sBAAsB/nJ,KAAKyxJ,GACvD3hE,4BAA6B2hE,EAAK5oK,MAAMinG,mCAQtD+H,EAAAr2G,EAAAC,cAAC2wK,GAAA,EAAD,KACEv6D,EAAAr2G,EAAAC,cAACqxK,GAAD,CACE33B,OAAQA,EACRt7H,QAASA,EACT+9I,QAASA,EACT1sJ,QAASA,EACTuyJ,SAAUA,EACVpgK,SAAUA,EACVu1B,UAAWA,EACX+nI,YAAaA,EACbh4H,aAAcA,EACd4xE,SAAUk3D,EAAK5oK,MAAM0xG,SACrBipD,eAAgBA,EAChB/L,OAAQga,EAAKha,OAAOz3I,KAAKyxJ,GACzB5P,gBAAiBA,EACjBkN,WAAY0C,EAAK5oK,MAAMkmK,WACvB/M,iBAAkBA,EAClBluG,iBAAkBA,EAClBiwG,iBAAkBA,EAClBwO,SAAU,SAAApqK,GAAOspK,EAAKc,SAASpqK,IAC/B4C,YAAa0mK,EAAK5oK,MAAMkC,YACxBiuB,kBAAmBA,EACnBwiF,kBAAmBA,EACnBmoD,kBAAmBA,EACnB2B,mBAAoBA,EACpBz6J,cAAe4mK,EAAK5oK,MAAMgC,cAC1B84G,cAAe8tD,EAAK5oK,MAAM86G,cAC1B2+C,oBAAqBA,EACrBsB,oBAAqBA,EACrB7F,eAAgB0T,EAAK5oK,MAAMk1J,eAC3BmR,eAAgBuC,EAAK5oK,MAAMqmK,eAC3B/9C,qBAAsBA,EACtBshD,aAAchB,EAAKgB,aAAazyJ,KAAKyxJ,GACrCvN,qBAAsBA,EACtBwO,gBAAiBjB,EAAKkB,UAAU3yJ,KAAKyxJ,GACrC3T,aAAc2T,EAAK3T,aAAa99I,KAAKyxJ,GACrCzgK,gBAAiBygK,EAAK5oK,MAAMmI,gBAC5B4hK,cAAenB,EAAKmB,cAAc5yJ,KAAKyxJ,GACvCrN,uBAAwBA,EACxBJ,yBAA0BA,EAC1B/qD,0BAA2BA,EAC3B22B,mBAAoB6hC,EAAK7hC,mBAAmB5vH,KAAKyxJ,GACjD3hE,4BAA6B2hE,EAAK5oK,MAAMinG,8BAInB,eAArB2hE,EAAK5oK,MAAMq2E,OACT24B,EAAAr2G,EAAAC,cAACsxK,GAAD,CACEnzJ,KAAMA,EACN1O,QAASA,EACTsyJ,eAAgBA,EAChBI,oBAAqBA,EACrBD,kBAAmBA,EACnBhD,YAAaA,EACbuD,qBAAsBA,EACtB5B,oBAAqBA,EACrBN,iBAAkBA,EAClBgC,yBAA0BA,EAC1BD,iBAAkBA,EAClBK,uBAAwBA,EACxBvC,gBAAiBA,EACjB5oD,0BAA2BA,EAC3BkiC,OAAQA,EACRt7H,QAASA,EACTiC,YAAaA,IAMI,YAArB2vJ,EAAK5oK,MAAMq2E,OACT24B,EAAAr2G,EAAAC,cAAC2wK,GAAA,EAAD,KACEv6D,EAAAr2G,EAAAC,cAAC2wK,GAAA,EAAD,CAAOY,OAAK,EAAC9rK,KAAK,IAChBy0G,OAAQ,SAACr6G,GAAD,OACNu2G,EAAAr2G,EAAAC,cAAC4wK,EAAA,SAAD,CACEC,SAAUZ,GAEV75D,EAAAr2G,EAAAC,cAAC+sK,GAADxtK,OAAAC,OAAA,GACMK,EADN,CAEEse,KAAMA,EACNC,QAASA,EACT3O,QAASA,EACT7N,SAAUA,EACVysD,SAAUA,EACVl3B,UAAWA,EACX+P,aAAcA,EACdymI,WAAYqC,EAAK5oK,MAAM1H,MACvBs2J,OAAQga,EAAKha,OAAOz3I,KAAKyxJ,GACzBpC,YAAaoC,EAAK5oK,MAAMzF,OACxBogK,eAAgBA,EAChBzyJ,UAAW0gK,EAAK5oK,MAAMkI,UACtBjO,MAAO2uK,EAAK5oK,MAAMomK,cAClBsD,SAAU,SAAApqK,GAAMspK,EAAKc,SAASpqK,IAC9BwY,WAAY8wJ,EAAK5oK,MAAM8X,WACvBkuJ,WAAY4C,EAAK5oK,MAAMgmK,WACvBE,WAAY0C,EAAK5oK,MAAMkmK,WACvBD,YAAa2C,EAAK5oK,MAAMimK,YACxB/jK,YAAa0mK,EAAK5oK,MAAMkC,YACxB44J,kBAAmBA,EACnBnoD,kBAAmBA,EACnBn9E,kBAAmBA,KACnBrF,kBAAmBA,EACnBssI,mBAAoBA,EACpB99G,cAAeiqH,EAAK5oK,MAAM2+C,cAC1B38C,cAAe4mK,EAAK5oK,MAAMgC,cAC1B+4J,oBAAqBA,EACrB2L,kBAAmBkC,EAAKlC,kBACxBp+C,qBAAsBA,EACtBshD,aAAchB,EAAKgB,aAAazyJ,KAAKyxJ,GACrClB,aAAckB,EAAKlB,aAAavwJ,KAAKyxJ,GACrChC,mBAAoBgC,EAAKhC,mBACzBz+J,gBAAiBygK,EAAK5oK,MAAMmI,gBAC5B4P,cAAe6wJ,EAAK7wJ,cAAcZ,KAAKyxJ,GACvCwB,kBAAmBxB,EAAKkB,UAAU3yJ,KAAKyxJ,GACvCtC,kBAAmBsC,EAAK5oK,MAAMsmK,kBAC9BrzF,gBAAiB21F,EAAK31F,gBAAgB97D,KAAKyxJ,GAC3C58I,oBAAqB48I,EAAK5oK,MAAMgsB,oBAChC+qI,kBAAmB6R,EAAK7R,kBAAkB5/I,KAAKyxJ,GAC/Cx4D,0BAA2BA,EAC3B22B,mBAAoB6hC,EAAK7hC,mBAAmB5vH,KAAKyxJ,GACjD3hE,4BAA6B2hE,EAAK5oK,MAAMinG,+BAE1C+H,EAAAr2G,EAAAC,cAACyyH,GAAA1yH,EAAD,CACE0xK,QAAS,IACTnuC,WAAY,KACZnqG,SAAU,SACVu4I,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1B3rK,MAAO,CAAE0E,WAAY,yBAA0B8C,OAAQ,WACvD4vJ,YAAa,CAAEh1J,QAASzG,EAAW,QAAU,OAAQtB,gBAAiB,UAAW4B,MAAO,QAAS2vK,UAAWjwK,EAAW,MAAQ,SAE/Hw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,MAAOD,WAAY,CAAC,aAAc,UAAWE,eAAgB,aAAc49H,UAAW,CAAC,QAAS,WAAYx4H,MAAOrE,EAAW,CAAEkwK,UAAW,UAAa,MAC3K17D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOhuG,QAAS,CAAC,OAAQ,SAAU3G,IAAK,oBAAqBhC,MAAO,OAAQiC,OAAQ,SACpFy0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMrwG,GAAI,CAAC,EAAG,GAAI9D,MAAO,YAAaI,SAAU,EAAGmG,UAAW,WAA9D,4RAC2R2tG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM7wF,KAAM,gEAAiEF,OAAQ,SAAUC,IAAI,+BAA+BhgB,WAAY,QAA9I,iBAD3R,+LASV6wG,EAAAr2G,EAAAC,cAAC2wK,GAAA,EAAD,CAAOY,OAAK,EAAC9rK,KAAK,qBAChB2wG,EAAAr2G,EAAAC,cAAC+xK,EAAD,OAEF37D,EAAAr2G,EAAAC,cAAC2wK,GAAA,EAAD,KACEv6D,EAAAr2G,EAAAC,cAACgyK,GAAD,UAOZ57D,EAAAr2G,EAAAC,cAACiyK,GAAD,CACE1wK,aAAcA,EACd+N,UAAW0gK,EAAK5oK,MAAMkI,4BAhmClC7M,aClBEyvK,QACW,cAA7BluJ,OAAOmV,SAASg5I,UAEe,UAA7BnuJ,OAAOmV,SAASg5I,UAEhBnuJ,OAAOmV,SAASg5I,SAASv+H,MACvB,2DCX2B,cAA7B5vB,OAAOmV,SAASg5I,UAClB1K,IAAY,CACV2K,IAAK,6DACLC,WAFU,SAECh1C,EAAOi1C,GAChB,IAAIpjJ,EAASmuG,EACPvgH,EAAQw1J,EAAKC,kBAMnB,OALIz1J,GAASA,EAAM8R,SACb9R,EAAM8R,QAAQglB,MAAM,iDACtB1kB,GAAS,GAGNA,KAKbsjJ,IAASt4D,OAAO9D,EAAAr2G,EAAAC,cAACyyK,GAAD,MAASllJ,SAASC,eAAe,SD0G3C,kBAAmB4jI,WACrBA,UAAUshB,cAAcC,MAAMj/C,KAAK,SAAAk/C,GACjCA,EAAaC,+OEiJJC,6MA3Qb1rK,MAAQ,CACNlB,SAAS,GACTa,SAAS,IACT03H,UAAU,IACVtwH,UAAS,EACT4kK,cAAc,CACZhiK,OAAO,KACPiiK,OAAO,KACP9hC,QAAQ,SAIZ+hC,UAAY,SAACviK,EAAOpG,GAClBxF,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BurK,cAAcxzK,OAAAw4B,EAAA,EAAAx4B,CAAA,GACTiI,EAAUurK,cADFxzK,OAAAyzI,EAAA,EAAAzzI,CAAA,GAEVmR,EAAQpG,UAKf4oK,aAAe,WAAiB,IAAhBC,IAAgBrhK,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,KAAAA,UAAA,GACS,oBAA5BhN,EAAKjF,MAAMqzK,cACpBpuK,EAAKjF,MAAMqzK,aAAapuK,EAAKsC,MAAM2rK,eAEjCI,GACFruK,EAAKsuK,kBAITC,YAAc,SAAC3iK,GACb5L,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BurK,cAAcxzK,OAAAw4B,EAAA,EAAAx4B,CAAA,GACTiI,EAAUurK,cADFxzK,OAAAyzI,EAAA,EAAAzzI,CAAA,GAEVmR,EAAQ,SAEV,WACD5L,EAAKouK,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgBrhK,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,KAAAA,UAAA,GAC9BhN,EAAK8C,SAAS,CACZmrK,cAAc,CACZhiK,OAAO,KACPiiK,OAAO,KACP9hC,QAAQ,OAEV,WACuC,oBAA5BpsI,EAAKjF,MAAMyzK,cACpBxuK,EAAKjF,MAAMyzK,eAETH,GACFruK,EAAKsuK,oBAKXA,aAAe,WACbtuK,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B2G,UAAW3G,EAAU2G,qFAIhB,IAAApL,EAAAnD,KACP,OACEw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE3oG,GAAI,EACJ1B,IAAK,EACLtM,MAAO,EACP+N,OAAQ,EACR7M,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChB2M,SAAU,CAAC,WAAW,aAEtB4oG,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACHD,MAAM,CAAC,EAAGE,KAAKwH,MAAM+G,SAAWvO,KAAKwH,MAAMlB,SAAWtG,KAAKwH,MAAML,UACjEd,MAAM,CACJstK,WAAW,2BAGfrzK,eAAiBN,KAAKwH,MAAM+G,SAC5B9N,YAAeT,KAAKwH,MAAM+G,SAA+B,KAApBvO,KAAKwzK,cAE1Ch9D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPuG,MAAO,CACLoI,OAAO,WAET1N,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB2E,QAAU5F,KAAKwH,MAAM+G,SAAWvO,KAAKwzK,aAAe,MAEpDh9D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,IACZH,MAAO,aAHT,WAOAk0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEn0G,MAAO,YACPD,KAAOrC,KAAKC,MAAM+B,SAAW,QAAU,QACvCG,KAAOnC,KAAKwH,MAAM+G,SAAW,QAAU,UAG3CioG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,SACfqF,MAAO,CACLE,SAAS,SACTotK,WAAW,8BACX90C,UAAU7+H,KAAKwH,MAAM+G,SAAWvO,KAAKwH,MAAMq3H,UAAY,IAGzDroB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ/I,GAAI,EACJC,MAAO,EACPkB,cAAe,MACf0qH,UAAS,aAAA/kH,OAAelF,IAAMC,OAAOkF,UAGnCjH,OAAOoE,KAAK/D,KAAKC,MAAM2zK,SAAS9tK,IAAI,SAAC+tK,GACnC,IAAMC,EAAe3wK,EAAKlD,MAAM2zK,QAAQC,GACxC,OACEr9D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,SACf6F,IAAG,UAAAF,OAAYktK,GACfxtK,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,YAGP+2F,EAAAr2G,EAAAC,cAAC2zK,EAAA,EAAD,CACE31D,GAAI,EACJ37G,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YAENuxK,EAAe5+J,eAGhBtV,OAAOoE,KAAK+vK,GAAchuK,IAAI,SAACkuK,GAC7B,IAAMC,EAAcH,EAAaE,GAC3BE,EAAY/wK,EAAKqE,MAAM2rK,cAAcU,KAAkBG,EAC7D,OACEx9D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE31G,GAAI,EACJ4B,SAAU,CAAC,EAAE,GACb8K,MAAOymK,EACPrxD,QAASsxD,EACT14J,UAAWC,IAAO8S,SAClB1nB,IAAG,UAAAF,OAAYktK,EAAZ,KAAAltK,OAA8BqtK,GACjC33J,SAAW,SAAAvV,GAAC,OAAI3D,EAAKkwK,UAAUQ,EAAeG,YAUhEx9D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,OAEfw1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAOtwG,KAAR,CACE1D,WAAY,EACZC,SAAU,CAAC,EAAE,GACbuE,UAAW,YACXrB,QAAS5F,KAAKszK,cAJhB,iBAQA98D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAOtwG,KAAR,CACET,GAAI,EACJjD,WAAY,EACZC,SAAU,CAAC,EAAE,GACbuE,UAAW,YACXrB,QAAS5F,KAAK0zK,cALhB,aAaH1zK,KAAKwH,MAAM+G,UAAYvO,KAAKC,MAAMkzK,eAAiBxzK,OAAOkR,OAAO7Q,KAAKC,MAAMkzK,eAAeriK,OAAQ,SAAAtG,GAAC,OAAW,OAANA,IAAcxG,OAAO,GAC7HwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,EACJ9I,MAAO,EACPkB,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BtB,OAAOoE,KAAK/D,KAAKC,MAAMkzK,eAAertK,IAAI,SAACquK,GACzC,IAAMH,EAAc7wK,EAAKlD,MAAMkzK,cAAcgB,GAC7C,GAAoB,OAAhBH,EAAqB,CACvB,IAAMC,EAAc9wK,EAAKlD,MAAM2zK,QAAQO,GAAYH,GACnD,OACEx9D,EAAAr2G,EAAAC,cAACu2G,EAAA,EAAD,CACEj3G,UAAW,CACTG,GAAG,EACHE,GAAG,EACH+N,GAAG,CAAC,EAAE,GACNzM,GAAG,CAAC,EAAE,GACNvB,MAAM,CAAC,EAAEqD,EAAKqE,MAAML,WAEtB7G,eAAe,EACfuG,IAAG,UAAAF,OAAYwtK,IAEf39D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPuG,MAAO,CACLoI,OAAO,WAET1N,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB2E,QAAS,SAAAkB,GAAC,OAAI3D,EAAKswK,YAAYU,KAE/B39D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,IACZH,MAAO,WACP+D,MAAO,CACL48G,cAAc,eAGfgxD,GAEHz9D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,QACNG,MAAO,WACPD,KAAOc,EAAKlD,MAAM+B,SAAW,QAAU,YAMjD,OAAO,OAGXw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE7tG,GAAI,CAAC,EAAE,GACPlG,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,GACbH,MAAO,YACPqD,WAAY,YACZkD,UAAW,CAAC,SAAS,QACrBjD,QAAU,SAAAkB,GAAC,OAAI3D,EAAKuwK,cAAa,KAPnC,8BA3PuB7wK,aCG/B4sH,6MAEJjoH,MAAQ,CACN6kD,KAAK,EACL+nH,QAAQ,GACRC,WAAW,EACXp3J,SAAQ,EACRq3J,SAAS,KACTC,WAAW,KACXpB,cAAc,CACZhiK,OAAO,KACPiiK,OAAO,KACP9hC,QAAQ,MAEVsiC,QAAQ,CACNtiC,QAAQ,CACNlnH,QAAQ,UACRvoB,OAAO,SACPspB,KAAK,OACLK,QAAQ,UACRnB,QAAQ,UACRe,KAAK,UACLE,QAAQ,WACRK,SAAS,YAMXxa,OAAO,CACL2a,UAAU,YACVC,QAAQ,UACRC,OAAO,UAETonJ,OAAO,IAEToB,YAAY,KACZryI,aAAa,KACb60B,gBAAgB,QAIlBj0D,cAAgB,OAmChBuwK,aAAe,SAAAH,GACbjuK,EAAK8C,SAAS,CACZmrK,iBACA,WACAjuK,EAAK82C,kBAIT03H,aAAe,WACbxuK,EAAK8C,SAAS,CACZmrK,cAAc,CACZhiK,OAAO,KACPiiK,OAAO,KACP9hC,QAAQ,OAEV,WACApsI,EAAK82C,kBAmGTA,WAAa,WAAe,IAAdqQ,EAAcn6C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAEjBm6C,EAAOA,GAAcnnD,EAAKsC,MAAM6kD,KAEhC,IAAMqjE,EAAmB/vH,OAAOoE,KAAKmB,EAAKsC,MAAMosK,QAAQtiC,SAASxrI,IAAK,SAAAoL,GAAM,OAAKA,EAAOpE,gBAGlF2nK,EAAa90K,OAAOkR,OAAO3L,EAAKsC,MAAM4sK,SACvBtjK,OAAO,SAAAC,GAAE,QAAO/D,WAAW+D,EAAGrG,SAC9BoG,OAAO,SAAAC,GAAE,OAC6B,OAApC7L,EAAKsC,MAAM2rK,cAAchiK,QAAoBJ,EAAGI,QAAUJ,EAAGI,OAAOrE,gBAAkB5H,EAAKsC,MAAM2rK,cAAchiK,OAAOrE,iBAClF,OAApC5H,EAAKsC,MAAM2rK,cAAcC,QAAoBriK,EAAGC,OAASD,EAAGC,MAAMlE,gBAAkB5H,EAAKsC,MAAM2rK,cAAcC,OAAOtmK,gBACnHiE,EAAGG,QAAUw+G,EAAiBx7F,SAASnjB,EAAGG,OAAOpE,iBAAwD,OAArC5H,EAAKsC,MAAM2rK,cAAc7hC,SAAqBvgI,EAAGG,OAAOpE,gBAAkB5H,EAAKsC,MAAM2rK,cAAc7hC,QAAQxkI,iBAElL8/B,KAAK,SAACzsC,EAAE+4B,GAAH,OAAU/4B,EAAEoR,UAAY2nB,EAAE3nB,WAAc,EAAI,IAGhE+iK,EAAWG,EAAWzwK,OACtBuwK,EAAanjK,KAAKwF,KAAK09J,EAASpvK,EAAKsC,MAAM6sK,YAE3ClyI,EAAe,GAIrBsyI,EAAWxwK,QAAQ,SAAC8M,EAAIrE,GACtB,IAAMlD,EAAgBuH,EAAGC,MACnBtH,EAAcxE,EAAKjF,MAAM0P,iBAAmBzK,EAAKjF,MAAM0P,gBAAgBnG,GAAiBtE,EAAKjF,MAAM0P,gBAAgBnG,GAAiBtE,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,SAASxL,EAAcyL,gBACvMtR,EAAWyN,KAAKC,IAAI3H,EAAY/F,SAAS,GAEzCkS,EAAO,IAAIxD,KAAkB,IAAbtB,EAAGQ,WACnBL,EAASH,EAAGG,OAASH,EAAGG,OAAShM,EAAKnC,cAAc62B,YAAY7oB,EAAGrH,GAEnEgrK,EAAc1nK,WAAW+D,EAAGS,aAE5Bqe,EAAS6kJ,EAAexvK,EAAKjF,MAAM+B,SAAW0yK,EAAYxnK,QAAQ,GAAKwnK,EAAYxnK,QAAQvJ,GAAa,IACxGyR,EAAalQ,EAAKnC,cAAcqP,YAAYyD,GAGlD9E,EAAGG,OAASA,EACZH,EAAG8e,OAASA,EACZ9e,EAAGqE,WAAaA,EAChBrE,EAAGI,OAASJ,EAAGI,OAASJ,EAAGI,OAAS,YAEhCzE,IAAK2/C,EAAK,GAAGnnD,EAAKsC,MAAM6sK,YAAe3nK,GAAI2/C,EAAK,GAAGnnD,EAAKsC,MAAM6sK,WAAYnvK,EAAKsC,MAAM6sK,YACvFlyI,EAAah1B,KAAK4D,KAQtB7L,EAAK8C,SAAS,CACZiV,SAHc,EAIdq3J,WACAC,aACApyI,6FA3MEniC,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,wCAIvC6G,GACHA,GACFA,EAAEuH,iBAEJ,IAAMg+C,EAAOj7C,KAAKqE,IAAI,EAAEzV,KAAKwH,MAAM6kD,KAAK,GACxCrsD,KAAKgI,SAAS,CACZqkD,0CAIKvlD,GACHA,GACFA,EAAEuH,iBAEJ,IAAMg+C,EAAOj7C,KAAKC,IAAIrR,KAAKwH,MAAM+sK,WAAWv0K,KAAKwH,MAAM6kD,KAAK,GAAGrsD,KAAKg8C,WAAWqQ,GAC/ErsD,KAAKgI,SAAS,CACZqkD,6JAKFrsD,KAAKkD,YACLlD,KAAK20K,+LAuBkBhtK,EAAWC,mFAClC5H,KAAKkD,YACCkrH,EAAsBh/G,KAAKC,UAAU1H,EAAUhG,gBAAkByN,KAAKC,UAAUrP,KAAKC,MAAM0B,gBAC5EyN,KAAKC,UAAU1H,EAAU2H,iBAAmBF,KAAKC,UAAUrP,KAAKC,MAAMqP,kBAEvE8+G,yBAClBpuH,KAAKgI,SAAS,CACZqkD,KAAK,EACL+nH,QAAQ,IACR,WACAjxK,EAAKwxK,+BAEA,UAEW/sK,EAAUykD,OAASrsD,KAAKwH,MAAM6kD,MAEhDrsD,KAAKg8C,0LAIK43D,8IAAqB,SAC5B5zG,KAAKC,MAAM4P,kDACP,aAGT+jG,EAAQA,GAAgB,EAExB5zG,KAAKgI,SAAS,CACZiV,SAAQ,IAGJ+5B,EAAmBh3C,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,qBAGnEo/J,iBAAcp0K,KAAKwH,MAAM4sK,SACzBp9G,EAAkB5lD,KAAKqE,IAAIuhC,EAAiBh3C,KAAKwH,MAAMwvD,kBAEvD1nD,EAAgBtP,KAAKC,MAAMqP,gBACRA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAK/D,KAAKC,MAAM0P,kBAGnCyjK,iBAAapzK,KAAKwH,MAAMosK,QAAQR,QAEtC9jK,EAAcrL,QAAQ,SAAC+M,GACrBoiK,EAAOpiK,GAASA,IAGdsgI,EAAUtxI,KAAKC,MAAMyvH,kBAAX/vH,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAmCK,KAAKwH,MAAMosK,QAAQtiC,UAE9DsjC,EAAsD,qBAA9B50K,KAAKC,MAAM20K,eAAiC50K,KAAKC,MAAM20K,eAAiB,IAEnF5wK,SACjBstI,EAAU,GACVsjC,EAAe3wK,QAAS,SAAAiN,GACtBogI,EAAQpgI,EAAOpE,eAAiBoE,UAIflR,KAAKC,MAAM6rH,wDAA0B9rH,KAAK+C,cAAc6M,gBAAgB5P,KAAKC,MAAM4P,QAAQmnD,EAAgB,SAAS1nD,sCAAnIQ,SAKcA,EAAa9L,QAC/B8L,EAAa7L,QAAQ,SAAC8M,GAChBA,EAAGw8B,QACL6mI,EAAQrjK,EAAGw8B,SAAWx8B,EAEtBqjK,EAAO,IAAAztK,OAAKoK,EAAGQ,YAAeR,KAK9B4D,EAAShV,OAAOkR,OAAOujK,GAASlgK,QAGxBS,EAAOqO,eAAiBhjB,KAAKwH,MAAMwvD,iBAAmBriD,EAAOqO,YAAYhjB,KAAKwH,MAAMwvD,mBAChGA,EAAkB1lD,SAASqD,EAAOqO,aAAa,qBAG1ChjB,KAAKgI,SAAU,SAAAJ,GAAS,MAAK,CAClCwsK,UACAn3J,SAAQ,EACR+5C,kBACA48G,QAAQj0K,OAAAw4B,EAAA,EAAAx4B,CAAA,GACHiI,EAAUgsK,QADR,CAELR,SACA9hC,cAEA,WACFjnI,EAAK2xC,qJAgEA,IAAA8gE,EAAA98G,KAED60K,EAAmBl1K,OAAOkR,OAAO7Q,KAAKwH,MAAM2rK,eAAeriK,OAAQ,SAAAtG,GAAC,OAAW,OAANA,IAAcxG,OAAO,EAG9Fm+B,EAAeniC,KAAKwH,MAAM26B,aAAexiC,OAAOkR,OAAO7Q,KAAKwH,MAAM26B,cAAgB,KAExF,OACEq0E,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,SAAUlB,MAAO,EAAGg1K,EAAG,UAExC90K,KAAKwH,MAAMyV,QACTu5F,EAAAr2G,EAAAC,cAACknH,EAAA,EAAD,CACExjH,UAAW,CACT9C,cAAc,MACdktB,UAAUluB,KAAKC,MAAM8B,QAEvBsjB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,4BAGR4zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACP8N,SAAU,WACV5M,cAAe,SACfoE,GAAI,8BACJmc,GAAI,CAAC,EAAGszJ,EAAmB,QAAU,IAErCr+D,EAAAr2G,EAAAC,cAAC20K,EAADp1K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE2zK,QAAS5zK,KAAKwH,MAAMosK,QACpBT,cAAenzK,KAAKwH,MAAM2rK,cAC1BO,aAAc1zK,KAAK0zK,aAAa/0J,KAAK3e,MACrCszK,aAActzK,KAAKszK,aAAa30J,KAAK3e,SAGrCmiC,GAAgBA,EAAan+B,OAC3BwyG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE32G,MAAO,EACPkB,cAAe,UAEfw1G,EAAAr2G,EAAAC,cAAC+9G,EAAA,EAAD,CACE/F,KAAMp4G,KAAKC,MAAMm4G,KACjBp2G,SAAUhC,KAAKC,MAAM+B,WAEvBw0G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACErxG,GAAI,oBACJpE,cAAe,UAGbmhC,EAAar8B,IAAK,SAACiL,EAAGhL,GACpB,IAAMiX,EAASjM,EAAGlJ,KACZmtK,EAAYjkK,EAAGw8B,QAKrB,OACEipE,EAAAr2G,EAAAC,cAACy3G,EAAA,EAADl4G,OAAAC,OAAA,GACMk9G,EAAK78G,MADX,CAEEi4G,SAAU,CACR53G,eAAc,GAEhBuH,KAAMmV,EACNyD,YAAa1P,EACblK,IAAG,MAAAF,OAAQZ,GACXtF,YAbgB,SAACqG,GACnB,OAAQkW,EAASoH,OAAOs3D,KAAKohC,EAAK/5G,cAAc8iB,2BAA2B7I,IAAW,MAapFm7F,MAAK,UAAAxxG,OAAYquK,GACjB/8D,OAAM,WAAAtxG,OAAaquK,GACnBj9D,eAAgB7oF,UAM1BsnF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE10G,OAAQ,OACRhB,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChBmE,GAAI,gCAEJoxG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMp1G,GAAI,GACRm1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMp1G,GAAI,EAAGuE,QAAU,SAAAkB,GAAC,OAAIg2G,EAAKm4D,SAASnuK,KACxC0vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,oBACNE,KAAM,MACNC,MAAQtC,KAAKwH,MAAM6kD,KAAK,EAAI,cAAgB,mBAGhDmqD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM7wG,QAAU,SAAAkB,GAAC,OAAIg2G,EAAKo4D,SAASpuK,KACjC0vG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEt0G,KAAM,qBACNE,KAAM,MACNC,MAAQtC,KAAKwH,MAAM6kD,KAAKrsD,KAAKwH,MAAM+sK,WAAa,cAAgB,oBAItE/9D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM11G,WAAY,UAChBy1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE/zG,SAAU,EACVD,WAAY,EACZH,MAAO,YAHT,QAKQtC,KAAKwH,MAAM6kD,KALnB,OAK6BrsD,KAAKwH,MAAM+sK,eAM9C/9D,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAQqX,GAAT,CAAYjlH,UAAW,SAAUqC,WAAY,YAAazI,WAAY,EAAGC,SAAU,CAAC,GAAIJ,MAAO,aAA/F,sCA9WaO,aA2XhB4sH,4OC1XTgc,6MAEJjkI,MAAQ,CACNwyD,MAAM,EACN/8C,SAAQ,EACR/L,OAAO,UACP6L,WAAW,CACTmkG,QAAQ,CACNlkG,OAAO,KACPC,SAAQ,GAEVoN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,GAEVpb,OAAO,CACLmb,OAAO,KACPC,SAAQ,IAGZ0gG,WAAW,GACXgsB,WAAU,EACVwrC,aAAa,KACbC,cAAc,KACdC,eAAc,EACd90D,gBAAe,EACf7/E,iBAAiB,KACjB+/E,oBAAoB,GACpBrqD,mBAAmB,KACnBk/G,sBAAqB,EACrBjzB,yBAAwB,EACxBhsF,yBAAyB,KACzB8zE,0BAA0B,QAI5BpnI,cAAgB,OAUhB62H,UAAY,SAAC1oH,GACI,OAAXA,GACFhM,EAAK8C,SAAS,CACZkJ,cAKNqkK,oBAAsB,SAACF,GACrBnwK,EAAK8C,SAAS,CACZqtK,kBAG4C,oBAAnCnwK,EAAKjF,MAAMs1K,qBACpBrwK,EAAKjF,MAAMs1K,oBAAoBF,MAInC30D,iBAAmB,SAAC55G,GAClB,IAAK5B,EAAKsC,MAAM0J,OACd,OAAO,EAET,IAAM2e,EAAS/oB,EAAE4e,OAAOhb,MAAM1G,SAAWV,MAAMwD,EAAE4e,OAAOhb,OAASxF,EAAKnC,cAAckO,MAAMnK,EAAE4e,OAAOhb,OAASxF,EAAKnC,cAAckO,MAAM,GAErI/L,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B64G,oBAAoB9gH,OAAA61K,EAAA,EAAA71K,CAAA,GACfiI,EAAU64G,oBADI9gH,OAAA81K,EAAA,EAAA91K,CAAA,GAEhBuF,EAAKsC,MAAM0J,OAAS,OAEvBysG,WAAWh+G,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAU+1G,WADLh+G,OAAA81K,EAAA,EAAA91K,CAAA,GAEPuF,EAAKsC,MAAM0J,OAAS2e,UAK3BoxF,oBAAsB,WAAiB,IAAhBpxF,EAAgB3d,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAKhN,EAAKsC,MAAM0J,OACd,OAAO,EAEJ2e,IACHA,EAAS3qB,EAAKsC,MAAMm2G,WAAWz4G,EAAKsC,MAAM0J,SAE5C,IAAIqvG,GAAiB,EACrB,GAAI1wF,EAEF,OADA0wF,EAAiB1wF,EAAOuC,IAAI,GACpBltB,EAAKsC,MAAM0J,QACjB,IAAK,UACL,IAAK,SACHqvG,EAAiBA,GAAkB1wF,EAAOhb,GAAG3P,EAAKsC,MAAM4tK,eAM9DlwK,EAAK8C,SAAS,CACZu4G,sBAIJM,cAAgB,WACd,IAAK37G,EAAKsC,MAAM0J,QAAgE,OAAtDhM,EAAKsC,MAAMi5G,oBAAoBv7G,EAAKsC,MAAM0J,QAClE,OAAO,EAGT,IAAI2e,EAAS,KACPixF,EAAqB57G,EAAKnC,cAAckO,MAAM/L,EAAKsC,MAAMi5G,oBAAoBv7G,EAAKsC,MAAM0J,SAAS+R,IAAI,KAE3G,OAAO/d,EAAKsC,MAAM0J,QAChB,IAAK,UACL,IAAK,SACH2e,EAAS3qB,EAAKsC,MAAM4tK,cAAgBlwK,EAAKnC,cAAckO,MAAM/L,EAAKsC,MAAM4tK,eAAenoK,MAAM6zG,GAAsB,KAMvH57G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B+1G,WAAWh+G,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAU+1G,WADLh+G,OAAA81K,EAAA,EAAA91K,CAAA,GAEPuF,EAAKsC,MAAM0J,OAAS2e,UAK3BmxF,uBAAyB,SAACjhG,GACxB,IAAK7a,EAAKsC,MAAM0J,OACd,OAAO,EAEThM,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B64G,oBAAoB9gH,OAAA61K,EAAA,EAAA71K,CAAA,GACfiI,EAAU64G,oBADI9gH,OAAA81K,EAAA,EAAA91K,CAAA,GAEhBuF,EAAKsC,MAAM0J,OAAS6O,UAK3B21J,mCAAgB,SAAAt1J,IAAA,IAAAu9F,EAAA1gG,EAAAq5C,EAAAq/G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA11J,EAAAlgB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,UAER+sG,EAAaz4G,EAAKsC,MAAMm2G,WAAWz4G,EAAKsC,MAAM0J,SAEhDhM,EAAKsC,MAAM+4G,gBAAmB5C,IAAcz4G,EAAKnC,cAAckO,MAAM0sG,GAAYvrF,IAAI,GAJ3E,CAAA9R,EAAA1P,KAAA,eAAA0P,EAAAe,OAAA,UAKL,GALK,OAQRpE,GAAU,EARFqD,EAAA6R,GAUNjtB,EAAKsC,MAAM0J,OAVLoP,EAAA1P,KAWP,WAXO0P,EAAA6R,GAAA,qBAaLjtB,EAAKjF,MAAMyJ,YAAYqwB,WAAc70B,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YAbjE,CAAA5kC,EAAA1P,KAAA,eAAA0P,EAAAe,OAAA,UAcD,GAdC,cAiBJi1C,EAAkBpxD,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YAAY/iD,KAE/DwzK,EAAoBzwK,EAAKnC,cAAcixD,qBAAqB2pD,EAAW,KAGtD,EACD,KAUhBk4D,GADAD,EAAgG,IAClD5xK,SAAyD,IAA/C4xK,EAA6B55J,QAAQ,KAAc9W,EAAKnC,cAAckO,MAAM,MAAW/L,EAAKnC,cAAckO,MAAM,KAExK6kK,EAAiB,SAAC/kK,EAAGmM,GACzB,IAAMulC,EAA4B,YAAd1xC,EAAGI,OAGjBgM,EAAY,CAChBC,cAAa,aACbG,YAAarY,EAAKjF,MAAMuJ,cACxB6T,WAAYtM,EAAGI,OACfwwG,WAAYrwG,SAASqsG,IAGnBzgG,IACFC,EAAUE,WAAanY,EAAKnC,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrBjM,EAAKnC,cAAc2a,yBAAyBP,GAG9CjY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADLpd,OAAA81K,EAAA,EAAA91K,CAAA,GAEPuF,EAAKsC,MAAM0J,OAAQ,CAClB8L,OAAO,KACPC,SAAQ,QAKVwlC,GACFv9C,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B+1G,WAAWh+G,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAU+1G,WADLh+G,OAAA81K,EAAA,EAAA91K,CAAA,GAEPuF,EAAKsC,MAAM0J,OAAShM,EAAKnC,cAAckO,MAAM,SAMhD8kK,EAAwB,SAAChlK,GAC7B,IAAMiM,EAASjM,EAAG6M,gBAClB1Y,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADLpd,OAAA81K,EAAA,EAAA91K,CAAA,GAEPuF,EAAKsC,MAAM0J,OAFJvR,OAAA61K,EAAA,EAAA71K,CAAA,GAGHiI,EAAUmV,WAAW7X,EAAKsC,MAAM0J,QAH7B,CAIN8L,iBAMR9X,EAAKjF,MAAMie,0BAA0Bo4C,EAAiB,kBAAmB,CACvEq/G,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtCv1J,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,oBAgGdnc,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADLpd,OAAA81K,EAAA,EAAA91K,CAAA,GAEPuF,EAAKsC,MAAM0J,OAFJvR,OAAA61K,EAAA,EAAA71K,CAAA,GAGHiI,EAAUmV,WAAW7X,EAAKsC,MAAM0J,QAH7B,CAIN+L,iBArGQ,yBAAAqD,EAAAvO,SAAAqO,EAAApgB,WAoJhBg2K,8BAAgC,SAAC3zB,GAC/Bn9I,EAAK8C,SAAS,CACZq6I,+BAIJ4zB,oDAAiC,SAAAp1J,IAAA,IAAAwzE,EAAA6hF,EAAA5/G,EAAA+pE,EAAA,OAAAhgH,EAAAlgB,EAAAsQ,KAAA,SAAAuQ,GAAA,cAAAA,EAAArQ,KAAAqQ,EAAApQ,MAAA,WAC3B1L,EAAKjF,MAAMyJ,YAAYqwB,YAAa70B,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,kBAD1C,CAAAhZ,EAAApQ,KAAA,YAEvByjF,EAAwBnvF,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,kBACzDk8I,EAAwB7hF,EAAsBlyF,MAC1B+C,EAAKnC,cAAco0B,kBAAkB++I,GAJlC,CAAAl1J,EAAApQ,KAAA,gBAMrB0lD,EAAkBpxD,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YAAY/iD,KAN1C6e,EAAApQ,KAAA,EAOC1L,EAAKnC,cAAcmhE,mBAAmB5N,EAAgB+9B,EAAsBxnF,QAAQ3H,EAAKjF,MAAM4P,SAPhG,cAOrBwwH,EAPqBr/G,EAAArN,KAAAqN,EAAAK,OAAA,SAQpBg/G,GARoB,eAAAr/G,EAAAK,OAAA,UAWxB,GAXwB,yBAAAL,EAAAjP,SAAA8O,EAAA7gB,WAcjC6gC,oCAAiB,SAAAvwB,IAAA,IAAA2M,EAAAyjB,EAAAy0I,EAAAgB,EAAA9/G,EAAA8zE,EAAAn/B,EAAAoqE,EAAAh/G,EAAAwhB,EAAAw+F,EAAAC,EAAA//G,EAAApR,EAAAlrB,EAAA4D,EAAAC,EAAA8rG,EAAA7hI,EAAAwuK,EAAA,OAAAj2J,EAAAlgB,EAAAsQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEV1L,EAAKjF,MAAMyJ,aAAgBxE,EAAKjF,MAAM4P,QAF5B,CAAAa,EAAAE,KAAA,eAAAF,EAAA2Q,OAAA,UAGN,GAHM,UAMXpE,GAAU,EACd/X,EAAK8C,SAAS,CACZiV,UACAF,WAAW,CACTmkG,QAAQ,CACNlkG,OAAO,KACPC,SAAQ,GAEVoN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,GAEVpb,OAAO,CACLmb,OAAO,KACPC,SAAQ,MAKVyjB,GAAmB,EACnBy0I,EAAe,aACfgB,EAAyB,KACzB9/G,EAA2B,KAC3B8zE,GAA4B,EAC5Bn/B,EAAgB9lG,EAAKnC,cAAckO,MAAM,GACzCmkK,EAAgBlwK,EAAKnC,cAAckO,MAAM,GACzCmlD,EAAqBlxD,EAAKnC,cAAckO,MAAM,GAC5C2mE,OAA6CzpD,IAA7BjpB,EAAKjF,MAAM23E,eAA8B1yE,EAAKjF,MAAM23E,eAGtE1yE,EAAKjF,MAAMyJ,YAAYqwB,YAAa70B,EAAKjF,MAAMyJ,YAAYqwB,UAAUjI,QApC1D,CAAAphB,EAAAE,KAAA,YAqCPwlK,EAAkBlxK,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YACnDmxH,EAAiBD,EAAgB7uI,IACjC+uB,EAAkB8/G,EAAgBj0K,MACpC+iD,EAAchgD,EAAKnC,cAAco0B,kBAAkBm/B,MAGnC+/G,EA3CP,CAAA3lK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4CS1L,EAAKjF,MAAMqnC,aAAagvB,EAAgB8/G,EAAgBvpK,QAAQwpK,GA5CzE,QA4CXnxH,EA5CWx0C,EAAAiD,KAAA,YA+CTqmB,EAAoB90B,EAAKnC,cAAco0B,kBAAkBjyB,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,kBAAkB73B,SAEtF+C,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,kBAAkBuN,IAjDhE,CAAA72B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkDe1L,EAAKjF,MAAMqnC,aAAapiC,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,kBAAkB73B,KAAK+C,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,kBAAkBntB,QAAQ3H,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,kBAAkBuN,KAlD7M,QAkDXvN,EAlDWtpB,EAAAiD,KAAA,YAqDTuxC,IAAelrB,EArDN,CAAAtpB,EAAAE,KAAA,gBAuDXukK,EAAejwK,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YAAYl0C,MAvDjDN,EAAAE,KAAA,GA8DD8P,QAAQqD,IAAI,CAEpB7e,EAAKnC,cAAc0vD,iBAAiB6D,GAEpCpxD,EAAK+wK,iCAEL/wK,EAAKnC,cAAcg8B,mBAAmBu3B,EAAgBpxD,EAAKjF,MAAM4P,SAEhE+nE,EAAgB1yE,EAAKnC,cAAcguB,oBAAoBulC,EAAgB,cAAgB,OAtE/E,QAAA14B,EAAAltB,EAAAiD,KAAAkqB,EAAAl+B,OAAAqkB,EAAA,EAAArkB,CAAAi+B,EAAA,GA0DTy4B,EA1DSx4B,EAAA,GA2DTssG,EA3DStsG,EAAA,GA4DTu4B,EA5DSv4B,EAAA,GA6DTmtE,EA7DSntE,EAAA,GA2EPu4B,IAEFg/G,EAAgBlwK,EAAKnC,cAAc0R,iBAAiB2hD,EAAmBC,GACnE20C,IACFA,EAAgB9lG,EAAKnC,cAAc0R,iBAAiBu2F,EAAc9lG,EAAKjF,MAAMyJ,YAAY/F,UACzFwyK,EAAyBjxK,EAAKnC,cAAckO,MAAMmkK,GAAenoK,MAAM/H,EAAKnC,cAAckO,MAAM+5F,KAGlGtqE,EAAmBx7B,EAAKnC,cAAckO,MAAMmlD,GAAoBvhD,GAAG,IAnF1D,WAwFfoI,GAAU,EAGJ0sH,EAAYzkI,EAAKjF,MAAM0pI,UAEvB7hI,EAAW,CACfmV,UACA0sH,YACAwrC,eACAC,gBACA10I,mBACA01B,qBACA+/G,yBACA9/G,2BACA8zE,8BAGEjlI,EAAKjF,MAAM8kJ,SAzGA,CAAAr0I,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0GgB1L,EAAKnC,cAAcq3D,oBAAoBl1D,EAAKjF,MAAM4P,SA1GlE,SA0GPymK,EA1GO5lK,EAAAiD,QA2GU2iK,EAAer0G,UACpCn6D,EAASwtK,sBAAuB,GA5GrB,cAgHoC,oBAAxCpwK,EAAKjF,MAAMmqI,0BACpBllI,EAAKjF,MAAMmqI,yBAAyB1pG,GAjHvBhwB,EAAA2Q,OAAA,SAuHRnc,EAAK8C,SAASF,IAvHN,yBAAA4I,EAAAqB,SAAAzB,EAAAtQ,WA0HjBu2K,0DAAsB,SAAAjjK,EAAOxM,GAAP,IAAAutF,EAAA,OAAAh0E,EAAAlgB,EAAAsQ,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OAChB9J,GACFA,EAAEuH,iBAEEgmF,EAAwBnvF,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,kBACrC90B,EAAKnC,cAAco0B,kBAAkBk9D,EAAsBlyF,OAEnF+C,EAAKwgE,aAAa,KAAKxgE,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YAAY/iD,KAAKkyF,EAAsBxnF,SAP7E,wBAAA2G,EAAAzB,SAAAuB,EAAAtT,iEAWtB0e,uCAAoB,SAAAkD,IAAA,OAAAvB,EAAAlgB,EAAAsQ,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,OAClB1L,EAAK8C,SAAS,CACZ+U,WAAY,CACVmkG,QAAQ,CACNlkG,OAAO,KACPC,SAAQ,GAEVoN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,GAEVpb,OAAO,CACLmb,OAAO,KACPC,SAAQ,MAbI,wBAAA6E,EAAA/P,SAAA6P,EAAA5hB,WAmBpBw2K,uDAAmB,SAAA5zJ,EAAO9b,GAAP,IAAAutF,EAAA8sB,EAAAC,EAAA,OAAA/gG,EAAAlgB,EAAAsQ,KAAA,SAAAsS,GAAA,cAAAA,EAAApS,KAAAoS,EAAAnS,MAAA,UACb9J,GACFA,EAAEuH,iBAEEgmF,EAAwBnvF,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,mBACrC90B,EAAKnC,cAAco0B,kBAAkBk9D,EAAsBlyF,MALpE,CAAA4gB,EAAAnS,KAAA,eAAAmS,EAAAnS,KAAA,EASyB1L,EAAK+wK,iCAT9B,OAAAlzJ,EAAApP,KA8EbzO,EAAK8C,SAAS,CACZmiI,2BAA0B,KAlEtBhpB,EAAkB,SAACpwG,EAAGmM,GAE1B,IAAMC,EAAY,CAChBC,cAAe,UACfG,YAAa,UACbF,WAAYtM,EAAKA,EAAGI,OAAS,MAGzBsxC,EAAc1xC,GAAoB,YAAdA,EAAGI,OAIzB+L,IACFC,EAAUE,WAAanY,EAAKnC,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrBjM,EAAKnC,cAAc2a,yBAAyBP,GAG9CjY,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BuiI,0BAA2B1nF,EAC3B1lC,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADL,CAERmkG,QAAQ,CACNlkG,OAAO,KACPC,SAAQ,QAK4B,oBAA/B/X,EAAKjF,MAAMkhH,iBAAkC1+D,GACtDv9C,EAAKjF,MAAMkhH,gBAAgBpwG,GAG7B7L,EAAK27B,kBAGDugF,EAAyB,SAACrwG,GAC9B,IAAMiM,EAASjM,EAAG6M,gBAClB1Y,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADL,CAERmkG,QAAQvhH,OAAA61K,EAAA,EAAA71K,CAAA,GACHiI,EAAUmV,WAAWmkG,QADnB,CAELlkG,iBAMR9X,EAAKnC,cAAc8iE,YAAY3gE,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YAAY/iD,KAAKkyF,EAAsBxnF,QAAQs0G,EAAgBC,GAE/Hl8G,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADL,CAERmkG,QAAQ,CACNlkG,OAAO,KACPC,SAAQ,KAGZktH,2BAA0B,MA3Ef,wBAAApnH,EAAAhR,SAAA6Q,EAAA5iB,iEAqFnBqqB,8CAAU,SAAA/G,EAAOxc,EAAE2vK,GAAT,IAAApiF,EAAAr6D,EAAA08I,EAAAC,EAAA3qC,EAAAN,EAAA0pC,EAAArpC,EAAA6qC,EAAA3zB,EAAA7tD,EAAAyhF,EAAA58G,EAAA2wE,EAAAD,EAAA,OAAAtqH,EAAAlgB,EAAAsQ,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,UACR9J,EAAEuH,iBAEIgmF,EAAwBnvF,EAAKjF,MAAMyJ,YAAYqwB,UAAUC,oBACzDA,EAAoB90B,EAAKnC,cAAco0B,kBAAkBk9D,EAAsBlyF,OAJ7E,CAAAwhB,EAAA/S,KAAA,YAaE8lK,EAAkB,SAAC3lK,EAAGmM,IAErBA,GAASnM,GAAoB,UAAdA,EAAGI,OACrB+L,EAAQ,CACN8R,QAAQ,kBAEAje,GAAMmM,IAChBnM,EAAK,CACHI,OAAO,UAIX,IAAMsxC,EAAc1xC,GAAoB,YAAdA,EAAGI,OAGvBgM,EAAY,CAChBC,cAAe,UACfG,YAAak5J,EACbp5J,WAAYtM,EAAKA,EAAGI,OAAS,KAC7BwwG,WAAYrwG,SAAS8jK,IAGnBl4J,IACFC,EAAUE,WAAanY,EAAKnC,cAAc0a,oBAAoBP,KAI5DA,GAA8B,UAArBC,EAAUhM,SACrBjM,EAAKnC,cAAc2a,yBAAyBP,GAK1CslC,GAEFr+B,OAAOw1F,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGPh1G,EAAKjF,MAAMoqI,mBAA6D,oBAAjCnlI,EAAKjF,MAAMoqI,mBACpDnlI,EAAKjF,MAAMoqI,kBAAkBt5H,KAI/BqT,OAAOw1F,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIXh1G,EAAK27B,kBAGP37B,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5B84B,kBAAiB+hB,EACjB1lC,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADL,CAERsN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,SAMV05J,EAAyB,SAAC5lK,GAC9B,IAAMiM,EAASjM,EAAG6M,gBAClB1Y,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADL,CAERsN,QAAQ1qB,OAAA61K,EAAA,EAAA71K,CAAA,GACHiI,EAAUmV,WAAWsN,QADnB,CAELrN,iBAMFgvH,EAAiB,WACoB,oBAA9B9mI,EAAKjF,MAAM+rI,gBACpB9mI,EAAKjF,MAAM+rI,kBAITN,GAAqC,IAAzBxmI,EAAKjF,MAAMyrI,WAAuBxmI,EAAKjF,MAAM8kJ,UAAY7/I,EAAKsC,MAAM66I,0BAA4Bn9I,EAAKsC,MAAM8tK,qBAGvHF,EAAgBlwK,EAAKsC,MAAM4tK,cAC3BrpC,EAAY7mI,EAAKjF,MAAM4rI,oBAAsB3mI,EAAKnC,cAAc8wD,aAAa3uD,EAAKnC,cAAcixD,qBAAqB9uD,EAAKsC,MAAMm2G,WAAWz4G,EAAKsC,MAAM0J,QAAQhM,EAAKsC,MAAM6uD,2BAA6BnxD,EAAKnC,cAAc8wD,aAAa3uD,EAAKsC,MAAM4uD,oBAGnPwgH,EAAsE,qBAA9C1xK,EAAKjF,MAAMyJ,YAAYkrJ,mBAAqC1vJ,EAAKjF,MAAMyJ,YAAYkrJ,mBAAqB1vJ,EAAKnC,cAAciS,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnMiuI,EAAwB,MAExB2zB,EApHA,CAAAjzJ,EAAA/S,KAAA,cAwHAqyI,EADEvX,EACsBxmI,EAAKnC,cAAciS,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnE9P,EAAKnC,cAAciS,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BA1H3F,CAAA2O,EAAA/S,KAAA,gBAAA+S,EAAA/S,KAAA,GA8H8B1L,EAAKnC,cAAcsvB,oBAAoB+iJ,EAAclwK,EAAKjF,MAAMuJ,cAActE,EAAKjF,MAAMyJ,aAAY,GA9HnI,QAAAia,EAAAhQ,KA+HoBixD,IAAI1/D,EAAKnC,cAAckO,MAAMgyI,MAC/C2zB,GAAiB,GAhInB,QAuI2B,oBAF3BxhF,EAAkBlwF,EAAKjF,MAAMm1F,gBAAkBlwF,EAAKjF,MAAMm1F,gBAAkB,CAAC22C,EAAU7mI,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YAAYr4C,QAAQ3H,EAAKjF,MAAMyJ,YAAYqoB,KAAKllB,QAAQ3H,EAAKjF,MAAMyJ,YAAYmD,QAAQ+pK,MAGjNxhF,EAAkBA,EAAgB22C,IAIhCL,GACIzxE,GAAoB48G,EAAA78I,EAAkBmf,SAAQs9H,GAA1BxkK,MAAA4kK,EAAAl3K,OAAAq9G,EAAA,EAAAr9G,CAA8Cy1F,IAAiB95B,YACzFp2D,EAAKnC,cAAcw7D,+BAA+B81B,EAAsBlyF,KAAM83D,EAAmBy8G,EAAiBC,KAG5G/rC,EAAiB1lI,EAAKnC,cAAco0B,kBAAkBjyB,EAAKjF,MAAMyJ,YAAYvH,MAC7EwoI,EAAet2C,EAAsBn1D,UAAUhgB,KAAM,SAAA4jD,GAAC,OAAIA,EAAE3gE,OAASs0K,IACvEvxK,EAAKjF,MAAM0pI,WAAaiB,EAC1B1lI,EAAKnC,cAAcg4D,iBAAiB71D,EAAKjF,MAAMyJ,YAAYvH,KAAM+C,EAAKjF,MAAM4P,QAASwkF,EAAsBlyF,KAAMwoI,EAAalpE,WAAY2zB,EAAiBshF,EAAiBC,EAAwB3qC,GAGpM9mI,EAAKnC,cAAcmb,0BAA0Bm2E,EAAsBlyF,KAAMs0K,EAAiBrhF,EAAiBshF,EAAiBC,IAMhIzxK,EAAK8C,SAAS,SAACJ,GAAD,MAAgB,CAC5BmV,WAAWpd,OAAA61K,EAAA,EAAA71K,CAAA,GACNiI,EAAUmV,WADL,CAERsN,QAAQ,CACNrN,OAAO,KACPC,SAAQ,QAlKV,eAAA0G,EAAAtC,OAAA,UAyKD,GAzKC,yBAAAsC,EAAA5R,SAAAuR,EAAAtjB,4IA7fJA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAiN9CD,KAAKkD,YACLlD,KAAK6gC,yGAOYl5B,EAAUC,GAC3B5H,KAAKkD,YAEL,IAAMmsB,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClDinK,EAAkBnvK,EAAUo9I,WAAa/kJ,KAAKC,MAAM8kJ,SACpDgyB,EAAmBpvK,EAAUgiI,YAAc3pI,KAAKC,MAAM0pI,WACvChiI,EAAU6B,gBAAkBxJ,KAAKC,MAAMuJ,gBAAmB7B,EAAU+B,aAAe1J,KAAKC,MAAMyJ,aAE/F2lB,GAAkBynJ,GAAmBC,IACvD/2K,KAAK6gC,iBAGP,IAAMuhF,EAAgBpiH,KAAKwH,MAAM0J,SAAWtJ,EAAUsJ,OAChD8lK,EAA6Bh3K,KAAKwH,MAAMi5G,oBAAoBzgH,KAAKwH,MAAM0J,UAAYtJ,EAAU64G,oBAAoBzgH,KAAKwH,MAAM0J,SAC9HkxG,GAAiB40D,IACnBh3K,KAAK6gH,gBAGmBj5G,EAAU+1G,aAAe39G,KAAKwH,MAAMm2G,YAE5D39G,KAAKihH,sBAGyBr5G,EAAUuiI,4BAA8BnqI,KAAKwH,MAAM2iI,2BAGvC,oBAA/BnqI,KAAKC,MAAMkhH,iBACpBnhH,KAAKC,MAAMkhH,gBAAgBnhH,KAAKwH,MAAM2iI,4DAkbnC,IAAAhnI,EAAAnD,KAEP,IAAKA,KAAKC,MAAMyJ,cAAgB1J,KAAKC,MAAMuJ,cACzC,OAAO,KAGT,IAAMg3G,EAAmBxgH,KAAKC,MAAM0pI,WAAa3pI,KAAKwH,MAAM2iI,0BACtDgH,EAAqBnxI,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,mBACjEiiK,EAAwB9lC,EAAmBr/G,SAAkG,qBAAhFq/G,EAAmBlxI,MAAM0P,gBAAgB3P,KAAKC,MAAMyJ,YAAYqoB,KAAK/gB,OAClIogI,EAA+BD,EAAmBrG,eAIlDosC,EAAyB,SAACj3K,GAAD,OAC7Bk3K,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE13K,UAAW,CACT6hB,GAAG,EACH68F,GAAG,EACHr+G,GAAG,EACH+N,GAAG,EACHrF,QAAQ,OACR1H,WAAW,SACXC,cAAc,SACdC,eAAe,SACf2H,GAAGzF,EAAKqE,MAAM6tK,cAAgB,EAAI,IAGpC8B,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEv3K,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBk2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEh1K,KAAM,QACNC,MAAO,WACPH,KAAM,iBAGVg1K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEhgJ,UAAU,EACVurF,QAASz/G,EAAKqE,MAAM6tK,cACpB7nK,MAAK,wCACL6O,SAAW,SAAAvV,GAAC,OAAI3D,EAAKoyK,oBAAoBzuK,EAAE4e,OAAOk9F,cAKlD00D,EAAkBt3K,KAAK+C,cAAciS,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgBhV,KAAKwH,MAAM8tK,qBAExH,OACEt1K,KAAKwH,MAAMyV,SAAWjd,KAAKC,MAAM4P,QAC/BsnK,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE13K,UAAW,CACT6B,EAAE,EACFqH,GAAG,EACHslB,UAAU,QACV7nB,MAAM,CACJoC,QAAQ,OACR1H,WAAW,SACXE,eAAe,YAInBk2K,EAAAh3K,EAAAC,cAACm3K,EAAA,EAAD,CACEzzK,UAAW,CACT9C,cAAc,OAEhBqkB,YAAa,CACXhjB,KAAK,QAEPM,UAAW,CACT+C,GAAG,GAEL9C,KAAM,2BAIT5C,KAAKwH,MAAMk5B,mBAAqB1gC,KAAKwH,MAAM6tK,cAC1C8B,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CAAKv3K,MAAO,IAEPE,KAAKC,MAAM2rI,iBACZurC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ5H,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE13K,UAAW,CACT6B,EAAE,IAGJ41K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEt2K,WAAY,SACZC,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEh1K,KAAM,QACNC,MAAO,WACPH,KAAOnC,KAAKC,MAAM2rI,gBAAkB,YAAc,YAEpDurC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAEwB,OAAjC7I,KAAKC,MAAMu3K,kBAA6Bx3K,KAAKC,MAAMu3K,kBAAoB,KACtC,OAAjCx3K,KAAKC,MAAMu3K,mBACXL,EAAAh3K,EAAAC,cAAA,WARJ,OAUSJ,KAAKC,MAAM2rI,gBAA4B,GAAV,QAVtC,SAU0DurC,EAAAh3K,EAAAC,cAAA,cAASJ,KAAKwH,MAAM4tK,cAAcloK,QAAQ,GAA1C,IAA+ClN,KAAKwH,MAAM2tK,aAA1D,IAAyEn1K,KAAKwH,MAAM2uK,uBAAX,IAAAxvK,OAAwC3G,KAAKwH,MAAM2uK,uBAAuBjpK,QAAQ,GAAlF,KAAAvG,OAAwF3G,KAAKC,MAAMuJ,cAAnG,KAAsH,IAVzP,eAUiR2tK,EAAAh3K,EAAAC,cAAA,WAClP,OAA3BJ,KAAKC,MAAMw3K,YAAuBz3K,KAAKC,MAAMw3K,YAAc,+EAOzCtpJ,IAA3BnuB,KAAKC,MAAM0rI,aAA6B3rI,KAAKC,MAAM0rI,cAClDwrC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ5H,cAAe,WAGZhB,KAAKC,MAAM2rI,iBACVurC,EAAAh3K,EAAAC,cAAC82K,EAAD,MAEJC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CAAMvpK,GAAI,GAAV,sBAGAqpK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEt2K,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBk2K,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE13K,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN0+G,YAAY,WACVr7G,EAAKy2H,UAAU,aAGnBt5H,eAAe,EACfC,SAAiC,YAAtBP,KAAKwH,MAAM0J,QAEtBimK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEv2K,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBk2K,EAAAh3K,EAAAC,cAACs3K,EAAA,EAAD,CACEj3J,YAAa,CACXvP,OAAO,WAETkO,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAIT81K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACE30K,SAAU,EACVD,WAAY,GAFd,aAQJ00K,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE13K,UAAW,CACT6B,EAAE,EACFzB,MAAM,IACN0+G,YAAY,WACVr7G,EAAKy2H,UAAU,YAGnBt5H,eAAe,EACfC,SAAiC,WAAtBP,KAAKwH,MAAM0J,QAEtBimK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEv2K,GAAI,EACJC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBk2K,EAAAh3K,EAAAC,cAACs3K,EAAA,EAAD,CACEj3J,YAAa,CACXvP,OAAO,UAETkO,UAAW,CACTjd,KAAK,OACLlC,MAAM,CACJoB,GAAG,MAIT81K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACE30K,SAAU,EACVD,WAAY,GAFd,cAYY,YAAtBzC,KAAKwH,MAAM0J,OACTimK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJkF,GAAI,EACJ9M,cAAe,UAGZi2K,GAAyB7lC,IAAiCpxI,KAAKC,MAAM2rI,iBACpEurC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEvpK,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBk2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACExuK,UAAW,SACXlD,WAAY,UACZigB,KAAI,sBAAAjf,OAAwBwqI,EAAmBtzD,MAA3C,KAAAl3E,OAAoD3G,KAAKC,MAAMyJ,YAAYqoB,KAAK/gB,QAHtF,wDAOAmmK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACE3xK,GAAI,EACJrD,KAAM,MACNC,MAAO,UACPH,KAAM,qBAKZq+G,EACExgH,KAAKwH,MAAMuV,WAAWsN,QAAQpN,QAC5Bk6J,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ5H,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACu3K,EAAA,EAADh4K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4H,KAAM7H,KAAKwH,MAAMuV,WAAWsN,QAAQrN,OACpC4B,WAAU,kCACVF,kBAAmB1e,KAAK0e,kBAAkBC,KAAK3e,MAC/C6e,SAAW7e,KAAKC,MAAM4e,SAAW7e,KAAKC,MAAM4e,SAAW,yBACvD4G,eAAiBzlB,KAAKC,MAAM8kJ,UAAY/kJ,KAAKwH,MAAM66I,wBAA0B,8BAAgC,6BAG/GriJ,KAAKC,MAAM4rI,oBACbsrC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ5H,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEvpK,GAAI,EACJhO,MAAO,EACPkB,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEvpK,GAAI,EACJ/M,WAAY,SACZC,cAAe,MACfC,eAAgBjB,KAAKC,MAAM+iH,oBAAsB,gBAAkB,YAGjEhjH,KAAKC,MAAM+iH,qBACTm0D,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEv3K,MAAO,EACPwG,SAAU,MACVvF,WAAY,SACZC,cAAe,OAEfm2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACE30K,SAAU,EACVD,WAAY,EACZoG,UAAW,OACXxC,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfnE,MAAOtC,KAAKC,MAAM+iH,oBAAoB1gH,MAAQtC,KAAKC,MAAM+iH,oBAAoB1gH,MAAQ,aAEpFtC,KAAKC,MAAM+iH,oBAAoBpgH,OAMtC5C,KAAKwH,MAAM4tK,eACT+B,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEv3K,MAAO,EACPwG,SAAU,MACVvF,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBk2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACE30K,SAAU,EACVD,WAAY,EACZH,MAAO,YACPuG,UAAW,QACXlD,WAAY,YACZC,QAAU,SAACkB,GAAD,OAAO3D,EAAK69G,uBAAuB,OAN/C,YAQYhhH,KAAKwH,MAAM4tK,cAAcloK,QAAQ,GAR7C,IAQkDlN,KAAKC,MAAMuJ,iBAMrE2tK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEhmK,IAAK,EACL9N,KAAM,SACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZyJ,YAAa,aACbxL,gBAAiB,SACjB8N,UAAW,kBACXivG,YAAa,gBACbphG,SAAUrc,KAAK0gH,iBAAiB/hG,KAAK3e,MACrCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,SAC7C8D,MAAO1K,KAAKwH,MAAMm2G,WAAW39G,KAAKwH,MAAM0J,QAAUlR,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMm2G,WAAW39G,KAAKwH,MAAM0J,SAAShE,UAAY,KAEnIiqK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK6E,IAAK,SAAAia,GAAU,OAC5Bo3J,EAAAh3K,EAAAC,cAACw3K,EAAA,EAAD,CACE73J,WAAYA,EACZlZ,IAAG,YAAAF,OAAcoZ,GACjBy+F,YAAa,kBAAIr7G,EAAK69G,uBAAuBjhG,IAC7Cxf,SAAU4C,EAAKqE,MAAMi5G,oBAAoBt9G,EAAKqE,MAAM0J,UAAYI,SAASyO,SAMnFo3J,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ9I,MAAO,EACPiB,WAAY,SACZE,eAAgB,UAGdjB,KAAKC,MAAMyJ,YAAYqwB,UAAUC,kBAAkBkF,UAAUp5B,IAAI,SAAC6kI,EAAaj+H,GAC7E,IAAMmrK,EAAeltC,EAAaxoI,KAClC,OACEg1K,EAAAh3K,EAAAC,cAAC03K,EAAA,EAAD,CACExyK,YAAa,CACXxF,MAAM,CAAC,EAAE,IACToH,SAAS/D,EAAKqE,MAAM+4G,eACpBt5G,UAAU9D,EAAKlD,MAAMwB,MAAMC,OAAO2oB,SAEpCxjB,IAAG,WAAAF,OAAa+F,GAChBjM,YAAc,SAAAqG,GAAC,OAAI3D,EAAKknB,QAAQvjB,EAAE+wK,KAEhCltC,EAAan9H,WAQ3B2pK,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE13K,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGLuuK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEt2K,WAAY,SACZC,cAAe,UAGbhB,KAAKC,MAAM83K,eACTZ,EAAAh3K,EAAAC,cAACi3K,EAAA,EACKr3K,KAAKC,MAAM83K,gBAGjBZ,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEh1K,KAAM,QACNC,MAAO,WACPH,KAAOnC,KAAKC,MAAM6rI,cAAgB9rI,KAAKC,MAAM6rI,cAAiB9rI,KAAKC,MAAM2rI,gBAAkB,YAAc,WAI/GurC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAGT7I,KAAKC,MAAMgsI,cACTkrC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAK/xJ,KAAN,CACE0yJ,mBAAoBh4K,KAAKC,MAAM+3K,mBAC/BlvK,wBAAyB,CACvBC,OAAO/I,KAAKC,MAAMgsI,iBAKtBkrC,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAK/xJ,KAAN,CACEhjB,MAAO,YADT,oDAGqDtC,KAAKC,MAAM2rI,gBAAkB5rI,KAAKwH,MAAM4tK,cAAcloK,QAAQ,GAAK,MAHxH,IAGiIlN,KAAKwH,MAAM2tK,aAAen1K,KAAKC,MAAM2rI,gBAAX,kBAAAjlI,OAA+C3G,KAAKC,MAAMyJ,YAAYsH,MAAtE,KAAArK,OAA+E3G,KAAKC,MAAMmT,iBAA1F,aAAwH,GAHnR,MAQN+jK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEv3K,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAGhBq2K,GACEH,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEx3K,GAAI,EACJE,GAAI,EACJ6I,GAAI,EACJ9I,MAAO,EACP0B,aAAc,EACdT,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBP,gBAAiB,cACjB6E,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOsoB,YAE7CmtJ,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAGT7I,KAAKC,MAAM8kJ,SAAX,0HAGE,4GAIN/kJ,KAAKC,MAAM8kJ,UACToyB,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJyuB,UAAU,EACV7pB,MAAO,gCACPo1G,QAAS5iH,KAAKwH,MAAM66I,wBACpBhmI,SAAW,SAAAvV,GAAC,OAAI3D,EAAK6yK,8BAA8BlvK,EAAE4e,OAAOk9F,aAMpE5iH,KAAKC,MAAMyJ,YAAYqwB,UAAUC,kBAAkBkF,UAAUp5B,IAAI,SAAC6kI,EAAaj+H,GAC7E,IAAMmrK,EAAeltC,EAAaxoI,KAClC,OACEg1K,EAAAh3K,EAAAC,cAAC03K,EAAA,EAAD,CACExyK,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,IACTmH,UAAU9D,EAAKlD,MAAMwB,MAAMC,OAAO2oB,SAEpCxjB,IAAG,WAAAF,OAAa+F,GAChBjM,YAAc,SAAAqG,GAAC,OAAI3D,EAAKknB,QAAQvjB,EAAE+wK,KAEhCltC,EAAan9H,YAS3BxN,KAAKwH,MAAMuV,WAAWmkG,QAAQjkG,QAChCk6J,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ5H,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACu3K,EAAA,EAADh4K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEE4e,SAAQ,uBACRhX,KAAM7H,KAAKwH,MAAMuV,WAAWmkG,QAAQlkG,OACpC4B,WAAU,gCACVF,kBAAmB1e,KAAK0e,kBAAkBC,KAAK3e,UAInDm3K,EAAAh3K,EAAAC,cAACg3K,EAAA,EAAD,CACE13K,UAAW,CACT6B,EAAE,EACFqH,GAAG,IAGLuuK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEt2K,WAAY,SACZC,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEh1K,KAAM,QACNF,KAAM,WACNG,MAAO,aAET60K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJlG,SAAU,EACVJ,MAAO,WACPuG,UAAW,UAGT7I,KAAKC,MAAMg4K,YAAcj4K,KAAKC,MAAMg4K,YAApC,mBAAAtxK,OAAuE3G,KAAKC,MAAM2rI,gBAA0B,GAAR,MAApG,KAAAjlI,OAAmH3G,KAAKwH,MAAM2tK,aAA9H,mDAGJgC,EAAAh3K,EAAAC,cAAC03K,EAAA,EAAD,CACExyK,YAAa,CACXsD,GAAG,EACH9I,MAAM,CAAC,EAAE,KAEXW,YAAaT,KAAKw2K,iBAAiB73J,KAAK3e,OAL1C,cAeTA,KAAKwH,MAAMuV,WAAW/c,KAAKwH,MAAM0J,QAAQ+L,QAmExCk6J,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ5H,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACu3K,EAAA,EAADh4K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEye,kBAAmB1e,KAAK0e,kBAAkBC,KAAK3e,MAC/C6H,KAAM7H,KAAKwH,MAAMuV,WAAW/c,KAAKwH,MAAM0J,QAAQ8L,OAC/C4B,WAAU,cAAAjY,OAAgB3G,KAAKwH,MAAM0J,OAA3B,eACV2N,SAAQ,GAAAlY,OAAK3G,KAAK+C,cAAc0K,WAAWzN,KAAKwH,MAAM0J,QAA9C,qBA3EZimK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ5H,cAAe,UAEfm2K,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEhmK,IAAK,EACL9N,KAAM,SACN8zB,UAAU,EACVt1B,OAAQ,QACRP,aAAc,EACdiB,WAAY,IACZ+Y,UAAWC,IAAOoT,MAClB3iB,YAAa,aACbxL,gBAAiB,SACjB8N,UAAW,kBACX6N,SAAUrc,KAAK0gH,iBAAiB/hG,KAAK3e,MACrCuF,OAAM,aAAAoB,OAAe3G,KAAKC,MAAMwB,MAAMC,OAAOkF,SAC7C62G,YAAW,UAAA92G,OAAY3G,KAAKwH,MAAM2tK,aAAvB,WACXzqK,MAAoD,OAA7C1K,KAAKwH,MAAMm2G,WAAW39G,KAAKwH,MAAM0J,QAAmBlR,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMm2G,WAAW39G,KAAKwH,MAAM0J,SAASgS,WAAa,KAE7Ii0J,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ7H,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBk2K,EAAAh3K,EAAAC,cAACw3K,EAAA,EAAD,CACE73J,WAAY,GACZy+F,YAAa,kBAAIr7G,EAAK69G,uBAAuB,KAC7CzgH,SAAUP,KAAKwH,MAAMi5G,oBAAoBzgH,KAAKwH,MAAM0J,UAAYI,SAAS,MAE3E6lK,EAAAh3K,EAAAC,cAACw3K,EAAA,EAAD,CACE73J,WAAY,GACZy+F,YAAa,kBAAIr7G,EAAK69G,uBAAuB,KAC7CzgH,SAAUP,KAAKwH,MAAMi5G,oBAAoBzgH,KAAKwH,MAAM0J,UAAYI,SAAS,MAE3E6lK,EAAAh3K,EAAAC,cAACw3K,EAAA,EAAD,CACE73J,WAAY,GACZy+F,YAAa,kBAAIr7G,EAAK69G,uBAAuB,KAC7CzgH,SAAUP,KAAKwH,MAAMi5G,oBAAoBzgH,KAAKwH,MAAM0J,UAAYI,SAAS,MAE3E6lK,EAAAh3K,EAAAC,cAACw3K,EAAA,EAAD,CACE73J,WAAY,IACZy+F,YAAa,kBAAIr7G,EAAK69G,uBAAuB,MAC7CzgH,SAAUP,KAAKwH,MAAMi5G,oBAAoBzgH,KAAKwH,MAAM0J,UAAYI,SAAS,QAG7E6lK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEzuK,GAAI,EACJ3H,eAAgB,UAEhBk2K,EAAAh3K,EAAAC,cAAC03K,EAAA,EAAD,CACExyK,YAAa,CACXxF,MAAM,CAAC,EAAE,IACToH,SAASlH,KAAKwH,MAAM+4G,eACpBl6G,MAAM,CACJ48G,cAAc,eAGlBxiH,YAAaT,KAAKwH,MAAM+4G,eAAiB,KAAOvgH,KAAK01K,cAAc/2J,KAAK3e,OAEvEA,KAAKwH,MAAM0J,WAsB1BimK,EAAAh3K,EAAAC,cAACi3K,EAAA,EAAD,CACEv3K,MAAO,EACPiB,WAAY,SACZC,cAAe,SACfC,eAAgB,WAGZjB,KAAKC,MAAM2rI,iBAAmB5rI,KAAKwH,MAAMk5B,kBACzCy2I,EAAAh3K,EAAAC,cAAC82K,EAAD,MAGFl3K,KAAKC,MAAM+I,SAAWhJ,KAAKC,MAAM+I,SAAW,aAp1CpCnG,aA61CP4oI,8HCr2CTze,qdAMqBrlH,EAAUC,kMAKjC,OACEW,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACEsF,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfuH,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACEmsH,GAAI,EACJtuH,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,WAEP1e,WAAY,SACZE,eAAgB,cAGdjB,KAAKC,MAAMqC,OACXiG,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACEnH,GAAI,EACJvB,MAAO,OACPiC,OAAQ,OACRP,aAAc,MACdd,gBAAiBV,KAAKC,MAAMqC,QAIhCiG,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACE9F,SAAU,EACVD,WAAY,EACZoG,UAAW,OACXvG,MAAO,YACP+D,MAAO,CACL48G,cAAc,eAGfjjH,KAAKC,MAAMuN,QAGhBjF,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACEnC,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,WAEP1e,WAAY,SACZE,eAAgB,YAEhBsH,EAAApI,EAAAC,cAACoI,EAAA,EAAD,CACE9F,SAAU,EACVD,WAAY,EACZH,MAAO,WACPuG,UAAW,QACXxC,MAAO,CACLG,WAAW,UAEbsC,wBAAyB,CACvBC,OAAQ/I,KAAKC,MAAMyK,kBAnEG7H,aA6ErBmqH,gKCzEToc,6MAEJ5hI,MAAQ,KAGRzE,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,2JAK9CD,KAAKkD,iMAGkByE,EAAWC,mEAClC5H,KAAKkD,kJAGE,IAAAC,EAAAnD,KAEHsP,EAAgBtP,KAAKC,MAAMqP,cAK/B,OAJKA,GAAkBA,EAActL,SACnCsL,EAAgB3P,OAAOoE,KAAK/D,KAAKC,MAAM0P,kBAIvCtL,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,wBAAwBtF,MAAO,EAAGkB,cAAe,UACxDqD,EAAAlE,EAAAC,cAAC83K,EAAA,EAADv4K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEm4G,KAAMp4G,KAAKC,MAAMm4G,KACjBp2G,SAAUhC,KAAKC,MAAM+B,YAEvBqC,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CAAMc,GAAG,cAAcpE,cAAe,UAElCsO,EAAcxJ,IAAI,SAAAkL,GAChB,IAAMtH,EAAcvG,EAAKlD,MAAM0P,gBAAkBxM,EAAKlD,MAAM0P,gBAAgBqB,GAAS,KACrF,OAAKtH,EAIHrF,EAAAlE,EAAAC,cAAC8zJ,EAAA,EAADv0J,OAAAC,OAAA,CACEoR,MAAOA,GACH7N,EAAKlD,MAFX,CAGE4G,IAAG,SAAAF,OAAWqK,GACdtH,YAAaA,EACbyuG,MAAK,aAAAxxG,OAAeqK,GACpBinG,OAAM,cAAAtxG,OAAgBqK,GACtB+mG,eAAgB50G,EAAKlD,MAAM83G,gBAAkBgQ,OAVxC,gBA1CEllH,aA+DVumI,wuFCrEf5kI,EAAAC,QAAA,CAAkB0zK,OAAA,uBAAAnyK,KAAA,00PCGZ6iH,EAAY,SAAA34G,GAAA,IAAElH,EAAFkH,EAAElH,SAAU80G,EAAZ5tG,EAAY4tG,UAAc79G,EAA1BN,OAAAy4K,EAAA,EAAAz4K,CAAAuQ,EAAA,iCAChBmoK,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD,CACE/2K,EAAG,EACHgE,OAAQ,EACR3E,GAAI,OACJE,GAAI,OACJiB,OAAQ,OACRP,aAAc,EACd+E,SAAU,OACVzG,MAAQG,EAAMH,MAAQG,EAAMH,MAAQ,OACpCqH,SAAWlH,EAAMkH,SAAWlH,EAAMkH,SAAW,OAC7Cb,SAAWrG,EAAMqG,SAAWrG,EAAMqG,SAAW,SAE7C+xK,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD,CACElsK,IAAK,IACLyB,OAAQ,EACRxB,MAAO,IACPuB,SAAU,YAEVyqK,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAOnyK,KAAR,CACEg1J,UAAQ,EACR/4J,KAAM,QACNC,KAAM,QACNuD,QAASk4G,EACT72G,UAAYhH,EAAMgH,UAAYhH,EAAMgH,UAAa,eAGrDoxK,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD,CACEv2K,OAAQ,OACR0d,KAAM,WACNze,cAAe,SACfwa,UAAW,CAAEvb,EAAMs4K,QAAU98J,IAAO4S,GAAK,MACzChoB,MAAO,CACLE,SAAU,OACViyK,iBAAiB,YACjBC,mBAAmB,eACnBC,eAAiBz4K,EAAM8K,WAAqB,KAAR,MACpC4tK,gBAAgB,mCAChB5tK,WAAY9K,EAAM8K,WAAa9K,EAAM8K,WAAa,MAEpDrK,gBAAiB,UAEhBsI,KAKP6/G,EAAU9K,OAAS,SAAC99G,GAAD,OACjBo4K,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD,CACEx4K,MAAO,EACPgO,GAAI,CAAC,EAAE,GACPswG,GAAI,CAAC,EAAE,GACP78F,GAAKthB,EAAMshB,GAAKthB,EAAMshB,GAAMthB,EAAMmC,KAAO,EAAI,CAAC,EAAE,GAChDmlH,aAAetnH,EAAMsnH,aAAetnH,EAAMsnH,aAAe,kBAEzD8wD,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD,CACEv4K,GAAI,CAAC,EAAE,GACPgB,WAAY,SACZC,cAAe,UAEbf,EAAMmC,MAAQi2K,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD,CAAOx4K,MAAQG,EAAM6oH,WAAa7oH,EAAM6oH,WAAa,OAAShnH,IAAK7B,EAAMmC,OACzFi2K,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAQxqD,GAATnuH,OAAAC,OAAA,CACEkO,GAAI,EACJpL,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPuG,UAAW,SACXD,GAAI3I,EAAMmC,KAAO,EAAI,EACrB8I,WAAY,aACRjL,EAAMu3G,YAETv3G,EAAMwmB,OAGPxmB,EAAMywH,UACN2nD,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAQ5pK,GAAT/O,OAAAC,OAAA,CACE2hB,GAAI,CAAC,EAAE,GACP9e,WAAY,EACZC,SAAU,CAAC,EAAE,GACb60G,WAAY,IACZj1G,MAAO,YACPuG,UAAW,UACP5I,EAAM24K,eAET34K,EAAMywH,UAITzwH,EAAMo8J,WACNgc,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAQ5pK,GAAT,CAAY6S,GAAI,EAAG7e,SAAU,CAAC,EAAE,GAAImG,UAAW,SAAUpG,WAAY,EAAG80G,WAAY,IAAKj1G,MAAO,aAC7FrC,EAAMo8J,cAOjBxzC,EAAU7K,KAAO,SAAA3qG,GAAA,IAAErK,EAAFqK,EAAErK,SAAa/I,EAAfN,OAAAy4K,EAAA,EAAAz4K,CAAA0T,EAAA,qBACfglK,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD34K,OAAAC,OAAA,CACEE,MAAO,EACPC,GAAI,CAAC,EAAE,IACHE,GAEH+I,IAaL6/G,EAAU5K,OAAS,SAAAt9F,GAAA,IAAE3X,EAAF2X,EAAE3X,SAAFrJ,OAAAy4K,EAAA,EAAAz4K,CAAAghB,EAAA,qBACjB03J,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD,CACE74J,KAAM,WACNxe,eAAgB,SAChByqH,UAAW,EACXx/G,YAAa,aACbnM,GAAI,CAAC,EAAE,GACPF,GAAI,GAEHmJ,IAKL6/G,EAAUgwD,WAAa,SAAAj7I,GAAA,IAAEh4B,EAAFg4B,EAAEh4B,QAAFjG,OAAAy4K,EAAA,EAAAz4K,CAAAi+B,EAAA,oBACrBy6I,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAD,CACE1qK,SAAU,WACVxB,IAAK,IACLG,KAAM,IACNuoK,EAAG,EACHzmJ,GAAI,SAEJgqJ,EAAAl4K,EAAAC,cAACk4K,EAAA,EAAOld,QAAR,CACEx1J,QAASA,EACTu1J,UAAQ,EACR/4J,KAAM,YACNC,KAAM,YAKGwmH,uCCtJf3iG,EAAAhc,EAAAkc,EAAA,sBAAAsB,IAAAxB,EAAAhc,EAAAkc,EAAA,sBAAAgD,IAAAlD,EAAAhc,EAAAkc,EAAA,sBAAAqG,IAAAvG,EAAAhc,EAAAkc,EAAA,sBAAAuG,IAAA,IAAAmsJ,EAAA5yJ,EAAA,IAGMqC,EAAa,CACjBD,MAAO,UACPY,MAAO,OACPxB,KAAM,UACNqxJ,SAAU,UACV3vJ,MAAO,UACPqD,OAAQ,UACRE,IAAK,UACLqsJ,QAAS,UACTC,cAAe,WAIXv3K,EAAS,CACbs3K,QAAS,CACPrxJ,KAAMY,EAAWywJ,QACjBp2K,KAAMs2K,YAAc3wJ,EAAWywJ,SAC/BlxJ,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWywJ,UACnCr9J,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWywJ,WAErCtxJ,KAAM,CACJC,KAAMY,EAAWb,KACjB9kB,KAAMs2K,YAAc3wJ,EAAWb,MAC/BI,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWb,OACnC/L,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWb,QAErC0B,MAAO,CACLzB,KAAMY,EAAWa,MACjBxmB,KAAM2lB,EAAWW,MACjBpB,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWa,QACnCzN,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWa,SAErCqD,OAAQ,CACN9E,KAAMY,EAAWkE,OACjB7pB,KAAMs2K,YAAc3wJ,EAAWkE,QAC/B3E,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWkE,SACnC9Q,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWkE,UAErCE,IAAK,CACHhF,KAAMY,EAAWoE,IACjB/pB,KAAMs2K,YAAc3wJ,EAAWoE,KAC/B7E,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWoE,MACnChR,KAAM,CAAC,KAAM0Q,YAAM,GAAK9D,EAAWoE,QAKjCjF,EAAOhmB,EAAOgmB,KACd0B,EAAQ1nB,EAAO0nB,MACfqD,EAAS/qB,EAAO+qB,OAChBE,EAAMjrB,EAAOirB,IAOJpE,wKCtDT2oG,6MAEJ1pH,MAAQ,CACNglG,SAAS,KACT2sE,kBAAkB,QAIpBp2K,cAAgB,gFAGV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAKo5K,oMAGkBzxK,EAAUC,yEACjC5H,KAAKkD,YACC4sH,EAAuBnoH,EAAUmoH,uBAAyB9vH,KAAKC,MAAM6vH,uBACvCnoH,EAAU6rB,qBAAuBpkB,KAAKC,UAAU1H,EAAU6rB,uBAAyBpkB,KAAKC,UAAUrP,KAAKC,MAAMuzB,sBAC/Gs8F,IAChC9vH,KAAKo5K,0RAMDzrE,EAAc3tG,KAAKC,MAAM0tG,cAAe,EAEzC3tG,KAAKC,MAAMuzB,qBAAwBxzB,KAAKC,MAAM6vH,wBAAyBniB,IAAe3tG,KAAKwH,MAAMglG,oDAC7F,cAGLxsG,KAAKC,MAAMusG,WAAYxsG,KAAKC,MAAMk5K,2DAC7Bn5K,KAAKgI,SAAS,CACnBwkG,SAASxsG,KAAKC,MAAMusG,SACpB2sE,kBAAkBn5K,KAAKC,MAAMk5K,+BAI3BE,EAA8Br5K,KAAKC,MAAMo5K,6BAA+B,EAAC,EAAK1rE,GAKpC,oBAArC3tG,KAAKC,MAAMmxH,wDAA6CkoD,EAAAt5K,KAAKC,OAAMmxH,sBAAXn/G,MAAAqnK,EAAA35K,OAAAq9G,EAAA,EAAAr9G,CAAoC05K,iEAAqCE,EAAAv5K,KAAK+C,eAAc0qG,mBAAnBx7F,MAAAsnK,EAAA55K,OAAAq9G,EAAA,EAAAr9G,CAAyC05K,8CAFnLl8I,WACAqvE,aAGE2sE,EAAoBn5K,KAAK+C,cAAckO,MAAM,GAC5CjR,KAAK+C,cAAckO,MAAMu7F,GAAUlpG,SAAYtD,KAAK+C,cAAckO,MAAMksB,GAAQ75B,UACnF61K,EAAoB3sE,EAAS/6F,KAAK+6F,EAASv/F,MAAMkwB,EAAOla,IAAI,0BAGvDjjB,KAAKgI,SAAS,CACnBwkG,WACA2sE,2JAIK,IAAAh2K,EAAAnD,KACP,OAAOA,KAAKwH,MAAMglG,SAChBvnF,EAAA9kB,EAAAC,cAACo5K,EAAA,EAAD75K,OAAAC,OAAA,CACEE,MAAO,GACHE,KAAKC,MAAM6D,WAEfmhB,EAAA9kB,EAAAC,cAACq5K,EAAAt5K,EAAD,CACE2yH,MAAO,EACPnvH,SAAU,EACVsrD,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXr6F,SAAU,QACVC,MAAO5rB,WAAWhN,KAAKwH,MAAMglG,UAC7Bp8C,IAAKpjD,WAAWhN,KAAKwH,MAAM2xK,mBAC3BlmD,aAAe,SAAAz9F,GAAC,MAAI,KAAKryB,EAAKJ,cAAcS,YAAYgyB,EAAE,KAEzD,SAAAniB,GAAA,IAAG6/G,EAAH7/G,EAAG6/G,WAAH7/G,EAAeulB,MAAf,OACC3T,EAAA9kB,EAAAC,cAAA,QACEiG,MAAQlD,EAAKlD,MAAM0yH,aAAexvH,EAAKlD,MAAM0yH,aAAe,CAC1DlqH,QAAQ,QACRnG,MAAM,YACNkE,WAAW,SACX0E,WAAW/H,EAAKlD,MAAMwB,MAAM0J,MAAMyb,QAClCnkB,WAAWU,EAAKlD,MAAMwB,MAAM8Z,YAAY,GACxC1S,UAAW1F,EAAKlD,MAAM+B,SAAW,SAAW,QAC5CU,SAAUS,EAAKlD,MAAM+B,SAAW,QAAUmB,EAAKlD,MAAMwB,MAAM4Z,UAAU,IAEvE83G,IAAKD,OAKuB,qBAAxBlzH,KAAKC,MAAMywH,UAA4B1wH,KAAKC,MAAMywH,WACxDzrG,EAAA9kB,EAAAC,cAACs5K,EAAA,EAAD/5K,OAAAC,OAAA,CACE6C,WAAY,EACZC,SAAU,CAAC,EAAE,GACbJ,MAAO,YACPuG,UAAW,CAAC,SAAS,UACjB7I,KAAKC,MAAM24K,eAEf3zJ,EAAA9kB,EAAAC,cAACo5K,EAAA,EAAKl0J,KAAN,CAAW7iB,WAAY,UAAWH,MAAO,UAAWI,SAAU,WAAY1C,KAAKC,MAAMywH,UAAY,6BAMzGzrG,EAAA9kB,EAAAC,cAACo5K,EAAA,EAAD,CACE15K,MAAO,EACPiB,WAAY,SACZE,eAAgBjB,KAAKC,MAAMkxH,aAAe,UAE1ClsG,EAAA9kB,EAAAC,cAACo5K,EAAA,EAAD,CACEn3K,KAAM,iBAtHoBQ,aA6HrBquH,uGChITyoD,mLAEK,IAAAz0K,EAAAlF,KAED45K,EAAgB,kBACpBxyK,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACEhF,MAAiC,OAAzB4C,EAAKjF,MAAM4xH,UAAsB,UAAY,UACrD1vH,KAAgC,OAAzB+C,EAAKjF,MAAM4xH,UAAsB,cAAgB,gBACxDxvH,KAAO6C,EAAKjF,MAAMuF,SAAWN,EAAKjF,MAAMuF,SAAaN,EAAKjF,MAAM+B,SAAW,QAAU,SAIzF,OACEoF,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACEvG,WAAY,SACZC,cAAe,MACflB,MAAQE,KAAKC,MAAMH,MAAQE,KAAKC,MAAMH,MAAQ,EAC9CmB,eAAgBjB,KAAKC,MAAMgB,eAAiBjB,KAAKC,MAAMgB,eAAiB,YAGpEjB,KAAKC,MAAM45K,SAAgC,SAArB75K,KAAKC,MAAM45K,UACjCzyK,EAAAjH,EAAAC,cAACw5K,EAAD,MAEH55K,KAAKC,MAAM+I,SAEW,UAArBhJ,KAAKC,MAAM45K,SACTzyK,EAAAjH,EAAAC,cAACw5K,EAAD,cA1BkB/2K,aAiCf82K,2BCnCfn1K,EAAAC,QAAA,CAAkBiX,YAAA,qCAAAO,gBAAA,yCAAAN,KAAA,8BAAAC,kBAAA,m0OCAlBpX,EAAAC,QAAA,CAAkBq1K,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,myuCCEZ1yD,mLAEF,OACEpnH,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZE,eAAgB,UACZjB,KAAKC,MAAM6D,WAEf5D,EAAAC,EAAAC,cAACO,EAAA,EAAWX,KAAKC,MAAMolB,aAErBrlB,KAAKC,MAAM2C,MACT1C,EAAAC,EAAAC,cAACO,EAAA,EAASX,KAAKC,MAAM0C,UAAY3C,KAAKC,MAAM2C,cAZ/BC,aAmBVykH,yHCCA2yD,mLAfX,OACEzjE,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACE11G,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAW,CAACC,IAAO,kBACtB+6F,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAW,CAACC,IAAO,sBAAuB7a,GAAI,CAAC,EAAE,KACtD41G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAW,CAACC,IAAO,sBAAuB7a,GAAI,CAAC,EAAE,KACtD41G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAW,CAACC,IAAO,sBAAuB7a,GAAI,CAAC,EAAE,cAVnCiC,aCFvB4gI,mLAEF,OACEjtB,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD92G,OAAAC,OAAA,CAAQgG,QAAS5F,KAAKC,MAAMQ,aAAiBT,KAAKC,MAAMqF,aACtDkxG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEz1G,cAAe,SACfD,WAAY,SACZE,eAAgB,UAEhBu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,EAAG2I,QAASzI,KAAKC,MAAM0jI,UAAY,OAAS,QACvDntB,EAAAr2G,EAAAC,cAAC85K,EAAD,OAEF1jE,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM32G,MAAO,EAAG2I,QAASzI,KAAKC,MAAM0jI,UAAY,OAAS,QACtD3jI,KAAKC,MAAMyjI,qBAbG7gI,aAqBZ4gI,qsWCbTpZ,6MAEJ7iH,MAAQ,CACNurK,OAAM,KAIRhwK,cAAgB,OAChB0E,oBAAqB,IA8DrB0nB,+BAAY,SAAA/O,IAAA,IAAA+5J,EAAAnyK,EAAAoX,EAAAqQ,EAAA88C,EAAAc,EAAAC,EAAA6mD,EAAAimD,EAAAC,EAAA/qJ,EAAAu3B,EAAAD,EAAA0zH,EAAAjpJ,EAAA/R,EAAAjM,EAAAsN,EAAA45J,EAAAC,EAAAvkK,EAAArD,EAAA6nK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1M,EAAAp8J,UAAA,OAAA9B,EAAAjQ,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,UAAMupK,EAAN7L,EAAAtqK,OAAA,QAAAmqB,IAAAmgJ,EAAA,GAAAA,EAAA,GAAgB,MAEtBppK,EAAKuC,oBAAuBvC,EAAKjF,MAAMy9B,UAAax4B,EAAKjF,MAAM+Q,OAAU9L,EAAKjF,MAAMyJ,aAAgBxE,EAAKjF,MAAM6vH,qBAFzG,CAAAxvG,EAAA1P,KAAA,eAAA0P,EAAAe,OAAA,UAGD,GAHC,UAMJrZ,EAAyB,OAAdmyK,EACX/6J,EAAYla,EAAKjF,MAAMmf,UACxB+6J,IACHA,EAAY/6J,EAAUjd,MAGlBstB,EAAarQ,EAAUnf,MACvBssE,EAAkD,qBAA5BrnE,EAAKjF,MAAMssE,cAA+BrnE,EAAKjF,MAAMssE,aAC3Ec,EAAgD,qBAA3BnoE,EAAKjF,MAAMotE,aAA8BnoE,EAAKjF,MAAMotE,YACzEC,EAAkD,qBAA5BpoE,EAAKjF,MAAMqtE,cAA+BpoE,EAAKjF,MAAMqtE,aAE3E6mD,EAAiBjvH,EAAKnC,cAAciS,gBAAgB,CAAC,aACrDolK,EAAoBl1K,EAAKnC,cAAc0K,WAAW0mH,EAAe9oD,GAAG6kD,UACpEmqD,EAAoBn1K,EAAKnC,cAAc0K,WAAW0mH,EAAe7iD,GAAG4+C,UAEtE5gG,EAAS,MACTpqB,EAAKjF,MAAM+Q,MAtBL,CAAAsP,EAAA1P,KAAA,SAAA0P,EAAA6R,GAuBAgoJ,EAvBA75J,EAAA1P,KAwBD,aAxBC0P,EAAA6R,GAAA,uBA0BE00B,EAAev1C,SAASe,KAAKg5B,MAAM,KACnCub,EAAiBC,EAAc,OAGjCyzH,EAAe,GACbjpJ,EA/BF,mBAAA1qB,OA+BqCzB,EAAKjF,MAAMyJ,YAAYmD,WAG7C,QAFbyS,EAAapa,EAAKnC,cAAcsvC,cAAchhB,KAEzB/R,EAAW,IAAMA,EAAW,GAAGlV,MAAQkV,EAAW,GAAGlV,KAAKpG,OAAO,GAlCxF,CAAAsc,EAAA1P,KAAA,SAmCF0pK,EAAeh7J,EAnCbgB,EAAA1P,KAAA,wBAAA0P,EAAA1P,KAAA,GAwCQ8P,QAAQqD,IAAI,CACpB7e,EAAKnC,cAAcyjD,uBAAuBthD,EAAKjF,MAAMyJ,YAAY2hE,GAAGx+D,QAAQ+5C,EAAeC,GAC3F3hD,EAAKnC,cAAcyjD,uBAAuBthD,EAAKjF,MAAMyJ,YAAY4nE,GAAGzkE,QAAQ+5C,EAAeC,KA1C3F,QAAAxzC,EAAAiN,EAAA3M,KAAAgN,EAAAhhB,OAAAs7K,EAAA,EAAAt7K,CAAA0T,EAAA,GAsCAknK,EAtCA55J,EAAA,GAuCA65J,EAvCA75J,EAAA,GA6CE1K,EAAY,EACZrD,EAAgB,EACd6nK,EAAgBF,EAAcv2K,OAC9B02K,EAAgBF,EAAcx2K,OAEpCs2K,EAAantK,KAAK,CAChB7K,MAAM6xH,EAAe9oD,GAAG/oE,MAAM4nH,IAC9B9kH,GAAE,GAAAuB,OAAIzB,EAAKjF,MAAM+Q,MAAf,KAAArK,OAAwByzK,EAAxB,QACFhwK,KAAKmwK,EAAcz0K,IAAI,SAACoE,EAAEwC,GACxB,IAAMoJ,EAAI5Q,EAAKnC,cAAcqP,YAAwB,IAAZlI,EAAEqH,WAAgBiE,OAAO,oBAC5DO,EAAI/I,WAAW9H,EAAKnC,cAAc6lC,QAAQ1jC,EAAKnC,cAAc0R,iBAAiBvK,EAAE2+B,IAAI,IAAI5lB,IAAI,MAAMhW,MAAM,MAG9G,OAFA2F,EAAgBxB,KAAKqE,IAAI7C,EAAcmD,GAEhC,CAAED,IAAGC,IAAGI,QADC/E,KAAKgF,MAAMH,IAAYwkK,EAAc,UAKzDxkK,EAAY,EACZqkK,EAAantK,KAAK,CAChB7K,MAAM6xH,EAAe7iD,GAAGhvE,MAAM4nH,IAC9B9kH,GAAE,GAAAuB,OAAIzB,EAAKjF,MAAM+Q,MAAf,KAAArK,OAAwB0zK,EAAxB,QACFjwK,KAAKowK,EAAc10K,IAAI,SAACoE,EAAEwC,GACxB,IAAMoJ,EAAI5Q,EAAKnC,cAAcqP,YAAwB,IAAZlI,EAAEqH,WAAgBiE,OAAO,oBAC5DO,EAAI/I,WAAW9H,EAAKnC,cAAc6lC,QAAQ1jC,EAAKnC,cAAc0R,iBAAiBvK,EAAE2+B,IAAI,IAAI5lB,IAAI,MAAMhW,MAAM,MAG9G,OAFA2F,EAAgBxB,KAAKqE,IAAI7C,EAAcmD,GAEhC,CAAED,IAAGC,IAAGI,QADC/E,KAAKgF,MAAMH,IAAYykK,EAAc,UAKrDJ,EAAat2K,QAAUs2K,EAAa,GAAGlwK,KAAKpG,OAAO,GACrDkB,EAAKnC,cAAcwc,cAAc8R,EAAcipJ,GA5E/C,eAiFgC,IAAhCA,EAAa,GAAGlwK,KAAKpG,UACjB22K,EAAWh7K,OAAOC,OAAO,GAAG06K,EAAa,GAAGlwK,KAAK,KAC9C0L,EAAI5Q,EAAKnC,cAAcqP,YAAYuoK,EAAS,oBAAoBh/C,IAAI,EAAE,SAASnmH,OAAO,oBAC/F8kK,EAAa,GAAGlwK,KAAK+C,KAAKwtK,IAGxBC,EAAgB,EAChBC,EAAiB,GAEfC,EAAiB,WACrB,IAAMI,EAAqBh2K,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAMk4G,OACnL,GAAI+iE,EAAmB,CACrB,IAAMC,EAAsB/2J,OAAO6qJ,OAAOiM,GAC1CN,EAAgBO,EAAoBpN,aAAa/gK,WAAWmuK,EAAoBC,IAAI,kBAAkBpuK,WAAWmuK,EAAoBC,IAAI,iBACzIP,EAAiBM,EAAoBnN,cACjC4M,IAAkB11K,EAAKsC,MAAMozK,eAAkB11K,EAAKsC,MAAMqzK,gBAC5D31K,EAAKmD,aAAa,CAChBuyK,gBACAC,eAAgB31K,EAAKsC,MAAMqzK,eAAiB31K,EAAKsC,MAAMqzK,eAAiBA,SAQhFz2J,OAAOqJ,oBAAoB,SAAUqtJ,EAAen8J,KAAfhf,OAAA07K,EAAA,EAAA17K,QAAA07K,EAAA,EAAA17K,CAAAuF,MACrCkf,OAAOmJ,iBAAiB,SAAUutJ,EAAen8J,KAAfhf,OAAA07K,EAAA,EAAA17K,QAAA07K,EAAA,EAAA17K,CAAAuF,MAG5B61K,EAAenhK,IAEfohK,EAAgB,CACpBtjK,UAAU,EACV4jK,UAAU,EACV3jK,SAAQ,EACRC,SAAS,KACThO,SAAQ,EACRsN,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjB9X,eAAc,EACdoB,OAAO,SAAAwI,GAAC,OAAIA,EAAE5H,OACd0V,cAAa9S,EAAKjF,MAAM+B,UAAmB,IAC3CiV,QAAQ,SAAAvM,GAAK,OAAIsC,WAAWtC,GAAOwC,QAAQ,GAAG,KAC9CyL,KAAK,CACH,CAAEq7B,MAAO,CAAE5uC,GAAIF,EAAKjF,MAAM+Q,OAAU5L,GAAI,iBAE1CvE,OAAQ,CAAEuL,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9C0M,aAAa,SAACC,GAAc,IAClBE,EAAUF,EAAVE,MACFD,EAAQC,EAAMC,OAAO,GAC3B,OACEkiK,EAAAp7K,EAAAC,cAACo7K,EAAA,EAAD,CACEriK,MAAOA,GAGiB,kBAAjBC,EAAMC,QAAuBD,EAAMC,OAAOrV,QAC/CoV,EAAMC,OAAOvT,IAAI,SAAAqT,GACf,IAAMxM,EAAewM,EAAMK,QACrBiiK,EAAkBtiK,EAAM/O,KAAKqP,WAEnC,OACE8hK,EAAAp7K,EAAAC,cAACs7K,EAAA,EAAD,CACE70K,IAAKsS,EAAM/T,GACX9C,MAAO6W,EAAM7W,MACbkL,MAAOb,EACPjC,MAAO+wK,SAUnBv2K,EAAKjF,MAAMkJ,YAETjE,EAAKjF,MAAMkJ,YAAcxJ,OAAOoE,KAAKmB,EAAKjF,MAAMkJ,YAAYnF,QAC9DrE,OAAOoE,KAAKmB,EAAKjF,MAAMkJ,YAAYlF,QAAQ,SAAA1C,GACzCy5K,EAAcz5K,GAAK2D,EAAKjF,MAAMkJ,WAAW5H,KAK3CyG,GACF9C,EAAKmD,aAAa,CAChB0qK,OAAM,EACNgI,eACAT,eACAU,gBACAJ,gBACAC,mBAGJvrJ,EAASgrJ,EArLLh6J,EAAAe,OAAA,2BAAAf,EAAA1P,KAAA,GAwLW1L,EAAKnC,cAAc2pE,iBAAiBytG,EAAU1qJ,EAAWvqB,EAAKjF,MAAMy9B,SAASx4B,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAM69B,QAAQ54B,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM89B,cAAc74B,EAAKjF,MAAM4P,QAAQ08D,EAAac,EAAYC,GAxLxN,oBAyLWn/C,KADfmB,EAxLIhP,EAAA3M,OAyLwB3L,GAC1B9C,EAAKmD,aAAL1I,OAAAg8K,EAAA,EAAAh8K,CAAA,CACEozK,OAAM,GACLoH,EAAW7qJ,IA5LZhP,EAAAe,OAAA,2BAAAf,EAAAe,OAAA,SAmMHiO,GAnMG,yBAAAhP,EAAAvO,SAAAqO,EAAApgB,oFA3DNA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,8JAK9CD,KAAKyH,oBAAqB,yPAI1BzH,KAAKkD,kQAILlD,KAAKmvB,2LAIYrnB,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,4LAGgBJ,EAAWC,oGAClC5H,KAAKkD,YAEC4sK,EAAenoK,EAAUqJ,QAAUhR,KAAKC,MAAM+Q,MAC9Cqe,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClD+rK,EAAiBj0K,EAAUm2B,UAAY99B,KAAKC,MAAM69B,QAClDtuB,EAAgB7H,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClD65K,EAAkBl0K,EAAU+1B,WAAa19B,KAAKC,MAAMy9B,SACpDjuB,EAAmB9H,EAAU+H,YAAc1P,KAAKC,MAAMyP,UACtDosK,EAAen0K,EAAUyX,UAAUjd,OAASnC,KAAKC,MAAMmf,UAAUjd,KACjE2tH,GAAwBnoH,EAAUmoH,sBAAwB9vH,KAAKC,MAAM6vH,qBACrEiK,GAA2BpyH,EAAU6W,SAAWxe,KAAKC,MAAMue,SAAa7W,EAAU6W,SAAWxe,KAAKC,MAAMue,SAAWpP,KAAKC,UAAU1H,EAAU6W,QAAQ6Y,YAAcjoB,KAAKC,UAAUrP,KAAKC,MAAMue,QAAQ6Y,UACpM+2F,EAAsBzmH,EAAUhG,cAAgB3B,KAAKC,MAAM0B,cAAgBhC,OAAOkR,OAAOlJ,EAAUhG,cAAcmP,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqBnN,SAAWrE,OAAOkR,OAAO7Q,KAAKC,MAAM0B,cAAcmP,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqBnN,OAEjP83K,GAAgBhM,GAAgB+L,GAAmBD,GAAkBvsJ,GAAkB++F,GAAuB0B,GAAwBiK,EAExI/5H,KAAKqI,aAAa,CAChB0qK,OAAM,GACN,WACA5vK,EAAKgsB,eAEE3f,GAAiBC,KAEpBmjH,EAAWjzH,OAAOC,OAAO,GAAGI,KAAKwH,OACvCxH,KAAKqI,aAAa,CAChB0qK,OAAM,GACN,WACA5vK,EAAK6E,SAAS4qH,6IA2MZ,IAAAvoH,EAAArK,KACFsvB,EAAS,KACPlQ,EAAYpf,KAAKC,MAAMmf,UAEvB9W,OADsC6lB,IAAzB/O,EAAUlR,YAA4BkR,EAAUlR,WACtCqtK,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD,CAAQh1K,KAAK,SAAa,KAEjDotB,EAAa,CACjBhtB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,WACNwB,UAAU,CACR7C,eAAe,eAKfme,EAAUnf,OAASN,OAAOoE,KAAKqb,EAAUnf,OAAO+D,QAClDrE,OAAOoE,KAAKqb,EAAUnf,OAAOgE,QAAQ,SAAA1C,GACnCkuB,EAAWluB,GAAK6d,EAAUnf,MAAMsB,KAKhC6d,EAAUs5F,WAAa/4G,OAAOoE,KAAKqb,EAAUs5F,WAAW10G,QAC1DrE,OAAOoE,KAAKqb,EAAUs5F,WAAWz0G,QAAQ,SAAA1C,GACH,oBAAzB6d,EAAUs5F,UAAUn3G,KAC7BkuB,EAAWluB,GAAK6d,EAAUs5F,UAAUn3G,GAAG8I,EAAKpK,UAQlD,IAAM2D,EAAe6rB,GAAcne,SAASme,EAAW7rB,eAAe,EAAI6rB,EAAW7rB,aAAe,EAC9FD,EAAW8rB,GAAcne,SAASme,EAAW9rB,WAAW,EAAI8rB,EAAW9rB,SAAa3D,KAAKC,MAAM+B,SAAW,EAAI,EAC9G6B,EAAe4rB,GAAcne,SAASme,EAAW5rB,eAAe,EAAI4rB,EAAW5rB,aAAiB7D,KAAKC,MAAM+B,SAAW,EAAI,EAG1H8B,EAAY2rB,EAAW3rB,UAG7B,cAFO2rB,EAAW3rB,UAEVsb,EAAUjd,MAChB,IAAK,eACH,IAAMw7B,EAAiB39B,KAAK+C,cAAciS,gBAAgB,CAAC,QAAS,YAAahV,KAAKC,MAAMy9B,WACtFhwB,EAAeiwB,GAAkBA,EAAev7B,KAAOu7B,EAAev7B,KAAvD,GAAAuE,OAAiE3G,KAAKC,MAAMy9B,SAA5E,QACrBpO,EACEisJ,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,CAAOkC,IAAG,oBAAA6E,OAAsB+G,IAAoB+hB,IAExD,MACA,IAAK,oBAEH,GADAH,EAAS,KACLtvB,KAAKwH,MAAMu0K,mBAAqB/7K,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAMu0K,mBAAmBlnK,GAAG,GAAG,CAC/F,IAAMmnK,EAAWh8K,KAAK+C,cAAcW,iBAAiB1D,KAAKwH,MAAMu0K,kBAAmB,EAAGn4K,EAAc,GAAnF,IAAA+C,OAA4F3G,KAAKC,MAAM+Q,OACxHse,EACEisJ,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD,CACEtoJ,UAAW,MACXC,QAAO,oDAAAroB,OAAsDq1K,IAE7DT,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,CAAOkC,IAAG,2BAAiC2tB,KAInD,MACA,IAAK,cACHH,EAAS,KACT,IAAI2sJ,EAAY,KACZC,EAAa,KAEZl8K,KAAKwH,MAAM20K,aAGVn8K,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM20K,aAAatnK,GAAG,IACtDonK,EAAY,eACZC,EAAa,iBAEbD,EAAY,aACZC,EAAa,cAEf5sJ,EACEisJ,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD,CACEt3K,GAAI,EACJF,GAAI,EACJ2B,aAAc,EACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAiBw7K,GAEjBX,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD,CACE30K,SAAU,EACVD,WAAY,EACZH,MAAO,SAEN25K,KAvBP3sJ,EAAShnB,EA4Bb,MACA,IAAK,kBACH,IAAMohH,EAAiB1pH,KAAK+C,cAAciS,gBAAgB,CAAC,WAAWhV,KAAKC,MAAM69B,UACjFxO,EACEisJ,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,CACE2B,EAAG,MACHC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAe,QAAAiG,OAAU+iH,EAAepnH,MAAMy7I,IAAIxwI,KAAK,KAAxC,UACXzJ,GAEJy3K,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,GACM6vB,EADN,CAEEvuB,MAAO,SACPiB,KAAMunH,EAAetnH,KACrBE,MAAOonH,EAAepnH,MAAM4nH,QAIpC,MACA,IAAK,YACH,IAAMxgH,EAAc1J,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAAShV,KAAKC,MAAM+Q,MAAMiE,gBACpFy5G,EAAYhlH,GAAeA,EAAYtH,KAAOsH,EAAYtH,KAA9C,iBAAAuE,OAAsE3G,KAAKC,MAAM+Q,MAAjF,QAClBse,EACEisJ,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,CAAOkC,IAAK4sH,GAAej/F,IAE/B,MACA,IAAK,SACH,IAAM2sJ,EAAyC,oBAApBh9J,EAAU5R,MAAuB4R,EAAU5R,MAAMxN,KAAKC,OAASmf,EAAU5R,MACpG8hB,EACEisJ,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,GAAY6vB,EAAZ,CAAwB7pB,QAAS,kBAAM6pB,EAAWhvB,YAAY4J,EAAKpK,UAAUm8K,GAEjF,MACA,IAAK,SACH9sJ,EACEisJ,EAAAp7K,EAAAC,cAACi8K,EAAA,EAAD,CACEj8E,IAAKpgG,KAAKC,MACVmf,UAAWA,IAGjB,MACA,IAAK,cACHkQ,EAAStvB,KAAKwH,MAAMurK,OAAS/yK,KAAKwH,MAAM80K,aAAet8K,KAAKwH,MAAM80K,YAAY5sG,WAAa1vE,KAAKwH,MAAM80K,YAAY7sG,QAChH8rG,EAAAp7K,EAAAC,cAACm8K,EAAAp8K,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXr6F,SAAU,QACVh1B,SAAUA,EACVysD,IAAKpjD,WAAWhN,KAAKwH,MAAM80K,YAAY7sG,SACvC72C,MAAO5rB,WAAWhN,KAAKwH,MAAM80K,YAAY5sG,WACzCujD,aAAe,SAAAz9F,GAAC,OAAInrB,EAAKtH,cAAcW,iBAAiB8xB,EAAE7xB,EAASC,EAAaC,KAE/E,SAAA+5B,GAAA,IAAGs1F,EAAHt1F,EAAGs1F,WAAHt1F,EAAehF,MAAf,OACC2iJ,EAAAp7K,EAAAC,cAAA,QAAMiG,MAAOopB,EAAWppB,MAAO8sH,IAAKD,MAGtC5qH,EACN,MACA,IAAK,kBACHgnB,EAAStvB,KAAKwH,MAAMurK,OAAS/yK,KAAKwH,MAAMgoE,iBAAmBxvE,KAAKwH,MAAMgoE,gBAAgBP,eAAiBjvE,KAAKwH,MAAMgoE,gBAAgBJ,YAChImsG,EAAAp7K,EAAAC,cAACm8K,EAAAp8K,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXr6F,SAAU,QACVh1B,SAAUA,EACVysD,IAAKpjD,WAAWhN,KAAKwH,MAAMgoE,gBAAgBJ,aAC3Cx2C,MAAO5rB,WAAWhN,KAAKwH,MAAMgoE,gBAAgBP,eAC7CgkD,aAAe,SAAAz9F,GAAC,OAAInrB,EAAKtH,cAAcW,iBAAiB8xB,EAAE7xB,EAASC,EAAaC,KAE/E,SAAAg6B,GAAA,IAAGq1F,EAAHr1F,EAAGq1F,WAAHr1F,EAAejF,MAAf,OACC2iJ,EAAAp7K,EAAAC,cAAA,QAAMiG,MAAOopB,EAAWppB,MAAO8sH,IAAKD,MAGtC5qH,EACN,MACA,IAAK,wBACH,GAAItI,KAAKwH,MAAM4X,EAAUjd,MAAM,CAC7B,IAAIq6K,EAAiB,IAAA71K,OAAI3G,KAAKC,MAAM+Q,MAAf,MAAArK,OAAyB3G,KAAKwH,MAAM4X,EAAUjd,MAAMkuE,QAAQnjE,QAAQvJ,GAAU,MACnGhE,OAAOoE,KAAK/D,KAAKwH,MAAM4X,EAAUjd,MAAMguE,WAAWlsE,QAAS,SAAA6jC,GACzD,IAAMp9B,EAAQL,EAAK7C,MAAM4X,EAAUjd,MAAMguE,UAAUroC,GAAU56B,QAAQvJ,GACrE64K,EAAervK,KAAf,GAAAxG,OAAuBmhC,EAAvB,MAAAnhC,OAAoC+D,EAApC,QAGF8xK,EAAiBA,EAAejvK,KAAK,MACrC,IAAMmkE,EAAe1xE,KAAKwH,MAAM4X,EAAUjd,MAAMuvE,aAE9CpiD,EADE3vB,OAAOoE,KAAK/D,KAAKwH,MAAM4X,EAAUjd,MAAMguE,WAAWnsE,OAAO,EAEzDu3K,EAAAp7K,EAAAC,cAACq8K,EAAA,EAAD,CACExtJ,aAAc,CACZF,UAAU,SAEZnsB,KAAM8uE,EACN/uE,UAAW8sB,EACXT,QAASwtJ,IAIHjB,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,GAAU6vB,EAAV,CAAsB3mB,wBAAyB,CAACC,OAAO2oE,WAGnEpiD,OAAyCnB,IAA/BnuB,KAAKwH,MAAM4X,EAAUjd,MAAsBmG,EAAS,KAElE,MACA,IAAK,WACHgnB,EAAStvB,KAAKwH,MAAM8yK,aAClBiB,EAAAp7K,EAAAC,cAACs8K,EAAA,EAAD/8K,OAAAC,OAAA,GACMI,KAAKwH,MAAMwzK,cADjB,CAEEz3K,KAAMvD,KAAKwH,MAAMuzK,aACjB3wK,KAAMpK,KAAKwH,MAAM8yK,aACjBx6K,MAAOE,KAAKwH,MAAMozK,cAClB74K,OAAQ/B,KAAKwH,MAAMqzK,kBAEnBvyK,EACN,MACA,IAAK,YACL,IAAK,cACL,IAAK,iBACHgnB,EAAStvB,KAAKwH,MAAM4X,EAAUjd,OAASxC,OAAOoE,KAAK/D,KAAKwH,MAAM4X,EAAUjd,OAAO6B,OAAO,EACpFu3K,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,cACZme,EAAUf,aAGZ1e,OAAOoE,KAAK/D,KAAKwH,MAAM4X,EAAUjd,OAAO2D,IAAK,SAACgiC,EAAS4+D,GACrD,IAAMx+D,EAAiB79B,EAAK7C,MAAM4X,EAAUjd,MAAM2lC,GAClD,OACEyzI,EAAAp7K,EAAAC,cAACu8K,EAAA,EAAD,CACE3rK,MAAO82B,EACPp+B,YAAaw+B,EACbrhC,IAAG,SAAAF,OAAW+/F,GACdtnF,UAAW,CACTjd,KAAK,cACL8sB,aAAa,CACXD,QAAQ,GAAAroB,OAAGmhC,IAAYz9B,EAAK7C,MAAMq7F,+BAAiCx4F,EAAK7C,MAAMq7F,8BAA8B/6D,GAArF,KAAAnhC,OAAsG0D,EAAK7C,MAAMq7F,8BAA8B/6D,GAAU56B,QAAQvJ,GAAjK,KAAAgD,OAA8KuhC,EAAe5T,sBAA7L,yBAA4O,KAErQr0B,MAAM,CACJuB,aAAa,MACboM,SAAS,WACT7L,OAAO,CAAC,QAAQ,OAChB2D,GAAGghG,EAAgB,QAAU,EAC7B74F,OAAOlO,OAAOkR,OAAOxG,EAAK7C,MAAM4X,EAAUjd,OAAO6B,OAAO0iG,EACxDl4F,UAAU,CAAC,kCAAkC,0CAQzDxO,KAAKwH,MAAM4X,EAAUjd,MACvBo5K,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAS5nJ,EAAV,KACEnnB,EACN,MACA,QACE,IAAIs0K,EAAiB58K,KAAKwH,MAAM4X,EAAUjd,MACtCnC,KAAKwH,MAAM4X,EAAUjd,OAASnC,KAAKwH,MAAM4X,EAAUjd,MAAM06K,eAC3DD,EAAiB58K,KAAKwH,MAAM4X,EAAUjd,MAAM+K,QAAQvJ,IAGtD2rB,EAAStvB,KAAKwH,MAAM4X,EAAUjd,MAC5Bo5K,EAAAp7K,EAAAC,cAACi3K,EAAA,EAAD13K,OAAAC,OAAA,GAAU6vB,EAAV,CAAsB3mB,wBAAyB,CAACC,OAAO6zK,WACrBzuJ,IAA/BnuB,KAAKwH,MAAM4X,EAAUjd,MAAsBmG,EAAS,KAG7D,OAAOgnB,SA1hBgBzsB,aA8hBZwnH,sGCviBTtH,mLAEF,IAAMz9G,EAAc3F,OAAOC,OAAO,CAChCE,MAAM,EACN2C,WAAW,EACXV,OAAO,OACPW,SAAS,CAAC,EAAE,GACZ8L,UAAU,KACVhN,aAAa,EACbyF,UAAU,QACVjH,KAAKC,MAAMqF,aAEb,OACG8B,EAAAjH,EAAAC,cAACkH,EAAA,EAAD3H,OAAAC,OAAA,GACK0F,EADL,CAECM,QAAS5F,KAAKC,MAAMQ,cAEnBT,KAAKC,MAAM+I,iBAjBMnG,aAuBXkgH,sGCvBTJ,mLAGF,OACEv7G,EAAAjH,EAAAC,cAACkH,EAAA,EAAD3H,OAAAC,OAAA,CACE0C,MAAO,OACPojB,OAAQ,SACRC,IAAK,gCACD3lB,KAAKC,OAERD,KAAKC,MAAM+I,iBAVEnG,aAgBP8/G,iskBCVT1E,6MAGJl7G,cAAgB,gFAEV/C,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,+IAIL,IAAM45K,GAAW,IAAIzqK,MAAO0qK,cACtBvS,EAAoBxqK,KAAK+C,cAAciS,gBAAgB,CAAC,aAAa,YACrEgoK,EAAcxS,EAAoB,IAAM,EAAE,EAChD,OACEpsJ,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CACEtpB,GAAI,EACJhB,GAAI,SACJrE,WAAY,SACZC,cAAe,SACfwa,UAAWC,IAAO08J,OAClBz3K,gBAAiB,QACjBO,eAAgB,cAEhBmd,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CACE5vB,MAAO,EACPC,GAAI,CAAC,EAAE,GACPkB,eAAgB,UAEhBmd,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CACE5vB,MAAO,EACPiC,OAAQ,CAAC,OAAO,QAChBhB,WAAY,aACZuF,SAAU,CAAC,OAAO,QAClBrF,eAAgB,aAChBD,cAAe,CAAC,SAAS,QAEzBod,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM5vB,MAAO,CAAC,EAAEk9K,GAAch8K,cAAe,SAAUe,OAAQ,CAAC,OAAO,SACrEqc,EAAAje,EAAAC,cAACsvB,EAAA,EAAQo+F,GAAT,CAAYjlH,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAI5B,GAAI,EAAGwB,MAAO,aAAlG,aAGA8b,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM5vB,MAAO,EAAGkB,cAAe,UAC7Bod,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CACE7+D,GAAI,CAAC,EAAE,GACP97G,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZuF,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB+c,KAAM,mCAENxH,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,iBAA5B,gBATF,kBAWA/+J,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CACE7+D,GAAI,CAAC,EAAE,GACP97G,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZuF,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB+c,KAAM,mFAENxH,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,gBAA5B,gBATF,iBAWA/+J,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM0uF,GAAI,CAAC,EAAE,GAAIt+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnDmd,EAAAje,EAAAC,cAACg9K,EAAA,EAAD,CACE96K,MAAO,OACPo2B,GAAG,oBACHld,UAAWC,IAAOzV,MAElBoY,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CACEjtB,WAAY,EACZH,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZuF,WAAY,YACZrC,UAAW,CAAC,SAAS,SAErBuV,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,oBAA5B,gBARF,uBAYJ/+J,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CACE7+D,GAAI,CAAC,EAAE,GACP97G,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZuF,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB+c,KAAM,mDAENxH,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,kBAA5B,wCATF,mBAWA/+J,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CACE7+D,GAAI,CAAC,EAAE,GACP97G,MAAO,OACPI,SAAU,CAAC,EAAE,GACbiD,WAAY,OACZuF,WAAY,YACZrC,UAAW,CAAC,SAAS,QACrB+c,KAAM,iEAENxH,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,iBAA5B,gBATF,oBAcF3S,GACEpsJ,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM5vB,MAAO,CAAC,EAAEk9K,GAAch8K,cAAe,SAAUe,OAAQ,CAAC,OAAO,SACrEqc,EAAAje,EAAAC,cAACsvB,EAAA,EAAQo+F,GAAT,CAAYjlH,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAI5B,GAAI,EAAGwB,MAAO,aAAlG,cAGA8b,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM5vB,MAAO,EAAGkB,cAAe,UAC7Bod,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM0uF,GAAI,CAAC,EAAE,GAAIt+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnDmd,EAAAje,EAAAC,cAACg9K,EAAA,EAAD,CACE96K,MAAO,OACPo2B,GAAI,cACJld,UAAWC,IAAOzV,MAElBoY,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM7mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHyY,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,uBAA5B,gBADF,eAKJ/+J,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM0uF,GAAI,CAAC,EAAE,GAAIt+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnDmd,EAAAje,EAAAC,cAACg9K,EAAA,EAAD,CACE96K,MAAO,OACPkZ,UAAWC,IAAOzV,KAClB0yB,GAAI,yBAEJta,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM7mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHyY,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,wBAA5B,gBADF,gBAKJ/+J,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM0uF,GAAI,CAAC,EAAE,GAAIt+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnDmd,EAAAje,EAAAC,cAACg9K,EAAA,EAAD,CACE96K,MAAO,OACPkZ,UAAWC,IAAOzV,KAClB0yB,GAAI,2BAEJta,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM7mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHyY,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,0BAA5B,gBADF,kBAKJ/+J,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM0uF,GAAI,CAAC,EAAE,GAAIt+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnDmd,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,6BACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM7mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHyY,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,oBAA5B,gBADF,YAKJ/+J,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM0uF,GAAI,CAAC,EAAE,GAAIt+G,MAAO,EAAGmB,eAAgB,CAAC,SAAS,eACnDmd,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,sGACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM7mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAID,WAAY,EAAGH,MAAO,OAAQqD,WAAY,QACtHyY,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,oBAA5B,gBADF,aAQZ/+J,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM5vB,MAAO,CAAC,EAAEk9K,GAAch8K,cAAe,SAAUe,OAAQ,CAAC,OAAO,SACrEqc,EAAAje,EAAAC,cAACsvB,EAAA,EAAQo+F,GAAT,CAAYjlH,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAI5B,GAAI,EAAGwB,MAAO,aAAlG,wBAGA8b,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM7mB,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAIJ,MAAO,OAAQqD,WAAY,QACvGyY,EAAAje,EAAAC,cAAA,QAAM88K,KAAK,MAAMC,aAAW,SAA5B,gBADF,uBAIF/+J,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM5vB,MAAO,CAAC,EAAEk9K,GAAch8K,cAAe,UAC3Cod,EAAAje,EAAAC,cAACsvB,EAAA,EAAQo+F,GAAT,CAAYjlH,UAAW,CAAC,SAAS,QAASqC,WAAY,YAAaxI,SAAU,CAAC,EAAE,GAAI5B,GAAI,EAAGwB,MAAO,aAAlG,WAGA8b,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAM1uB,cAAe,MAAOC,eAAgB,CAAC,eAAe,eAC1Dmd,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,mCACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAO5tB,IAAI,4BAA4BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAI0N,UAAW,EAAGhN,aAAc,SAEjH4c,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,4BACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAO5tB,IAAI,6BAA6BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAI0N,UAAW,EAAGhN,aAAc,SAElH4c,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,8BACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAO5tB,IAAI,4BAA4BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAI0N,UAAW,EAAGhN,aAAc,SAEjH4c,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,mCACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAO5tB,IAAI,2BAA2BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAI0N,UAAW,EAAGhN,aAAc,SAEhH4c,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,iCACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAO5tB,IAAI,2BAA2BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAI0N,UAAW,EAAGhN,aAAc,SAEhH4c,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,gDACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAO5tB,IAAI,6BAA6BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAI0N,UAAW,EAAGhN,aAAc,SAElH4c,EAAAje,EAAAC,cAAC68K,EAAA,EAAD,CAASr3J,KAAK,mCACZxH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CAAO5tB,IAAI,+BAA+BC,OAAQ,QAASV,GAAI,CAAC,OAAO,GAAIP,GAAI,CAAC,EAAE,GAAI0N,UAAW,EAAGhN,aAAc,aAM5H4c,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CACE5vB,MAAO,EACPiC,OAAQ,CAAC,OAAO,QAChBf,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBE,eAAgB,CAAC,SAAS,aAE1Bmd,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CACEnuB,EAAG,EACHzB,MAAO,EACPiB,WAAY,SACZE,eAAgB,SAChBP,gBAAiB,YACjBM,cAAe,CAAC,SAAS,QAEzBod,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CACEptB,MAAO,QACPuG,UAAW,CAAC,SAAS,aAFvB,QAIUi0K,EAJV,qBAMA1+J,EAAAje,EAAAC,cAACg9K,EAAA,EAAD,CACE96K,MAAO,OACPo2B,GAAI,oBACJryB,MAAO,CAAC68H,eAAe,SAEvB9kH,EAAAje,EAAAC,cAACsvB,EAAA,EAAD,CACEtpB,GAAI,EACJ9D,MAAO,OACPuG,UAAW,CAAC,SAAS,aAHvB,+BAzOOhG,aAwPNo7G,0HC7PT81D,mLACK,IAAA7uK,EAAAlF,KAEDq9K,EAAW,SAACp9K,GAAD,OACfC,EAAAC,EAAAC,cAACkE,EAAA,EAAQoK,GAAT/O,OAAAC,OAAA,CACE6C,WAAY,CAAC,EAAE,GACfH,MAAO,YACP+D,MAAO,CACLvG,MAAM,OACN0G,WAAW,UAEb9D,SAAU,CAAC,OAAO,GAClB60G,WAAY,WACRt3G,EACAA,EAAMynH,WAETznH,EAAM+I,WAIX,OACE9I,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAOE,KAAKC,MAAMH,OAGfE,KAAKC,MAAMq+G,MAAQt+G,KAAKC,MAAMq+G,KAAKt6G,OAAO,EACzC9D,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEvD,WAAY,UAEZb,EAAAC,EAAAC,cAACi9K,EACKr9K,KAAKC,OAEXC,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACE+B,MAAO,CACLoI,OAAO,WAET7I,QAAU,SAAAkB,GAAC,OAAI5B,EAAKjF,MAAM0wH,iBAAiBzrH,EAAKjF,MAAMwmB,MAAMvhB,EAAKjF,MAAMq+G,QAEvEp+G,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEyqB,UAAW,MACXC,QAAS,iCAET9uB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEoB,GAAI,EACJvD,KAAM,OACNG,MAAO,YACPkZ,UAAWC,IAAO7Q,QAClBvI,KAAOrC,KAAKC,MAAM+B,SAAW,MAAQ,aAM7C9B,EAAAC,EAAAC,cAACi9K,EACKr9K,KAAKC,eAtDO4C,aA+DfkxK,+GC/DTuJ,mLAGF,OACEl2K,EAAAjH,EAAAC,cAACC,EAAA,EAAD,CACEwG,IAAK7G,KAAKC,MAAMkZ,MAAM/T,GACtB1F,UAAW,CACTG,GAAG,EACHE,GAAG,EACHD,MAAM,EACNyM,KAAMvM,KAAKC,MAAMkZ,MAAM/O,KAAK+L,QAAQ,GAAK,QAAU,MAGrD/O,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACExH,MAAO,EACPkB,cAAe,UAGbhB,KAAKC,MAAMkZ,MAAM/O,KAAKmzK,YACpBn2K,EAAAjH,EAAAC,cAACkH,EAAA,EAAD,CACEwG,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WACPuG,UAAW,QAEV7I,KAAKC,MAAMkZ,MAAM/O,KAAKmzK,YAG5Bv9K,KAAKC,MAAM+I,kBA7BMnG,aAoCby6K,uGCrCTE,mLAGF,OACEt9K,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEmN,GAAI,EACJhO,MAAO,EACPiB,WAAY,SACZC,cAAe,OAEfd,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEg0H,GAAI,EACJtuH,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,WAEP1e,WAAY,SACZE,eAAgB,cAGdjB,KAAKC,MAAMqC,OACXpC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEU,GAAI,EACJvB,MAAO,OACPiC,OAAQ,OACRP,aAAc,MACdd,gBAAiBV,KAAKC,MAAMqC,QAIhCpC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE+B,SAAU,EACVD,WAAY,EACZoG,UAAW,OACXvG,MAAO,YACP+D,MAAO,CACLG,WAAW,SACXy8G,cAAc,eAGfjjH,KAAKC,MAAMuN,QAGhBtN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE0F,MAAO,CACL+jH,UAAU,IACV3qG,KAAK,WAEP1e,WAAY,SACZE,eAAgB,YAEhBf,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE+B,SAAU,EACVD,WAAY,EACZH,MAAO,WACPuG,UAAW,QACXxC,MAAO,CACLG,WAAW,UAEbsC,wBAAyB,CACvBC,OAAQ/I,KAAKC,MAAMyK,kBA5DF7H,aAsEhB26K,sICrETzwD,qdAMqBplH,EAAUC,kMAKjC,OACEvD,EAAAlE,EAAAC,cAACq9K,EAAA,EAAD,CACE52K,IAAK7G,KAAKC,MAAMkZ,MAAM/T,GACtB1F,UAAW,CACTG,GAAG,EACHE,GAAG,EACHD,MAAM,EACNyM,KAAMvM,KAAKC,MAAMkZ,MAAM/O,KAAK+L,SAAWnW,KAAKC,MAAMkZ,MAAM/O,KAAK+L,QAAQ,GAAK,QAAU,MAGtF9R,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACExE,MAAO,EACPkB,cAAe,UAGbhB,KAAKC,MAAMkZ,MAAM/O,KAAKmzK,YACpBl5K,EAAAlE,EAAAC,cAACkE,EAAA,EAAD,CACEwJ,GAAI,EACJpL,SAAU,EACVD,WAAY,EACZH,MAAO,WACPuG,UAAW,QAEV7I,KAAKC,MAAMkZ,MAAM/O,KAAKmzK,YAG5Bv9K,KAAKC,MAAM+I,kBArCWnG,aA4ClBkqH,iKCzCT4B,6MAEJnnH,MAAQ,CACN6kD,KAAK,EACLqxH,YAAY,EACZnJ,WAAW,KACXoJ,cAAc,QAIhB56K,cAAgB,OAkChB66K,YAAc,WAAe,IAAdvxH,EAAcn6C,UAAAlO,OAAA,QAAAmqB,IAAAjc,UAAA,GAAAA,UAAA,GAAT,KAClBm6C,EAAOA,GAAcnnD,EAAKsC,MAAM6kD,KAEhC,IAAMwxH,EAAY34K,EAAKjF,MAAMu/F,KAAKx7F,OAC5BuwK,EAAanjK,KAAKwF,KAAKinK,EAAU34K,EAAKsC,MAAMk2K,aAE9CC,EAAgB,GAChBz4K,EAAKjF,MAAMioI,kBACbhjI,EAAKjF,MAAMu/F,KAAKv7F,QAAQ,SAACm8F,EAAK1zF,GACxBA,IAAK2/C,EAAK,GAAGnnD,EAAKsC,MAAMk2K,aAAgBhxK,GAAI2/C,EAAK,GAAGnnD,EAAKsC,MAAMk2K,YAAax4K,EAAKsC,MAAMk2K,aACzFC,EAAcxwK,KAAKizF,KAIvBu9E,EAAgBz4K,EAAKjF,MAAMu/F,KAG7Bt6F,EAAK8C,SAAS,CACZusK,aACAoJ,8FAlDE39K,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,4JAK9CD,KAAKkD,YACLlD,KAAK49K,mMAGkBj2K,EAAWC,iFAClC5H,KAAKkD,cAEekM,KAAKC,UAAU1H,EAAU63F,QAAUpwF,KAAKC,UAAUrP,KAAKC,MAAMu/F,8BAG/Ex/F,KAAKgI,SAAS,CACZqkD,KAAK,GACL,WACAlpD,EAAKy6K,mCAEA,UAEWh2K,EAAUykD,OAASrsD,KAAKwH,MAAM6kD,MAEhDrsD,KAAK49K,oJA2BA92K,GACHA,GACFA,EAAEuH,iBAEJ,IAAMg+C,EAAOj7C,KAAKqE,IAAI,EAAEzV,KAAKwH,MAAM6kD,KAAK,GACxCrsD,KAAKgI,SAAS,CACZqkD,0CAIKvlD,GACHA,GACFA,EAAEuH,iBAEJ,IAAMg+C,EAAOj7C,KAAKC,IAAIrR,KAAKwH,MAAM+sK,WAAWv0K,KAAKwH,MAAM6kD,KAAK,GAAGrsD,KAAK49K,YAAYvxH,GAChFrsD,KAAKgI,SAAS,CACZqkD,0CAIK,IAAAhiD,EAAArK,KAEP,OACEuI,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CAAMvI,GAAG,wBAAwBtF,MAAO,EAAGkB,cAAe,UACxDuH,EAAApI,EAAAC,cAAC83K,EAAA,EAADv4K,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEm4G,KAAMp4G,KAAKC,MAAMm4G,KACjBp2G,SAAUhC,KAAKC,MAAM+B,YAEvBuG,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CAAMvI,GAAG,cAAcpE,cAAe,UAElChB,KAAKwH,MAAMm2K,cAAc73K,IAAK,SAACs6F,EAAI09E,GACjC,OACEv1K,EAAApI,EAAAC,cAAC29K,EAAA,EAADp+K,OAAAC,OAAA,CACEwgG,IAAKA,GACD/1F,EAAKpK,MAFX,CAGE4G,IAAG,SAAAF,OAAWm3K,GACd/lE,eAAgBimE,IAChB7lE,MAAK,aAAAxxG,OAAem3K,GACpB7lE,OAAM,cAAAtxG,OAAgBm3K,SAO9B99K,KAAKC,MAAMioI,mBACT3/H,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CACE5L,OAAQ,OACRhB,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChBmE,GAAI,gCAEJmD,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CAAMtM,GAAI,GACRkH,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CAAMtM,GAAI,EAAGuE,QAAU,SAAAkB,GAAC,OAAIuD,EAAK4qK,SAASnuK,KACxCyB,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CACExL,KAAM,oBACNE,KAAM,MACNC,MAAQtC,KAAKwH,MAAM6kD,KAAK,EAAI,cAAgB,mBAGhD9jD,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CAAM/H,QAAU,SAAAkB,GAAC,OAAIuD,EAAK6qK,SAASpuK,KACjCyB,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CACExL,KAAM,qBACNE,KAAM,MACNC,MAAQtC,KAAKwH,MAAM6kD,KAAKrsD,KAAKwH,MAAM+sK,WAAa,cAAgB,oBAItEhsK,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CAAM5M,WAAY,UAChBwH,EAAApI,EAAAC,cAACuN,EAAA,EAAD,CACEjL,SAAU,EACVD,WAAY,EACZH,MAAO,YAHT,QAKQtC,KAAKwH,MAAM6kD,KALnB,OAK6BrsD,KAAKwH,MAAM+sK,sBA/I/B1xK,aA0JV8rH,sGC9JTf,mLACK,IAAA1oH,EAAAlF,KACDC,EAAQ,CACZwC,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,YACNuG,UAAU,SACV0uG,WAAW,WAITv3G,KAAKC,OAASN,OAAOoE,KAAK/D,KAAKC,OAAO+D,QACxCrE,OAAOoE,KAAK/D,KAAKC,OAAOgE,QAAQ,SAAA1C,GAC9BtB,EAAMsB,GAAK2D,EAAKjF,MAAMsB,KAI1B,IAAM08K,EAAmBj+K,KAAKC,MAAM6nH,UAAY9nH,KAAKC,MAAM6nH,UAAY+F,IAAQqnC,GAE/E,OACE9tJ,EAAAjH,EAAAC,cAAC69K,EACKh+K,EAEHD,KAAKC,MAAM+I,iBAvBAnG,aA6BL+qH,iKCkCAswD,6MArDbn7K,cAAgB,OAqBhBo7K,MAAQ,WAENj5K,EAAKnC,cAAc2a,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,UACbF,WAAYnY,EAAKjF,MAAMslK,SAGzB,IAAM6J,EAAIh+J,KAAKC,IAAI+S,OAAO2pJ,WAAW,KAE/Bj4J,GAAKsO,OAAO2pJ,WAAWqB,GAAG,EAEhChrJ,OAAOs3D,KAAP,yCAAA/0E,OAAqDzB,EAAKjF,MAAMwqH,OAAQ,SAAxE,8CAAA9jH,OADU,IACV,UAAAA,OAAyImP,EAAzI,WAAAnP,OAAoJyoK,EAApJ,YAAAzoK,OAHU,kFA5BN3G,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAKkD,yDAILlD,KAAKkD,6CAkBE,IAAAC,EAAAnD,KACP,OACIw2G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CACEj1G,aAAc,EACdyF,UAAW,UACXgjH,cAAe,QACfrkH,QAAU,SAAAkB,GAAO3D,EAAKg7K,UAEtB3nE,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMz1G,cAAe,MAAOD,WAAY,SAAUE,eAAgB,UAChEu1G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAKj7F,UAAWC,IAAO6S,cACvBkoF,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAO,QAASG,WAAY,EAAGiD,GAAI,GAAK1F,KAAKC,MAAM2C,KAAO5C,KAAKC,MAAM2C,KAAO,kBAjD7DC,gCCE3B0nH,6MAGJxnH,cAAgB,OAqBhBw3G,iDAAa,SAAAn6F,EAAOlP,GAAP,OAAAuf,EAAAtwB,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,WACW1L,EAAKnC,cAAcqoD,mBAEvB8B,UAAUC,OAAOhI,OAAOrzB,QAH/B,CAAAxR,EAAA1P,KAAA,eAAA0P,EAAA1P,KAAA,EAIH1L,EAAKnC,cAAc2a,yBAAyB,CAChDN,cAAe,QACfG,YAAarM,EACbmM,WAAY,eAPL,OASTnY,EAAKjF,MAAMs6G,aATFj6F,EAAA1P,KAAA,eAWT1L,EAAKjF,MAAMs6G,aAXF,wBAAAj6F,EAAAvO,SAAAqO,EAAApgB,0IAnBPA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,oDAK9CD,KAAKkD,wDAILlD,KAAKkD,yDAILlD,KAAKkD,6CAkBE,IAAAC,EAAAnD,KACDyqH,EAAQrmG,OAAOg6J,OAAOp+K,KAAKC,MAAMwqH,OACjC4zD,EAAa,CAACt1K,OAAQ/I,KAAKC,MAAM2C,MACvC,OACE4zG,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAOmH,OAAQ59G,KAAKC,MAAM29G,QACxBpH,EAAAr2G,EAAAC,cAACyoH,EAAA,EAAD,CAAW/K,UAAW99G,KAAKC,MAAMs6G,YAE7Bv6G,KAAKC,MAAMuqH,iBACXhU,EAAAr2G,EAAAC,cAACk+K,EAAAn+K,EAAD,CACEkG,MAAO,CAAEuH,SAAU,QAAQC,OAAS,MACpCmmJ,KAAK,EACLuqB,SAAS,EACTz+K,MAAOskB,OAAO2pJ,WACdhsK,OAAQqiB,OAAO4pJ,cAGnBx3D,EAAAr2G,EAAAC,cAACyoH,EAAA,EAAU9K,OAAX,CAAkBt3F,MAAOzmB,KAAKC,MAAMwmB,MAAOrkB,KAAMpC,KAAKC,MAAMmC,OAC5Do0G,EAAAr2G,EAAAC,cAACyoH,EAAA,EAAU7K,KAAX,KACExH,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM31G,GAAI,EAAGhB,MAAO,EAAGkB,cAAe,SAAUJ,GAAI,QAClD41G,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAMn0G,MAAO,YAAauG,UAAW,SAAUnG,SAAU,EAAGoL,GAAI,EAAGhF,wBAAyBu1K,KAE9F7nE,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM3oG,GAAI,EAAG9M,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1Eu1G,EAAAr2G,EAAAC,cAACo+K,EAAD,CAAoB/zD,MAAOA,EAAO7nH,KAAM,YAAa2iK,OAAQ,eAC7D/uD,EAAAr2G,EAAAC,cAACq2G,EAAA,EAAD,CAAM7tG,GAAI,EAAGhD,QAAU,SAAAkB,GAAC,OAAI3D,EAAKo3G,WAAW,6BAA8B50G,WAAY,QAAtF,uCA9DWu4G,IAAMr7G,WAuEhB0nH,uJC7ETyzD,6MAEJx2K,MAAQ,KAGRzE,cAAgB,OAChB0E,oBAAqB,6EAGfzH,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,8JAK9CD,KAAKyH,oBAAqB,yPAI1BzH,KAAKkD,gbAOkByE,EAAWC,mEAClC5H,KAAKkD,kJAGC,IAAAC,EAAAnD,KACAof,EAAYpf,KAAKC,MAAMmf,UAEvBqQ,EAAa,CACjBhtB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,YAIJ8c,EAAUnf,OAASN,OAAOoE,KAAKqb,EAAUnf,OAAO+D,QAClDrE,OAAOoE,KAAKqb,EAAUnf,OAAOgE,QAAQ,SAAA1C,GACnCkuB,EAAWluB,GAAK6d,EAAUnf,MAAMsB,KAKhC6d,EAAUs5F,WAAa/4G,OAAOoE,KAAKqb,EAAUs5F,WAAW10G,QAC1DrE,OAAOoE,KAAKqb,EAAUs5F,WAAWz0G,QAAQ,SAAA1C,GACH,oBAAzB6d,EAAUs5F,UAAUn3G,KAC7BkuB,EAAWluB,GAAK6d,EAAUs5F,UAAUn3G,GAAG4B,EAAKlD,UAKlD,IAAIqvB,EAAS,KACTS,EAAkB,KAClB0uJ,GAAuB,EACrBtqC,EAAY/0H,EAAU7b,KACtBm7K,EAAYt/J,EAAUvZ,KACtBqI,IAAekR,EAAUlR,WAC3B8hB,EAAc0uJ,EAAY1+K,KAAK+C,cAAcktB,aAAayuJ,EAAU1+K,KAAKC,MAAMmgG,KAAO,KAG1F,GAAIs+E,EAAU,CACZ,IAAMC,EAAkBh/K,OAAOkR,OAAO6tK,GAAWxqK,MACjD,GAAIlU,KAAKC,MAAMmgG,IAAX,GAAAz5F,OAAkBg4K,EAAlB,UAA0C,CAC5C,IAAMC,EAAmB5+K,KAAKC,MAAMmgG,IAAX,GAAAz5F,OAAkBg4K,EAAlB,UAErBC,GAAoBj/K,OAAOoE,KAAK66K,GAAkB56K,QACpDrE,OAAOoE,KAAK66K,GAAkB36K,QAAQ,SAAA1C,GACpCkuB,EAAWluB,GAAKq9K,EAAiBr9K,MAMzC,OAAQ4yI,GACN,IAAK,QACHpkH,EAAkBG,IAClBT,EAAW3tB,IAAMkuB,EACnB,MACA,IAAK,SACHA,EAAcA,EAAchwB,KAAK+C,cAAckO,MAAM+e,GAAa9M,WAAa,KAC/E6M,EAAkBjtB,IAClB2sB,EAAWpsB,OAAS2sB,EACtB,MACA,IAAK,OACHD,EAAkB7pB,IACpB,MACA,IAAK,OACH6pB,EAAkBI,IAClBV,EAAWttB,KAAO6tB,EACpB,MACA,IAAK,SACHD,EAAkB,SAAC9vB,GAAD,OAChBsI,EAAApI,EAAAC,cAACo5K,EAAA,EAAD,CACEj4K,EAAG,MACHC,aAAc,MACdT,WAAY,SACZE,eAAgB,SAChBP,gBAAiBT,EAAMuvB,SAEvBjnB,EAAApI,EAAAC,cAACo5K,EAAA,EAAD,CACEt4K,MAAO,SACPiB,KAAM6tB,EACN1tB,MAAOrC,EAAMqC,MACbD,KAAMc,EAAKlD,MAAM+B,SAAW,MAAQ,YAI1CytB,EAAWttB,KAAO6tB,EACpB,MACA,IAAK,SACHD,EAAkBo3F,IAClBs3D,GAAuB,EACvBzuJ,EAAc5Q,EAAU5R,OAASiiB,EAAWjiB,MAC5CiiB,EAAW7pB,QAAQ,kBAAM6pB,EAAWhvB,YAAY0C,EAAKlD,QACvD,MACA,IAAK,OACHqvB,EAAU/mB,EAAApI,EAAAC,cAACo5K,EAAA,EAAD75K,OAAAC,OAAA,GAAU6vB,EAAV,CAAsB3mB,wBAAyB,CACvDC,OAAQinB,MAEZ,MACA,IAAK,aACHV,EAASU,GAAerwB,OAAOoE,KAAKisB,GAAahsB,OAAO,EACtDuE,EAAApI,EAAAC,cAACo5K,EAAA,EAAD75K,OAAAC,OAAA,CACEE,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,cACZme,EAAUf,aAGZ1e,OAAOoE,KAAKisB,GAAalqB,IAAK,SAACkL,EAAMm5D,GACnC,IAAMzgE,EAAcsmB,EAAYhf,GAChC,OACEzI,EAAApI,EAAAC,cAACy+K,EAAA,EAAD,CACE7tK,MAAOA,EACPtH,YAAaA,EACb7C,IAAG,SAAAF,OAAWwjE,GACd/qD,UAAW,CACTjd,KAAK,cACL8sB,aAAa,CACXD,QAAO,GAAAroB,OAAIqK,IAEb/Q,MAAM,CACJuB,aAAa,MACboM,SAAS,WACT7L,OAAO,CAAC,QAAQ,OAChB2D,GAAGykE,EAAa,QAAU,EAC1Bt8D,OAAOlO,OAAOkR,OAAOmf,GAAahsB,OAAOmmE,EACzC37D,UAAU,CAAC,kCAAkC,0CAQzD,KACN,MACA,QACEuhB,EAAkB5pB,IAClBs4K,GAAuB,EAI3B,OAAKzuJ,GAAe9hB,EACV3F,EAAApI,EAAAC,cAACo5K,EAAA,EAAD,CAAQn3K,KAAK,SAGhB0tB,EAAmB0uJ,EAAwBl2K,EAAApI,EAAAC,cAAC2vB,EAAoBN,EAAaO,GAAmCznB,EAAApI,EAAAC,cAAC2vB,EAAoBN,GAAoBH,SA9K1IzsB,aAkLXm7K,uPC3KTj2D,6MAEJvgH,MAAQ,CACNurK,OAAM,KAIRhwK,cAAgB,OAChB0E,oBAAqB,IAyDrB0nB,+BAAY,SAAA/O,IAAA,IAAA+5J,EAAAhnK,EAAAnL,EAAAoX,EAAAqQ,EAAA88C,EAAA5oE,EAAA0hG,EAAA/1E,EAAA6hD,EAAA0xB,EAAAhxF,EAAAwB,EAAAstB,EAAAhgB,EAAAgzD,EAAAD,EAAA91C,EAAA43C,EAAAD,EAAA13C,EAAA1M,EAAAq+C,EAAAw5B,EAAAt5B,EAAAD,EAAAl+C,EAAA9N,EAAA+vD,EAAAsrG,EAAArrG,EAAAsrG,EAAAr7J,EAAAmP,EAAAmsJ,EAAA/vG,EAAAqG,EAAAlG,EAAAmlC,EAAAluC,EAAAwkC,EAAA3pE,EAAA0iE,EAAAq7E,GAAAC,GAAAC,GAAAC,GAAAC,GAAA/E,GAAAjpJ,GAAA/R,GAAAsnC,GAAA7wC,GAAArJ,GAAAkvH,GAAA9lH,GAAAJ,GAAA4pK,GAAArpK,GAAAspK,GAAA5E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAwE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAv6K,GAAAyoK,GAAAp8J,UAAA,OAAA9B,EAAAjQ,EAAAsQ,KAAA,SAAA6P,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,MAAA,UAAMupK,EAAN7L,GAAAtqK,OAAA,QAAAmqB,IAAAmgJ,GAAA,GAAAA,GAAA,GAAgB,MAItBppK,EAAKuC,oBAAuBvC,EAAKjF,MAAM+Q,OAAU9L,EAAKjF,MAAMyJ,aAAgBxE,EAAKjF,MAAM6vH,qBAJjF,CAAAxvG,EAAA1P,KAAA,eAAA0P,EAAAe,OAAA,SAKD,MALC,UAQJlO,EAAyC,SAAhCjO,EAAKjF,MAAMmT,iBAEpBpL,EAAyB,OAAdmyK,EACX/6J,EAAYla,EAAKjF,MAAMmf,UACxB+6J,IACHA,EAAY/6J,EAAUjd,MAGlBstB,EAAarQ,EAAUnf,MACvBssE,EAAkD,qBAA5BrnE,EAAKjF,MAAMssE,cAA+BrnE,EAAKjF,MAAMssE,aAE3E5oE,EAAW8rB,GAAcA,EAAW9rB,SAAW8rB,EAAW9rB,SAAauB,EAAKjF,MAAM+B,SAAW,EAAI,EACjGqjG,EAAmBngG,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,SAAS9P,EAAKjF,MAAM+Q,MAAMiE,gBAE3Fqa,EAAS,MACTpqB,EAAKjF,MAAM+Q,MAvBL,CAAAsP,EAAA1P,KAAA,UAAA0P,EAAA6R,GAwBAgoJ,EAxBA75J,EAAA1P,KAyBD,iBAzBC0P,EAAA6R,GAAA,GAiCD,cAjCC7R,EAAA6R,GAAA,GAyCD,eAzCC7R,EAAA6R,GAAA,GAqDD,QArDC7R,EAAA6R,GAAA,GA6DD,oBA7DC7R,EAAA6R,GAAA,GAyED,eAzEC7R,EAAA6R,GAAA,GAiFD,qBAjFC7R,EAAA6R,GAAA,GAyFD,kCAzFC7R,EAAA6R,GAAA,GA8GD,6BA9GC7R,EAAA6R,GAAA,GAmID,aAnIC7R,EAAA6R,GAAA,GA2ID,gBA3IC7R,EAAA6R,GAAA,GAoKD,yBApKC7R,EAAA6R,GAAA,GA4LD,oBA5LC7R,EAAA6R,GAAA,GAqND,sBArNC7R,EAAA6R,GAAA,GA6ND,UA7NC7R,EAAA6R,GAAA,IAsOD,SAtOC7R,EAAA6R,GAAA,IA8OD,sBA9OC7R,EAAA6R,GAAA,IAuPD,iBAvPC7R,EAAA6R,GAAA,IAgQD,QAhQC7R,EAAA6R,GAAA,IA4QD,WA5QC7R,EAAA6R,GAAA,IAkTD,aAlTC7R,EAAA6R,GAAA,IAiUD,aAjUC7R,EAAA6R,GAAA,IAgVD,qBAhVC7R,EAAA6R,GAAA,IAgWD,QAhWC7R,EAAA6R,GAAA,IAoXD,oBApXC7R,EAAA6R,GAAA,IA2ZD,aA3ZC7R,EAAA6R,GAAA,IAskBD,qBAtkBC7R,EAAA6R,GAAA,IAsrBD,WAtrBC7R,EAAA6R,GAAA,6BAAA7R,EAAA1P,KAAA,GA0BW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GA1BlH,eA0BJj9C,EA1BIhP,EAAA3M,OA2BU3L,GACZ9C,EAAKmD,aAAa,CAChBk2B,aAAajP,EAAOpM,aA7BpB5C,EAAAe,OAAA,4BAkCE8vD,EAAYjsE,EAAKnC,cAAc2+F,kBAAkBx8F,EAAKjF,MAAMyJ,aAlC9D4W,EAAA1P,KAAA,GAmCwC1L,EAAKnC,cAAc8/F,8BAA8B39F,EAAKjF,MAAMyJ,aAnCpG,eAmCEm5F,EAnCFviF,EAAA3M,KAoCJzO,EAAKmD,aAAa,CAChB8oE,YACA0xB,kCAtCEviF,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GA0CW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GA1ClH,eA0CJj9C,EA1CIhP,EAAA3M,OA2CU3L,IACR6J,EAAa,KAC+B,qBAArC3M,EAAKjF,MAAMyJ,YAAYuyI,WAA6B/2I,EAAKjF,MAAMyJ,YAAYuyI,aACpFpqI,EAAayd,EAAOpM,YAEtBhe,EAAKmD,aAAa,CAChBwJ,gBAjDAyO,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GAsDW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAtDlH,eAsDJj9C,EAtDIhP,EAAA3M,OAuDU3L,GACZ9C,EAAKmD,aAAa,CAChB6wE,IAAI5pD,EAAOpM,aAzDX5C,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GAgEM1L,EAAKnC,cAAc89B,eAAe37B,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAhElF,eAAAl5D,EAAAiN,EAAA3M,KA+DFgtB,EA/DEttB,EA+DFstB,4BAGE34B,GAAY24B,IACdz7B,EAAKmD,aAAa,CAChBg4K,gBAAgB1/I,EAA4Bzd,aAE9CoM,EAASqR,GAtEPrgB,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GA0EW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GA1ElH,eA0EJj9C,EA1EIhP,EAAA3M,OA2EU3L,GACZ9C,EAAKmD,aAAa,CAChBmI,WAAW8e,EAAOpM,aA7ElB5C,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GAkFW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAlFlH,eAkFJj9C,EAlFIhP,EAAA3M,OAmFU3L,GACZ9C,EAAKmD,aAAa,CAChBwL,iBAAiByb,EAAOpM,aArFxB5C,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GA6FM1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GA7F7G,eAAA5rD,EAAAL,EAAA3M,KA2FFggE,EA3FEhzD,EA2FFgzD,2BACAD,EA5FE/yD,EA4FF+yD,8BAGiCC,IAC7B3rE,GACF9C,EAAKmD,aAAa,CAChB0qK,OAAM,EACNp/F,4BACAD,gCAIJpkD,EAAS,CACPqkD,4BACAD,gCA1GApzD,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GAkHM1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAlH7G,eAAA3uC,EAAAtd,EAAA3M,KAgHF6hE,EAhHE53C,EAgHF43C,sBACAD,EAjHE33C,EAiHF23C,yBAG4BC,IACxBxtE,GACF9C,EAAKmD,aAAa,CAChB0qK,OAAM,EACNv9F,uBACAD,2BAIJjmD,EAAS,CACPkmD,uBACAD,2BA/HAj1D,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GAoIW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GApIlH,eAoIJj9C,EApIIhP,EAAA3M,OAqIU3L,GACZ9C,EAAKmD,aAAa,CAChB89H,SAAS72G,EAAOpM,aAvIhB5C,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GA4I0C8P,QAAQqD,IAAI,CACxD7e,EAAKiqB,UAAU,mBACfjqB,EAAKnC,cAAc0lG,aAAavjG,EAAKjF,MAAMyJ,eA9IzC,eAAAm0B,EAAAvd,EAAA3M,KAAAwd,EAAAxxB,OAAAs7K,EAAA,EAAAt7K,CAAAk+B,EAAA,GA4IG2xC,EA5IHr+C,EAAA,GA4ImB63E,EA5InB73E,EAAA,GAiJAq+C,GAAmBA,EAAgBP,eAAiBO,EAAgBJ,aAAe45B,IAE/Et5B,EAAYF,EAAgBP,cAAchiE,MAAM+7F,GAChDv5B,EAAUD,EAAgBJ,YAAYniE,MAAM+7F,GAE9ChhG,GACF9C,EAAKmD,aAAa,CAChB0qK,OAAM,EACNtjG,UACAC,cAIJpgD,EAAS,CACPmgD,UACAC,cAhKApvD,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GAqKwD8P,QAAQqD,IAAI,CACtE7e,EAAKnC,cAAc6zE,cACnB1xE,EAAKnC,cAAcsvE,eAAe,gBAAgBntE,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAC7GrnE,EAAKnC,cAAcsvE,eAAe,kBAAkBntE,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,KAxK7G,eAAAh7C,EAAAjR,EAAA3M,KAAA8P,EAAA9jB,OAAAs7K,EAAA,EAAAt7K,CAAA4xB,EAAA,GAqKGiiD,EArKH/vD,EAAA,GAqKYq7J,EArKZr7J,EAAA,IAqK+BgwD,EArK/BhwD,EAAA,KA2KmBq7J,GAAsBtrG,IACrCurG,EAAmBtrG,EAAgB5+D,GAAG,GAAK4+D,EAAgBxmE,MAAMumE,EAASvwD,IAAI,MAAMxR,KAAKqtK,GAAsB,EAEjH92K,GACF9C,EAAKmD,aAAa,CAChB0qK,OAAM,EACNgM,mBACAD,uBAIJxvJ,EAAS,CACPyvJ,mBACAD,uBAxLAx+J,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,GA6L8C8P,QAAQqD,IAAI,CAC5D7e,EAAKnC,cAAcsvE,eAAe,MAAMntE,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GACnGrnE,EAAKnC,cAAcsvE,eAAe,WAAWntE,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GACxGrnE,EAAKnC,cAAcsvE,eAAe,aAAantE,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,KAhMxG,eAAA7oD,EAAApD,EAAA3M,KAAAkf,EAAAlzB,OAAAs7K,EAAA,EAAAt7K,CAAA+jB,EAAA,GA6LCs7J,EA7LDnsJ,EAAA,GA6LWo8C,EA7LXp8C,EAAA,IA6LyByiD,EA7LzBziD,EAAA,KAoMeo8C,GAAiB+vG,IAC5B5vG,EAAckG,EAAYzgE,GAAG,GAAKygE,EAAYroE,MAAM+xK,EAAU/7J,IAAI,MAAMxR,KAAKw9D,GAAiB,EAEhGjnE,GACF9C,EAAKmD,aAAa,CAChB0qK,OAAM,EACN3jG,cACAH,kBAIJ3/C,EAAS,CACP8/C,cACAH,kBAjNA3uD,EAAAe,OAAA,4BAAAf,EAAA1P,KAAA,IAsNW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAtNlH,gBAsNJj9C,EAtNIhP,EAAA3M,OAuNU3L,GACZ9C,EAAKmD,aAAa,CAChB4tE,kBAAkB3mD,EAAOpM,aAzNzB5C,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IA8NqB1L,EAAKnC,cAAcmxG,cAAchvG,EAAKjF,MAAMyJ,YAAYyJ,GA9N7E,gBA8NEohG,EA9NFj0F,EAAA3M,KA+NA3L,GACF9C,EAAKmD,aAAa,CAChB63F,MAAMqU,IAA0B,IAGpCjlF,EAASilF,EApOLj0F,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IAuOW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAvOlH,gBAuOJj9C,EAvOIhP,EAAA3M,OAwOU3L,GACZ9C,EAAKmD,aAAa,CAChB2iC,SAAS1b,EAAOpM,aA1OhB5C,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IA+OW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GA/OlH,gBA+OJj9C,EA/OIhP,EAAA3M,OAgPU3L,GACZ9C,EAAKmD,aAAa,CAChBi4K,2BAA2BtzK,WAAWsiB,GAAQ,EAAI,KAAO,OACzDixJ,kBAAkBvzK,WAAWsiB,GAAQpiB,QAAQvJ,KAnP7C2c,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IAwPW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAxPlH,gBAwPJj9C,EAxPIhP,EAAA3M,OAyPU3L,GACZ9C,EAAKmD,aAAa,CAChBuoE,aAAa5jE,WAAWsiB,GAAQpiB,QAAQvJ,GACxC68K,sBAAsBxzK,WAAWsiB,GAAQ,EAAI,KAAO,SA5PpDhP,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IAiQW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAjQlH,gBAiQJj9C,EAjQIhP,EAAA3M,OAkQU3L,IACRq+D,EAAW,KAC+B,qBAAnCnhE,EAAKjF,MAAMyJ,YAAYsyI,SAA2B92I,EAAKjF,MAAMyJ,YAAYsyI,WAClF31E,EAAWr5D,WAAWsiB,GAAQpiB,QAAQvJ,IAExCuB,EAAKmD,aAAa,CAChBg+D,cAxQA/lD,EAAAe,OAAA,0BA6QAnc,EAAKjF,MAAMyJ,YAAYqwB,YAAa70B,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,YA7QrE,CAAA5kC,EAAA1P,KAAA,iBA8QIi6F,EAAiBlrG,OAAOC,OAAO,GAAGsF,EAAKjF,MAAMyJ,cACpCqoB,KAAOpyB,OAAOC,OAAO,GAAGsF,EAAKjF,MAAMyJ,YAAYqwB,UAAUmrB,aACxE2lD,EAAer+F,UAAY7M,OAAOkR,OAAO3L,EAAKjF,MAAMyJ,YAAY8C,WAGhEq+F,EAAe94E,KAAK/gB,MAAQ65F,EAAe94E,KAAK5vB,KAG5C0oG,EAAe9wE,UAAU6xE,cAC3Bf,EAAe9wE,UAAU6xE,aAAa3nG,QAAS,SAAA4nG,GAC7C,IAAM9L,EAAgB8K,EAAer+F,UAAU0S,KAAM,SAAA3d,GAAC,OAAKA,EAAEY,OAAS0pG,EAAY1pG,OAClF,GAAI49F,EAAc,CAChB,IAAM+L,EAAcjB,EAAer+F,UAAUwP,QAAQ+jF,GACrD8K,EAAer+F,UAAUs/F,GAAeD,KA3R5CvrF,EAAA1P,KAAA,IAgSa1L,EAAKnC,cAAcsvE,eAAe,MAAMntE,EAAKjF,MAAM+Q,MAAM65F,EAAe3lG,EAAKjF,MAAM4P,SAAQ,GAhSxG,SAgSFyf,EAhSEhP,EAAA3M,KAAA2M,EAAA1P,KAAA,0BAAA0P,EAAA1P,KAAA,IAmSa1L,EAAKiqB,UAAU,YAnS5B,SAmSFG,EAnSEhP,EAAA3M,KAAA,gBAsSA2b,GAAUtnB,IACPsnB,EAAOhsB,QAKV4B,EAAKmD,aAAa,CAChBo4K,QAAO,IALTv7K,EAAKmD,aAAa,CAChBo4K,OAAOzzK,WAAWsiB,GAAQpiB,QAAQvJ,MAzSpC2c,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IAmTW1L,EAAKnC,cAAcsvE,eAAe,MAAMntE,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,SAAQ,GAnT9G,gBAmTJyf,EAnTIhP,EAAA3M,OAqTU3L,IACPsnB,EAAOhsB,QAKV4B,EAAKmD,aAAa,CAChBq4K,eAAc,IALhBx7K,EAAKmD,aAAa,CAChBq4K,cAAc1zK,WAAWsiB,GAAQpiB,QAAQvJ,MAxT3C2c,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IAkUW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAlUlH,gBAkUJj9C,EAlUIhP,EAAA3M,OAoUU3L,IACPsnB,EAAOhsB,QAKV4B,EAAKmD,aAAa,CAChBmrE,UAAS,IALXtuE,EAAKmD,aAAa,CAChBmrE,SAASxmE,WAAWsiB,GAAQpiB,QAAQvJ,MAvUtC2c,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IAiVW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAjVlH,gBAiVJj9C,EAjVIhP,EAAA3M,OAmVU3L,IACPsnB,EAAOhsB,QAKV4B,EAAKmD,aAAa,CAChB0qE,kBAAiB,IALnB7tE,EAAKmD,aAAa,CAChB0qE,kBAAqC,IAAnB/lE,WAAWsiB,IAAapiB,QAAQvJ,MAtVpD2c,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IAiWW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAjWlH,cAiWJj9C,EAjWIhP,EAAA3M,QAoWU3L,EApWV,CAAAsY,EAAA1P,KAAA,aAqWG0e,EAAOhsB,QArWV,CAAAgd,EAAA1P,KAAA,aAsWMswB,EAAWl0B,WAAWsiB,GAAQpiB,QAAQvJ,MACvBuB,EAAKjF,MAAM+B,eAAuCmsB,IAA1B/O,EAAU6wG,aAA6B7wG,EAAU6wG,aAvW9F,CAAA3vG,EAAA1P,KAAA,iBAAA0P,EAAA1P,KAAA,IAwW0C1L,EAAKnC,cAAc0gG,iBAAiBv+F,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,aAxW1G,SAAA4W,EAAAi4B,GAAAj4B,EAAA3M,KAAA2M,EAAA1P,KAAA,mBAAA0P,EAAAi4B,GAwWyH,KAxWzH,SAwWMqrD,EAxWNtjF,EAAAi4B,GAyWArzC,EAAKmD,aAAa,CAChB64B,WACA0iE,kBA3WFtjF,EAAA1P,KAAA,mBA8WA1L,EAAKmD,aAAa,CAChB64B,UAAS,IA/WX,gBAAA5gB,EAAAe,OAAA,6BAqXA49J,GAAuB,EACvBC,GAAwB,GAEtBC,GAAwB,WAC5B,IAAMwB,EAA4BhzJ,SAASC,eAAe1oB,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAMk4G,OACnK,GAAIwoE,EAA0B,CAC5B,IAAMC,EAA6Bx8J,OAAO6qJ,OAAO0R,GACjD1B,GAAuB2B,EAA2B7S,aAAa/gK,WAAW4zK,EAA2BxF,IAAI,kBAAkBpuK,WAAW4zK,EAA2BxF,IAAI,iBACrK8D,GAAwB0B,EAA2B5S,cAGnDiR,GAAuB3tK,SAAS2tK,IAAsB,EAAI7tK,KAAKC,IAAI4tK,GAAqBC,IAAyBA,GACjHA,GAAwBD,GAGpBA,KAAyB/5K,EAAKsC,MAAMy3K,sBAClCj3K,GACF9C,EAAKmD,aAAa,CAChB42K,wBACAC,gCASV96J,OAAOqJ,oBAAoB,SAAU0xJ,GAAsBxgK,KAAtBhf,OAAA07K,EAAA,EAAA17K,QAAA07K,EAAA,EAAA17K,CAAAuF,MACrCkf,OAAOmJ,iBAAiB,SAAU4xJ,GAAsBxgK,KAAtBhf,OAAA07K,EAAA,EAAA17K,QAAA07K,EAAA,EAAA17K,CAAAuF,MAE9B8C,GACF9C,EAAKmD,aAAa,CAChB42K,wBACAC,2BAvZA5+J,EAAAe,OAAA,yBA6ZE+9J,GAAuBjsK,EAASjO,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/GqqK,GAAyBlsK,EAASisK,GAAsB,OAAchuK,KAAKqE,IAAIvQ,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAASpM,EAAKnC,cAAcqP,YAAYlN,EAAKnC,cAAcqP,YAAY,IAAIC,MAAQmD,OAAO,uBAAuB,uBAAuBjD,SAAS,EAAE,QAAQsoC,GAAG5nC,UAAU,MAGxUqnK,GAAe,KACbjpJ,GAlaF,YAAA1qB,OAka8BzB,EAAKjF,MAAMyJ,YAAYmD,QAlarD,KAAAlG,OAkagEwM,GAC9DmM,GAAapa,EAAKnC,cAAcsvC,cAAchhB,IAEpDipJ,GAAe,CAAC,CACdl1K,GAAGF,EAAKjF,MAAM+Q,MACd1O,MAAO4C,EAAKjF,MAAMqC,MAAQ4C,EAAKjF,MAAMqC,MAAQ,OAAO+iG,EAAiB/iG,MAAMgL,IAAIC,KAAK,KAAK,IACzFnD,KAAM,OAGW,OAAfkV,IAAuBA,GAAW,IAAMA,GAAW,GAAGlV,MAAQkV,GAAW,GAAGlV,KAAKpG,OAAO,GA3axF,CAAAsc,EAAA1P,KAAA,UA4aF0pK,GAAeh7J,GA5abgB,EAAA1P,KAAA,sBAgbuB,SAArB1L,EAAKjF,MAAM+Q,MAhbb,CAAAsP,EAAA1P,KAAA,UAobA,IAHA0pK,GAAa,GAAGlwK,KAAO,GACjBw8C,IAAiB,IAAIv0C,MAAOY,UAC9B8C,GAAI,GACCrJ,GAAE,EAAGA,IAAG,GAAIA,KACbkvH,GAAQ12H,EAAKnC,cAAcqP,YAAYw0C,IAAgB+0E,IAAIjvH,GAAE,OAC7DoJ,GAAI8lH,GAAMpmH,OAAO,oBAElB9I,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzBqJ,IAAiB,EAAd3E,KAAKyvK,SAAW,EAInB9qK,IAAiB,EAAd3E,KAAKyvK,SAAW,EAGrBvG,GAAa,GAAGlwK,KAAK+C,KAAK,CAAC2I,KAAEC,OAhc/BuK,EAAA1P,KAAA,0BAmcM8E,GAAmBxQ,EAAKnC,cAAcmwD,oBAAoB,OAAO,IAncvE5yC,EAAA1P,KAAA,IAuciC1L,EAAKnC,cAAc2Q,gBAAgBxO,EAAKjF,MAAMyJ,YAAYmD,QAAQsG,EAAOksK,GAAuBD,IAAqB,EAAM1pK,IAvc5J,SAucM4pK,GAvcNh/J,EAAA3M,KAycIsC,GAAY,EACVspK,GAAaD,GAAmBt7K,OAEtCs7K,GAAmBr7K,QAAQ,SAACiG,EAAEwC,GAC5B,IAAMoJ,EAAI5Q,EAAKnC,cAAcqP,YAAwB,IAAZlI,EAAEkK,WAAgBoB,OAAO,oBAC5DO,EAAI/I,WAAW9H,EAAKnC,cAAc0R,iBAAiBvK,EAAE+1F,SAAS,KAC9D9pF,EAAU/E,KAAKgF,MAAMH,KAAYspK,GAAW,KAClDjF,GAAa,GAAGlwK,KAAK+C,KAAK,CAAE2I,IAAGC,IAAGI,cAhdpC,SAodEmkK,GAAa,GAAGlwK,KAAKpG,OAAO,GAC9BkB,EAAKnC,cAAcwc,cAAc8R,GAAcipJ,IArd/C,gBA0dgC,IAAhCA,GAAa,GAAGlwK,KAAKpG,UACjB22K,GAAWh7K,OAAOC,OAAO,GAAG06K,GAAa,GAAGlwK,KAAK,KAC9C0L,EAAI5Q,EAAKnC,cAAcqP,YAAYuoK,GAAS,oBAAoBh/C,IAAI,EAAE,SAASnmH,OAAO,oBAC/F8kK,GAAa,GAAGlwK,KAAK+C,KAAKwtK,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAMI,EAAqBvtJ,SAASC,eAAe1oB,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAMk4G,OAC5J,GAAI+iE,EAAmB,CACrB,IAAMC,EAAsB/2J,OAAO6qJ,OAAOiM,GAC1CN,GAAgBO,EAAoBpN,aAAa/gK,WAAWmuK,EAAoBC,IAAI,kBAAkBpuK,WAAWmuK,EAAoBC,IAAI,iBACzIP,GAAiBM,EAAoBnN,cACjC4M,KAAkB11K,EAAKsC,MAAMozK,eAAkB11K,EAAKsC,MAAMqzK,gBAC5D31K,EAAKmD,aAAa,CAChBuyK,iBACAC,eAAgB31K,EAAKsC,MAAMqzK,eAAiB31K,EAAKsC,MAAMqzK,eAAiBA,UAQhFz2J,OAAOqJ,oBAAoB,SAAUqtJ,GAAen8J,KAAfhf,OAAA07K,EAAA,EAAA17K,QAAA07K,EAAA,EAAA17K,CAAAuF,MACrCkf,OAAOmJ,iBAAiB,SAAUutJ,GAAen8J,KAAfhf,OAAA07K,EAAA,EAAA17K,QAAA07K,EAAA,EAAA17K,CAAAuF,MAG5B61K,GAAenhK,IAEfohK,GAAgB,CACpBtjK,UAAU,EACV4jK,UAAU,EACV3jK,SAAQ,EACRC,SAAS,KACThO,SAAQ,EACRsN,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjB9X,eAAc,EACdoB,OAAO,SAAAwI,GAAC,OAAIA,EAAE5H,OACdw+K,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAG1+K,MAAO,WACpB,CAAE0+K,OAAQ,GAAI1+K,MAAO,cAG3B0V,cAAa9S,EAAKjF,MAAM+B,UAAmB,IAC3CiV,QAAQ,SAAAvM,GAAK,OAAIsC,WAAWtC,GAAOwC,QAAQ,GAAG,KAC9CyL,KAAK,CACH,CAAEq7B,MAAO,CAAE5uC,GAAIF,EAAKjF,MAAM+Q,OAAU5L,GAAI,iBAE1CvE,OAAQ,CAAEuL,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9C0M,aAAa,SAACC,GAAc,IAClBE,EAAUF,EAAVE,MACFD,EAAQC,EAAMC,OAAO,GAC3B,OACEkiK,EAAAp7K,EAAAC,cAAC6gL,EAAA,EAAD,CACE9nK,MAAOA,GAGiB,kBAAjBC,EAAMC,QAAuBD,EAAMC,OAAOrV,QAC/CoV,EAAMC,OAAOvT,IAAI,SAAAqT,GACf,IAAMxM,EAAewM,EAAMK,QACrBiiK,EAAkBtiK,EAAM/O,KAAKqP,WAEnC,OACE8hK,EAAAp7K,EAAAC,cAAC8gL,EAAA,EAAD,CACEr6K,IAAKsS,EAAM/T,GACX9C,MAAO6W,EAAM7W,MACbkL,MAAOb,EACPjC,MAAO+wK,SAUnBv2K,EAAKjF,MAAMkJ,YAETjE,EAAKjF,MAAMkJ,YAAcxJ,OAAOoE,KAAKmB,EAAKjF,MAAMkJ,YAAYnF,QAC9DrE,OAAOoE,KAAKmB,EAAKjF,MAAMkJ,YAAYlF,QAAQ,SAAA1C,GACzCy5K,GAAcz5K,GAAK2D,EAAKjF,MAAMkJ,WAAW5H,KAK3CyG,GACF9C,EAAKmD,aAAa,CAChB0qK,OAAM,EACNgI,gBACAT,gBACAU,iBACAJ,iBACAC,oBAGJvrJ,EAASgrJ,GApkBLh6J,EAAAe,OAAA,6BAukBAm+J,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAMuB,EAA6BxzJ,SAASC,eAAe1oB,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAM4Z,UAAY8T,SAASC,eAAe1oB,EAAKjF,MAAMk4G,OACpK,GAAIgpE,EAA2B,CAC7B,IAAMC,EAA8Bh9J,OAAO6qJ,OAAOkS,GAClDzB,GAAwB0B,EAA4BrT,aAAa/gK,WAAWo0K,EAA4BhG,IAAI,kBAAkBpuK,WAAWo0K,EAA4BhG,IAAI,iBACzKuE,GAAyByB,EAA4BpT,cACjD0R,KAA0Bx6K,EAAKsC,MAAMk4K,uBAA0Bx6K,EAAKsC,MAAMm4K,wBAC5Ez6K,EAAKmD,aAAa,CAChBq3K,yBACAC,uBAAwBz6K,EAAKsC,MAAMm4K,uBAAyBz6K,EAAKsC,MAAMm4K,uBAAyBA,UAQxGv7J,OAAOqJ,oBAAoB,SAAUmyJ,GAAuBjhK,KAAvBhf,OAAA07K,EAAA,EAAA17K,QAAA07K,EAAA,EAAA17K,CAAAuF,MACrCkf,OAAOmJ,iBAAiB,SAAUqyJ,GAAuBjhK,KAAvBhf,OAAA07K,EAAA,EAAA17K,QAAA07K,EAAA,EAAA17K,CAAAuF,MAE5B26K,GAAe36K,EAAKnC,cAAcqP,YAAYlN,EAAKnC,cAAcqP,YAAY,IAAIC,MAAQE,SAAS,EAAE,OAAOiD,OAAO,oBAAoB,oBACtIsqK,GAAiBD,GAAavtK,QAAQC,SAAS,EAAE,QAGjDwtK,GAAuB3uK,KAAKqE,IAAIvQ,EAAKnC,cAAciS,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAASwuK,GAAejlI,GAAG5nC,UAAU,MA/mBtJqN,EAAA1P,KAAA,IAknBmC1L,EAAKnC,cAAc2Q,gBAAgBxO,EAAKjF,MAAMyJ,YAAYmD,QAAQsG,EAAO4sK,GAAoB,MAAK,EAAM,OAlnB3I,gBAknBAC,GAlnBA1/J,EAAA3M,KAonBEssK,GAAuBD,GAA2Bl6K,IAAI,SAACoE,EAAEwC,GAC7D,IAAIqJ,EAAI,EACFD,EAAI5Q,EAAKnC,cAAcqP,YAAwB,IAAZlI,EAAEkK,WAAgBoB,OAAO,oBAC5D3D,EAAa3M,EAAKnC,cAAc0R,iBAAiBvK,EAAEsK,UAAUtP,EAAKjF,MAAMyJ,YAAY/F,UAY1F,OAVK67K,GAGHzpK,EAAI/I,WAAW6E,EAAWoR,IAAIu8J,IAAiB9tK,MAAM,GAAGzE,MAAM,MAF9DuyK,GAAkB3tK,EAKG,OAAnB4tK,KACFA,GAAiBnuK,SAASpH,EAAEm3K,cAGvB,CAAEvrK,IAAGC,OAGRmqK,GAAuB,CAAC,CAC5B96K,GAAG,OACH9C,MAAO,OAAO+iG,EAAiB/iG,MAAMgL,IAAIC,KAAK,KAAK,IACnDnD,KAAM61K,KAIFE,GAAuBvmK,IAEvBwmK,GAAwB,CAC5B1oK,UAAU,EACV4jK,UAAU,EACV3jK,SAAQ,EACR/N,SAAQ,EACRgO,SAAS,KACTV,WAAW,KACXa,YAAW,EACXI,aAAY,EACZF,aAAY,EACZC,MAAM,YACNF,cAAa,EACbI,iBAAiB,EACjB1W,OAAO,SAAAwI,GAAC,OAAIA,EAAE5H,OACd+V,mBAAmB,GACnBxX,OAAQ,CAAEuL,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IAG3CrH,EAAKjF,MAAMkJ,YAETjE,EAAKjF,MAAMkJ,YAAcxJ,OAAOoE,KAAKmB,EAAKjF,MAAMkJ,YAAYnF,QAC9DrE,OAAOoE,KAAKmB,EAAKjF,MAAMkJ,YAAYlF,QAAQ,SAAA1C,GACzC6+K,GAAsB7+K,GAAK2D,EAAKjF,MAAMkJ,WAAW5H,KAKnDyG,GACF9C,EAAKmD,aAAa,CAChB0qK,OAAM,EACNoN,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJrwJ,EAAS4wJ,GAprBL5/J,EAAAe,OAAA,6BAurBExb,GAAOuZ,EAAUvZ,MACvBypB,EAASpqB,EAAKnC,cAAcktB,aAAapqB,GAAKX,EAAKjF,MAAMyJ,eAEvDxE,EAAKmD,aAAL1I,OAAAg8K,EAAA,EAAAh8K,CAAA,GACGw6K,EAAW7qJ,IA3rBZhP,EAAAe,OAAA,6BAAAf,EAAA1P,KAAA,IAgsBW1L,EAAKnC,cAAcsvE,eAAe8nG,EAAUj1K,EAAKjF,MAAM+Q,MAAM9L,EAAKjF,MAAMyJ,YAAYxE,EAAKjF,MAAM4P,QAAQ08D,GAhsBlH,gBAgsBJj9C,EAhsBIhP,EAAA3M,OAisBU3L,GACZ9C,EAAKmD,aAAL1I,OAAAg8K,EAAA,EAAAh8K,CAAA,CACEozK,OAAM,GACLoH,EAAW7qJ,IApsBZhP,EAAAe,OAAA,6BAAAf,EAAAe,OAAA,SA2sBHiO,GA3sBG,0BAAAhP,EAAAvO,SAAAqO,EAAApgB,oFAtDNA,KAAK+C,cACP/C,KAAK+C,cAAcC,SAAShD,KAAKC,OAEjCD,KAAK+C,cAAgB,IAAIE,IAAcjD,KAAKC,8JAK9CD,KAAKyH,oBAAqB,yPAI1BzH,KAAKkD,kQAILlD,KAAKmvB,2LAGYrnB,wFAASC,iCAAS,KAC9B/H,KAAKyH,4DACDzH,KAAKgI,SAASF,EAASC,oCAEzB,4LAGgBJ,EAAWC,gGAClC5H,KAAKkD,YAEC4sK,EAAenoK,EAAUqJ,QAAUhR,KAAKC,MAAM+Q,MAC9Cqe,EAAiB1nB,EAAUkI,UAAY7P,KAAKC,MAAM4P,QAClDL,EAAgB7H,EAAU3F,WAAahC,KAAKC,MAAM+B,SAClDyN,EAAmB9H,EAAU+H,YAAc1P,KAAKC,MAAMyP,UACtDosK,EAAen0K,EAAUyX,UAAUjd,OAASnC,KAAKC,MAAMmf,UAAUjd,KACjE2tH,GAAwBnoH,EAAUmoH,sBAAwB9vH,KAAKC,MAAM6vH,qBACrEiK,GAA2BpyH,EAAU6W,SAAWxe,KAAKC,MAAMue,SAAa7W,EAAU6W,SAAWxe,KAAKC,MAAMue,SAAWpP,KAAKC,UAAU1H,EAAU6W,QAAQ6Y,YAAcjoB,KAAKC,UAAUrP,KAAKC,MAAMue,QAAQ6Y,UACpM+2F,EAAsBzmH,EAAUhG,cAAgB3B,KAAKC,MAAM0B,cAAgBhC,OAAOkR,OAAOlJ,EAAUhG,cAAcmP,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqBnN,SAAWrE,OAAOkR,OAAO7Q,KAAKC,MAAM0B,cAAcmP,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGI,SAAqBnN,OAEjP83K,GAAgBhM,GAAgBzgJ,GAAkB++F,GAAuB0B,GAAwBiK,EACnG/5H,KAAKqI,aAAa,CAChB0qK,OAAM,GACN,WACA5vK,EAAKgsB,eAEE3f,GAAiBC,KACpBmjH,EAAWjzH,OAAOC,OAAO,GAAGI,KAAKwH,OACvCxH,KAAKqI,aAAa,CAChB0qK,OAAM,GACN,WACA5vK,EAAK6E,SAAS4qH,6IAmtBZ,IAAAvoH,EAAArK,KACAof,EAAYpf,KAAKC,MAAMmf,UACzBkQ,EAAS,KAGPhnB,OADsC6lB,IAAzB/O,EAAUlR,YAA4BkR,EAAUlR,WACtCqtK,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD,CAAQj/K,KAAK,SAAa,KAEjDotB,EAAa,CACjBhtB,WAAW,EACXC,SAAS,CAAC,EAAE,GACZJ,MAAM,WACNwB,UAAU,CACR7C,eAAe,eAKfme,EAAUnf,OAASN,OAAOoE,KAAKqb,EAAUnf,OAAO+D,QAClDrE,OAAOoE,KAAKqb,EAAUnf,OAAOgE,QAAQ,SAAA1C,GACnCkuB,EAAWluB,GAAK6d,EAAUnf,MAAMsB,KAKhC6d,EAAUs5F,WAAa/4G,OAAOoE,KAAKqb,EAAUs5F,WAAW10G,QAC1DrE,OAAOoE,KAAKqb,EAAUs5F,WAAWz0G,QAAQ,SAAA1C,GACH,oBAAzB6d,EAAUs5F,UAAUn3G,KAC7BkuB,EAAWluB,GAAK6d,EAAUs5F,UAAUn3G,GAAG8I,EAAKpK,UAKlD,IAAMolG,EAAmBrlG,KAAKC,MAAM+Q,MAAQhR,KAAK+C,cAAciS,gBAAgB,CAAC,QAAQ,SAAShV,KAAKC,MAAM+Q,MAAMiE,gBAAkB,KAC9HvL,EAAc1J,KAAKC,MAAMyJ,aAAe27F,EAExCzhG,EAAe6rB,GAAcA,EAAW7rB,aAAe6rB,EAAW7rB,aAAe,EACjFD,EAAW8rB,GAAcA,EAAW9rB,SAAW8rB,EAAW9rB,SAAa3D,KAAKC,MAAM+B,SAAW,EAAI,EACjG6B,EAAe4rB,GAAcA,EAAW5rB,aAAe4rB,EAAW5rB,aAAiB7D,KAAKC,MAAM+B,SAAW,EAAI,EAE7G0sH,EAAYrpB,GAAoBA,EAAiBjjG,KAAOijG,EAAiBjjG,KAAQsH,GAAeA,EAAYtH,KAAOsH,EAAYtH,KAA9C,iBAAAuE,OAAsE3G,KAAKC,MAAM+Q,MAAjF,QAEvF,OAAQoO,EAAUjd,MAChB,IAAK,cACHmtB,EACEisJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD3hL,OAAAC,OAAA,CACEmvB,UAAW,MACXC,QAAShvB,KAAKC,MAAM+Q,OAChBoO,EAAU6P,cAEdssJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD3hL,OAAAC,OAAA,CAAOkC,IAAK4sH,GAAej/F,KAGjC,MACA,IAAK,OACHH,EACEisJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD3hL,OAAAC,OAAA,CAAOkC,IAAK4sH,GAAej/F,IAE/B,MACA,IAAK,YACH,IAAMa,EAAY+0E,GAAoBA,EAAiB73F,MAAQ63F,EAAiB73F,MAAQxN,KAAKC,MAAM+Q,MACnGse,EACEisJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAaa,GAE3B,MACA,IAAK,eACH,IAAMw0G,EAAe9kI,KAAK+C,cAAciS,gBAAgB,CAAC,aAAahV,KAAKC,MAAMyJ,YAAYo3B,SAAS,SAClGgkG,IACFx1G,EACEisJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD3hL,OAAAC,OAAA,CAAOkC,IAAKgjI,GAAkBr1G,KAGpC,MACA,IAAK,eACH,IAAMo5G,EAAe7oI,KAAK+C,cAAciS,gBAAgB,CAAC,aAAahV,KAAKC,MAAMyJ,YAAYo3B,SAAS,UACtGxR,EACEisJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAao5G,GAE3B,MACA,IAAK,eACHv5G,EAAStvB,KAAKwH,MAAM+2B,aAClBg9I,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B5rB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAM+2B,gBAC1Ej2B,EACN,MACA,IAAK,MACHgnB,EAAStvB,KAAKwH,MAAM0xE,IAClBqiG,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B5rB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAM0xE,OAC1E5wE,EACN,MACA,IAAK,aACHgnB,EAAStvB,KAAKwH,MAAMqK,WAClB0pK,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B5rB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAMqK,cAC1EvJ,EACN,MACA,IAAK,kBACHgnB,EAAStvB,KAAKwH,MAAM64K,gBAClB9E,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B5rB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAM64K,mBAC1E/3K,EACN,MACA,IAAK,mBACHgnB,EAAStvB,KAAKwH,MAAMqM,iBAClB0nK,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B5rB,aAAcA,EAAcR,OAAQrD,KAAKwH,MAAMqM,oBAC1EvL,EACN,MACA,IAAK,gCACHgnB,EAAStvB,KAAKwH,MAAMurK,OAAS/yK,KAAKwH,MAAMksE,6BAA+B1zE,KAAKwH,MAAMmsE,0BAChF4nG,EAAAp7K,EAAAC,cAACm8K,EAAAp8K,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXr6F,SAAU,QACVh1B,SAAUA,EACVysD,IAAKpjD,WAAWhN,KAAKwH,MAAMmsE,2BAC3B/6C,MAAO5rB,WAAWhN,KAAKwH,MAAMksE,6BAC7Bu/C,aAAe,SAAAz9F,GAAC,OAAInrB,EAAKtH,cAAcW,iBAAiB8xB,EAAE7xB,EAASC,EAAaC,KAE/E,SAAA26B,GAAA,IAAG00F,EAAH10F,EAAG00F,WAAH10F,EAAe5F,MAAf,OACC2iJ,EAAAp7K,EAAAC,cAAA,QAAMiG,MAAOopB,EAAWppB,MAAO8sH,IAAKD,MAGtC5qH,EACN,MACA,IAAK,2BACHgnB,EAAStvB,KAAKwH,MAAMurK,OAAS/yK,KAAKwH,MAAM+tE,wBAA0Bv1E,KAAKwH,MAAMguE,qBAC3E+lG,EAAAp7K,EAAAC,cAACm8K,EAAAp8K,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXr6F,SAAU,QACVh1B,SAAUA,EACVysD,IAAKpjD,WAAWhN,KAAKwH,MAAMguE,sBAC3B58C,MAAO5rB,WAAWhN,KAAKwH,MAAM+tE,wBAC7B09C,aAAe,SAAAz9F,GAAC,OAAInrB,EAAKtH,cAAcW,iBAAiB8xB,EAAE7xB,EAASC,EAAaC,KAE/E,SAAA6vB,GAAA,IAAGw/F,EAAHx/F,EAAGw/F,WAAHx/F,EAAekF,MAAf,OACC2iJ,EAAAp7K,EAAAC,cAAA,QAAMiG,MAAOopB,EAAWppB,MAAO8sH,IAAKD,MAGtC5qH,EACN,MACA,IAAK,cACHgnB,EAAStvB,KAAKwH,MAAMurK,OAAS/yK,KAAKwH,MAAMkoE,WAAa1vE,KAAKwH,MAAMioE,QAC9D8rG,EAAAp7K,EAAAC,cAACm8K,EAAAp8K,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXr6F,SAAU,QACVh1B,SAAUA,EACVysD,IAAKpjD,WAAWhN,KAAKwH,MAAMioE,SAC3B72C,MAAO5rB,WAAWhN,KAAKwH,MAAMkoE,WAC7BujD,aAAe,SAAAz9F,GAAC,OAAInrB,EAAKtH,cAAcW,iBAAiB8xB,EAAE7xB,EAASC,EAAaC,KAE/E,SAAA+vB,GAAA,IAAGs/F,EAAHt/F,EAAGs/F,WAAHt/F,EAAegF,MAAf,OACC2iJ,EAAAp7K,EAAAC,cAAA,QAAMiG,MAAOopB,EAAWppB,MAAO8sH,IAAKD,MAGtC5qH,EACN,MACA,IAAK,uBACHgnB,EAAStvB,KAAKwH,MAAMurK,OAAS/yK,KAAKwH,MAAMs3K,oBAAsB9+K,KAAKwH,MAAMu3K,iBACvExD,EAAAp7K,EAAAC,cAACm8K,EAAAp8K,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXr6F,SAAU,QACVh1B,SAAUA,EACVysD,IAAKpjD,WAAWhN,KAAKwH,MAAMu3K,kBAC3BnmJ,MAAO5rB,WAAWhN,KAAKwH,MAAMs3K,oBAC7B7rD,aAAe,SAAAz9F,GAAC,OAAInrB,EAAKtH,cAAcW,iBAAiB8xB,EAAE7xB,EAASC,EAAaC,KAE/E,SAAAgwB,GAAA,IAAGq/F,EAAHr/F,EAAGq/F,WAAHr/F,EAAe+E,MAAf,OACC2iJ,EAAAp7K,EAAAC,cAAA,QAAMiG,MAAOopB,EAAWppB,MAAO8sH,IAAKD,MAGtC5qH,EACN,MACA,IAAK,kBACHgnB,EAAStvB,KAAKwH,MAAMurK,OAAS/yK,KAAKwH,MAAMynE,eAAiBjvE,KAAKwH,MAAM4nE,YAClEmsG,EAAAp7K,EAAAC,cAACm8K,EAAAp8K,EAAD,CACE2yH,MAAO,EACP7jE,QAAS,IACT8jE,UAAW,GACXC,WAAW,EACXr6F,SAAU,QACVh1B,SAAUA,EACVysD,IAAKpjD,WAAWhN,KAAKwH,MAAM4nE,aAC3Bx2C,MAAO5rB,WAAWhN,KAAKwH,MAAMynE,eAC7BgkD,aAAe,SAAAz9F,GAAC,OAAInrB,EAAKtH,cAAcW,iBAAiB8xB,EAAE7xB,EAASC,EAAaC,KAE/E,SAAA28B,GAAA,IAAG0yF,EAAH1yF,EAAG0yF,WAAH1yF,EAAe5H,MAAf,OACC2iJ,EAAAp7K,EAAAC,cAAA,QAAMiG,MAAOopB,EAAWppB,MAAO8sH,IAAKD,MAGtC5qH,EACN,MACA,IAAK,oBACHgnB,EAAStvB,KAAKwH,MAAMyuE,kBAClBslG,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B9rB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrD,KAAKwH,MAAMyuE,qBAC1H3tE,EACN,MACA,IAAK,YACHgnB,EAAStvB,KAAKwH,MAAM2pE,WAAaxxE,OAAOoE,KAAK/D,KAAKwH,MAAM2pE,WAAWntE,OAAO,EACxEu3K,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD,CACExhL,MAAO,EACPiB,WAAY,SACZC,cAAe,MACfC,eAAgB,cAGdtB,OAAOkR,OAAO7Q,KAAKwH,MAAM2pE,WAAWrrE,IAAK,SAACoiC,EAAew+D,GAAhB,OACvC60E,EAAAp7K,EAAAC,cAAC2nH,EAAD,CACE/2G,MAAOk3B,EAAel3B,MACtBtH,YAAaw+B,EACbrhC,IAAG,SAAAF,OAAW+/F,GACdtnF,UAAW,CACTjd,KAAK,cACL8sB,aAAa,CACXD,QAAQ,GAAAroB,OAAGuhC,EAAel3B,QAAS3G,EAAK7C,MAAMq7F,+BAAiCx4F,EAAK7C,MAAMq7F,8BAA8B36D,EAAel3B,OAApG,KAAArK,OAAkH0D,EAAK7C,MAAMq7F,8BAA8B36D,EAAel3B,OAAO9D,QAAQvJ,GAAzL,KAAAgD,OAAsMuhC,EAAe5T,sBAArN,yBAAoQ,KAEzSr0B,MAAM,CACJuB,aAAa,MACboM,SAAS,WACT7L,OAAO,CAAC,QAAQ,OAChB2D,GAAGghG,EAAgB,QAAU,EAC7B74F,OAAOlO,OAAOkR,OAAOxG,EAAK7C,MAAM2pE,WAAWntE,OAAO0iG,EAClDl4F,UAAU,CAAC,kCAAkC,0CAOvDxO,KAAKwH,MAAM2pE,UACboqG,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAV,KACEnnB,EACN,MACA,IAAK,kBACHgnB,EAAStvB,KAAKwH,MAAMisE,gBAClB8nG,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B9rB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrD,KAAKwH,MAAMisE,mBAC1HnrE,EACN,MACA,IAAK,aACHgnB,EAAStvB,KAAKwH,MAAMgJ,WAClB+qK,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B9rB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrD,KAAKwH,MAAMgJ,cAC1HlI,EACN,MACA,IAAK,OACHgnB,EAAStvB,KAAKwH,MAAMwjC,SAClBuwI,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B9rB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQrD,KAAKwH,MAAMwjC,YAC1H1iC,EACN,MACA,IAAK,QACHgnB,EAAUtvB,KAAKC,MAAMyJ,aAAe1J,KAAKC,MAAMyJ,YAAYorJ,kBAAsBymB,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAV,YAA0DtB,IAArBnuB,KAAKwH,MAAM04F,OAA4C,OAArBlgG,KAAKwH,MAAM04F,OAAkBlgG,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM04F,OAAOrrF,GAAG,GACjO0mK,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GAAiB6vB,EAAjB,CAA6B9rB,SAAU,EAAGN,OAAQrD,KAAKwH,MAAM04F,SAC1DlgG,KAAK+C,cAAckO,MAAMjR,KAAKwH,MAAM04F,OAAO9tE,IAAI,GAAMmpJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAV,KAAkCnnB,EAC9F,MACA,IAAK,eACHgnB,EAAStvB,KAAKwH,MAAMopE,aACkB,qBAA5BxxD,EAAUiqH,eAAiCjqH,EAAUiqH,cAC3DkyC,EAAAp7K,EAAAC,cAACohL,EAAA,EAAD,CACEx/K,SAAUhC,KAAKC,MAAM+B,SACrB6vH,UAAW7xH,KAAKwH,MAAMg5K,uBAEtBjF,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAazvB,KAAKwH,MAAMopE,aAAlC,MAGF2qG,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAazvB,KAAKwH,MAAMopE,aAAlC,KAEFtoE,EACJ,MACA,IAAK,oBACHgnB,EAAStvB,KAAKwH,MAAM+4K,kBACkB,qBAA5BnhK,EAAUiqH,eAAiCjqH,EAAUiqH,cAC3DkyC,EAAAp7K,EAAAC,cAACohL,EAAA,EAAD,CACEx/K,SAAUhC,KAAKC,MAAM+B,SACrB6vH,UAAW7xH,KAAKwH,MAAM84K,4BAEtB/E,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAazvB,KAAKwH,MAAM+4K,kBAAlC,MAGFhF,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAazvB,KAAKwH,MAAM+4K,kBAAlC,KAEFj4K,EACJ,MACA,IAAK,gBACHgnB,EAAStvB,KAAKwH,MAAMi6K,cAClBlG,EAAAp7K,EAAAC,cAACohL,EAAA,EAAD,CACE3vD,UAAW,KACX7vH,SAAUhC,KAAKC,MAAM+B,UAErBu5K,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GACM6vB,EADN,CAEE9rB,SAAUA,EACVE,aAAcA,EACdR,OAAQrD,KAAKwH,MAAMi6K,kBAGrBn5K,EACN,MACA,IAAK,WACHgnB,EAAStvB,KAAKwH,MAAM2+H,SAClBo1C,EAAAp7K,EAAAC,cAACohL,EAAA,EAAD,CACE3vD,UAAW,KACX7vH,SAAUhC,KAAKC,MAAM+B,UAErBu5K,EAAAp7K,EAAAC,cAACmhL,EAAA,EAAD5hL,OAAAC,OAAA,GACM6vB,EADN,CAEE9rB,SAAUA,EACVE,aAAcA,EACdR,OAAQrD,KAAKwH,MAAM2+H,aAGrB79H,EACN,MACA,IAAK,mBACH,IAAM2xH,EAAsBj6H,KAAK+C,cAAciS,gBAAgB,CAAC,aAAa,QAAQ,cAC/Ey+C,EAAkBzzD,KAAK+C,cAAciS,gBAAgB,CAAC,YAAYilH,IACxE3qG,EAAStvB,KAAKwH,MAAMgqB,iBAClB+pJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAV,IAAwBzvB,KAAKwH,MAAMgqB,iBAAiBtkB,QAAQvJ,GAA5D,SAA6E8vD,EAAgBn/B,uBAC3FhsB,EACN,MACA,IAAK,wBACHgnB,EAAStvB,KAAKwH,MAAMgxH,sBAClB+iD,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAazvB,KAAKwH,MAAMgxH,sBAAsBtrH,QAAQvJ,GAAhE,IAA4E3D,KAAKC,MAAMyJ,YAAY4qB,uBACjGhsB,EACN,MACA,IAAK,oBACHgnB,EAAStvB,KAAKwH,MAAM6iC,kBAClBkxI,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAazvB,KAAKwH,MAAM6iC,kBAAkBn9B,QAAQvJ,IAC1D2E,EACN,MACA,IAAK,MACHgnB,EAAStvB,KAAKwH,MAAM6+D,SAClBk1G,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAazvB,KAAKwH,MAAM6+D,SAAW/iE,MAAM0J,WAAWhN,KAAKwH,MAAM6+D,WAAmB,GAAN,KACpF/9D,EACN,MACA,IAAK,SACHgnB,OAA+BnB,IAAtBnuB,KAAKwH,MAAMi5K,OAClBlF,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,GAAmC,IAAtBzvB,KAAKwH,MAAMi5K,OAAmBzgL,KAAKwH,MAAMi5K,OAAS,IAAKlF,EAAAp7K,EAAAC,cAAA,mBAC5EkI,EACN,MACA,IAAK,WACHgnB,OAAsCnB,IAA7BnuB,KAAKwH,MAAMk5K,cAClBnF,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,GAA0C,IAA7BzvB,KAAKwH,MAAMk5K,cAA0B1gL,KAAKwH,MAAMk5K,cAAgB,IAAKnF,EAAAp7K,EAAAC,cAAA,mBAC1FkI,EACN,MACA,IAAK,WACHgnB,OAAiCnB,IAAxBnuB,KAAKwH,MAAMgsE,SAClB+nG,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,GAAqC,IAAxBzvB,KAAKwH,MAAMgsE,SAAqBxzE,KAAKwH,MAAMgsE,SAAW,IAAK+nG,EAAAp7K,EAAAC,cAAA,mBAChFkI,EACN,MACA,IAAK,mBACHgnB,OAAyCnB,IAAhCnuB,KAAKwH,MAAMurE,iBAClBwoG,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,GAA6C,IAAhCzvB,KAAKwH,MAAMurE,iBAA6B/yE,KAAKwH,MAAMurE,iBAAmB,IAAKwoG,EAAAp7K,EAAAC,cAAA,mBAChGkI,EACN,MACA,IAAK,MACHgnB,OAAiCnB,IAAxBnuB,KAAKwH,MAAM05B,SAClBq6I,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD,CACEvgL,WAAY,SACZC,cAAe,OAEfu6K,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,GAAqC,IAAxBzvB,KAAKwH,MAAM05B,SAAqBlhC,KAAKwH,MAAM05B,SAAW,IAAKq6I,EAAAp7K,EAAAC,cAAA,mBAEhFJ,KAAKwH,MAAMo8F,eAAiBjkG,OAAOoE,KAAK/D,KAAKwH,MAAMo8F,eAAe5/F,OAAO,GACvEu3K,EAAAp7K,EAAAC,cAAC2nH,EAAD,CACE3oG,UAAW,CACTjd,KAAK,UACLlC,MAAM,CACJuC,UAAU,CACRkD,GAAG,GAELqpB,UAAU,MACVC,QAAQrvB,OAAOoE,KAAK/D,KAAKwH,MAAMo8F,eAAe99F,IAAK,SAAAgiC,GACjD,IAAMxT,EAAwBjqB,EAAKtH,cAAciS,gBAAgB,CAAC,YAAY8yB,EAAS,0BACjF45I,EAAcr3K,EAAKtH,cAAciS,gBAAgB,CAAC,YAAY8yB,EAAS,mBACzEp9B,EAAQL,EAAK7C,MAAMo8F,cAAc97D,GAAU56B,QAAQvJ,GACvD,OAAQ+9K,GACN,QACA,IAAK,MACHh3K,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAA/D,OAAM+D,EAAN,KAAA/D,OAAe2tB,GAGxB,SAAA3tB,OAAUmhC,EAAV,MAAAnhC,OAAuB+D,KACtB6C,KAAK,WAMlBjF,EACN,MACA,IAAK,SACH,IAAM8zK,EAAyC,oBAApBh9J,EAAU5R,MAAuB4R,EAAU5R,MAAMxN,KAAKC,OAASmf,EAAU5R,MACpG8hB,EACEisJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD3hL,OAAAC,OAAA,GAAY6vB,EAAZ,CAAwB7pB,QAAS,kBAAM6pB,EAAWhvB,YAAY4J,EAAKpK,UAAUm8K,GAEjF,MACA,IAAK,mBACH9sJ,EAAStvB,KAAKwH,MAAM04K,qBAClB3E,EAAAp7K,EAAAC,cAACuhL,EAAA,EAADhiL,OAAAC,OAAA,GACMI,KAAKwH,MAAM44K,sBADjB,CAEE78K,KAAMvD,KAAKwH,MAAM24K,qBACjB/1K,KAAMpK,KAAKwH,MAAM04K,qBACjBpgL,MAAOE,KAAKwH,MAAMk4K,sBAClB39K,OAAQ/B,KAAKwH,MAAMm4K,0BAEnBr3K,EACN,MACA,IAAK,kBACHgnB,EAAStvB,KAAKwH,MAAMy3K,sBAAwBj/K,KAAKwH,MAAM03K,sBACrD3D,EAAAp7K,EAAAC,cAACwhL,EAAA,EAADjiL,OAAAC,OAAA,GACMI,KAAKC,MADX,CAEEolB,YAAa,CACXhjB,KAAK,QAEP+rB,WAAY,GACZ5kB,cAAexJ,KAAKC,MAAM+Q,MAC1BlR,MAAOE,KAAKwH,MAAMy3K,qBAClBl9K,OAAQ/B,KAAKwH,MAAM03K,sBACnBp0K,OAAqC,qBAAtB9K,KAAKC,MAAM6K,QAAyB9K,KAAKC,MAAM6K,OAC9DoD,WAA6C,qBAA1BlO,KAAKC,MAAMiO,YAA6BlO,KAAKC,MAAMiO,cAEtE5F,EACN,MACA,IAAK,UACHgnB,EACEisJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EACK7xJ,EAEJ8rJ,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAD3hL,OAAAC,OAAA,CACE8F,GAAI,EACJvD,KAAM,OACNE,KAAM,MACNC,MAAO,aACHmtB,EAAWjtB,aAIvB,MACA,IAAK,WACH8sB,EAAStvB,KAAKwH,MAAM8yK,aAClBiB,EAAAp7K,EAAAC,cAACuhL,EAAA,EAADhiL,OAAAC,OAAA,GACMI,KAAKwH,MAAMwzK,cADjB,CAEEz3K,KAAMvD,KAAKwH,MAAMuzK,aACjB3wK,KAAMpK,KAAKwH,MAAM8yK,aACjBx6K,MAAOE,KAAKwH,MAAMozK,cAClB74K,OAAQ/B,KAAKwH,MAAMqzK,kBAEnBvyK,EACN,MACA,IAAK,SACH,IAAIynB,EAAkB,KAClBC,EAAchwB,KAAKwH,MAAM4X,EAAUjd,MACvC,OAAQid,EAAU7b,MAChB,IAAK,SACHysB,EAAchwB,KAAK+C,cAAckO,MAAM+e,GAAa9M,WACpD6M,EAAkBjtB,IAClB2sB,EAAWpsB,OAAS2sB,EACtB,MACA,IAAK,OACHD,EAAkB7pB,IACpB,MACA,IAAK,OACH6pB,EAAkBI,IAClBV,EAAWttB,KAAO6tB,EACpB,MACA,QACED,EAAkB5pB,IAKtB,IAAMw4K,EAAkBh/K,OAAOkR,OAAOuO,EAAUvZ,MAAMqO,MACtD,GAAIlU,KAAKC,MAAMyJ,YAAX,GAAA/C,OAA0Bg4K,EAA1B,UAAkD,CACpD,IAAMC,EAAmB5+K,KAAKC,MAAMyJ,YAAX,GAAA/C,OAA0Bg4K,EAA1B,UAErBC,GAAoBj/K,OAAOoE,KAAK66K,GAAkB56K,QACpDrE,OAAOoE,KAAK66K,GAAkB36K,QAAQ,SAAA1C,GACpCkuB,EAAWluB,GAAKq9K,EAAiBr9K,KAKvC+tB,EAASU,EACPurJ,EAAAp7K,EAAAC,cAAC2vB,EAAoBN,EAAaO,GAChC1nB,EACN,MACA,QACE,IAAIs0K,EAAiB58K,KAAKwH,MAAM4X,EAAUjd,MACtCnC,KAAKwH,MAAM4X,EAAUjd,OAASnC,KAAKwH,MAAM4X,EAAUjd,MAAM06K,eAC3DD,EAAiB58K,KAAKwH,MAAM4X,EAAUjd,MAAM+K,QAAQvJ,IAEtD2rB,EAAStvB,KAAKwH,MAAM4X,EAAUjd,MAC5Bo5K,EAAAp7K,EAAAC,cAACkhL,EAAA,EAAS7xJ,EAAamtJ,GACrBt0K,EAGR,OAAOgnB,SAvwCczsB,aA2wCVklH,sGCrxCT4D,mLAIF,IAAM3pH,EAA0C,qBAAxBhC,KAAKC,MAAM+B,UAA2BhC,KAAKC,MAAM+B,SACnEb,EAAQnB,KAAKC,MAAMm9G,SAAYl9G,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CAAOE,MAAO,OAAQgC,IAAK9B,KAAKC,MAAMm9G,UAAcp9G,KAAKC,MAAMgC,aAAoBjC,KAAKC,MAAMwF,SAAYvF,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CAAMuC,KAAMnC,KAAKC,MAAMwF,UAAczF,KAAKC,MAAMuC,YAAiB,KAC1Mu6G,EAAW78G,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMkI,UAAY7G,EAAW,OAAS,SAAUU,SAAU,EAAGD,WAAY,EAAGH,MAAO,aAActC,KAAKC,MAAM88G,SAE7H,OACI78G,EAAAC,EAAAC,cAACO,EAAA,EAADhB,OAAAC,OAAA,CACE0C,MAAO,QACPd,aAAc,EACdzB,GAAKiC,EAAW,CAAC,EAAE,GAAK,EACxBnC,GAAKmC,EAAW,EAAI,CAAC,EAAE,GACvBlB,GAAKkB,EAAW,EAAI,CAAC,EAAE,GACvBpB,GAAKoB,EAAW,EAAI,CAAC,EAAE,GACvB4D,QAAU5F,KAAKC,MAAMQ,YACrBsB,OAASC,EAAW,OAAS,CAAC,QAAQ,SACtCiF,UAAWjH,KAAKC,MAAMM,SAAW,cAAgB,SACjD0pH,cAAejqH,KAAKC,MAAMM,SAAW,cAAgB,SACrDT,MAAOE,KAAKC,MAAMH,MAAQE,KAAKC,MAAMH,MAASkC,EAAW,OAAS,CAAC,QAAQ,SAC3EqE,MAAOrG,KAAKC,MAAMw9J,YAAcz9J,KAAKC,MAAMw9J,YAAez7J,EAAW,CAACf,eAAe,cAAgB,MACjGjB,KAAKC,MAAMqF,aAEfpF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAu2G,SAAA,KAEI12G,KAAKC,MAAM2vJ,OACT1vJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEiN,SAAU,WACVpM,aAAc,OACdd,gBAAkBV,KAAKC,MAAM2vJ,MAAMpgI,QAAUxvB,KAAKC,MAAM2vJ,MAAMpgI,QAAU,OACxEnpB,MAAQrE,EAAW,CAACqK,MAAM,QAAQD,IAAI,SAAW,CAACC,MAAM,QAAQD,IAAI,SACpErM,GAAI,CAAC,MAAM,OACXF,GAAI,CAAC,MAAM,QAEXK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE8B,WAAY,EACZC,SAAU,OACVJ,MAAQtC,KAAKC,MAAM2vJ,MAAMttJ,MAAQtC,KAAKC,MAAM2vJ,MAAMttJ,MAAQ,QAE3DtC,KAAKC,MAAM2vJ,MAAMhtJ,OAKxB1C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMK,cAAgBgB,EAAW,MAAQ,SAAUf,eAAiBe,EAAW,aAAe,SAAUjB,WAAY,UAClHb,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMb,MAAQkC,EAAW,OAAS,EAAIX,GAAKW,EAAW,EAAI,EAAIf,eAAiBe,EAAW,aAAe,UACrGhC,KAAKC,MAAM8uJ,YAAwC,QAA1B/uJ,KAAKC,MAAM8uJ,WAAuBhyC,EAAU57G,GAEzEjB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMb,MAAQkC,EAAW,OAAS,EAAIhB,cAAe,SAAUC,eAAiBe,EAAW,aAAe,UACtGhC,KAAKC,MAAM8uJ,YAAwC,QAA1B/uJ,KAAKC,MAAM8uJ,WAAuB5tJ,EAAQ47G,EAEnE/8G,KAAKC,MAAM6wI,YAAc9wI,KAAKC,MAAM6wI,WAAW3lF,MAAM,MAAMrlD,IAAI,SAAC0E,EAAEkC,GAKhE,OAHIA,IACFlC,EAAKtK,EAAAC,EAAAC,cAAA,aAAQoK,IAGbtK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMkG,IAAG,cAAAF,OAAgB+F,GAAK6qG,WAAY,MAAO1uG,UAAY7G,EAAW,OAAS,SAAUM,MAAO,WAAYG,WAAY,EAAGC,SAAU,GAAI8H,gBA1DvI3H,aAqEX8oH","file":"static/js/main.79e1a7fe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? this.props.iconBgColor ? (\n              <Flex\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                backgroundColor={\n                  this.props.iconBgColor\n                    ? this.props.iconBgColor\n                    : this.props.theme.colors.transactions.actionBg.redeem\n                }\n              >\n                <Image\n                  align={\"center\"}\n                  src={this.props.image}\n                  height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  {...this.props.imageProps}\n                />\n              </Flex>\n            ) : (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      const latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      // console.log('getTrancheLastHarvest',tokenConfig.CDO.name,latestHarvestBlock);\n      if (parseInt(latestHarvestBlock)>0){\n        const eventFilters = {\n          to: idleStrategyAddress\n        };\n        const [\n          blockInfo,\n          transfers,\n        ] = await Promise.all([\n          this.getBlockInfo(latestHarvestBlock),\n          this.getContractEvents(tokenConfig.token, 'Transfer', parseInt(latestHarvestBlock), parseInt(latestHarvestBlock)+1, {filter: eventFilters })\n        ]);\n\n        if (transfers && transfers.length) {\n          const totalAmount = transfers.reduce( (amount,t) => {\n            amount = amount.plus(this.BNify(t.returnValues.value));\n            return amount;\n          },this.BNify(0));\n\n          return {\n            amount:totalAmount,\n            timestamp:blockInfo.timestamp,\n            blockNumber:latestHarvestBlock,\n            transactionHash:transfers[0].transactionHash\n          };\n        }\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      conversionRate,\n      poolSupply\n    ] = await Promise.all([\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n      this.convertTokenBalance(poolSupply,poolTokenConfig.token,poolTokenConfig)\n    ]);\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n\n        const transfers = await this.getContractEvents(token, 'Transfer', tokenConfig.blockNumber, 'latest', { filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    // console.log('getTrancheUserInfo',tokenConfig.token,underlyingEventsFilters_deposits,underlyingEventsFilters_redeems);\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = underlying_deposits.concat(underlying_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = trancheToken_deposits.concat(trancheToken_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = await this.props.maticPOSClient.isCheckPointed(polygonTx.hash);\n              polygonTx.exited = false;\n\n              if (tokenConfig.rootToken && polygonTx.included){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n\n    if (!size){\n      return false;\n    }\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.props.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim\n    };\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    // const currentGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    // const gaugeType = await this.genericContractCall('GaugeController','gauge_types',[gaugeConfig.address]);\n    let [\n      // totalWeight,\n      // gaugeTypeWeight,\n      // gaugePointWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      // this.genericContractCall('GaugeController','points_total',[nextGaugeTimestamp]),\n      // this.genericContractCall('GaugeController','points_type_weight',[gaugeType,nextGaugeTimestamp]),\n      // this.genericContractCall('GaugeController','points_weight',[gaugeConfig.address,nextGaugeTimestamp]),\n      this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp])\n    ]);\n    // console.log('getGaugeNextWeight',gaugeConfig.name,gaugeType,nextGaugeTimestamp,totalWeight,gaugeTypeWeight,gaugePointWeight,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCached(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                // console.log('gaugeTotalSupplyUnderlying',tokenConfig.token,gaugeTotalSupplyUnderlying,gaugeUnderlyingTokenConfig);\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        let [\n          gaugeBalance,\n          lastPrice1,\n          staked1\n        ] = await Promise.all([\n          gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n          this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          stakingEnabled ? this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance) : null\n        ]);\n\n        let totalStaked = this.BNify(0);\n        if (staked1){\n          totalStaked = totalStaked.plus(staked1);\n        }\n        if (gaugeBalance){\n          totalStaked = totalStaked.plus(gaugeBalance);\n        }\n\n        if (totalStaked.gt(0) && lastPrice1) {\n          output = this.BNify(totalStaked).times(lastPrice1);\n          // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens',3600),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens',3600)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest',) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // console.log('getAggregatedStats - ERROR', err);\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (!totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n          }\n\n          // Add Gov Tokens\n          const govTokens = this.getTokenGovTokens(tokenConfig);\n          if (govTokens) {\n            await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n              const govTokenConfig = govTokens[govToken];\n              const [\n                tokenBalance,\n                tokenConversionRate\n              ] = await Promise.all([\n                this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n              ]);\n\n              if (tokenBalance && tokenConversionRate) {\n                const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                  // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                  totalAUM = totalAUM.plus(tokenBalanceConverted);\n                }\n              }\n            });\n          }\n\n          // Get old token allocation\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n        });\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      messages:{\n        buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    },\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    },\n    PBTCCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'PBTCCRV',\n      protocol:'convex',\n      blockNumber:14570195,\n      autoFarming:['CVX','CRV'],\n      address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_pbtccrv',\n        address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_pbtccrv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14570195,\n        name:'AA_convex_pbtccrv',\n        token:'AA_convex_pbtccrv',\n        label:'convex pbtccrv AA',\n        address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14570195,\n        name:'BB_convex_pbtccrv',\n        token:'BB_convex_pbtccrv',\n        label:'convex pbtccrv BB',\n        address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Heading, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address])\n    ]);\n\n    // console.log('distributionRate',distributionRate);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed).div(10000);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).minus(veTokenBalanceUsed);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          gaugeWeight,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n          // const veTokenShare = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18)).div(this.state.veTokenTotalSupply);\n          // const userBaseDistribution = gaugeDistributionRate.times(gaugeUserShare);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n          // console.log(gaugeConfig.name,stakedBalance.toFixed(),gaugeTotalSupply.toFixed());\n          // console.log(gaugeConfig.name,'veTokenShare',veTokenShare.toFixed(8),'gaugeUserShare',gaugeUserShare.toFixed(8),'gaugeUserBoostedShare',userBoostedShare.toFixed(8),'userBaseDistribution',userBaseDistribution.toFixed(8),'userBoostedDistribution',userBoostedDistribution.toFixed(8),'gaugeDistributionRate',gaugeDistributionRate.toFixed(8));\n        } else {\n          stakedBalance = this.functionsUtil.BNify(0);\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(4)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (~${userBoostedDistribution.toFixed(4)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (~${userDistributionRate.toFixed(4)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let balanceSelectorInfo = null;\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      iconColor={'redeem'}\n                      iconBgColor={'#3f5fff'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'deposit'}\n                      iconBgColor={'#ced6ff'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          iconBgColor={'#ffd979'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully broadcasted and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.1],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.18],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    gaugeConfig:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      lastHarvest,\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      gaugeConfig,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    this.props.tokenConfig.description && (\n                      <Flex\n                        pt={2}\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                        borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                          fontWeight={[2,3]}\n                        >\n                          Strategy Description\n                        </Text>\n                        <Flex\n                          mt={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={'15px'}\n                            textAlign={'justify'}\n                          >\n                            {this.props.tokenConfig.description}\n                          </Text>\n                        </Flex>\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              mt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                this.props.selectedToken === 'stETH' && this.props.selectedTranche === 'AA' && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'flashColor'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`With the <a href=\"https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">IDLE Gauges release</a>, LDO rewards are going to be distributed via a different staking contract on <strong>Thursday 14 April 2022 16:30:00 GMT</strong>. Please make sure to unstake your stETH from the current staking contract after that date and deposit in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/stETH`)}\" class=\"link\">stETH Gauge</a> contract to continue receiving the LDO rewards, alongside the IDLE distribution from Gauges`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.state.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - remainingTranches',remainingTranches);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                height:['1.4em','2em']\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Button, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={Button}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  fontWeight:3,\n                  size:'small',\n                  width:'auto',\n                  style:{\n                    fontSize:'14px',\n                  },\n                  mainColor:'blue',\n                  value:'Reduce allowance',\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport { Button, Flex, Box, Text, Icon } from \"rimble-ui\";\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={Button}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      fontWeight:3,\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      height:'45px',\n                                                      fontSize:[2,3],\n                                                      boxShadow:null,\n                                                      borderRadius:4,\n                                                      mainColor:'redeem',\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Input, Heading } from \"rimble-ui\";\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n          gaugeWorkingSupply,\n          gaugeWeight\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n          this.functionsUtil.genericContractCallCached(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCallCached('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={this.props.isActive ? 'copyColor' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.5\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      timeout:15000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/dashboard/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n        if (!this.state.network.isCorrectNetwork && isGnosisSafe){\n          await this.checkNetwork();\n        }\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     // console.log('getCurrentNetwork',this.state.web3,currentWeb3);\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', correct: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            stkIDLE Gauges are now live at full throttle with $IDLE rewards!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e'}\n          >\n            Discover More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}