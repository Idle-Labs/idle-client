{"version":3,"sources":["ChartCustomTooltipRow/ChartCustomTooltipRow.js","ExtLink/ExtLink.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","RoundButton/RoundButton.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","GenericSelector/GenericSelector.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","IconBox/IconBox.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","DashboardCard/DashboardCard.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","this","props","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","Component","ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","Object","assign","target","rel","children","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","length","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","cardProps","py","px","transition","isInteractive","cursor","isMobile","name","overflow","mt","borderTop","concat","theme","colors","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","flexProps","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","RoundButton","boxShadow","SmartNumber","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","button","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","gradientButton","empty","select","selectDark","input","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","IconBox","Title","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","ExecuteTransaction","txStatus","console","log","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","AssetField","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","enableERC20","executeTx","_amount","signedParameters","_params","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","currTime","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","genericContractCallCached","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","checkpointEvents","depositEvents","tokenName","totalClaimed","event","claimedAmount","returnValues","userDeposited","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","latestCheckpoint","lastCheckpointTime","time","stakePeriod","currentProfit","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","quote","1","2","periodOptions","30","60","90","365","coverId","claimId","capacity","amountValue","periodValue","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","coveredTokenAmount","getClaimTransactionParams","incident","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","incidentsInfo","startBlock","buyer","coverBoughtEvents","claimSubmittedEvents","cover","claimSubmittedEvent","_ref4","_ref5","coverDetails","incidentEvents","matchedIncidents","matchedIncident","yieldTokenConfig","sumAssured","coverAssetConfig","expiryDate","payoutOutcome","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","claim","productId","contractAddress","slicedToArray","incidentDate","validUntil","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","getTransactionReceipt","findIndex","paramIsValidToken","urlParams","param2","changeSelectedToken","requiredNetwork","baseEndpoint","makeRequest","response","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","getETHBalance","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","price","priceInNXM","expiresAt","generatedAt","COVER_TYPE","feePercentage","basePrice","priceWithFee","mul","divn","amountInWei","toWei","setSelectedAction","textDecoration","activeColor","reset","utils","toTwosComplement","placement","message","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getActiveCoverages","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","goToSection","route","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","owner","recipient","vestingPeriod","availableBalance","depositAmounts","totalDeposited","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","addGovTokens","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","3","4","42","1337","isForked","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","nexus","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","directProps","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","BN","toEth","wei","fromWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","t1","_ref25","_callee17","_context17","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","getCachedData","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","getTokenExchangeRate","_ref44","_callee39","exchangeRateParams","exchangeRate","_context39","_x38","_x39","_ref45","_callee40","_context40","_x40","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee41","idleTokenConfig","etherscanEndpoint","etherscanTxlist","_context41","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee42","contractPaused","_args42","_context42","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref48","_callee44","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context44","lastAllocationsPromise","_ref49","_callee43","lastAllocations","_context43","_x42","_x43","alloc","_x41","checkMigration","_ref50","_callee45","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context45","_x44","_x45","_ref51","_callee46","eventName","_args46","_context46","_x46","_x47","estimateMethodGasUsage","_ref52","_callee47","_contract$methods","functionCall","gasLimit","_ref53","_ref54","_args47","_context47","getGasPrice","estimateGas","_x48","_x49","_ref55","_callee48","callback_receipt","_contract$methods2","_context48","once","confirmationNumber","receipt","_x50","_x51","_x52","_x53","_x54","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref56","_callee49","biconomyInfo","res","_context49","x-api-key","_x55","sendTxWithPermit","_ref57","_callee50","_contract$methods3","messageToSign","_this$getSignaturePar","_context50","encodeABI","_address","personal","sign","_x56","_x57","_x58","_x59","_x60","_x61","buildBiconomyErc20ForwarderTx","_ref58","_callee51","tokenAddress","callData","_context51","erc20ForwarderClient","buildTx","txGas","_x62","_x63","_x64","_x65","_x66","_ref59","_callee53","_context53","_ref60","_callee52","_context52","_x68","_x69","_x67","sendBiconomyTxWithErc20Forwarder","_ref61","_callee54","req","metaInfo","txResponse","fetchReceiptIntervalId","_context54","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x70","_x71","_x72","_x73","sendBiconomyTxWithPersonalSign","_ref62","_callee55","_this$getSignaturePar2","_context55","getNonce","call","_x74","_x75","_x76","_x77","signPermitEIP2612","_ref63","_callee56","erc20Name","spender","deadline","domain","domainData","_context56","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x78","_x79","_x80","_x81","_x82","_x83","_x84","_x85","_ref64","_callee57","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args57","_context57","net","getId","allowed","_x86","_x87","_x88","_ref65","_callee58","permitParams","methodAbi","useNonce","_args58","_context58","_jsonInterface","f","unshift","_x89","_x90","_x91","_x92","_x93","_x94","_x95","sendSignedTx","_ref66","_callee59","MetaTransaction","dataToSign","_context59","_x96","_x97","_x98","_x99","_x100","_ref67","_callee60","contractAddr","walletAddr","_ref68","_ref69","allowance","_context60","getAllowance","_x101","_x102","_x103","_ref70","_callee61","_context61","_x104","_x105","_x106","contractMethodSendWrapperWithValue","txData","disableERC20","loadAssetField","_ref71","_callee62","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref72","_ref73","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref74","_ref75","amountLentCurve1","redeemableBalanceCurve","_ref76","_ref77","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref78","_ref79","amountLent1","redeemableBalance1","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref80","_ref81","tokenPriceFirstDeposit","_ref82","_ref83","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref84","_ref85","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref86","_ref87","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref88","_ref89","amountLentCurve2","redeemableBalanceCurve1","_ref90","_ref91","redeemableBalance2","_args62","_context62","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x107","_x108","_x109","_x110","getIdleTokenSupply","_ref92","_callee63","idleTokenSupply","_args63","_context63","_x111","getIdleTokenPriceWithFee","_ref93","_callee64","_ref94","_ref95","priceWFee","_args64","_context64","eq","_x112","_x113","_ref96","_callee65","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args65","_context65","_x114","clearCachedData","useLocalStorage","_ref97","_callee66","_ref98","_ref99","idleTokensTotalSupply","userShare","_context66","_x115","_x116","_callee68","_args68","_context68","_ref101","_callee67","coverageTokens","protocolImage","_context67","_x117","_ref102","_callee69","_context69","_x118","getBatchedDeposits","_callee71","filter_by_status","_args71","_context71","_ref104","_callee70","_ref105","_ref106","_context70","_x119","_ref107","_callee72","fixDecimals","_args72","_context72","_x120","_ref108","_callee73","_ref109","_ref110","_args73","_context73","_x121","_x122","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref111","_callee74","_args74","_context74","_x123","_ref112","_callee75","_args75","_context75","_x124","_ref113","_callee76","_args76","_context76","_x125","_x126","getProtocolBalance","_ref114","_callee77","_context77","_x127","_x128","getAprs","_ref115","_callee78","_context78","addresses","_x129","genericIdleCall","_ref116","_callee79","callParams","_args79","_context79","_x130","_ref117","_callee80","_contract$methods4","_args80","_context80","_x131","_x132","getTxDecodedLogs","_ref118","_callee82","logAddr","decodeLogs","internalTransfers","_context82","_ref119","_callee81","_context81","_x137","_x138","_x133","_x134","_x135","_x136","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee83","_context83","_ref121","_callee84","_args84","_context84","getPastEvents","_x139","_x140","_ref122","_callee85","_args85","_context85","_x141","_x142","_ref123","_callee86","_contract$methods5","_args86","_context86","_x143","_x144","_ref124","_callee87","_args87","_context87","_x145","_x146","apr2apy","getUnlentBalance","_ref125","_callee88","unlentBalance","_context88","_x147","_ref126","_callee89","_args89","_context89","_x148","_ref127","_callee91","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref131","_ref132","_args91","_context91","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref128","_callee90","_ref129","_ref130","protocolBalance","protocolAllocation","_context90","_x150","_x151","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x149","_ref133","_callee92","pairAddresses","_ref134","_ref135","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref136","_ref137","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context92","_x152","_x153","_ref138","_callee93","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context93","_x154","_x155","_ref139","_callee94","unires","_context94","_x156","_x157","getCurveDepositedTokens","_ref140","_callee95","idleTokensBalances","remainingCurveTokens","_args95","_context95","_x158","getCurveUnevenTokenAmounts","_ref141","_callee96","amounts","max_burn_amount","unevenAmounts","_context96","getCurveDepositContract","_x159","_x160","_callee97","curveRatesInfo","_context97","strategyTokens","getCurveAPYContract","_callee98","blocksForPrevTokenPrice","_ref144","_ref145","prevTokenPrice","blocksMultiplier","curveAPR","_context98","getCurveTokenSupply","_callee99","_context99","getCurvePoolContract","_callee100","_args100","_context100","_callee101","_args101","_context101","_ref149","_callee102","_ref150","_ref151","_context102","_x161","_callee103","depositContractInfo","_context103","getCurveZapContract","_callee104","zapContractInfo","_context104","_callee105","poolContractInfo","_context105","getCurveSwapContract","_callee106","_context106","getCurveIdleTokensAmounts","_callee108","max_slippage","curveTokenSupply","curveTokenShare","_args108","_context108","_ref157","_callee107","curveIdleTokens","_context107","_x162","getCurveTokensAmounts","_callee110","useCoinIndex","_args110","_context110","_ref159","_callee109","_ref160","_ref161","totalTokenSupply","_context109","_x163","getCurveAmounts","_ref162","_callee112","_args112","_context112","_ref163","_callee111","_context111","_x166","_x164","_x165","getCurveTokenAmount","_ref164","_callee113","_args113","_context113","_x167","getCurveSlippage","_ref165","_callee114","uneven_amounts","_ref166","_ref167","virtualPrice","Sv","_args114","_context114","_x168","_x169","_ref168","_callee115","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref169","_ref170","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args115","_context115","_x170","_callee117","_args117","_context117","_ref172","_callee116","_ref173","_ref174","_context116","_x171","getStkAaveApr","_ref175","_callee118","aaveConversionRate","stkAaveAPR","stkAaveValue","_args118","_context118","_x172","_x173","getCompAPR","_ref176","_callee119","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args119","_context119","_x174","_x175","getCompSpeed","_ref177","_callee120","cTokenAddress","compSpeed","_context120","_x176","_ref178","_callee121","cTokenInfo","compoundAllocationPerc","_ref179","_ref180","cTokenTotalSupply","compoundPoolShare","_args121","_context121","_x177","_callee123","_args123","_context123","_ref182","_callee122","_ref183","_ref184","_context122","_x178","_callee125","_args125","_context125","_ref186","_callee124","_ref187","_ref188","compApr","_context124","_x179","getTokensCsv","_callee128","csv","_context128","prototype","sum","pv","cv","avg","_ref190","_callee127","_context127","_ref191","_callee126","header","aprAvg","scoreAvg","lastRow","_context126","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x181","_x180","_callee130","_args130","_context130","_ref193","_callee129","compTokenBalance","_context129","_x182","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref194","_callee132","govTokensUserDistribution","_args132","_context132","_ref195","_callee131","_context131","_x184","_x183","getGovTokensDistributionSpeed","_ref196","_callee134","govTokensDistribution","tokenGovTokens","_args134","_context134","_ref197","_callee133","govSpeed","_context133","_x186","_x185","getGovTokensAprs","_ref198","_callee136","govTokensAprs","_args136","_context136","_ref199","_callee135","_ref200","_ref201","_ref202","_ref203","cTokenConfig","_context135","_x189","_x187","_x188","_callee138","_args138","_context138","_ref205","_callee137","tokenConversionRate","fromTokenConfig","_context137","_x190","getGovTokenConfigByAddress","_callee139","checkShowBalance","govTokensEarnings","_args139","_context139","govTokenAmount","getGovTokensIndexes","_ref207","_callee141","govTokensAmounts","_context141","getGovTokensUserAmounts","_ref208","_callee140","govTokenIndex","govTokenAddress","_context140","getGovTokenAddessByIndex","_x193","_x194","_x191","_x192","_ref209","_callee142","_context142","_x195","_x196","_ref210","_callee143","_context143","_x197","_x198","_callee146","govTokenConfigForced","_args146","_context146","_ref212","_callee145","_context145","_ref213","_callee144","_context144","_x200","_x201","_x199","getTokenFees","_callee147","_args147","_context147","_callee148","_ref216","_ref217","gain","fees","_args148","_context148","_ref218","_callee149","_args149","_context149","_x202","getTotalTVL","_callee150","tokensTVL","_context150","getTokensTVL","totalTVL","tokenTVL","_callee154","_context154","_ref221","_callee153","_context153","_ref222","_callee152","oldTokenTVL","idleTokenName","_ref223","_ref224","oldTokenConfig","_ref228","_ref229","oldTokenPrice","oldTotalSupply","_context152","_ref225","_callee151","_ref226","_ref227","govTokenConversionRate","govTokenBalanceConverted","_context151","_x205","oldProtocols","oldProtocol","protocolPos","_x204","_x203","getSubstackLatestFeed","_callee155","endpointInfo","idleSubstackFeed","latestFeed","_context155","items","getAggregatedStats","_callee156","totalAUM","_args156","_context156","getAggregatedStats_chain","_callee160","avgAPR","_args160","_context160","_ref233","_callee159","_context159","_ref234","_callee158","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context158","_ref235","_callee157","_ref236","_ref237","_context157","_x208","_x207","_x206","getTokenApy","_ref238","_callee161","_context161","_x209","_callee164","_args164","_context164","_ref240","_callee163","_context163","_ref241","_callee162","_ref242","_context162","_x211","_x210","getProtocolsTokensBalances","_callee166","tokenBalances","minTokenBalance","protocolsTokens","_args166","_context166","_ref244","_callee165","tokenContract","_context165","_x212","_ref245","_callee167","_args167","_context167","_x213","_x214","_x215","getAvgAPYStats","_ref246","_callee168","apiResults","_args168","_context168","_x216","_x217","_ref247","_callee169","_conversionRate","_args169","_context169","_x218","_x219","_ref248","_callee170","_ref249","_ref250","_context170","protocolScore","getTokenScoreApi","_x220","_x221","_ref251","_callee171","_context171","_x222","_x223","_ref252","_callee174","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args174","_context174","_ref253","_callee173","addrIndex","protocolApr","protocolApy","govTokenAPR","_context173","_ref254","_callee172","_context172","_x227","_x225","_x226","_x224","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_ref11","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.9aed9832.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 week'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      checkpointEvents,\n      depositEvents,\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Locked Funds',\n      value:this.functionsUtil.formatMoney(totalDeposits,4)+' '+this.props.selectedToken\n    });\n\n    tokenTotalSupply = this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.contractInfo.decimals);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name\n    });\n\n    stats.push({\n      title:'Claimable Rewards',\n      value:this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = totalClaimed.plus(claimableRewards);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const lastCheckpointTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = lastCheckpointTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed());\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          (this.state.claimable && this.state.claimable.gt(0)) ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                contractName={this.props.tokenConfig.feeDistributor.name}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have rewards to Claim yet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    await Promise.all([\n      this.props.initContract(this.props.contractInfo.name, this.props.contractInfo.address, this.props.contractInfo.abi),\n      this.props.initContract(this.props.incidentsInfo.name, this.props.incidentsInfo.address, this.props.incidentsInfo.abi),\n    ]);\n\n    const fromBlock = this.props.startBlock;\n    // const masterAddress = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'master');\n    // await this.props.initContract('NXMaster', masterAddress, NXMaster);\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.functionsUtil.getContractEvents(this.props.contractInfo.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:this.props.account}}),\n       this.functionsUtil.getContractEvents(this.props.contractInfo.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:this.props.account}})\n    ]);\n\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents);\n\n    const claimableCovers = [];\n    await this.functionsUtil.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.props.contractInfo.name,'getCover',[coverId]),\n        this.functionsUtil.getContractEvents(this.props.incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        // console.log(incident.returnValues.productId,coverDetails.contractAddress,cover.blockNumber,incident.blockNumber,incident.returnValues.incidentDate,coverDetails.validUntil,parseInt(coverDetails.validUntil) + this.props.yieldTokenCoverGracePeriod >= Date.now() / 1000);\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.functionsUtil.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.functionsUtil.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + this.props.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (curr.returnValues.priceBefore.gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      // console.log('cover',cover,'coverDetails',coverDetails,'matchedIncident',matchedIncident);\n\n      const yieldTokenConfig = Object.values(this.props.toolProps.availableTokens).find( tokenConfig => tokenConfig.address === coverDetails.contractAddress );\n      const sumAssured = this.functionsUtil.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address === coverDetails.coverAsset );\n      const expiryDate = this.functionsUtil.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.functionsUtil.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.functionsUtil.BNify(0);\n      }\n\n      // Yield token cover is claimable only when there is a matching incident\n      if (matchedIncident) {\n        const claimableAmount = this.functionsUtil.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n        const claimablePrice = this.functionsUtil.BNify(matchedIncident.returnValues.priceBefore).times(0.9);\n        const maxCoveredAmount = this.functionsUtil.BNify(coverDetails.sumAssured).div(claimablePrice);\n        const coveredTokenAmount = this.functionsUtil.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n        claimableCovers.push({\n          label,\n          value,\n          sumAssured,\n          claimId:null,\n          claimedAmount,\n          payoutOutcome,\n          claimableAmount,\n          maxCoveredAmount,\n          coveredTokenAmount,\n          coverAsset:coverAssetConfig.token,\n          incident: {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)},\n        });\n      }\n    });\n\n    /*\n    claimableCovers.push({\n      label:'prova',\n      value:'prova',\n      claimId:true,\n      payoutOutcome:null\n    });\n    */\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const paramIsValidToken = this.props.urlParams.param2 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param2);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    // console.log('changeSelectedToken',selectedToken,tokenConfig);\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.state.maxCapacity.gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.functionsUtil.fixTokenDecimals(this.state.maxPriceWithFee,this.state.tokenConfig.decimals).toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.state.tokenBalance.lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                                </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.state.yieldTokenBalance.gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                            {\n                              /*\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                action={'Token claim'}\n                                methodName={'claimTokens'}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Claim Tokens',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.claimTransactionSucceeded.bind(this)}\n                                params={}\n                              />\n                              */\n                            }\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy NexusMutual cover without KYC for idleDAIYield or idleUSDTYield',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}